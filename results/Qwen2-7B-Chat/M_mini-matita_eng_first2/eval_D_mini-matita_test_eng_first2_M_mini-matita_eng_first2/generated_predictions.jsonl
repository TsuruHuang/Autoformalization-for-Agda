{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPsidef. Let $n$ be a natural number. Then $Psi'$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $p$.\nassistant\n", "label": "postulate Psidef : (n : Nat) -> Eq (Psi' n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> p)))", "predict": "postulate Psidef : (n : Nat) -> Eq (Psi' n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> p)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_O_S. For all natural numbers $n$, $0$ is less than the sum of $n$ and $1$.\nassistant\n", "label": "postulate lt_O_S : (n : Nat) -> Lt 0 (plus n 1)", "predict": "postulate lt_O_S : (n : Nat) -> Lt 0 (plus n 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_rect_CProp3_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.\nassistant\n", "label": "Axiom Dop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_961 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_961 : Dop A _nil, Q_ x_961 .", "predict": "Axiom Dop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_961 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_961 : Dop A _nil, Q_ x_961 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_pi. For all natural numbers $n$, for all functions $p$ from natural numbers to booleans, for all functions $f$ and $g$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the product of $f$ applied to $i$ and $g$ applied to $i$ is equal to the product of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g$ applied to $i$.\nassistant\n", "label": "Axiom times_pi : forall n : nat, forall p : ((x__ : nat) -> bool), forall f : ((x__ : nat) -> nat), forall g : ((x__ : nat) -> nat), bigop n (fun i => p i) nat 1 times (fun i => f i * g i) = bigop n (fun i => p i) nat 1 times (fun i => f i) * bigop n (fun i => p i) nat 1 times (fun i => g i) .", "predict": "Axiom times_pi : forall n : nat, forall p : ((x__ : nat) -> bool), forall f : ((x__ : nat) -> nat), forall g : ((x__ : nat) -> nat), bigop n (fun i => p i) nat 1 times (fun i => f i * g i) = bigop n (fun i => p i) nat 1 times (fun i => f i) * bigop n (fun i => p i) nat 1 times (fun i => g i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_plus_n. Let $n$ and $m$ be natural numbers. Then $m$ is less than or equal to the sum of $n$ and $m$.\nassistant\n", "label": "Axiom le_plus_n : forall n : nat, forall m : nat, Leq m (n + m) .", "predict": "Axiom le_plus_n : forall n : nat, forall m : nat, Leq m (n + m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFilter_Dop. For all sets $A$, for all elements $_nil$ of $A$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $Dop$ of $A$ and $_nil$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $Dop$ of $A$ and $_nil$ to elements of $return_type$ of $z$, for all elements $z$ of $Dop$ of $A$ and $_nil$, $return_type$ holds for $z$.\nassistant\n", "label": "filter_Dop : A : Set -> _nil : A -> return_sort : Sort -> return_type : (z : Dop A _nil -> return_sort) -> return : (z : Dop A _nil -> return_type z) -> z : Dop A _nil -> return_type z .", "predict": "filter_Dop : A : Set -> _nil : A -> return_sort : Sort -> return_type : (z : Dop A _nil -> return_sort) -> return : (z : Dop A _nil -> return_type z) -> z : Dop A _nil -> return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExample1. $smallest_factor$ applied to $3$ is equal to $3$.\nassistant\n", "label": "Axiom example1 : smallest_factor 3 = 3 .", "predict": "Axiom example1 : smallest_factor 3 = 3 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_n_fact_n. For all natural numbers $n$, $n$ is less than or equal to the factorial of $n$.\nassistant\n", "label": "le_n_fact_n : n : Nat -> Leq n (factorial n) .", "predict": "le_n_fact_n : n : Nat -> Leq n (factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_aux_mod_aux. For all natural numbers $p$ and $n$ and $m$, $n$ is equal to the sum of the product of $div_aux$ applied to $p$ and $n$ and $m$ and the sum of $m$ and $1$ and $mod_aux$ applied to $p$ and $n$ and $m$.\nassistant\n", "label": "Axiom div_aux_mod_aux : forall p : nat, forall n : nat, forall m : nat, n = div_aux p n m * (m + 1) + mod_aux p n m .", "predict": "Axiom div_aux_mod_aux : forall p : nat, forall n : nat, forall m : nat, n = div_aux p n m * (m + 1) + mod_aux p n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type1_body. For all sets $_A$, for all functions $Q_$ from elements $_x_925$ of $range$ of $_A$ to elements of $Type1$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_925$ of $range$ of $_A$, $Q_$ holds for $x_925$.\nassistant\n", "label": "postulate range_rect_Type1_body : (_A : Set) -> (Q_ : (_x_925 : range _A) -> Type1) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_925 : range _A) -> Q_ x_925", "predict": "postulate range_rect_Type1_body : (_A : Set) -> (Q_ : (_x_925 : range _A) -> Type1) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_925 : range _A) -> Q_ x_925"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBigop_prod. Let $k1$ and $k2$ be natural numbers. Then for all functions $p1$ from natural numbers to booleans, for all functions $p2$ from natural numbers and natural numbers $__1$ to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers and natural numbers $__1$ to elements of $B$, $bigop$ applied to $k1$ and the function that maps $x$ to $p1$ applied to $x$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $x$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $x$ and $i$ is equal to $bigop$ applied to the product of $k1$ and $k2$ and the function that maps $i$ to $andb$ applied to $p1$ applied to the quotient of $i$ and $k2$ and $p2$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$.\nassistant\n", "label": "bigop_prod : k1 : Nat -> k2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> __1 : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> __1 : Nat -> B) -> Eq (bigop k1 (x : Nat => p1 x) B nil (op B nil op) (x : Nat => bigop k2 (i : Nat => p2 x i) B nil (op B nil op) (i : Nat => f x i))) (bigop (times k1 k2) (i : Nat => andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (i : Nat => f (div i k2) (mod i k2))) .", "predict": "bigop_prod : k1 : Nat -> k2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> __1 : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> __1 : Nat -> B) -> Eq (bigop k1 (x : Nat => p1 x) B nil (op B nil op) (x : Nat => bigop k2 (i : Nat => p2 x i) B nil (op B nil op) (i : Nat => f x i))) (bigop (times k1 k2) (i : Nat => andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (i : Nat => f (div i k2) (mod i k2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n$ and $_m$ be natural numbers. Then we can say that $_n$ is divisible by $_m$.\nassistant\n", "label": "divisible : _n : Nat -> _m : Nat -> Prop .", "predict": "divisible : _n : Nat -> _m : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEqb_false_to_not_eq. For all natural numbers $n$ and $m$, if $eqb$ applied to $n$ and $m$ is equal to absurdity, then $n$ is not equal to $m$.\nassistant\n", "label": "Axiom eqb_false_to_not_eq : forall n : nat, forall m : nat, forall x__ : (eqb n m = false), ~ (n = m) .", "predict": "Axiom eqb_false_to_not_eq : forall n : nat, forall m : nat, forall x__ : (eqb n m = false), ~ (n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_exp_to_eq. For all natural numbers $p$ and $q$ and $m$, if $p$ is prime, then if $q$ is prime, then if $p$ is divisible by the exponentiation of $q$ and $m$, then $p$ is equal to $q$.\nassistant\n", "label": "divides_exp_to_eq : p : Nat -> q : Nat -> m : Nat -> __ : prime p -> __1 : prime q -> __2 : divisible p (pow q m) -> Eq p q .", "predict": "divides_exp_to_eq : p : Nat -> q : Nat -> m : Nat -> __ : prime p -> __1 : prime q -> __2 : divisible p (pow q m) -> Eq p q ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFilter_min_spec. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all natural numbers $__$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_type$ of $z$, for all elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$, $return_type$ holds for $z$.\nassistant\n", "label": "Axiom filter_min_spec : forall _n : nat, forall _b : nat, forall _f : ((x__ : nat) -> bool), forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : min_spec _n _b _f x__) -> return_sort), forall return : ((z : min_spec _n _b _f x__) -> return_type z), forall z : min_spec _n _b _f x__, return_type z .", "predict": "Axiom filter_min_spec : forall _n : nat, forall _b : nat, forall _f : ((x__ : nat) -> bool), forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : min_spec _n _b _f x__) -> return_sort), forall return : ((z : min_spec _n _b _f x__) -> return_type z), forall z : min_spec _n _b _f x__, return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPermut_to_bijn. Let $n$ be a natural number. Then for all functions $f$ from natural numbers to natural numbers, for all elements $__$ of $permut$ of $f$ and $n$, $bijn$ holds for $f$ and $n$.\nassistant\n", "label": "Axiom permut_to_bijn : forall n : nat, forall f : ((x__ : nat) -> nat), forall x__ : permut f n, bijn f n .", "predict": "Axiom permut_to_bijn : forall n : nat, forall f : ((x__ : nat) -> nat), forall x__ : permut f n, bijn f n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_exp_log. For all natural numbers $p$ and $n$, if $1$ is less than $p$, then $n$ is less than the exponentiation of $p$ and the sum of the logarithm of $p$ and $n$ and $1$.\nassistant\n", "label": "axiom lt_exp_log (p n : Nat) (x__ : 1 < p) : n < pow p (log p n + 1)", "predict": "axiom lt_exp_log (p n : Nat) (x__ : 1 < p) : n < pow p (log p n + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_Type2. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1650$ of $range$ of $x1$ to elements of $Type2$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1651$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_Type2 (x1 : Set) (Hterm : range x1) (P : (_z1650 : range x1) -> Type2) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1651 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_Type2 (x1 : Set) (Hterm : range x1) (P : (_z1650 : range x1) -> Type2) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1651 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_inv_ind. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z653$ to propositions, for all functions $_H1$ from elements $_z654$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_366$ and functions $_x_368$ from elements $_z654$ of $Eq$ of $Hterm$ and $x_366$ to elements of $P$ of $x_366$ and elements $_z654$ of $Eq$ of $Hterm$ and the sum of $x_366$ and $1$ to elements of $P$ of the sum of $x_366$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "nat_inv_ind : Hterm : Nat -> P : (_z653 : Nat -> Prop) -> _H1 : (_z654 : Eq Hterm 0 -> P 0) -> _H2 : (x_366 : Nat -> _x_368 : (_z654 : Eq Hterm x_366 -> P x_366) -> _z654 : Eq Hterm (plus x_366 (nd 1)) -> P (plus x_366 (nd 1))) -> P Hterm .", "predict": "nat_inv_ind : Hterm : Nat -> P : (_z653 : Nat -> Prop) -> _H1 : (_z654 : Eq Hterm 0 -> P 0) -> _H2 : (x_366 : Nat -> _x_368 : (_z654 : Eq Hterm x_366 -> P x_366) -> _z654 : Eq Hterm (plus x_366 (nd 1)) -> P (plus x_366 (nd 1))) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFilter_lstar. Let $B$ be a set. Then for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, for all elements $__1$ and $__2$ of $B$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_type$ of $z$, for all elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$, $return_type$ holds for $z$.\nassistant\n", "label": "Axiom filter_lstar : forall B : Set, forall _R : relation B, forall x__ : nat, forall __1 : B, forall __2 : B, forall return_sort : Sort, forall return_type : ((z : lstar B _R x__ __1 __2) -> return_sort), forall return : ((z : lstar B _R x__ __1 __2) -> return_type z), forall z : lstar B _R x__ __1 __2, return_type z .", "predict": "Axiom filter_lstar : forall B : Set, forall _R : relation B, forall x__ : nat, forall __1 : B, forall __2 : B, forall return_sort : Sort, forall return_type : ((z : lstar B _R x__ __1 __2) -> return_sort), forall return : ((z : lstar B _R x__ __1 __2) -> return_type z), forall z : lstar B _R x__ __1 __2, return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $_n \\in N$. Then the square root of $_n$ is a natural number.\nassistant\n", "label": "axiom sqrt (_n : Nat) : Nat", "predict": "axiom sqrt (_n : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_to_plus. For all natural numbers $n$ and $m$ and $p$, if $m$ is less than or equal to $n$, then if the difference of $n$ and $m$ is equal to $p$, then $n$ is equal to the sum of $m$ and $p$.\nassistant\n", "label": "minus_to_plus : n : Nat -> m : Nat -> p : Nat -> __ : Leq m n -> __1 : Eq (minus n m) p -> Eq n (plus m p) .", "predict": "minus_to_plus : n : Nat -> m : Nat -> p : Nat -> __ : Leq m n -> __1 : Eq (minus n m) p -> Eq n (plus m p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_CProp0. For all sets $_A$, for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "postulate range_rect_CProp0 : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939", "predict": "postulate range_rect_CProp0 : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPrimes_below_to_bertrand. For all natural numbers $pm$, for all lists $l$ of natural numbers, if $pm$ is prime, then for all elements $__1$ of $primes_below$ of $l$ and the sum of $pm$ and $1$, for all functions $__2$ from natural numbers $p$ and elements $__2$ of $mem$ of $Nat$ and $p$ and $l$ and elements $__3$ of $Lt$ of $2$ and $p$ to elements of $ex$ of $Nat$ and the function that maps $pp$ to the conjunction of the conjunction of $mem$ applied to $Nat$ and $pp$ and $l$ and $Lt$ applied to $pp$ and $p$ and $Leq$ applied to $p$ and the product of $2$ and $pp$, for all natural numbers $n$, if $0$ is less than $n$, then if $n$ is less than $pm$, then $bertrand$ holds for $n$.\nassistant\n", "label": "postulate primes_below_to_bertrand : (pm : Nat) -> (l : list Nat) -> (_ : prime pm) -> (__1 : primes_below l (plus pm 1)) -> (__2 : (p : Nat) -> (__2 : mem Nat p l) -> (__3 : Lt 2 p) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))) -> (n : Nat) -> (__3 : Lt 0 n) -> (__4 : Lt n pm) -> bertrand n", "predict": "postulate primes_below_to_bertrand : (pm : Nat) -> (l : list Nat) -> (_ : prime pm) -> (__1 : primes_below l (plus pm 1)) -> (__2 : (p : Nat) -> (__2 : mem Nat p l) -> (__3 : Lt 2 p) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))) -> (n : Nat) -> (__3 : Lt 0 n) -> (__4 : Lt n pm) -> bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__ , __1 \\in N$. Then the sum of $__$ and $__1$ is a natural number.\nassistant\n", "label": "postulate plus : (_ : Nat) -> (__1 : Nat) -> Nat", "predict": "postulate plus : (_ : Nat) -> (__1 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nList_divides_body. Let $__$ be a list of natural numbers. Then for all natural numbers $__1$, $bool$.\nassistant\n", "label": "postulate list_divides_body : (_ : list Nat) -> (__1 : Nat) -> bool", "predict": "postulate list_divides_body : (_ : list Nat) -> (__1 : Nat) -> bool"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_Type0_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_873$ of $Aop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_873$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_873$.\nassistant\n", "label": "axiom Aop_rect_Type0_body (A : Set) (_nil : A) (Q_ : (_x_873 : Aop A _nil) -> Set) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_873 : Aop A _nil) : Q_ x_873", "predict": "axiom Aop_rect_Type0_body (A : Set) (_nil : A) (Q_ : (_x_873 : Aop A _nil) -> Set) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_873 : Aop A _nil) : Q_ x_873"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_or_gt. For all natural numbers $n$, $0$ is equal to $n$ or $0$ is less than $n$.\nassistant\n", "label": "Axiom eq_or_gt : forall n : nat, 0 = n \\/ 0 < n .", "predict": "Axiom eq_or_gt : forall n : nat, 0 = n \\/ 0 < n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_transpose. For all natural numbers $i$ and $j$ and $n$, if $i$ is less than or equal to $n$, then if $j$ is less than or equal to $n$, then $permut$ holds for $transpose$ applied to $i$ and $j$ and $n$.\nassistant\n", "label": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> permut (transpose i j) n", "predict": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> permut (transpose i j) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_CProp3. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.\nassistant\n", "label": "postulate Dop_rect_CProp3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_961 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_961 : Dop A _nil) -> Q_ x_961", "predict": "postulate Dop_rect_CProp3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_961 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_961 : Dop A _nil) -> Q_ x_961"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_to_le. Let $x$ and $y$ be natural numbers. Then if $x$ is less than $y$, then $x$ is less than or equal to $y$.\nassistant\n", "label": "postulate lt_to_le : (x : Nat) -> (y : Nat) -> (_ : Lt x y) -> Leq x y", "predict": "postulate lt_to_le : (x : Nat) -> (y : Nat) -> (_ : Lt x y) -> Leq x y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp3_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.\nassistant\n", "label": "Dop_rect_CProp3_body : A : Set -> _nil : A -> Q_ : (_x_961 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_961 : Dop A _nil -> Q_ x_961 .", "predict": "Dop_rect_CProp3_body : A : Set -> _nil : A -> Q_ : (_x_961 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_961 : Dop A _nil -> Q_ x_961 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp2. For all natural numbers $p$ and $n$ and $m$, if $1$ is less than $p$, then if $0$ is less than $n$, then the product of $m$ and the logarithm of $p$ and $n$ is less than or equal to the logarithm of $p$ and the exponentiation of $n$ and $m$.\nassistant\n", "label": "axiom log_exp2 (p n m : Nat) (x__ : 1 < p) (__1 : 0 < n) : m * log p n ≤ log p (pow n m)", "predict": "axiom log_exp2 (p n m : Nat) (x__ : 1 < p) (__1 : 0 < n) : m * log p n ≤ log p (pow n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_aux_to_not_mod_O. Let $p$ and $n$ and $m$ and $q$ and $r$ be natural numbers. Then if $1$ is less than $m$, then if $0$ is less than $n$, then if $n$ is less than or equal to $p$, then if $p_ord_aux$ applied to $p$ and $n$ and $m$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$, then $mod$ applied to $r$ and $m$ is not equal to $0$.\nassistant\n", "label": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 m) -> (__1 : Lt 0 n) -> (__2 : Leq n p) -> (__3 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> not (Eq (mod r m) 0)", "predict": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 m) -> (__1 : Lt 0 n) -> (__2 : Leq n p) -> (__3 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> not (Eq (mod r m) 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSmallest_factor. Let $__$ be a natural number. Then $Nat$.\nassistant\n", "label": "Axiom smallest_factor : forall x__ : nat, nat .", "predict": "Axiom smallest_factor : forall x__ : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMk_ACop. Let $A$ be a set. Then for all elements $nil$ of $A$, for all elements $aop$ of $Aop$ of $A$ and $nil$, for all functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $nil$ and $aop$ and $b$ and $a$, $ACop$ holds for $A$ and $nil$.\nassistant\n", "label": "Axiom mk_ACop : forall A : Set, forall nil : A, forall aop : Aop A nil, forall _comm : ((a : A) -> (b : A) -> op A nil aop a b = op A nil aop b a), ACop A nil .", "predict": "Axiom mk_ACop : forall A : Set, forall nil : A, forall aop : Aop A nil, forall _comm : ((a : A) -> (b : A) -> op A nil aop a b = op A nil aop b a), ACop A nil ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_minl. Let $i$ and $n$ and $m$ be natural numbers. Then if $i$ is less than or equal to $min$ applied to $n$ and $m$, then $i$ is less than or equal to $n$.\nassistant\n", "label": "axiom le_minl (i n m : Nat) (x__ : i ≤ min n m) : i ≤ n", "predict": "axiom le_minl (i n m : Nat) (x__ : i ≤ min n m) : i ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLd_to_prime. Let $i$ be a natural number. Then for all lists $acc$ of natural numbers, if $1$ is less than $i$, then for all elements $__1$ of $primes_below$ of $acc$ and $i$, if $list_divides$ applied to $acc$ and $i$ is equal to absurdity, then $i$ is prime.\nassistant\n", "label": "ld_to_prime : i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> __2 : Eq (list_divides acc i) false -> prime i .", "predict": "ld_to_prime : i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> __2 : Eq (list_divides acc i) false -> prime i ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFilter_nat. For all elements $return_sort$ of $Sort$, for all functions $return_type$ from natural numbers $z$ to elements of $return_sort$, for all functions $return$ from natural numbers $z$ to elements of $return_type$ of $z$, for all natural numbers $z$, $return_type$ holds for $z$.\nassistant\n", "label": "postulate filter_nat : (return_sort : Sort) -> (return_type : (z : Nat) -> return_sort) -> (return : (z : Nat) -> return_type z) -> (z : Nat) -> return_type z", "predict": "postulate filter_nat : (return_sort : Sort) -> (return_type : (z : Nat) -> return_sort) -> (return : (z : Nat) -> return_type z) -> (z : Nat) -> return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin_spec_inv_ind. For all natural numbers $x1$ and $x2$, for all functions $x3$ from natural numbers to booleans, for all natural numbers $x4$, for all elements $_Hterm$ of $min_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from natural numbers $_z1890$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_1080$ of $Leq$ of $x2$ and $m$ and elements $_x_1079$ of $Lt$ of $m$ and the sum of $x1$ and $x2$ and elements $_x_1078$ of $Eq$ of $x3$ applied to $m$ and $true$ and functions $_x_1077$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $x3$ applied to $i$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_1081$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $x1$ and $x2$ to elements of $Eq$ of $x3$ applied to $i$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and the sum of $x1$ and $x2$ to elements of $P$ of the sum of $x1$ and $x2$, $P$ holds for $x4$.\nassistant\n", "label": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : ((x__ : nat) -> bool), forall x4 : nat, forall _Hterm : min_spec x1 x2 x3 x4, forall P : ((_z1890 : nat) -> Prop), forall _H1 : ((m : nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : m < x1 + x2) -> (_x_1078 : x3 m = true) -> (_x_1077 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < m) -> x3 i = false) -> (_z1891 : x4 = m) -> P m), forall _H2 : ((_x_1081 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < x1 + x2) -> x3 i = false) -> (_z1891 : x4 = x1 + x2) -> P (x1 + x2)), P x4 .", "predict": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : ((x__ : nat) -> bool), forall x4 : nat, forall _Hterm : min_spec x1 x2 x3 x4, forall P : ((_z1890 : nat) -> Prop), forall _H1 : ((m : nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : m < x1 + x2) -> (_x_1078 : x3 m = true) -> (_x_1077 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < m) -> x3 i = false) -> (_z1891 : x4 = m) -> P m), forall _H2 : ((_x_1081 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < x1 + x2) -> x3 i = false) -> (_z1891 : x4 = x1 + x2) -> P (x1 + x2)), P x4 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPi_1. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $1$ is equal to $1$.\nassistant\n", "label": "postulate pi_1 : (n : Nat) -> (p : (_ : Nat) -> bool) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> 1)) 1", "predict": "postulate pi_1 : (n : Nat) -> (p : (_ : Nat) -> bool) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> 1)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1561. For all natural numbers $p$ and $m$ and $n$, if $0$ is less than $p$, then if the greatest common divisor of $p$ and $m$ is equal to $1$, then if $p$ is divisible by the product of $m$ and $n$, then for all natural numbers $c$, if the product of $m$ and $n$ is equal to the product of $p$ and $c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_Type1_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_899$ of $ACop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_899$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_899$.\nassistant\n", "label": "axiom ACop_rect_Type1_body (A : Set) (_nil : A) (Q_ : (_x_899 : ACop A _nil) -> Type1) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_899 : ACop A _nil) : Q_ x_899", "predict": "axiom ACop_rect_Type1_body (A : Set) (_nil : A) (Q_ : (_x_899 : ACop A _nil) -> Type1) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_899 : ACop A _nil) : Q_ x_899"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__$ and $__1$ be natural numbers. Then the product of $__$ and $__1$ is a natural number.\nassistant\n", "label": "Axiom times : forall x__ : nat, forall __1 : nat, nat .", "predict": "Axiom times : forall x__ : nat, forall __1 : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__ , __1 \\in N$. Then the quotient of $__$ and $__1$ is a natural number.\nassistant\n", "label": "Axiom div : forall x__ : nat, forall __1 : nat, nat .", "predict": "Axiom div : forall x__ : nat, forall __1 : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin_f_g. Let $f$ and $g$ be functions from natural numbers to booleans. Then for all natural numbers $n$ and $b$, for all functions $__$ from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$, $min$ applied to $n$ and $b$ and $f$ is equal to $min$ applied to $n$ and $b$ and $g$.\nassistant\n", "label": "Axiom min_f_g : forall f : ((x__ : nat) -> bool), forall g : ((x__ : nat) -> bool), forall n : nat, forall b : nat, forall x__ : ((i : nat) -> (x__ : Leq b i) -> (__1 : i < n + b) -> f i = g i), min n b f = min n b g .", "predict": "Axiom min_f_g : forall f : ((x__ : nat) -> bool), forall g : ((x__ : nat) -> bool), forall n : nat, forall b : nat, forall x__ : ((i : nat) -> (x__ : Leq b i) -> (__1 : i < n + b) -> f i = g i), min n b f = min n b g ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_ind_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_811$ of $Lt$ of $_r$ and $_m$ and elements $x_810$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_811$ and $x_810$, for all elements $x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_809$.\nassistant\n", "label": "div_mod_spec_ind_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_809 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_811 : Lt _r _m -> x_810 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> x_809 : div_mod_spec _n _m _q _r -> Q_ x_809 .", "predict": "div_mod_spec_ind_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_809 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_811 : Lt _r _m -> x_810 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> x_809 : div_mod_spec _n _m _q _r -> Q_ x_809 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_SO_to_le_B_exp. For all natural numbers $n$, if $1$ is less than $n$, then $B$ applied to the product of $2$ and $n$ is less than or equal to the exponentiation of $2$ and $pred$ applied to the product of $2$ and $n$.\nassistant\n", "label": "Axiom lt_SO_to_le_B_exp : forall n : nat, forall x__ : (1 < n), Leq (B (2 * n)) (pow 2 (pred (2 * n))) .", "predict": "Axiom lt_SO_to_le_B_exp : forall n : nat, forall x__ : (1 < n), Leq (B (2 * n)) (pow 2 (pred (2 * n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nIter_body. Let $H$ be a set. Then for all functions $__$ from elements of $H$ to elements of $H$, for all natural numbers $__1$, for all elements $__2$ of $H$, $H$.\nassistant\n", "label": "iter_body : H : Set -> __ : (__ : H -> H) -> __1 : Nat -> __2 : H -> H .", "predict": "iter_body : H : Set -> __ : (__ : H -> H) -> __1 : Nat -> __2 : H -> H ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDecidable_le. For all natural numbers $n$ and $m$, $decidable$ holds for $Leq$ applied to $n$ and $m$.\nassistant\n", "label": "decidable_le : n : Nat -> m : Nat -> decidable (Leq n m) .", "predict": "decidable_le : n : Nat -> m : Nat -> decidable (Leq n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFmin_false. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $b$, $prod$ holds for $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m$ applied to $f$ and $n$ and $b$ and absurdity and the function that maps $__$ to $Eq$ applied to $let_m$ applied to $f$ and $n$ and $b$ and the sum of $n$ and $b$.\nassistant\n", "label": "fmin_false : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> prod Prop Prop (Eq (f (let_m f n b)) false) (__ : Eq (f (let_m f n b)) false => Eq (let_m f n b) (plus n b)) .", "predict": "fmin_false : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> prod Prop Prop (Eq (f (let_m f n b)) false) (__ : Eq (f (let_m f n b)) false => Eq (let_m f n b) (plus n b)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_ind. Let $_n$ and $_m$ be natural numbers. Then for all functions $Q_$ from elements $_x_1192$ of $divisible$ of $_n$ and $_m$ to propositions, for all functions $_H_quotient$ from natural numbers $q$ and elements $x_1193$ of $Eq$ of $_m$ and the product of $_n$ and $q$ to elements of $Q_$ of $quotient$ applied to $_n$ and $_m$ and $q$ and $x_1193$, if $_n$ is divisible by $_m$, then $Q_$ holds for $x_1192$.\nassistant\n", "label": "axiom divides_ind (_n _m : Nat) (Q_ : (_x_1192 : divisible _n _m) -> Prop) (_H_quotient : (q : Nat) -> (x_1193 : _m = _n * q) -> Q_ (quotient _n _m q x_1193)) (x_1192 : divisible _n _m) : Q_ x_1192", "predict": "axiom divides_ind (_n _m : Nat) (Q_ : (_x_1192 : divisible _n _m) -> Prop) (_H_quotient : (q : Nat) -> (x_1193 : _m = _n * q) -> Q_ (quotient _n _m q x_1193)) (x_1192 : divisible _n _m) : Q_ x_1192"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAntisymmetric_divides. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $m$ is divisible by $n$, then $n$ is equal to $m$.\nassistant\n", "label": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, forall x__ : divisible n m, forall __1 : divisible m n, n = m .", "predict": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, forall x__ : divisible n m, forall __1 : divisible m n, n = m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_log_S. For all natural numbers $p$ and $n$, if $1$ is less than $p$, then the logarithm of $p$ and $n$ is less than or equal to the logarithm of $p$ and the sum of $n$ and $1$.\nassistant\n", "label": "Axiom le_log_S : forall p : nat, forall n : nat, forall x__ : (1 < p), Leq (log p n) (log p (n + 1)) .", "predict": "Axiom le_log_S : forall p : nat, forall n : nat, forall x__ : (1 < p), Leq (log p n) (log p (n + 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_inv_S_dx. For all sets $B$, for all elements $R$ of $relation$ of $B$, for all natural numbers $l$, for all elements $b1$ and $b2$ of $B$, for all elements $__$ of $lstar$ of $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$, $ex2$ holds for $B$ and the function that maps $b$ to $lstar$ applied to $B$ and $R$ and $l$ and $b1$ and $b$ and the function that maps $b$ to $R$ applied to $b$ and $b2$.\nassistant\n", "label": "Axiom lstar_inv_S_dx : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b2 : B, forall x__ : lstar B R (l + 1) b1 b2, ex2 B (fun b => lstar B R l b1 b) (fun b => R b b2) .", "predict": "Axiom lstar_inv_S_dx : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b2 : B, forall x__ : lstar B R (l + 1) b1 b2, ex2 B (fun b => lstar B R l b1 b) (fun b => R b b2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPlus_minus_plus_plus_l. Let $z$ and $x$ and $y$ and $h$ be natural numbers. Then the difference of the sum of $z$ and the sum of $x$ and $h$ and the sum of $y$ and $h$ is equal to the difference of the sum of $z$ and $x$ and $y$.\nassistant\n", "label": "axiom plus_minus_plus_plus_l (z x y h : Nat) : z + (x + h) - (y + h) = z + x - y", "predict": "axiom plus_minus_plus_plus_l (z x y h : Nat) : z + (x + h) - (y + h) = z + x - y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDecidable_mem_nat. For all natural numbers $n$, for all lists $l$ of natural numbers, $decidable$ holds for $mem$ applied to $Nat$ and $n$ and $l$.\nassistant\n", "label": "decidable_mem_nat : n : Nat -> l : list Nat -> decidable (mem Nat n l) .", "predict": "decidable_mem_nat : n : Nat -> l : list Nat -> decidable (mem Nat n l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nIncreasing_to_monotonic. For all functions $f$ from natural numbers to natural numbers, for all elements $__$ of $increasing$ of $f$, $monotonic$ holds for $Nat$ and $Lt$ and $f$.\nassistant\n", "label": "increasing_to_monotonic : f : (__ : Nat -> Nat) -> __ : increasing f -> monotonic Nat Lt f .", "predict": "increasing_to_monotonic : f : (__ : Nat -> Nat) -> __ : increasing f -> monotonic Nat Lt f ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLprim_ex. $lprim (8 , 2 , nil (Nat))= cons (Nat , 2 , cons (Nat , 3 , cons (Nat , 5 , cons (Nat , 7 , nil (Nat)))))$.\nassistant\n", "label": "Axiom lprim_ex : lprim 8 2 (nil nat) = cons nat 2 (cons nat 3 (cons nat 5 (cons nat 7 (nil nat)))) .", "predict": "Axiom lprim_ex : lprim 8 2 (nil nat) = cons nat 2 (cons nat 3 (cons nat 5 (cons nat 7 (nil nat))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLeb. Let $__$ and $__1$ be natural numbers. Then $bool$.\nassistant\n", "label": "Axiom leb : forall x__ : nat, forall __1 : nat, bool .", "predict": "Axiom leb : forall x__ : nat, forall __1 : nat, bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_mod_to_divides. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $p$ is divisible by $mod$ applied to $m$ and $n$, then if $p$ is divisible by $n$, then $p$ is divisible by $m$.\nassistant\n", "label": "axiom divides_mod_to_divides (p m n : Nat) (x__ : 0 < n) (__1 : divisible p (mod m n)) (__2 : divisible p n) : divisible p m", "predict": "axiom divides_mod_to_divides (p m n : Nat) (x__ : 0 < n) (__1 : divisible p (mod m n)) (__2 : divisible p n) : divisible p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_to_le. Let $b$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $b$, then if the exponentiation of $b$ and $n$ is less than or equal to the exponentiation of $b$ and $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "Axiom le_exp_to_le : forall b : nat, forall n : nat, forall m : nat, forall x__ : (1 < b), forall __1 : Leq (pow b n) (pow b m), Leq n m .", "predict": "Axiom le_exp_to_le : forall b : nat, forall n : nat, forall m : nat, forall x__ : (1 < b), forall __1 : Leq (pow b n) (pow b m), Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop. For all natural numbers $__$, for all functions $__1$ from natural numbers $__1$ to booleans, for all sets $H$, for all elements $__2$ of $H$, for all functions $__3$ from elements $__3$ of $H$ and elements $__4$ of $H$ to elements of $H$, for all functions $__4$ from natural numbers $__4$ to elements of $H$, $H$.\nassistant\n", "label": "Axiom bigop : forall x__ : nat, forall __1 : ((__1 : nat) -> bool), forall H : Set, forall __2 : H, forall __3 : ((__3 : H) -> (__4 : H) -> H), forall __4 : ((__4 : nat) -> H), H .", "predict": "Axiom bigop : forall x__ : nat, forall __1 : ((__1 : nat) -> bool), forall H : Set, forall __2 : H, forall __3 : ((__3 : H) -> (__4 : H) -> H), forall __4 : ((__4 : nat) -> H), H ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_plus_div. Let $m$ and $n$ and $q$ be natural numbers. Then if $0$ is less than $q$, then the sum of the quotient of $m$ and $q$ and the quotient of $n$ and $q$ is less than or equal to the quotient of the sum of $m$ and $n$ and $q$.\nassistant\n", "label": "postulate le_plus_div : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> Leq (plus (div m q) (div n q)) (div (plus m n) q)", "predict": "postulate le_plus_div : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> Leq (plus (div m q) (div n q)) (div (plus m n) q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_O_to_not_divides. Let $n$ and $i$ and $r$ be natural numbers. Then if $0$ is less than $n$, then if $p_ord$ applied to $n$ and $nth_prime$ applied to $i$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $0$ and $r$, then $nth_prime$ applied to $i$ is not divisible by $n$.\nassistant\n", "label": "Axiom p_ord_O_to_not_divides : forall n : nat, forall i : nat, forall r : nat, forall x__ : (0 < n), forall __1 : (p_ord n (nth_prime i) = mk_Prod nat nat 0 r), ~ divisible (nth_prime i) n .", "predict": "Axiom p_ord_O_to_not_divides : forall n : nat, forall i : nat, forall r : nat, forall x__ : (0 < n), forall __1 : (p_ord n (nth_prime i) = mk_Prod nat nat 0 r), ~ divisible (nth_prime i) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_inv_ind. Let $x1$ be a set. Then for all elements $x2$ of $relation$ of $x1$, for all natural numbers $x3$, for all elements $x4$ and $x5$ of $x1$, for all elements $_Hterm$ of $lstar$ of $x1$ and $x2$ and $x3$ and $x4$ and $x5$, for all functions $P$ from natural numbers $_z2089$ and elements $_z2088$ of $x1$ and elements $_z2087$ of $x1$ to propositions, for all functions $_H1$ from elements $b$ of $x1$ and elements $_z2092$ of $Eq$ of $x3$ and $0$ and elements $_z2091$ of $Eq$ of $x4$ and $b$ and elements $_z2090$ of $Eq$ of $x5$ and $b$ to elements of $P$ of $0$ and $b$ and $b$, for all functions $_H2$ from elements $b1$ of $x1$ and elements $b$ of $x1$ and elements $_x_1236$ of $x2$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $x1$ and elements $_x_1235$ of $lstar$ of $x1$ and $x2$ and $l$ and $b$ and $b2$ and functions $_x_1238$ from elements $_z2092$ of $Eq$ of $x3$ and $l$ and elements $_z2091$ of $Eq$ of $x4$ and $b$ and elements $_z2090$ of $Eq$ of $x5$ and $b2$ to elements of $P$ of $l$ and $b$ and $b2$ and elements $_z2092$ of $Eq$ of $x3$ and the sum of $l$ and $1$ and elements $_z2091$ of $Eq$ of $x4$ and $b1$ and elements $_z2090$ of $Eq$ of $x5$ and $b2$ to elements of $P$ of the sum of $l$ and $1$ and $b1$ and $b2$, $P$ holds for $x3$ and $x4$ and $x5$.\nassistant\n", "label": "lstar_inv_ind : x1 : Set -> x2 : relation x1 -> x3 : Nat -> x4 : x1 -> x5 : x1 -> _Hterm : lstar x1 x2 x3 x4 x5 -> P : (_z2089 : Nat -> _z2088 : x1 -> _z2087 : x1 -> Prop) -> _H1 : (b : x1 -> _z2092 : Eq x3 0 -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b -> P 0 b b) -> _H2 : (b1 : x1 -> b : x1 -> _x_1236 : x2 b1 b -> l : Nat -> b2 : x1 -> _x_1235 : lstar x1 x2 l b b2 -> _x_1238 : (_z2092 : Eq x3 l -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b2 -> P l b b2) -> _z2092 : Eq x3 (plus l (nd 1)) -> _z2091 : Eq x4 b1 -> _z2090 : Eq x5 b2 -> P (plus l (nd 1)) b1 b2) -> P x3 x4 x5 .", "predict": "lstar_inv_ind : x1 : Set -> x2 : relation x1 -> x3 : Nat -> x4 : x1 -> x5 : x1 -> _Hterm : lstar x1 x2 x3 x4 x5 -> P : (_z2089 : Nat -> _z2088 : x1 -> _z2087 : x1 -> Prop) -> _H1 : (b : x1 -> _z2092 : Eq x3 0 -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b -> P 0 b b) -> _H2 : (b1 : x1 -> b : x1 -> _x_1236 : x2 b1 b -> l : Nat -> b2 : x1 -> _x_1235 : lstar x1 x2 l b b2 -> _x_1238 : (_z2092 : Eq x3 l -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b2 -> P l b b2) -> _z2092 : Eq x3 (plus l (nd 1)) -> _z2091 : Eq x4 b1 -> _z2090 : Eq x5 b2 -> P (plus l (nd 1)) b1 b2) -> P x3 x4 x5 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nS_pred. For all natural numbers $n$, if $0$ is less than $n$, then the sum of $pred$ applied to $n$ and $1$ is equal to $n$.\nassistant\n", "label": "Axiom S_pred : forall n : nat, forall x__ : (0 < n), pred n + 1 = n .", "predict": "Axiom S_pred : forall n : nat, forall x__ : (0 < n), pred n + 1 = n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_smallest_factor_n. Let $n$ be a natural number. Then if $0$ is less than $n$, then $smallest_factor$ applied to $n$ is divisible by $n$.\nassistant\n", "label": "divides_smallest_factor_n : n : Nat -> __ : Lt 0 n -> divisible (smallest_factor n) n .", "predict": "divides_smallest_factor_n : n : Nat -> __ : Lt 0 n -> divisible (smallest_factor n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_rect_Type0_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_927$ of $range$ of $_A$ to sets, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_927$ of $range$ of $_A$, $Q_$ holds for $x_927$.\nassistant\n", "label": "axiom range_rect_Type0_body (_A : Set) (Q_ : (_x_927 : range _A) -> Set) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_927 : range _A) : Q_ x_927", "predict": "axiom range_rect_Type0_body (_A : Set) (Q_ : (_x_927 : range _A) -> Set) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_927 : range _A) : Q_ x_927"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_B2_exp. For all natural numbers $n$, if the exponentiation of $2$ and $7$ is less than or equal to $n$, then $B2$ applied to the product of $2$ and $n$ is less than or equal to the exponentiation of the product of $2$ and $n$ and $pred$ applied to the quotient of the square root of the product of $2$ and $n$ and $2$.\nassistant\n", "label": "le_B2_exp : n : Nat -> __ : Leq (pow (nd 2) (nd 7)) n -> Leq (B2 (times (nd 2) n)) (pow (times (nd 2) n) (pred (div (sqrt (times (nd 2) n)) (nd 2)))) .", "predict": "le_B2_exp : n : Nat -> __ : Leq (pow (nd 2) (nd 7)) n -> Leq (B2 (times (nd 2) n)) (pow (times (nd 2) n) (pred (div (sqrt (times (nd 2) n)) (nd 2)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_to_not_eq_O. Let $n$ and $p$ and $q$ and $r$ be natural numbers. Then if $1$ is less than $n$, then if $p_ord$ applied to $n$ and $nth_prime$ applied to $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$, then $r$ is not equal to $0$.\nassistant\n", "label": "axiom p_ord_to_not_eq_O (n p q r : Nat) (x__ : 1 < n) (__1 : p_ord n (nth_prime p) = mk_Prod Nat Nat q r) : ¬ (r = 0)", "predict": "axiom p_ord_to_not_eq_O (n p q r : Nat) (x__ : 1 < n) (__1 : p_ord n (nth_prime p) = mk_Prod Nat Nat q r) : ¬ (r = 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_B. For all natural numbers $n$, if $0$ is less than $n$, then the exponentiation of $2$ and the product of $2$ and $n$ is less than or equal to the product of the product of $2$ and $n$ and $B$ applied to the product of $2$ and $n$.\nassistant\n", "label": "Axiom le_exp_B : forall n : nat, forall x__ : (0 < n), Leq (pow 2 (2 * n)) (2 * n * B (2 * n)) .", "predict": "Axiom le_exp_B : forall n : nat, forall x__ : (0 < n), Leq (pow 2 (2 * n)) (2 * n * B (2 * n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nF_min_true. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $b$, for all elements $__$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of the conjunction of $Leq$ applied to $b$ and $i$ and $Lt$ applied to $i$ and the sum of $n$ and $b$ and $Eq$ applied to $f$ applied to $i$ and $true$, $f$ applied to $min$ applied to $n$ and $b$ and $f$ is equal to $true$.\nassistant\n", "label": "f_min_true : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> __ : ex Nat (i : Nat => and (and (Leq b i) (Lt i (plus n b))) (Eq (f i) true)) -> Eq (f (min n b f)) true .", "predict": "f_min_true : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> __ : ex Nat (i : Nat => and (and (Leq b i) (Lt i (plus n b))) (Eq (f i) true)) -> Eq (f (min n b f)) true ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nList_divides_true. Let $l$ be a list of natural numbers. Then for all natural numbers $n$, if $list_divides$ applied to $l$ and $n$ is equal to $true$, then $ex$ holds for $Nat$ and the function that maps $p$ to the conjunction of $mem$ applied to $Nat$ and $p$ and $l$ and $divisible$ applied to $p$ and $n$.\nassistant\n", "label": "postulate list_divides_true : (l : list Nat) -> (n : Nat) -> (_ : Eq (list_divides l n) true) -> ex Nat (\\ p : Nat -> and (mem Nat p l) (divisible p n))", "predict": "postulate list_divides_true : (l : list Nat) -> (n : Nat) -> (_ : Eq (list_divides l n) true) -> ex Nat (\\ p : Nat -> and (mem Nat p l) (divisible p n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15311. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $n$ is divisible by $m$, then for all natural numbers $d$ and $p$, if $m$ is equal to the product of $n$ and the sum of $p$ and $1$, then $m$ is equal to the sum of $n$ and the product of $n$ and $p$.\nassistant\n", "label": "axiom let_clause_15311 (n m : Nat) (posm : 0 < m) (_clearme : divisible n m) (d p : Nat) (eqm : m = n * (p + 1)) : m = n + n * p", "predict": "axiom let_clause_15311 (n m : Nat) (posm : 0 < m) (_clearme : divisible n m) (d p : Nat) (eqm : m = n * (p + 1)) : m = n + n * p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_or_lt_eq. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then $n$ is less than $m$ or $n$ is equal to $m$.\nassistant\n", "label": "axiom le_to_or_lt_eq (n m : Nat) (x__ : n ≤ m) : n < m ∨ n = m", "predict": "axiom le_to_or_lt_eq (n m : Nat) (x__ : n ≤ m) : n < m ∨ n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_Type1_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type1$, for all functions $_H_div_mod_spec_intro$ from elements $x_831$ of $Lt$ of $_r$ and $_m$ and elements $x_830$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_831$ and $x_830$, for all elements $x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_829$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type1_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) -> (_H_div_mod_spec_intro : (x_831 : Lt _r _m) -> (x_830 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) -> (x_829 : div_mod_spec _n _m _q _r) -> Q_ x_829", "predict": "postulate div_mod_spec_rect_Type1_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) -> (_H_div_mod_spec_intro : (x_831 : Lt _r _m) -> (x_830 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) -> (x_829 : div_mod_spec _n _m _q _r) -> Q_ x_829"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_le_minus_l. Let $p$ and $q$ and $n$ be natural numbers. Then if $q$ is less than or equal to $p$, then the difference of $q$ and $n$ is less than or equal to the difference of $p$ and $n$.\nassistant\n", "label": "monotonic_le_minus_l : p : Nat -> q : Nat -> n : Nat -> __ : Leq q p -> Leq (minus q n) (minus p n) .", "predict": "monotonic_le_minus_l : p : Nat -> q : Nat -> n : Nat -> __ : Leq q p -> Leq (minus q n) (minus p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMinus_le_minus_minus_comm. For all natural numbers $b$ and $c$ and $a$, if $c$ is less than or equal to $b$, then the difference of $a$ and the difference of $b$ and $c$ is equal to the difference of the sum of $a$ and $c$ and $b$.\nassistant\n", "label": "postulate minus_le_minus_minus_comm : (b : Nat) -> (c : Nat) -> (a : Nat) -> (_ : Leq c b) -> Eq (minus a (minus b c)) (minus (plus a c) b)", "predict": "postulate minus_le_minus_minus_comm : (b : Nat) -> (c : Nat) -> (a : Nat) -> (_ : Leq c b) -> Eq (minus a (minus b c)) (minus (plus a c) b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPlus_O_n. For all natural numbers $n$, $n$ is equal to the sum of $0$ and $n$.\nassistant\n", "label": "axiom plus_O_n (n : Nat) : n = 0 + n", "predict": "axiom plus_O_n (n : Nat) : n = 0 + n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTimes_mod. For all natural numbers $a$ and $b$ and $c$, if $0$ is less than $c$, then if $0$ is less than $b$, then $mod$ applied to the product of $a$ and $c$ and the product of $b$ and $c$ is equal to the product of $c$ and $mod$ applied to $a$ and $b$.\nassistant\n", "label": "axiom times_mod (a b c : Nat) (x__ : 0 < c) (__1 : 0 < b) : mod (a * c) (b * c) = c * mod a b", "predict": "axiom times_mod (a b c : Nat) (x__ : 0 < c) (__1 : 0 < b) : mod (a * c) (b * c) = c * mod a b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nOrd_rem. For all natural numbers $__$ and $__1$, $Nat$.\nassistant\n", "label": "postulate ord_rem : (_ : Nat) -> (__1 : Nat) -> Nat", "predict": "postulate ord_rem : (_ : Nat) -> (__1 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_4_to_fact. For all natural numbers $n$, if $4$ is less than $n$, then the factorial of the product of $2$ and $n$ is less than or equal to the product of the product of the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $2$ and the factorial of $n$ and the factorial of $n$.\nassistant\n", "label": "postulate lt_4_to_fact : (n : Nat) -> (_ : Lt 4 n) -> Leq (factorial (times 2 n)) (times (times (pow 2 (minus (times 2 n) 2)) (factorial n)) (factorial n))", "predict": "postulate lt_4_to_fact : (n : Nat) -> (_ : Lt 4 n) -> Leq (factorial (times 2 n)) (times (times (pow 2 (minus (times 2 n) 2)) (factorial n)) (factorial n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_aux_body. Let $__$ and $__1$ and $__2$ be natural numbers. Then $Prod$ holds for $Nat$ and $Nat$.\nassistant\n", "label": "postulate p_ord_aux_body : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Prod Nat Nat", "predict": "postulate p_ord_aux_body : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Prod Nat Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrimes_below_lop. For all natural numbers $n$, $primes_below$ holds for $list_of_primes$ applied to $n$ and the sum of $n$ and $2$.\nassistant\n", "label": "Axiom primes_below_lop : forall n : nat, primes_below (list_of_primes n) (n + 2) .", "predict": "Axiom primes_below_lop : forall n : nat, primes_below (list_of_primes n) (n + 2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBc2. Let $n$ and $k$ be natural numbers. Then if $k$ is less than or equal to $n$, then the product of the factorial of $k$ and the factorial of the difference of $n$ and $k$ is divisible by the factorial of $n$.\nassistant\n", "label": "bc2 : n : Nat -> k : Nat -> __ : Leq k n -> divisible (times (factorial k) (factorial (minus n k))) (factorial n) .", "predict": "bc2 : n : Nat -> k : Nat -> __ : Leq k n -> divisible (times (factorial k) (factorial (minus n k))) (factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_n_O_elim. Let $n$ be a natural number. Then if $n$ is less than or equal to $0$, then for all functions $P$ from natural numbers $__1$ to propositions, for all elements $__1$ of $P$ of $0$, $P$ holds for $n$.\nassistant\n", "label": "le_n_O_elim : n : Nat -> __ : Leq n 0 -> P : (__1 : Nat -> Prop) -> __1 : P 0 -> P n .", "predict": "le_n_O_elim : n : Nat -> __ : Leq n 0 -> P : (__1 : Nat -> Prop) -> __1 : P 0 -> P n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_aop. For all natural numbers $n$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $R$ of $Dop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all elements $a$ of $B$, $ACop$ holds for $B$ and $nil$.\nassistant\n", "label": "Axiom let_aop : forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall R : Dop B nil, forall f : ((x__ : nat) -> B), forall a : B, ACop B nil .", "predict": "Axiom let_aop : forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall R : Dop B nil, forall f : ((x__ : nat) -> B), forall a : B, ACop B nil ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_pi_bc. For all natural numbers $a$ and $b$ and $c$, for all functions $f$ from natural numbers to natural numbers, the product of the exponentiation of $a$ and the difference of $c$ and $b$ and $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $true$ applied to the sum of $i$ and $b$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $b$ is equal to $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $true$ applied to the sum of $i$ and $b$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the function that maps $i0$ to the product of $a$ and $f$ applied to $i0$ applied to the sum of $i$ and $b$.\nassistant\n", "label": "postulate exp_pi_bc : (a : Nat) -> (b : Nat) -> (c : Nat) -> (f : (_ : Nat) -> Nat) -> Eq (times (pow a (minus c b)) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b)))) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> times a (f i0)) (plus i b)))", "predict": "postulate exp_pi_bc : (a : Nat) -> (b : Nat) -> (c : Nat) -> (f : (_ : Nat) -> Nat) -> Eq (times (pow a (minus c b)) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b)))) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> times a (f i0)) (plus i b)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_rect_Type5. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.\nassistant\n", "label": "axiom Dop_rect_Type5 (A : Set) (_nil : A) (Q_ : (_x_947 : Dop A _nil) -> Type5) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_947 : Dop A _nil) : Q_ x_947", "predict": "axiom Dop_rect_Type5 (A : Set) (_nil : A) (Q_ : (_x_947 : Dop A _nil) -> Type5) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_947 : Dop A _nil) : Q_ x_947"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $__$ and $__1$ be natural numbers. Then we can say that $__$ is less than $__1$.\nassistant\n", "label": "Lt : __ : Nat -> __1 : Nat -> Prop .", "predict": "Lt : __ : Nat -> __1 : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_to_lt_O. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $n$ is divisible by $m$, then $0$ is less than $n$.\nassistant\n", "label": "divides_to_lt_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Lt 0 n .", "predict": "divides_to_lt_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Lt 0 n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_rect_Type1. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_871$ of $Aop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_871$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_871$.\nassistant\n", "label": "Aop_rect_Type1 : A : Set -> _nil : A -> Q_ : (_x_871 : Aop A _nil -> Type1) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_871 : Aop A _nil -> Q_ x_871 .", "predict": "Aop_rect_Type1 : A : Set -> _nil : A -> Q_ : (_x_871 : Aop A _nil -> Type1) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_871 : Aop A _nil -> Q_ x_871 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15311. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $n$ is divisible by $m$, then for all natural numbers $d$ and $p$, if $m$ is equal to the product of $n$ and the sum of $p$ and $1$, then $m$ is equal to the sum of $n$ and the product of $n$ and $p$.\nassistant\n", "label": "let_clause_15311 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> p : Nat -> eqm : Eq m (times n (plus p (nd 1))) -> Eq m (plus n (times n p)) .", "predict": "let_clause_15311 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> p : Nat -> eqm : Eq m (times n (plus p (nd 1))) -> Eq m (plus n (times n p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nGcd_1_to_lt_O. Let $i$ and $n$ be natural numbers. Then if $1$ is less than $n$, then if the greatest common divisor of $i$ and $n$ is equal to $1$, then $0$ is less than $i$.\nassistant\n", "label": "axiom gcd_1_to_lt_O (i n : Nat) (x__ : 1 < n) (__1 : gcd i n = 1) : 0 < i", "predict": "axiom gcd_1_to_lt_O (i n : Nat) (x__ : 1 < n) (__1 : gcd i n = 1) : 0 < i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrim. For all natural numbers $_n$, $Nat$.\nassistant\n", "label": "Axiom prim : forall _n : nat, nat .", "predict": "Axiom prim : forall _n : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_Type4. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$, for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_815$ and $x_814$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "div_mod_spec_rect_Type4 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_813 : div_mod_spec _n _m _q _r -> Type4) -> _H_div_mod_spec_intro : (x_815 : Lt _r _m -> x_814 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> x_813 : div_mod_spec _n _m _q _r -> Q_ x_813 .", "predict": "div_mod_spec_rect_Type4 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_813 : div_mod_spec _n _m _q _r -> Type4) -> _H_div_mod_spec_intro : (x_815 : Lt _r _m -> x_814 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> x_813 : div_mod_spec _n _m _q _r -> Q_ x_813 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1542$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1543$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp3 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1542 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1543 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "Aop_inv_rect_CProp3 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1542 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1543 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1692. Let $m$ be a natural number. Then if $0$ is less than $m$, then for all natural numbers $a$ and $x358$ and $x359$, $aop__o__op$ applied to $Nat$ and $0$ and $plusAC$ and $x358$ and the product of $x358$ and $x359$ is equal to the product of $x358$ and the sum of $x359$ and $1$.\nassistant\n", "label": "postulate let_clause_1692 : (m : Nat) -> (posm : Lt 0 m) -> (a : Nat) -> (x358 : Nat) -> (x359 : Nat) -> Eq (aop__o__op Nat 0 plusAC x358 (times x358 x359)) (times x358 (plus x359 1))", "predict": "postulate let_clause_1692 : (m : Nat) -> (posm : Lt 0 m) -> (a : Nat) -> (x358 : Nat) -> (x359 : Nat) -> Eq (aop__o__op Nat 0 plusAC x358 (times x358 x359)) (times x358 (plus x359 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMinus_plus_minus_l. Let $x$ and $y$ and $z$ be natural numbers. Then if $y$ is less than or equal to $z$, then the difference of the sum of $z$ and $x$ and the difference of $z$ and $y$ is equal to the sum of $x$ and $y$.\nassistant\n", "label": "postulate minus_plus_minus_l : (x : Nat) -> (y : Nat) -> (z : Nat) -> (_ : Leq y z) -> Eq (minus (plus z x) (minus z y)) (plus x y)", "predict": "postulate minus_plus_minus_l : (x : Nat) -> (y : Nat) -> (z : Nat) -> (_ : Leq y z) -> Eq (minus (plus z x) (minus z y)) (plus x y)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_times_n. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then $m$ is less than or equal to the product of $n$ and $m$.\nassistant\n", "label": "Axiom lt_times_n : forall n : nat, forall m : nat, forall x__ : (0 < n), Leq m (n * m) .", "predict": "Axiom lt_times_n : forall n : nat, forall m : nat, forall x__ : (0 < n), Leq m (n * m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16. For all natural numbers $n$ and $m$, if $2$ is less than the sum of $m$ and $1$, then for all natural numbers $x32$, the sum of $x32$ and $1$ is equal to the sum of $x32$ and $1$.\nassistant\n", "label": "axiom let_clause_16 (n m : Nat) (lt2 : 2 < m + 1) (x32 : Nat) : x32 + 1 = x32 + 1", "predict": "axiom let_clause_16 (n m : Nat) (lt2 : 2 < m + 1) (x32 : Nat) : x32 + 1 = x32 + 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDexp. $Dop$ holds for $Nat$ and $1$.\nassistant\n", "label": "Axiom Dexp : Dop nat 1 .", "predict": "Axiom Dexp : Dop nat 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_times. For all natural numbers $n$ and $m$ and $p$ and $q$, if $n$ is divisible by $p$, then if $m$ is divisible by $q$, then the product of $n$ and $m$ is divisible by the product of $p$ and $q$.\nassistant\n", "label": "Axiom divides_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : divisible n p, forall __1 : divisible m q, divisible (n * m) (p * q) .", "predict": "Axiom divides_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : divisible n p, forall __1 : divisible m q, divisible (n * m) (p * q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_div. For all natural numbers $m$ and $n$ and $q$, if $0$ is less than $q$, then the sum of the quotient of $m$ and $q$ and the quotient of $n$ and $q$ is less than or equal to the quotient of the sum of $m$ and $n$ and $q$.\nassistant\n", "label": "axiom le_plus_div (m n q : Nat) (x__ : 0 < q) : m / q + n / q ≤ (m + n) / q", "predict": "axiom le_plus_div (m n q : Nat) (x__ : 0 < q) : m / q + n / q ≤ (m + n) / q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_previous_prime6. For all natural numbers $n$ and $m$, if $nth_prime$ applied to $n$ is less than $m$, then for all natural numbers $x$, $Nat$.\nassistant\n", "label": "Axiom let_previous_prime6 : forall n : nat, forall m : nat, forall ltml : (nth_prime n < m), forall x : nat, nat .", "predict": "Axiom let_previous_prime6 : forall n : nat, forall m : nat, forall ltml : (nth_prime n < m), forall x : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_body. Let $A$ be a set. Then for all elements $nil$ of $A$, for all elements $_xxx$ of $ACop$ of $A$ and $nil$, $Aop$ holds for $A$ and $nil$.\nassistant\n", "label": "postulate aop_body : (A : Set) -> (nil : A) -> (_xxx : ACop A nil) -> Aop A nil", "predict": "postulate aop_body : (A : Set) -> (nil : A) -> (_xxx : ACop A nil) -> Aop A nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Then if $n$ is less than $m$, then if $m$ is less than or equal to $p$, then $n$ is less than $p$.\nassistant\n", "label": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p .", "predict": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_aux_body. Let $__$ and $__1$ and $__2$ be natural numbers. Then $Prod$ holds for $Nat$ and $Nat$.\nassistant\n", "label": "axiom p_ord_aux_body (x__ __1 __2 : Nat) : Prod Nat Nat", "predict": "axiom p_ord_aux_body (x__ __1 __2 : Nat) : Prod Nat Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax_spec_ind. For all natural numbers $_n$, for all functions $_f$ from natural numbers to booleans, for all functions $Q_$ from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions, for all functions $_H_found_max_spec$ from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $x_975$ and $x_974$ and $x_973$, for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $x_976$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "axiom max_spec_ind (_n : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) (_H_found_max_spec : (m : Nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) (_H_not_found_max_spec : (x_976 : (i : Nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)) (x_971 : Nat) (x_972 : max_spec _n _f x_971) : Q_ x_971 x_972", "predict": "axiom max_spec_ind (_n : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) (_H_found_max_spec : (m : Nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) (_H_not_found_max_spec : (x_976 : (i : Nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)) (x_971 : Nat) (x_972 : max_spec _n _f x_971) : Q_ x_971 x_972"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_p_ord_inv. Let $p$ and $m$ and $x$ be natural numbers. Then $p_ord_inv$ applied to $p$ and $m$ and $x$ is equal to the sum of the product of $ord_rem$ applied to $x$ and $p$ and $m$ and $ord$ applied to $x$ and $p$.\nassistant\n", "label": "Axiom eq_p_ord_inv : forall p : nat, forall m : nat, forall x : nat, p_ord_inv p m x = ord_rem x p * m + ord x p .", "predict": "Axiom eq_p_ord_inv : forall p : nat, forall m : nat, forall x : nat, p_ord_inv p m x = ord_rem x p * m + ord x p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nB_SSSSSSSSO. $B$ applied to $8$ is equal to $70$.\nassistant\n", "label": "postulate B_SSSSSSSSO : Eq (B 8) 70", "predict": "postulate B_SSSSSSSSO : Eq (B 8) 70"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_inv_rect_Type2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1584$ of $ACop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1585$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "ACop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1584 : ACop x1 x2 -> Type2) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1585 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "ACop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1584 : ACop x1 x2 -> Type2) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1585 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_elim2. For all functions $R$ from natural numbers and natural numbers $__1$ to propositions, for all functions $__$ from natural numbers $n$ to elements of $R$ of $0$ and $n$, for all functions $__1$ from natural numbers $n$ to elements of $R$ of the sum of $n$ and $1$ and $0$, for all functions $__2$ from natural numbers $n$ and natural numbers $m$ and elements $__2$ of $R$ of $n$ and $m$ to elements of $R$ of the sum of $n$ and $1$ and the sum of $m$ and $1$, for all natural numbers $n$ and $m$, $R$ holds for $n$ and $m$.\nassistant\n", "label": "Axiom nat_elim2 : forall R : ((x__ : nat) -> (__1 : nat) -> Prop), forall x__ : ((n : nat) -> R 0 n), forall __1 : ((n : nat) -> R (n + 1) 0), forall __2 : ((n : nat) -> (m : nat) -> (__2 : R n m) -> R (n + 1) (m + 1)), forall n : nat, forall m : nat, R n m .", "predict": "Axiom nat_elim2 : forall R : ((x__ : nat) -> (__1 : nat) -> Prop), forall x__ : ((n : nat) -> R 0 n), forall __1 : ((n : nat) -> R (n + 1) 0), forall __2 : ((n : nat) -> (m : nat) -> (__2 : R n m) -> R (n + 1) (m + 1)), forall n : nat, forall m : nat, R n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_n_Sm_elim. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to the sum of $m$ and $1$, then for all propositions $P$, for all functions $__1$ from elements $__1$ of $Leq$ of the sum of $n$ and $1$ and the sum of $m$ and $1$ to elements of $P$, for all functions $__2$ from elements $__2$ of $Eq$ of $n$ and the sum of $m$ and $1$ to elements of $P$, $P$.\nassistant\n", "label": "postulate le_n_Sm_elim : (n : Nat) -> (m : Nat) -> (_ : Leq n (plus m 1)) -> (P : Prop) -> (__1 : (__1 : Leq (plus n 1) (plus m 1)) -> P) -> (__2 : (__2 : Eq n (plus m 1)) -> P) -> P", "predict": "postulate le_n_Sm_elim : (n : Nat) -> (m : Nat) -> (_ : Leq n (plus m 1)) -> (P : Prop) -> (__1 : (__1 : Leq (plus n 1) (plus m 1)) -> P) -> (__2 : (__2 : Eq n (plus m 1)) -> P) -> P"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFilter_divides. For all natural numbers $_n$ and $_m$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $divisible$ of $_n$ and $_m$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $divisible$ of $_n$ and $_m$ to elements of $return_type$ of $z$, if $_n$ is divisible by $_m$, then $return_type$ holds for $z$.\nassistant\n", "label": "postulate filter_divides : (_n : Nat) -> (_m : Nat) -> (return_sort : Sort) -> (return_type : (z : divisible _n _m) -> return_sort) -> (return : (z : divisible _n _m) -> return_type z) -> (z : divisible _n _m) -> return_type z", "predict": "postulate filter_divides : (_n : Nat) -> (_m : Nat) -> (return_sort : Sort) -> (return_type : (z : divisible _n _m) -> return_sort) -> (return : (z : divisible _n _m) -> return_type z) -> (z : divisible _n _m) -> return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSameF_upto_le. For all sets $A$, for all functions $f$ and $g$ from natural numbers to elements of $A$, for all natural numbers $n$ and $m$, if $n$ is less than or equal to $m$, then for all elements $__1$ of $sameF_upto$ of $m$ and $A$ and $f$ and $g$, $sameF_upto$ holds for $n$ and $A$ and $f$ and $g$.\nassistant\n", "label": "Axiom sameF_upto_le : forall A : Set, forall f : ((x__ : nat) -> A), forall g : ((x__ : nat) -> A), forall n : nat, forall m : nat, forall x__ : Leq n m, forall __1 : sameF_upto m A f g, sameF_upto n A f g .", "predict": "Axiom sameF_upto_le : forall A : Set, forall f : ((x__ : nat) -> A), forall g : ((x__ : nat) -> A), forall n : nat, forall m : nat, forall x__ : Leq n m, forall __1 : sameF_upto m A f g, sameF_upto n A f g ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_divides_to_ord_O. Let $p$ and $m$ be natural numbers. Then if $p$ is prime, then if $p$ is not divisible by $m$, then $ord$ applied to $m$ and $p$ is equal to $0$.\nassistant\n", "label": "axiom not_divides_to_ord_O (p m : Nat) (x__ : prime p) (__1 : ¬ divisible p m) : ord m p = 0", "predict": "axiom not_divides_to_ord_O (p m : Nat) (x__ : prime p) (__1 : ¬ divisible p m) : ord m p = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $_n$ and $__$ be natural numbers. Then we can say that $_n$ is less than or equal to $__$.\nassistant\n", "label": "Axiom Leq : forall _n : nat, forall x__ : nat, Prop .", "predict": "Axiom Leq : forall _n : nat, forall x__ : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBc_n_n. For all natural numbers $n$, $bc$ applied to $n$ and $n$ is equal to $1$.\nassistant\n", "label": "axiom bc_n_n (n : Nat) : bc n n = 1", "predict": "axiom bc_n_n (n : Nat) : bc n n = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_iter. Let $g$ be a function from natural numbers to natural numbers. Then for all natural numbers $a$ and $b$ and $i$, for all elements $__$ of $monotonic$ of $Nat$ and $Leq$ and $g$, if $a$ is less than or equal to $b$, then $iter$ applied to $Nat$ and $g$ and $i$ and $a$ is less than or equal to $iter$ applied to $Nat$ and $g$ and $i$ and $b$.\nassistant\n", "label": "monotonic_iter : g : (__ : Nat -> Nat) -> a : Nat -> b : Nat -> i : Nat -> __ : monotonic Nat Leq g -> __1 : Leq a b -> Leq (iter Nat g i a) (iter Nat g i b) .", "predict": "monotonic_iter : g : (__ : Nat -> Nat) -> a : Nat -> b : Nat -> i : Nat -> __ : monotonic Nat Leq g -> __1 : Leq a b -> Leq (iter Nat g i a) (iter Nat g i b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_Type2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1452$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type2$, for all functions $_H1$ from elements $x_827$ of $Lt$ of $x4$ and $x2$ and elements $x_826$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1453$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_Type2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1452 : div_mod_spec x1 x2 x3 x4) -> Type2) (_H1 : (x_827 : x4 < x2) -> (x_826 : x1 = x3 * x2 + x4) -> (_z1453 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_827 x_826) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_Type2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1452 : div_mod_spec x1 x2 x3 x4) -> Type2) (_H1 : (x_827 : x4 < x2) -> (x_826 : x1 = x3 * x2 + x4) -> (_z1453 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_827 x_826) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_mod_gcd. Let $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then the greatest common divisor of $n$ and $mod$ applied to $m$ and $n$ is divisible by the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate divides_mod_gcd : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> divisible (gcd n (mod m n)) (gcd m n)", "predict": "postulate divides_mod_gcd : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> divisible (gcd n (mod m n)) (gcd m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_iso. For all natural numbers $n1$ and $n2$, for all functions $p1$ and $p2$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f1$ and $f2$ from natural numbers to elements of $B$, for all elements $__$ of $iso$ of $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$, $bigop$ applied to $n1$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f1$ applied to $i$ is equal to $bigop$ applied to $n2$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f2$ applied to $i$.\nassistant\n", "label": "Axiom bigop_iso : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall x__ : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), bigop n1 (fun i => p1 i) B nil (aop__o__op B nil op) (fun i => f1 i) = bigop n2 (fun i => p2 i) B nil (aop__o__op B nil op) (fun i => f2 i) .", "predict": "Axiom bigop_iso : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall x__ : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), bigop n1 (fun i => p1 i) B nil (aop__o__op B nil op) (fun i => f1 i) = bigop n2 (fun i => p2 i) B nil (aop__o__op B nil op) (fun i => f2 i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_not_lt. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then $m$ is not less than $n$.\nassistant\n", "label": "axiom le_to_not_lt (n m : Nat) (x__ : n ≤ m) : ¬ (m < n)", "predict": "axiom le_to_not_lt (n m : Nat) (x__ : n ≤ m) : ¬ (m < n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMk_ACop. For all sets $A$, for all elements $nil$ of $A$, for all elements $aop$ of $Aop$ of $A$ and $nil$, for all functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $nil$ and $aop$ and $b$ and $a$, $ACop$ holds for $A$ and $nil$.\nassistant\n", "label": "postulate mk_ACop : (A : Set) -> (nil : A) -> (aop : Aop A nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A nil aop a b) (op A nil aop b a)) -> ACop A nil", "predict": "postulate mk_ACop : (A : Set) -> (nil : A) -> (aop : Aop A nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A nil aop a b) (op A nil aop b a)) -> ACop A nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_mod_to_divides. Let $n$ and $m$ and $q$ be natural numbers. Then if $0$ is less than $q$, then if $mod$ applied to $n$ and $q$ is equal to $mod$ applied to $m$ and $q$, then $q$ is divisible by the difference of $n$ and $m$.\nassistant\n", "label": "eq_mod_to_divides : n : Nat -> m : Nat -> q : Nat -> __ : Lt 0 q -> __1 : Eq (mod n q) (mod m q) -> divisible q (minus n m) .", "predict": "eq_mod_to_divides : n : Nat -> m : Nat -> q : Nat -> __ : Lt 0 q -> __1 : Eq (mod n q) (mod m q) -> divisible q (minus n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_inv_rect_CProp4. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z689$ to propositions, for all functions $_H1$ from elements $_z690$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_394$ and functions $_x_396$ from elements $_z690$ of $Eq$ of $Hterm$ and $x_394$ to elements of $P$ of $x_394$ and elements $_z690$ of $Eq$ of $Hterm$ and the sum of $x_394$ and $1$ to elements of $P$ of the sum of $x_394$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_CProp4 : (Hterm : Nat) -> (P : (_z689 : Nat) -> Prop) -> (_H1 : (_z690 : Eq Hterm 0) -> P 0) -> (_H2 : (x_394 : Nat) -> (_x_396 : (_z690 : Eq Hterm x_394) -> P x_394) -> (_z690 : Eq Hterm (plus x_394 1)) -> P (plus x_394 1)) -> P Hterm", "predict": "postulate nat_inv_rect_CProp4 : (Hterm : Nat) -> (P : (_z689 : Nat) -> Prop) -> (_H1 : (_z690 : Eq Hterm 0) -> P 0) -> (_H2 : (x_394 : Nat) -> (_x_396 : (_z690 : Eq Hterm x_394) -> P x_394) -> (_z690 : Eq Hterm (plus x_394 1)) -> P (plus x_394 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16. Let $n$ and $m$ be natural numbers. Then if $2$ is less than the sum of $m$ and $1$, then for all natural numbers $x32$, the sum of $x32$ and $1$ is equal to the sum of $x32$ and $1$.\nassistant\n", "label": "Axiom let_clause_16 : forall n : nat, forall m : nat, forall lt2 : (2 < m + 1), forall x32 : nat, x32 + 1 = x32 + 1 .", "predict": "Axiom let_clause_16 : forall n : nat, forall m : nat, forall lt2 : (2 < m + 1), forall x32 : nat, x32 + 1 = x32 + 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTo_min. For all natural numbers $i$ and $n$ and $m$, if $i$ is less than or equal to $n$, then if $i$ is less than or equal to $m$, then $i$ is less than or equal to $min$ applied to $n$ and $m$.\nassistant\n", "label": "postulate to_min : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i n) -> (__1 : Leq i m) -> Leq i (min n m)", "predict": "postulate to_min : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i n) -> (__1 : Leq i m) -> Leq i (min n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $__$ and $__1$ be natural numbers. Then the difference of $__$ and $__1$ is a natural number.\nassistant\n", "label": "minus : __ : Nat -> __1 : Nat -> Nat .", "predict": "minus : __ : Nat -> __1 : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_times. Let $p$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $p$, then the logarithm of $p$ and the product of $n$ and $m$ is less than or equal to the sum of the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ and $1$.\nassistant\n", "label": "axiom log_times (p n m : Nat) (x__ : 1 < p) : log p (n * m) ≤ log p n + log p m + 1", "predict": "axiom log_times (p n m : Nat) (x__ : 1 < p) : log p (n * m) ≤ log p n + log p m + 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_prim_n1. For all natural numbers $n$, if $4$ is less than or equal to $n$, then $prim$ applied to the sum of the product of $2$ and $n$ and $1$ is less than or equal to $n$.\nassistant\n", "label": "Axiom le_prim_n1 : forall n : nat, forall x__ : Leq 4 n, Leq (prim (2 * n + 1)) n .", "predict": "Axiom le_prim_n1 : forall n : nat, forall x__ : Leq 4 n, Leq (prim (2 * n + 1)) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nProd. For all sets $A$, for all elements $nil$ of $A$, for all elements $_xxx$ of $Dop$ of $A$ and $nil$, for all elements $_x_969$ and $_x_970$ of $A$, $A$.\nassistant\n", "label": "postulate prod : (A : Set) -> (nil : A) -> (_xxx : Dop A nil) -> (_x_969 : A) -> (_x_970 : A) -> A", "predict": "postulate prod : (A : Set) -> (nil : A) -> (_xxx : Dop A nil) -> (_x_969 : A) -> (_x_970 : A) -> A"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nIter. For all sets $H$, for all functions $__$ from elements of $H$ to elements of $H$, for all natural numbers $__1$, for all elements $__2$ of $H$, $H$.\nassistant\n", "label": "iter : H : Set -> __ : (__ : H -> H) -> __1 : Nat -> __2 : H -> H .", "predict": "iter : H : Set -> __ : (__ : H -> H) -> __1 : Nat -> __2 : H -> H ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLog_div. For all natural numbers $p$ and $n$ and $m$, if $1$ is less than $p$, then if $0$ is less than $m$, then if $m$ is less than or equal to $n$, then the logarithm of $p$ and the quotient of $n$ and $m$ is less than or equal to the difference of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) .", "predict": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__ , __1 \\in N$. Then we can say that $__$ is less than $__1$.\nassistant\n", "label": "Axiom Lt : forall x__ : nat, forall __1 : nat, Prop .", "predict": "Axiom Lt : forall x__ : nat, forall __1 : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_r_ind. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all functions $Q_$ from natural numbers $x_1337$ and elements $x_1336$ of $B$ and elements $x_1335$ of $B$ and elements $_x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$ to propositions, for all functions $_H_lstar_r_O$ from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$, for all functions $_H_lstar_r_S$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1340$ of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $x_1339$ of $_R$ of $b$ and $b2$ and elements $_x_1342$ of $Q_$ of $l$ and $b1$ and $b$ and $x_1340$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $x_1340$ and $b2$ and $x_1339$, for all natural numbers $x_1337$, for all elements $x_1336$ and $x_1335$ of $B$, for all elements $x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$, $Q_$ holds for $x_1337$ and $x_1336$ and $x_1335$ and $x_1338$.\nassistant\n", "label": "lstar_r_ind : B : Set -> _R : relation B -> Q_ : (x_1337 : Nat -> x_1336 : B -> x_1335 : B -> _x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Prop) -> _H_lstar_r_O : (b : B -> Q_ 0 b b (lstar_r_O B _R b)) -> _H_lstar_r_S : (l : Nat -> b1 : B -> b : B -> x_1340 : lstar_r B _R l b1 b -> b2 : B -> x_1339 : _R b b2 -> _x_1342 : Q_ l b1 b x_1340 -> Q_ (plus l (nd 1)) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)) -> x_1337 : Nat -> x_1336 : B -> x_1335 : B -> x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "lstar_r_ind : B : Set -> _R : relation B -> Q_ : (x_1337 : Nat -> x_1336 : B -> x_1335 : B -> _x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Prop) -> _H_lstar_r_O : (b : B -> Q_ 0 b b (lstar_r_O B _R b)) -> _H_lstar_r_S : (l : Nat -> b1 : B -> b : B -> x_1340 : lstar_r B _R l b1 b -> b2 : B -> x_1339 : _R b b2 -> _x_1342 : Q_ l b1 b x_1340 -> Q_ (plus l (nd 1)) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)) -> x_1337 : Nat -> x_1336 : B -> x_1335 : B -> x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Q_ x_1337 x_1336 x_1335 x_1338 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPlus_to_minus. For all natural numbers $n$ and $m$ and $p$, if $n$ is equal to the sum of $m$ and $p$, then the difference of $n$ and $m$ is equal to $p$.\nassistant\n", "label": "plus_to_minus : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Eq (minus n m) p .", "predict": "plus_to_minus : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Eq (minus n m) p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_ind. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "Axiom Dop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_943 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_943 : Dop A _nil, Q_ x_943 .", "predict": "Axiom Dop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_943 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_943 : Dop A _nil, Q_ x_943 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrime_to_lt_O. Let $p$ be a natural number. Then if $p$ is prime, then $0$ is less than $p$.\nassistant\n", "label": "Axiom prime_to_lt_O : forall p : nat, forall x__ : prime p, 0 < p .", "predict": "Axiom prime_to_lt_O : forall p : nat, forall x__ : prime p, 0 < p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_plus_to_le. Let $n$ and $m$ and $p$ be natural numbers. Then if $n$ is equal to the sum of $m$ and $p$, then $m$ is less than or equal to $n$.\nassistant\n", "label": "postulate eq_plus_to_le : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Eq n (plus m p)) -> Leq m n", "predict": "postulate eq_plus_to_le : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Eq n (plus m p)) -> Leq m n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFact_pi_p. Let $n$ be a natural number. Then the factorial of $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$.\nassistant\n", "label": "postulate fact_pi_p : (n : Nat) -> Eq (factorial n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (div n (pow p (plus i 1))))))", "predict": "postulate fact_pi_p : (n : Nat) -> Eq (factorial n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (div n (pow p (plus i 1))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_squareS_exp. For all natural numbers $n$, if $5$ is less than $n$, then the exponentiation of the sum of $n$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $n$.\nassistant\n", "label": "postulate le_squareS_exp : (n : Nat) -> (_ : Lt 5 n) -> Leq (pow (plus n 1) 2) (pow 2 n)", "predict": "postulate le_squareS_exp : (n : Nat) -> (_ : Lt 5 n) -> Leq (pow (plus n 1) 2) (pow 2 n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_to_lt_to_lt. For all natural numbers $n$ and $m$ and $p$, if $n$ is less than or equal to $m$, then if $m$ is less than $p$, then $n$ is less than $p$.\nassistant\n", "label": "postulate le_to_lt_to_lt : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq n m) -> (__1 : Lt m p) -> Lt n p", "predict": "postulate le_to_lt_to_lt : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq n m) -> (__1 : Lt m p) -> Lt n p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_p_ord_inv. Let $p$ and $m$ and $x$ be natural numbers. Then if $ord$ applied to $x$ and $p$ is less than $m$, then the quotient of $p_ord_inv$ applied to $p$ and $m$ and $x$ and $m$ is equal to $ord_rem$ applied to $x$ and $p$.\nassistant\n", "label": "Axiom div_p_ord_inv : forall p : nat, forall m : nat, forall x : nat, forall x__ : (ord x p < m), p_ord_inv p m x / m = ord_rem x p .", "predict": "Axiom div_p_ord_inv : forall p : nat, forall m : nat, forall x : nat, forall x__ : (ord x p < m), p_ord_inv p m x / m = ord_rem x p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_pred_pred. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then if $0$ is less than $m$, then the difference of $pred$ applied to $n$ and $pred$ applied to $m$ is equal to the difference of $n$ and $m$.\nassistant\n", "label": "minus_pred_pred : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : Lt 0 m -> Eq (minus (pred n) (pred m)) (minus n m) .", "predict": "minus_pred_pred : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : Lt 0 m -> Eq (minus (pred n) (pred m)) (minus n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_1_max_prime. Let $n$ be a natural number. Then if $1$ is less than $n$, then $1$ is less than $max$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $andb$ applied to $primeb$ applied to $i$ and $dividesb$ applied to $i$ and $n$.\nassistant\n", "label": "Axiom lt_1_max_prime : forall n : nat, forall x__ : (1 < n), 1 < max (n + 1) (fun i => andb (primeb i) (dividesb i n)) .", "predict": "Axiom lt_1_max_prime : forall n : nat, forall x__ : (1 < n), 1 < max (n + 1) (fun i => andb (primeb i) (dividesb i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExample7. $primeb$ applied to $17$ is equal to $true$.\nassistant\n", "label": "example7 : Eq (primeb (nn 1 (nd 7))) true .", "predict": "example7 : Eq (primeb (nn 1 (nd 7))) true ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_times_div_div_times. For all natural numbers $a$ and $n$ and $m$, if $0$ is less than $m$, then the product of $a$ and the quotient of $n$ and $m$ is less than or equal to the quotient of the product of $a$ and $n$ and $m$.\nassistant\n", "label": "axiom le_times_div_div_times (a n m : Nat) (x__ : 0 < m) : a * (n / m) ≤ a * n / m", "predict": "axiom le_times_div_div_times (a n m : Nat) (x__ : 0 < m) : a * (n / m) ≤ a * n / m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_CProp0. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_885$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_885$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_885$.\nassistant\n", "label": "axiom Aop_rect_CProp0 (A : Set) (_nil : A) (Q_ : (_x_885 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_885 : Aop A _nil) : Q_ x_885", "predict": "axiom Aop_rect_CProp0 (A : Set) (_nil : A) (Q_ : (_x_885 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_885 : Aop A _nil) : Q_ x_885"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_sigma_l. Let $n$ and $a$ be natural numbers. Then for all functions $p$ from natural numbers to booleans, for all functions $f$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $a$ and $f$ applied to $i$ is equal to the exponentiation of $a$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow a (f i))) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> f i)))", "predict": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow a (f i))) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> f i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_ind_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "Dop_ind_body : A : Set -> _nil : A -> Q_ : (_x_943 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_943 : Dop A _nil -> Q_ x_943 .", "predict": "Dop_ind_body : A : Set -> _nil : A -> Q_ : (_x_943 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_943 : Dop A _nil -> Q_ x_943 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_inv_ind. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1500$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1501$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Aop_inv_ind (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1500 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1501 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm", "predict": "axiom Aop_inv_ind (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1500 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1501 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp0_body. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_859$ of $Lt$ of $_r$ and $_m$ and elements $x_858$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_859$ and $x_858$, for all elements $x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_857$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_857 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_859 : _r < _m) -> (x_858 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)), forall x_857 : div_mod_spec _n _m _q _r, Q_ x_857 .", "predict": "Axiom div_mod_spec_rect_CProp0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_857 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_859 : _r < _m) -> (x_858 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)), forall x_857 : div_mod_spec _n _m _q _r, Q_ x_857 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrime_smallest_factor_n. For all natural numbers $n$, if $1$ is less than $n$, then $smallest_factor$ applied to $n$ is prime.\nassistant\n", "label": "prime_smallest_factor_n : n : Nat -> __ : Lt (nd 1) n -> prime (smallest_factor n) .", "predict": "prime_smallest_factor_n : n : Nat -> __ : Lt (nd 1) n -> prime (smallest_factor n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_S_S_to_le. Let $n$ and $m$ be natural numbers. Then if the sum of $n$ and $1$ is less than or equal to the sum of $m$ and $1$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "Axiom le_S_S_to_le : forall n : nat, forall m : nat, forall x__ : Leq (n + 1) (m + 1), Leq n m .", "predict": "Axiom le_S_S_to_le : forall n : nat, forall m : nat, forall x__ : Leq (n + 1) (m + 1), Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_O_nth_prime_n. For all natural numbers $n$, $0$ is less than $nth_prime$ applied to $n$.\nassistant\n", "label": "lt_O_nth_prime_n : n : Nat -> Lt 0 (nth_prime n) .", "predict": "lt_O_nth_prime_n : n : Nat -> Lt 0 (nth_prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_inv_rect_Type2. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1650$ of $range$ of $x1$ to elements of $Type2$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1651$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate range_inv_rect_Type2 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1650 : range x1) -> Type2) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1651 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm", "predict": "postulate range_inv_rect_Type2 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1650 : range x1) -> Type2) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1651 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_times. Let $n1$ and $n2$ and $m1$ and $m2$ be natural numbers. Then if $n1$ is less than or equal to $n2$, then if $m1$ is less than or equal to $m2$, then the product of $n1$ and $m1$ is less than or equal to the product of $n2$ and $m2$.\nassistant\n", "label": "le_times : n1 : Nat -> n2 : Nat -> m1 : Nat -> m2 : Nat -> __ : Leq n1 n2 -> __1 : Leq m1 m2 -> Leq (times n1 m1) (times n2 m2) .", "predict": "le_times : n1 : Nat -> n2 : Nat -> m1 : Nat -> m2 : Nat -> __ : Leq n1 n2 -> __1 : Leq m1 m2 -> Leq (times n1 m1) (times n2 m2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax. For all natural numbers $__$ and $__1$, $Nat$.\nassistant\n", "label": "Axiom max : forall x__ : nat, forall __1 : nat, nat .", "predict": "Axiom max : forall x__ : nat, forall __1 : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_length_to_mem. Let $n$ be a natural number. Then for all lists $l$ of natural numbers, if $length$ applied to $Nat$ and $l$ is equal to the sum of $n$ and $1$, then for all elements $__1$ of $unique$ of $Nat$ and $l$, for all functions $__2$ from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Leq$ of $x$ and $n$, $mem$ holds for $Nat$ and $n$ and $l$.\nassistant\n", "label": "axiom eq_length_to_mem (n : Nat) (l : list Nat) (x__ : length Nat l = n + 1) (__1 : unique Nat l) (__2 : (x : Nat) -> (__2 : mem Nat x l) -> x ≤ n) : mem Nat n l", "predict": "axiom eq_length_to_mem (n : Nat) (l : list Nat) (x__ : length Nat l = n + 1) (__1 : unique Nat l) (__2 : (x : Nat) -> (__2 : mem Nat x l) -> x ≤ n) : mem Nat n l"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_aux_false. Let $p$ and $n$ and $m$ and $a$ be natural numbers. Then if $mod$ applied to $n$ and $m$ is equal to the sum of $a$ and $1$, then $p_ord_aux$ applied to $p$ and $n$ and $m$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $0$ and $n$.\nassistant\n", "label": "axiom p_ord_aux_false (p n m a : Nat) (x__ : mod n m = a + 1) : p_ord_aux p n m = mk_Prod Nat Nat 0 n", "predict": "axiom p_ord_aux_false (p n m a : Nat) (x__ : mod n m = a + 1) : p_ord_aux p n m = mk_Prod Nat Nat 0 n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_le_times_to_lt_S_to_div. For all natural numbers $a$ and $c$ and $b$, if $0$ is less than $b$, then if the product of $b$ and $c$ is less than or equal to $a$, then if $a$ is less than the product of $b$ and the sum of $c$ and $1$, then the quotient of $a$ and $b$ is equal to $c$.\nassistant\n", "label": "lt_to_le_times_to_lt_S_to_div : a : Nat -> c : Nat -> b : Nat -> __ : Lt 0 b -> __1 : Leq (times b c) a -> __2 : Lt a (times b (plus c (nd 1))) -> Eq (div a b) c .", "predict": "lt_to_le_times_to_lt_S_to_div : a : Nat -> c : Nat -> b : Nat -> __ : Lt 0 b -> __1 : Leq (times b c) a -> __2 : Lt a (times b (plus c (nd 1))) -> Eq (div a b) c ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_inv_rect_CProp0. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z713$ to propositions, for all functions $_H1$ from elements $_z714$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_414$ and functions $_x_416$ from elements $_z714$ of $Eq$ of $Hterm$ and $x_414$ to elements of $P$ of $x_414$ and elements $_z714$ of $Eq$ of $Hterm$ and the sum of $x_414$ and $1$ to elements of $P$ of the sum of $x_414$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom nat_inv_rect_CProp0 : forall Hterm : nat, forall P : ((_z713 : nat) -> Prop), forall _H1 : ((_z714 : Hterm = 0) -> P 0), forall _H2 : ((x_414 : nat) -> (_x_416 : (_z714 : Hterm = x_414) -> P x_414) -> (_z714 : Hterm = x_414 + 1) -> P (x_414 + 1)), P Hterm .", "predict": "Axiom nat_inv_rect_CProp0 : forall Hterm : nat, forall P : ((_z713 : nat) -> Prop), forall _H1 : ((_z714 : Hterm = 0) -> P 0), forall _H2 : ((x_414 : nat) -> (_x_416 : (_z714 : Hterm = x_414) -> P x_414) -> (_z714 : Hterm = x_414 + 1) -> P (x_414 + 1)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1544. For all natural numbers $p$ and $q$, for all functions $Hind$ from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$, for all natural numbers $m$ and $n$, if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to the sum of $q$ and $1$, then if $n$ is not divisible by $m$, then for all natural numbers $a$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then if the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $n$ and $b$ is equal to $gcd_aux$", "label": "Axiom let_clause_1544 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (a * mod m n - b * n = gcd_aux q n (mod m n)), a * mod m n - n * b = gcd_aux q n (mod m n) .", "predict": "Axiom let_clause_1544 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (a * mod m n - b * n = gcd_aux q n (mod m n)), a * mod m n - n * b = gcd_aux q n (mod m n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_plus_m_m. For all natural numbers $n$ and $m$, $n$ is equal to the difference of the sum of $n$ and $m$ and $m$.\nassistant\n", "label": "axiom minus_plus_m_m (n m : Nat) : n = n + m - m", "predict": "axiom minus_plus_m_m (n m : Nat) : n = n + m - m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDecidable_or. Let $P$ and $Q$ be propositions. Then for all elements $__$ of $decidable$ of $P$, for all elements $__1$ of $decidable$ of $Q$, $decidable$ holds for the disjunction of $P$ and $Q$.\nassistant\n", "label": "postulate decidable_or : (P : Prop) -> (Q : Prop) -> (_ : decidable P) -> (__1 : decidable Q) -> decidable (or P Q)", "predict": "postulate decidable_or : (P : Prop) -> (Q : Prop) -> (_ : decidable P) -> (__1 : decidable Q) -> decidable (or P Q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_minus_m_m. For all natural numbers $n$ and $m$, $n$ is less than or equal to the sum of the difference of $n$ and $m$ and $m$.\nassistant\n", "label": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m", "predict": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_n_fact_n. Let $n$ be a natural number. Then if $2$ is less than $n$, then $n$ is less than the factorial of $n$.\nassistant\n", "label": "lt_n_fact_n : n : Nat -> __ : Lt (nd 2) n -> Lt n (factorial n) .", "predict": "lt_n_fact_n : n : Nat -> __ : Lt (nd 2) n -> Lt n (factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1545. For all natural numbers $m$ and $n$, if the greatest common divisor of $m$ and $n$ is equal to $0$, then if $0$ is divisible by $n$, then for all natural numbers $q1$, if $n$ is equal to the product of $0$ and $q1$, then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m$ is equal to the product of $0$ and $q2$, then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_1545 (m n : Nat) (H : gcd m n = 0) (_clearme : divisible 0 n) (q1 : Nat) (H1 : n = 0 * q1) (_clearme0 : divisible 0 m) (q2 : Nat) (H2 : m = 0 * q2) : m = 0", "predict": "axiom let_clause_1545 (m n : Nat) (H : gcd m n = 0) (_clearme : divisible 0 n) (q1 : Nat) (H1 : n = 0 * q1) (_clearme0 : divisible 0 m) (q2 : Nat) (H2 : m = 0 * q2) : m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPsi'. Let $__$ be a natural number. Then $Nat$.\nassistant\n", "label": "Axiom Psi' : forall x__ : nat, nat .", "predict": "Axiom Psi' : forall x__ : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDpi1__o__aop__o__op. For all sets $x0$, for all elements $x1$ of $x0$, for all functions $x2$ from elements of $ACop$ of $x0$ and $x1$ to sets, for all elements $x3$ of $DPair$ of $ACop$ applied to $x0$ and $x1$ and $x2$, for all elements $_x_887$ and $_x_888$ of $x0$, $x0$.\nassistant\n", "label": "postulate dpi1__o__aop__o__op : (x0 : Set) -> (x1 : x0) -> (x2 : (_ : ACop x0 x1) -> Set) -> (x3 : DPair (ACop x0 x1) x2) -> (_x_887 : x0) -> (_x_888 : x0) -> x0", "predict": "postulate dpi1__o__aop__o__op : (x0 : Set) -> (x1 : x0) -> (x2 : (_ : ACop x0 x1) -> Set) -> (x3 : DPair (ACop x0 x1) x2) -> (_x_887 : x0) -> (_x_888 : x0) -> x0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_sqrt_log_n. Let $n$ and $b$ be natural numbers. Then if $2$ is less than $b$, then the product of the square root of $n$ and the logarithm of $b$ and $n$ is less than or equal to $n$.\nassistant\n", "label": "postulate le_sqrt_log_n : (n : Nat) -> (b : Nat) -> (_ : Lt 2 b) -> Leq (times (sqrt n) (log b n)) n", "predict": "postulate le_sqrt_log_n : (n : Nat) -> (b : Nat) -> (_ : Lt 2 b) -> Leq (times (sqrt n) (log b n)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10331. Let $n$ be a natural number. Then if the exponentiation of $2$ and $8$ is less than or equal to $n$, then for all natural numbers $m$, if $3$ is less than or equal to $m$, then if the sum of the logarithm of $2$ and $m$ and $2$ is less than or equal to $m$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall len : Leq (pow 2 8) n, forall m : nat, forall lt2m : Leq 3 m, forall Hind : Leq (log 2 m + 2) m, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, forall len : Leq (pow 2 8) n, forall m : nat, forall lt2m : Leq 3 m, forall Hind : Leq (log 2 m + 2) m, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_div_S. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then $n$ is less than the product of the sum of the quotient of $n$ and $m$ and $1$ and $m$.\nassistant\n", "label": "lt_div_S : n : Nat -> m : Nat -> __ : Lt 0 m -> Lt n (times (plus (div n m) (nd 1)) m) .", "predict": "lt_div_S : n : Nat -> m : Nat -> __ : Lt 0 m -> Lt n (times (plus (div n m) (nd 1)) m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nStart_lprim. Let $n$ and $m$ and $a$ be natural numbers. Then for all lists $acc$ of natural numbers, $option_hd$ applied to $Nat$ and $lprim$ applied to $n$ and $m$ and $cons$ applied to $Nat$ and $a$ and $acc$ is equal to $Some$ applied to $Nat$ and $a$.\nassistant\n", "label": "postulate start_lprim : (n : Nat) -> (m : Nat) -> (a : Nat) -> (acc : list Nat) -> Eq (option_hd Nat (lprim n m (cons Nat a acc))) (Some Nat a)", "predict": "postulate start_lprim : (n : Nat) -> (m : Nat) -> (a : Nat) -> (acc : list Nat) -> Eq (option_hd Nat (lprim n m (cons Nat a acc))) (Some Nat a)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTransitive_congruent. Let $p$ be a natural number. Then $transitive$ holds for $Nat$ and the function that maps $n$ and $m$ to $congruent$ applied to $n$ and $m$ and $p$.\nassistant\n", "label": "axiom transitive_congruent (p : Nat) : transitive Nat (λ n => λ m => congruent n m p)", "predict": "axiom transitive_congruent (p : Nat) : transitive Nat (λ n => λ m => congruent n m p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nReflexive_divides. $reflexive$ holds for $Nat$ and $divisible$.\nassistant\n", "label": "Axiom reflexive_divides : reflexive nat divisible .", "predict": "Axiom reflexive_divides : reflexive nat divisible ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBc. For all natural numbers $_n$ and $_k$, $Nat$.\nassistant\n", "label": "bc : _n : Nat -> _k : Nat -> Nat .", "predict": "bc : _n : Nat -> _k : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_previous_prime. Let $__$ and $p$ be natural numbers. Then $Nat$.\nassistant\n", "label": "Axiom let_previous_prime : forall x__ : nat, forall p : nat, nat .", "predict": "Axiom let_previous_prime : forall x__ : nat, forall p : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_4_to_le_Psi_exp. For all natural numbers $n$, if $4$ is less than $n$, then $Psi$ applied to the product of $2$ and $n$ is less than or equal to the product of the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $2$ and $Psi$ applied to $n$.\nassistant\n", "label": "postulate lt_4_to_le_Psi_exp : (n : Nat) -> (_ : Lt 4 n) -> Leq (Psi (times 2 n)) (times (pow 2 (minus (times 2 n) 2)) (Psi n))", "predict": "postulate lt_4_to_le_Psi_exp : (n : Nat) -> (_ : Lt 4 n) -> Leq (Psi (times 2 n)) (times (pow 2 (minus (times 2 n) 2)) (Psi n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInjective_times_r. For all natural numbers $n$, if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $n$ and $m$.\nassistant\n", "label": "Axiom injective_times_r : forall n : nat, forall x__ : (0 < n), injective nat nat (fun m => n * m) .", "predict": "Axiom injective_times_r : forall n : nat, forall x__ : (0 < n), injective nat nat (fun m => n * m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $__ , __1 \\in N$. Then the quotient of $__$ and $__1$ is a natural number.\nassistant\n", "label": "div : __ : Nat -> __1 : Nat -> Nat .", "predict": "div : __ : Nat -> __1 : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_CProp5. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_931$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_931$ of $range$ of $_A$, $Q_$ holds for $x_931$.\nassistant\n", "label": "Axiom range_rect_CProp5 : forall _A : Set, forall Q_ : ((_x_931 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_931 : range _A, Q_ x_931 .", "predict": "Axiom range_rect_CProp5 : forall _A : Set, forall Q_ : ((_x_931 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_931 : range _A, Q_ x_931 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_lt_to_le. For all natural numbers $n$ and $m$, if $n$ is not less than $m$, then $m$ is less than or equal to $n$.\nassistant\n", "label": "Axiom not_lt_to_le : forall n : nat, forall m : nat, forall x__ : (~ (n < m)), Leq m n .", "predict": "Axiom not_lt_to_le : forall n : nat, forall m : nat, forall x__ : (~ (n < m)), Leq m n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_exp_to_le. Let $b$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $b$, then if the exponentiation of $b$ and $n$ is less than or equal to the exponentiation of $b$ and $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "le_exp_to_le : b : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) b -> __1 : Leq (pow b n) (pow b m) -> Leq n m .", "predict": "le_exp_to_le : b : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) b -> __1 : Leq (pow b n) (pow b m) -> Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_16. Let $n$ and $m$ be natural numbers. Then if $2$ is less than the sum of $m$ and $1$, then for all natural numbers $x32$, the sum of $x32$ and $1$ is equal to the sum of $x32$ and $1$.\nassistant\n", "label": "let_clause_16 : n : Nat -> m : Nat -> lt2 : Lt (nd 2) (plus m (nd 1)) -> x32 : Nat -> Eq (plus x32 (nd 1)) (plus x32 (nd 1)) .", "predict": "let_clause_16 : n : Nat -> m : Nat -> lt2 : Lt (nd 2) (plus m (nd 1)) -> x32 : Nat -> Eq (plus x32 (nd 1)) (plus x32 (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_aux_body. Let $_p$ and $_m$ and $_n$ be natural numbers. Then $Nat$.\nassistant\n", "label": "mod_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat .", "predict": "mod_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_sum. Let $k1$ and $k2$ be natural numbers. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k1$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to the sum of $k1$ and $k2$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $bool$ and $p1$ applied to the difference of $i$ and $k2$ and $p2$ applied to $i$ and $leb$ applied to $k2$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $B$ and $f$ applied to the difference of $i$ and $k2$ and $g$ applied to $i$ and $leb$ applied to $k2$ and $i$.\nassistant\n", "label": "Axiom bigop_sum : forall k1 : nat, forall k2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), op B nil op (bigop k1 (fun i => p1 i) B nil (op B nil op) (fun i => f i)) (bigop k2 (fun i => p2 i) B nil (op B nil op) (fun i => g i)) = bigop (k1 + k2) (fun i => match_bool Set (fun x__ => bool) (p1 (i - k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (fun i => match_bool Set (fun x__ => B) (f (i - k2)) (g i) (leb k2 i)) .", "predict": "Axiom bigop_sum : forall k1 : nat, forall k2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), op B nil op (bigop k1 (fun i => p1 i) B nil (op B nil op) (fun i => f i)) (bigop k2 (fun i => p2 i) B nil (op B nil op) (fun i => g i)) = bigop (k1 + k2) (fun i => match_bool Set (fun x__ => bool) (p1 (i - k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (fun i => match_bool Set (fun x__ => B) (f (i - k2)) (g i) (leb k2 i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_fact_10. $(2 \\times 5)! \\leq 2 ^ (2 \\times 5 - 2)5 ! 5 !$.\nassistant\n", "label": "axiom le_fact_10 : factorial (2 * 5) ≤ pow 2 (2 * 5 - 2) * factorial 5 * factorial 5", "predict": "axiom le_fact_10 : (2 * 5)! ≤ 2 ^ (2 * 5 - 2) * 5! * 5 !"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_to_plus. Let $n$ and $m$ and $p$ be natural numbers. Then if $m$ is less than or equal to $n$, then if the difference of $n$ and $m$ is equal to $p$, then $n$ is equal to the sum of $m$ and $p$.\nassistant\n", "label": "axiom minus_to_plus (n m p : Nat) (x__ : m ≤ n) (__1 : n - m = p) : n = m + p", "predict": "axiom minus_to_plus (n m p : Nat) (x__ : m ≤ n) (__1 : n - m = p) : n = m + p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__ \\in N$. Then we can say that $__$ is prime.\nassistant\n", "label": "axiom prime (x__ : Nat) : Prop", "predict": "axiom prime (x__ : Nat) : Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__$ and $__1$ be natural numbers. Then we can say that $__$ is greater than or equal to $__1$.\nassistant\n", "label": "postulate Geq : (_ : Nat) -> (__1 : Nat) -> Prop", "predict": "postulate Geq : (_ : Nat) -> (__1 : Nat) -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBigop. For all natural numbers $__$, for all functions $__1$ from natural numbers $__1$ to booleans, for all sets $H$, for all elements $__2$ of $H$, for all functions $__3$ from elements $__3$ of $H$ and elements $__4$ of $H$ to elements of $H$, for all functions $__4$ from natural numbers $__4$ to elements of $H$, $H$.\nassistant\n", "label": "axiom bigop (x__ : Nat) (__1 : (__1 : Nat) -> bool) (H : Set) (__2 : H) (__3 : (__3 : H) -> (__4 : H) -> H) (__4 : (__4 : Nat) -> H) : H", "predict": "axiom bigop (x__ : Nat) (__1 : (__1 : Nat) -> bool) (H : Set) (__2 : H) (__3 : (__3 : H) -> (__4 : H) -> H) (__4 : (__4 : Nat) -> H) : H"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nChecker_abl. Let $a$ and $b$ be natural numbers. Then for all lists $l$ of natural numbers, if $checker$ applied to $cons$ applied to $Nat$ and $a$ and $cons$ applied to $Nat$ and $b$ and $l$ is equal to $true$, then $a$ is less than $b$, $b$ is less than or equal to the product of $2$ and $a$ and $checker$ applied to $cons$ applied to $Nat$ and $b$ and $l$ is equal to $true$.\nassistant\n", "label": "checker_abl : a : Nat -> b : Nat -> l : list Nat -> __ : Eq (checker (cons Nat a (cons Nat b l))) true -> and (and (Lt a b) (Leq b (times (nd 2) a))) (Eq (checker (cons Nat b l)) true) .", "predict": "checker_abl : a : Nat -> b : Nat -> l : list Nat -> __ : Eq (checker (cons Nat a (cons Nat b l))) true -> and (and (Lt a b) (Leq b (times (nd 2) a))) (Eq (checker (cons Nat b l)) true) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_CProp0. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "postulate range_rect_CProp0 : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939", "predict": "postulate range_rect_CProp0 : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAntisymmetric_divides. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $m$ is divisible by $n$, then $n$ is equal to $m$.\nassistant\n", "label": "axiom antisymmetric_divides (n m : Nat) (x__ : divisible n m) (__1 : divisible m n) : n = m", "predict": "axiom antisymmetric_divides (n m : Nat) (x__ : divisible n m) (__1 : divisible m n) : n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTheta_pred. Let $n$ be a natural number. Then if $1$ is less than $n$, then $theta$ applied to the product of $2$ and $n$ is equal to $theta$ applied to $pred$ applied to the product of $2$ and $n$.\nassistant\n", "label": "axiom theta_pred (n : Nat) (x__ : 1 < n) : theta (2 * n) = theta (pred (2 * n))", "predict": "axiom theta_pred (n : Nat) (x__ : 1 < n) : theta (2 * n) = theta (pred (2 * n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_Type4_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$, for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_815$ and $x_814$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type4_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) -> (_H_div_mod_spec_intro : (x_815 : Lt _r _m) -> (x_814 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> (x_813 : div_mod_spec _n _m _q _r) -> Q_ x_813", "predict": "postulate div_mod_spec_rect_Type4_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) -> (_H_div_mod_spec_intro : (x_815 : Lt _r _m) -> (x_814 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> (x_813 : div_mod_spec _n _m _q _r) -> Q_ x_813"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nChecker_spec. Let $tl$ be a list of natural numbers. Then for all natural numbers $a$, for all lists $l$ of natural numbers, if $checker$ applied to $l$ is equal to $true$, then if $l$ is equal to $cons$ applied to $Nat$ and $a$ and $tl$, then for all natural numbers $p$, for all elements $__2$ of $mem$ of $Nat$ and $p$ and $tl$, $ex$ holds for $Nat$ and the function that maps $pp$ to the conjunction of the conjunction of $mem$ applied to $Nat$ and $pp$ and $l$ and $Lt$ applied to $pp$ and $p$ and $Leq$ applied to $p$ and the product of $2$ and $pp$.\nassistant\n", "label": "postulate checker_spec : (tl : list Nat) -> (a : Nat) -> (l : list Nat) -> (_ : Eq (checker l) true) -> (__1 : Eq l (cons Nat a tl)) -> (p : Nat) -> (__2 : mem Nat p tl) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))", "predict": "postulate checker_spec : (tl : list Nat) -> (a : Nat) -> (l : list Nat) -> (_ : Eq (checker l) true) -> (__1 : Eq l (cons Nat a tl)) -> (p : Nat) -> (__2 : mem Nat p tl) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_inv_rect_Type0. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1662$ of $range$ of $x1$ to sets, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1663$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom range_inv_rect_Type0 : forall x1 : Set, forall Hterm : range x1, forall P : ((_z1662 : range x1) -> Set), forall _H1 : ((_enum : (x__ : nat) -> x1) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> (_z1663 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)), P Hterm .", "predict": "Axiom range_inv_rect_Type0 : forall x1 : Set, forall Hterm : range x1, forall P : ((_z1662 : range x1) -> Set), forall _H1 : ((_enum : (x__ : nat) -> x1) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> (_z1663 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_times_r. For all natural numbers $n$, if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $n$ and $m$.\nassistant\n", "label": "axiom injective_times_r (n : Nat) (x__ : 0 < n) : injective Nat Nat (λ m => n * m)", "predict": "axiom injective_times_r (n : Nat) (x__ : 0 < n) : injective Nat Nat (λ m => n * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1600. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_exp_prim4l. For all natural numbers $n$, if $0$ is less than $n$, then the exponentiation of $2$ and the sum of the product of $4$ and $n$ and $1$ is less than or equal to the exponentiation of the product of $4$ and $n$ and the sum of $prim$ applied to the product of $4$ and $n$ and $1$.\nassistant\n", "label": "le_exp_prim4l : n : Nat -> __ : Lt 0 n -> Leq (pow (nd 2) (plus (times (nd 4) n) (nd 1))) (pow (times (nd 4) n) (plus (prim (times (nd 4) n)) (nd 1))) .", "predict": "le_exp_prim4l : n : Nat -> __ : Lt 0 n -> Leq (pow (nd 2) (plus (times (nd 4) n) (nd 1))) (pow (times (nd 4) n) (plus (prim (times (nd 4) n)) (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_CProp5_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_959$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_959$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_959$.\nassistant\n", "label": "postulate Dop_rect_CProp5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_959 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_959 : Dop A _nil) -> Q_ x_959", "predict": "postulate Dop_rect_CProp5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_959 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_959 : Dop A _nil) -> Q_ x_959"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_op. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $aop__o__op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $aop__o__op$ applied to $B$ and $nil$ and $op$ and $f$ applied to $i$ and $g$ applied to $i$.\nassistant\n", "label": "Axiom bigop_op : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), aop__o__op B nil op (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => g i)) = bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => aop__o__op B nil op (f i) (g i)) .", "predict": "Axiom bigop_op : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), aop__o__op B nil op (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => g i)) = bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => aop__o__op B nil op (f i) (g i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_minus_gcd_aux. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to $p$, then $ex$ holds for $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $p$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $p$ and $m$ and $n$.\nassistant\n", "label": "axiom eq_minus_gcd_aux (p m n : Nat) (x__ : 0 < n) (__1 : n ≤ m) (__2 : n ≤ p) : ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux p m n ∨ b * m - a * n = gcd_aux p m n))", "predict": "axiom eq_minus_gcd_aux (p m n : Nat) (x__ : 0 < n) (__1 : n ≤ m) (__2 : n ≤ p) : ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux p m n ∨ b * m - a * n = gcd_aux p m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_to_not_zero. For all natural numbers $n$ and $m$, if $n$ is less than $m$, then $not_zero$ holds for $m$.\nassistant\n", "label": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not_zero m", "predict": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not_zero m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nGcd_O_l. For all natural numbers $m$, the greatest common divisor of $0$ and $m$ is equal to $m$.\nassistant\n", "label": "axiom gcd_O_l (m : Nat) : gcd 0 m = m", "predict": "axiom gcd_O_l (m : Nat) : gcd 0 m = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_S_to_lt. For all natural numbers $n$ and $m$, if the sum of $n$ and $1$ is less than $m$, then $n$ is less than $m$.\nassistant\n", "label": "postulate lt_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) m) -> Lt n m", "predict": "postulate lt_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) m) -> Lt n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_S_S_to_lt. For all natural numbers $n$ and $m$, if the sum of $n$ and $1$ is less than the sum of $m$ and $1$, then $n$ is less than $m$.\nassistant\n", "label": "postulate lt_S_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) (plus m 1)) -> Lt n m", "predict": "postulate lt_S_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) (plus m 1)) -> Lt n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_fact. Let $n$ and $i$ be natural numbers. Then if $0$ is less than $i$, then if $i$ is less than or equal to $n$, then $i$ is divisible by the factorial of $n$.\nassistant\n", "label": "divides_fact : n : Nat -> i : Nat -> __ : Lt 0 i -> __1 : Leq i n -> divisible i (factorial n) .", "predict": "divides_fact : n : Nat -> i : Nat -> __ : Lt 0 i -> __1 : Leq i n -> divisible i (factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTranspose. For all natural numbers $__$ and $__1$ and $__2$, $Nat$.\nassistant\n", "label": "postulate transpose : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Nat", "predict": "postulate transpose : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMod_mod. Let $n$ and $p$ be natural numbers. Then if $0$ is less than $p$, then $mod$ applied to $n$ and $p$ is equal to $mod$ applied to $mod$ applied to $n$ and $p$ and $p$.\nassistant\n", "label": "postulate mod_mod : (n : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> Eq (mod n p) (mod (mod n p) p)", "predict": "postulate mod_mod : (n : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> Eq (mod n p) (mod (mod n p) p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPlus_n_O. Let $n$ be a natural number. Then $n$ is equal to the sum of $n$ and $0$.\nassistant\n", "label": "Axiom plus_n_O : forall n : nat, n = n + 0 .", "predict": "Axiom plus_n_O : forall n : nat, n = n + 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDividesb_true_to_divides. Let $n$ and $m$ be natural numbers. Then if $dividesb$ applied to $n$ and $m$ is equal to $true$, then $n$ is divisible by $m$.\nassistant\n", "label": "axiom dividesb_true_to_divides (n m : Nat) (x__ : dividesb n m = true) : divisible n m", "predict": "axiom dividesb_true_to_divides (n m : Nat) (x__ : dividesb n m = true) : divisible n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_O_bc. Let $n$ and $m$ be natural numbers. Then if $m$ is less than or equal to $n$, then $0$ is less than $bc$ applied to $n$ and $m$.\nassistant\n", "label": "lt_O_bc : n : Nat -> m : Nat -> __ : Leq m n -> Lt 0 (bc n m) .", "predict": "lt_O_bc : n : Nat -> m : Nat -> __ : Leq m n -> Lt 0 (bc n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp2. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_851$ of $Lt$ of $_r$ and $_m$ and elements $x_850$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_851$ and $x_850$, for all elements $x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_849$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp2 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_849 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_851 : _r < _m) -> (x_850 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)), forall x_849 : div_mod_spec _n _m _q _r, Q_ x_849 .", "predict": "Axiom div_mod_spec_rect_CProp2 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_849 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_851 : _r < _m) -> (x_850 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)), forall x_849 : div_mod_spec _n _m _q _r, Q_ x_849 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nIso. For all sets $A$, $relation$ holds for $range$ applied to $A$.\nassistant\n", "label": "axiom iso (A : Set) : relation (range A)", "predict": "axiom iso (A : Set) : relation (range A)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExample11. $nth_prime (2)= 5$.\nassistant\n", "label": "postulate example11 : Eq (nth_prime 2) 5", "predict": "postulate example11 : Eq (nth_prime 2) 5"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1573. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $m$ is divisible by $n$, then for all natural numbers $d$, if $0$ is equal to $m$, then if $n$ is equal to the product of $m$ and $d$, then $n$ is equal to $m$.\nassistant\n", "label": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq n m", "predict": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nStart_lop. For all natural numbers $n$, if $1$ is less than or equal to $n$, then $option_hd$ applied to $Nat$ and $list_of_primes$ applied to $n$ is equal to $Some$ applied to $Nat$ and $2$.\nassistant\n", "label": "start_lop : n : Nat -> __ : Leq (nd 1) n -> Eq (option_hd Nat (list_of_primes n)) (Some Nat (nd 2)) .", "predict": "start_lop : n : Nat -> __ : Leq (nd 1) n -> Eq (option_hd Nat (list_of_primes n)) (Some Nat (nd 2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $_l$ be a list of natural numbers. Let $_n \\in N$. Then we can say that $primes_below$ holds for $_l$ and $_n$.\nassistant\n", "label": "postulate primes_below : (_l : list Nat) -> (_n : Nat) -> Prop", "predict": "postulate primes_below : (_l : list Nat) -> (_n : Nat) -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_inv_rect_Type4. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1572$ of $ACop$ of $x1$ and $x2$ to elements of $Type4$, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1573$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom ACop_inv_rect_Type4 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1572 : ACop x1 x2) -> Type4), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1573 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm .", "predict": "Axiom ACop_inv_rect_Type4 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1572 : ACop x1 x2) -> Type4), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1573 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_CProp1. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_937$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_937$ of $range$ of $_A$, $Q_$ holds for $x_937$.\nassistant\n", "label": "postulate range_rect_CProp1 : (_A : Set) -> (Q_ : (_x_937 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_937 : range _A) -> Q_ x_937", "predict": "postulate range_rect_CProp1 : (_A : Set) -> (Q_ : (_x_937 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_937 : range _A) -> Q_ x_937"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_to_leb_true. For all natural numbers $n$ and $m$, if $n$ is less than or equal to $m$, then $leb$ applied to $n$ and $m$ is equal to $true$.\nassistant\n", "label": "le_to_leb_true : n : Nat -> m : Nat -> __ : Leq n m -> Eq (leb n m) true .", "predict": "le_to_leb_true : n : Nat -> m : Nat -> __ : Leq n m -> Eq (leb n m) true ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_inv_rect_CProp3. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z695$ to propositions, for all functions $_H1$ from elements $_z696$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_402$ and functions $_x_404$ from elements $_z696$ of $Eq$ of $Hterm$ and $x_402$ to elements of $P$ of $x_402$ and elements $_z696$ of $Eq$ of $Hterm$ and the sum of $x_402$ and $1$ to elements of $P$ of the sum of $x_402$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : (_z695 : Nat) -> Prop) -> (_H1 : (_z696 : Eq Hterm 0) -> P 0) -> (_H2 : (x_402 : Nat) -> (_x_404 : (_z696 : Eq Hterm x_402) -> P x_402) -> (_z696 : Eq Hterm (plus x_402 1)) -> P (plus x_402 1)) -> P Hterm", "predict": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : (_z695 : Nat) -> Prop) -> (_H1 : (_z696 : Eq Hterm 0) -> P 0) -> (_H2 : (x_402 : Nat) -> (_x_404 : (_z696 : Eq Hterm x_402) -> P x_402) -> (_z696 : Eq Hterm (plus x_402 1)) -> P (plus x_402 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_Type5. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_919$ of $range$ of $_A$ to elements of $Type5$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_919$ of $range$ of $_A$, $Q_$ holds for $x_919$.\nassistant\n", "label": "Axiom range_rect_Type5 : forall _A : Set, forall Q_ : ((_x_919 : range _A) -> Type5), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_919 : range _A, Q_ x_919 .", "predict": "Axiom range_rect_Type5 : forall _A : Set, forall Q_ : ((_x_919 : range _A) -> Type5), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_919 : range _A, Q_ x_919 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_mop. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $R$ of $Dop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all elements $a$ and $_x_969$ and $_x_970$ of $B$, $B$.\nassistant\n", "label": "postulate let_mop : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (R : Dop B nil) -> (f : (_ : Nat) -> B) -> (a : B) -> (_x_969 : B) -> (_x_970 : B) -> B", "predict": "postulate let_mop : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (R : Dop B nil) -> (f : (_ : Nat) -> B) -> (a : B) -> (_x_969 : B) -> (_x_970 : B) -> B"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_minus_to_plus_r. Let $a$ and $b$ and $c$ be natural numbers. Then if $a$ is less than the difference of $b$ and $c$, then the sum of $a$ and $c$ is less than $b$.\nassistant\n", "label": "axiom lt_minus_to_plus_r (a b c : Nat) (x__ : a < b - c) : a + c < b", "predict": "axiom lt_minus_to_plus_r (a b c : Nat) (x__ : a < b - c) : a + c < b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_inv_rect_Type2. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Then for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1452$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type2$, for all functions $_H1$ from elements $x_827$ of $Lt$ of $x4$ and $x2$ and elements $x_826$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1453$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$, $P$ holds for $Hterm$.\nassistant\n", "label": "div_mod_spec_inv_rect_Type2 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1452 : div_mod_spec x1 x2 x3 x4 -> Type2) -> _H1 : (x_827 : Lt x4 x2 -> x_826 : Eq x1 (plus (times x3 x2) x4) -> _z1453 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P Hterm .", "predict": "div_mod_spec_inv_rect_Type2 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1452 : div_mod_spec x1 x2 x3 x4 -> Type2) -> _H1 : (x_827 : Lt x4 x2 -> x_826 : Eq x1 (plus (times x3 x2) x4) -> _z1453 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_body. For all sets $A$, for all elements $nil$ of $A$, for all elements $_xxx$ of $ACop$ of $A$ and $nil$, $Aop$ holds for $A$ and $nil$.\nassistant\n", "label": "postulate aop_body : (A : Set) -> (nil : A) -> (_xxx : ACop A nil) -> Aop A nil", "predict": "postulate aop_body : (A : Set) -> (nil : A) -> (_xxx : ACop A nil) -> Aop A nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nB. Let $_n$ be a natural number. Then $Nat$.\nassistant\n", "label": "B : _n : Nat -> Nat .", "predict": "B : _n : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_ind_l. For all sets $B$, for all functions $R$ from elements of $B$ and elements $__1$ of $B$ to propositions, for all elements $b2$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b2$, for all functions $__1$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$, for all natural numbers $l$, for all elements $b1$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, $P$ holds for $l$ and $b1$.\nassistant\n", "label": "Axiom lstar_ind_l : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b2 : B, forall P : relation2 nat B, forall x__ : P 0 b2, forall __1 : ((l : nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (l + 1) b1), forall l : nat, forall b1 : B, forall __2 : lstar B R l b1 b2, P l b1 .", "predict": "Axiom lstar_ind_l : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b2 : B, forall P : relation2 nat B, forall x__ : P 0 b2, forall __1 : ((l : nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (l + 1) b1), forall l : nat, forall b1 : B, forall __2 : lstar B R l b1 b2, P l b1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nInv_eq_minus_O. For all natural numbers $x$ and $y$, if the difference of $x$ and $y$ is equal to $0$, then $x$ is less than or equal to $y$.\nassistant\n", "label": "inv_eq_minus_O : x : Nat -> y : Nat -> __ : Eq (minus x y) 0 -> Leq x y .", "predict": "inv_eq_minus_O : x : Nat -> y : Nat -> __ : Eq (minus x y) 0 -> Leq x y ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMonotonic_lt_minus_l. Let $p$ and $q$ and $n$ be natural numbers. Then if $n$ is less than or equal to $q$, then if $q$ is less than $p$, then the difference of $q$ and $n$ is less than the difference of $p$ and $n$.\nassistant\n", "label": "axiom monotonic_lt_minus_l (p q n : Nat) (x__ : n ≤ q) (__1 : q < p) : q - n < p - n", "predict": "axiom monotonic_lt_minus_l (p q n : Nat) (x__ : n ≤ q) (__1 : q < p) : q - n < p - n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPlus_minus_m_m. Let $n$ and $m$ be natural numbers. Then if $m$ is less than or equal to $n$, then $n$ is equal to the sum of the difference of $n$ and $m$ and $m$.\nassistant\n", "label": "Axiom plus_minus_m_m : forall n : nat, forall m : nat, forall x__ : Leq m n, n = n - m + m .", "predict": "Axiom plus_minus_m_m : forall n : nat, forall m : nat, forall x__ : Leq m n, n = n - m + m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_exp_to_lt1. Let $a$ and $n$ and $m$ be natural numbers. Then if $0$ is less than $a$, then if the exponentiation of $n$ and $a$ is less than the exponentiation of $m$ and $a$, then $n$ is less than $m$.\nassistant\n", "label": "Axiom lt_exp_to_lt1 : forall a : nat, forall n : nat, forall m : nat, forall x__ : (0 < a), forall __1 : (pow n a < pow m a), n < m .", "predict": "Axiom lt_exp_to_lt1 : forall a : nat, forall n : nat, forall m : nat, forall x__ : (0 < a), forall __1 : (pow n a < pow m a), n < m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_rect_Type3_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_867$ of $Aop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_867$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_867$.\nassistant\n", "label": "Aop_rect_Type3_body : A : Set -> _nil : A -> Q_ : (_x_867 : Aop A _nil -> Type3) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_867 : Aop A _nil -> Q_ x_867 .", "predict": "Aop_rect_Type3_body : A : Set -> _nil : A -> Q_ : (_x_867 : Aop A _nil -> Type3) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_867 : Aop A _nil -> Q_ x_867 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp0. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_967$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_967$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_967$.\nassistant\n", "label": "Dop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_967 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_967 : Dop A _nil -> Q_ x_967 .", "predict": "Dop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_967 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_967 : Dop A _nil -> Q_ x_967 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLeb_true_to_le. For all natural numbers $n$ and $m$, if $leb$ applied to $n$ and $m$ is equal to $true$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "Axiom leb_true_to_le : forall n : nat, forall m : nat, forall x__ : (leb n m = true), Leq n m .", "predict": "Axiom leb_true_to_le : forall n : nat, forall m : nat, forall x__ : (leb n m = true), Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExample6. $primeb$ applied to $11$ is equal to $true$.\nassistant\n", "label": "postulate example6 : Eq (primeb 11) true", "predict": "postulate example6 : Eq (primeb 11) true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_4_to_fact. Let $n$ be a natural number. Then if $4$ is less than $n$, then the factorial of the product of $2$ and $n$ is less than or equal to the product of the product of the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $2$ and the factorial of $n$ and the factorial of $n$.\nassistant\n", "label": "Axiom lt_4_to_fact : forall n : nat, forall x__ : (4 < n), Leq (factorial (2 * n)) (pow 2 (2 * n - 2) * factorial n * factorial n) .", "predict": "Axiom lt_4_to_fact : forall n : nat, forall x__ : (4 < n), Leq (factorial (2 * n)) (pow 2 (2 * n - 2) * factorial n * factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1532. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $m$ is equal to $0$.\nassistant\n", "label": "Axiom let_clause_1532 : forall n : nat, forall m : nat, forall divnm : divisible n m, forall H : (0 = n), forall d : nat, forall auto : (m = 0 * d), m = 0 .", "predict": "Axiom let_clause_1532 : forall n : nat, forall m : nat, forall divnm : divisible n m, forall H : (0 = n), forall d : nat, forall auto : (m = 0 * d), m = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_inv_rect_Type2. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1584$ of $ACop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1585$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate ACop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1584 : ACop x1 x2) -> Type2) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1585 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm", "predict": "postulate ACop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1584 : ACop x1 x2) -> Type2) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1585 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_CProp4_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_903$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_903$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_903$.\nassistant\n", "label": "postulate ACop_rect_CProp4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_903 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_903 : ACop A _nil) -> Q_ x_903", "predict": "postulate ACop_rect_CProp4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_903 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_903 : ACop A _nil) -> Q_ x_903"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__$ and $__1$ be natural numbers. Then the exponentiation of $__$ and $__1$ is a natural number.\nassistant\n", "label": "Axiom pow : forall x__ : nat, forall __1 : nat, nat .", "predict": "Axiom pow : forall x__ : nat, forall __1 : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $_n$ be a natural number. Then we can say that $not_bertrand$ holds for $_n$.\nassistant\n", "label": "postulate not_bertrand : (_n : Nat) -> Prop", "predict": "postulate not_bertrand : (_n : Nat) -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_upper_bound2. Let $n$ and $m$ be natural numbers. Then $Nat$.\nassistant\n", "label": "Axiom let_upper_bound2 : forall n : nat, forall m : nat, nat .", "predict": "Axiom let_upper_bound2 : forall n : nat, forall m : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_Type1. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_871$ of $Aop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_871$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_871$.\nassistant\n", "label": "axiom Aop_rect_Type1 (A : Set) (_nil : A) (Q_ : (_x_871 : Aop A _nil) -> Type1) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_871 : Aop A _nil) : Q_ x_871", "predict": "axiom Aop_rect_Type1 (A : Set) (_nil : A) (Q_ : (_x_871 : Aop A _nil) -> Type1) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_871 : Aop A _nil) : Q_ x_871"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_times_gcd_aux. Let $p$ and $m$ and $n$ and $d$ and $c$ be natural numbers. Then if $0$ is less than $c$, then if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to $p$, then if $d$ is divisible by the product of $c$ and $m$, then if $d$ is divisible by the product of $c$ and $n$, then $d$ is divisible by the product of $c$ and $gcd_aux$ applied to $p$ and $m$ and $n$.\nassistant\n", "label": "divides_times_gcd_aux : p : Nat -> m : Nat -> n : Nat -> d : Nat -> c : Nat -> __ : Lt 0 c -> __1 : Lt 0 n -> __2 : Leq n m -> __3 : Leq n p -> __4 : divisible d (times c m) -> __5 : divisible d (times c n) -> divisible d (times c (gcd_aux p m n)) .", "predict": "divides_times_gcd_aux : p : Nat -> m : Nat -> n : Nat -> d : Nat -> c : Nat -> __ : Lt 0 c -> __1 : Lt 0 n -> __2 : Leq n m -> __3 : Leq n p -> __4 : divisible d (times c m) -> __5 : divisible d (times c n) -> divisible d (times c (gcd_aux p m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_fact_pi_p. For all natural numbers $n$, the factorial of $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $leb$ applied to $1$ and $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $i$.\nassistant\n", "label": "axiom eq_fact_pi_p (n : Nat) : factorial n = bigop (n + 1) (λ i => leb 1 i) Nat 1 times (λ i => i)", "predict": "axiom eq_fact_pi_p (n : Nat) : factorial n = bigop (n + 1) (λ i => leb 1 i) Nat 1 times (λ i => i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMatch_max_spec. Let $_n$ be a natural number. Then for all functions $_f$ from natural numbers to booleans, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from natural numbers and elements $z$ of $max_spec$ of $_n$ and $_f$ and $__$ to elements of $return_sort$, for all functions $case_found_max_spec$ from natural numbers $m$ and elements of $Lt$ of $m$ and $_n$ and elements $__1$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $return_type$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $__$ and $__1$ and $__2$, for all functions $case_not_found_max_spec$ from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $return_type$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $__$, for all natural numbers $__$, for all elements $z$ of $max_spec$ of $_n$ and $_f$ and $__$, $return_type$ holds for $__$ and $z$.\nassistant\n", "label": "match_max_spec : _n : Nat -> _f : (__ : Nat -> bool) -> return_sort : Sort -> return_type : (__ : Nat -> z : max_spec _n _f __ -> return_sort) -> case_found_max_spec : (m : Nat -> __ : Lt m _n -> __1 : Eq (_f m) true -> __2 : (i : Nat -> __2 : Lt m i -> __3 : Lt i _n -> Eq (_f i) false) -> return_type m (found_max_spec _n _f m __ __1 __2)) -> case_not_found_max_spec : (__ : (i : Nat -> __ : Lt i _n -> Eq (_f i) false) -> return_type 0 (not_found_max_spec _n _f __)) -> __ : Nat -> z : max_spec _n _f __ -> return_type __ z .", "predict": "match_max_spec : _n : Nat -> _f : (__ : Nat -> bool) -> return_sort : Sort -> return_type : (__ : Nat -> z : max_spec _n _f __ -> return_sort) -> case_found_max_spec : (m : Nat -> __ : Lt m _n -> __1 : Eq (_f m) true -> __2 : (i : Nat -> __2 : Lt m i -> __3 : Lt i _n -> Eq (_f i) false) -> return_type m (found_max_spec _n _f m __ __1 __2)) -> case_not_found_max_spec : (__ : (i : Nat -> __ : Lt i _n -> Eq (_f i) false) -> return_type 0 (not_found_max_spec _n _f __)) -> __ : Nat -> z : max_spec _n _f __ -> return_type __ z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_times_plus_to_congruent. For all natural numbers $n$ and $m$ and $p$ and $r$, if $0$ is less than $p$, then if $n$ is equal to the sum of the product of $r$ and $p$ and $m$, then $congruent$ holds for $n$ and $m$ and $p$.\nassistant\n", "label": "axiom eq_times_plus_to_congruent (n m p r : Nat) (x__ : 0 < p) (__1 : n = r * p + m) : congruent n m p", "predict": "axiom eq_times_plus_to_congruent (n m p r : Nat) (x__ : 0 < p) (__1 : n = r * p + m) : congruent n m p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__$ and $__1$ be natural numbers. Then the greatest common divisor of $__$ and $__1$ is a natural number.\nassistant\n", "label": "postulate gcd : (_ : Nat) -> (__1 : Nat) -> Nat", "predict": "postulate gcd : (_ : Nat) -> (__1 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10335. Let $n$ be a natural number. Then if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_10335 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10335 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_rect_CProp3_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.\nassistant\n", "label": "axiom Dop_rect_CProp3_body (A : Set) (_nil : A) (Q_ : (_x_961 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_961 : Dop A _nil) : Q_ x_961", "predict": "axiom Dop_rect_CProp3_body (A : Set) (_nil : A) (Q_ : (_x_961 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_961 : Dop A _nil) : Q_ x_961"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_exp_to_le1. For all natural numbers $n$ and $m$ and $p$, if $0$ is less than $p$, then if the exponentiation of $n$ and $p$ is less than or equal to the exponentiation of $m$ and $p$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "le_exp_to_le1 : n : Nat -> m : Nat -> p : Nat -> __ : Lt 0 p -> __1 : Leq (pow n p) (pow m p) -> Leq n m .", "predict": "le_exp_to_le1 : n : Nat -> m : Nat -> p : Nat -> __ : Lt 0 p -> __1 : Leq (pow n p) (pow m p) -> Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTranspose_i_j_j_i. For all natural numbers $i$ and $j$ and $n$, $transpose$ applied to $i$ and $j$ and $n$ is equal to $transpose$ applied to $j$ and $i$ and $n$.\nassistant\n", "label": "axiom transpose_i_j_j_i (i j n : Nat) : transpose i j n = transpose j i n", "predict": "axiom transpose_i_j_j_i (i j n : Nat) : transpose i j n = transpose j i n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExp_n_1. Let $n$ be a natural number. Then $n$ is equal to the exponentiation of $n$ and $1$.\nassistant\n", "label": "Axiom exp_n_1 : forall n : nat, n = pow n 1 .", "predict": "Axiom exp_n_1 : forall n : nat, n = pow n 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPlus_minus_plus_plus_l. Let $z$ and $x$ and $y$ and $h$ be natural numbers. Then the difference of the sum of $z$ and the sum of $x$ and $h$ and the sum of $y$ and $h$ is equal to the difference of the sum of $z$ and $x$ and $y$.\nassistant\n", "label": "postulate plus_minus_plus_plus_l : (z : Nat) -> (x : Nat) -> (y : Nat) -> (h : Nat) -> Eq (minus (plus z (plus x h)) (plus y h)) (minus (plus z x) y)", "predict": "postulate plus_minus_plus_plus_l : (z : Nat) -> (x : Nat) -> (y : Nat) -> (h : Nat) -> Eq (minus (plus z (plus x h)) (plus y h)) (minus (plus z x) y)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16003. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1033. For all natural numbers $n$, if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_1033 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nB_SSSO. $B$ applied to $3$ is equal to $6$.\nassistant\n", "label": "postulate B_SSSO : Eq (B 3) 6", "predict": "postulate B_SSSO : Eq (B 3) 6"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $permf$ of $permut$ of $f$ and $n$, for all natural numbers $i$ and $j$, if $i$ is less than or equal to $n$, then if $j$ is less than or equal to $n$, then for all natural numbers $a$, if $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$, then if $a$ is less than or equal to $n$, then if $f$ applied to $a$ is equal to $i$, then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExp_S_sigma_p. Let $a$ and $n$ be natural numbers. Then the exponentiation of the sum of $a$ and $1$ and $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $k$ to $true$ and $Nat$ and $0$ and $plus$ and the function that maps $k$ to the product of $bc$ applied to $n$ and $k$ and the exponentiation of $a$ and the difference of $n$ and $k$.\nassistant\n", "label": "Axiom exp_S_sigma_p : forall a : nat, forall n : nat, pow (a + 1) n = bigop (n + 1) (fun k => true) nat 0 plus (fun k => bc n k * pow a (n - k)) .", "predict": "Axiom exp_S_sigma_p : forall a : nat, forall n : nat, pow (a + 1) n = bigop (n + 1) (fun k => true) nat 0 plus (fun k => bc n k * pow a (n - k)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPrime_to_gcd_1. Let $n$ and $m$ be natural numbers. Then if $n$ is prime, then if $n$ is not divisible by $m$, then the greatest common divisor of $n$ and $m$ is equal to $1$.\nassistant\n", "label": "postulate prime_to_gcd_1 : (n : Nat) -> (m : Nat) -> (_ : prime n) -> (__1 : not (divisible n m)) -> Eq (gcd n m) 1", "predict": "postulate prime_to_gcd_1 : (n : Nat) -> (m : Nat) -> (_ : prime n) -> (__1 : not (divisible n m)) -> Eq (gcd n m) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_10332. For all natural numbers $n$, if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_10332 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10332 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMdef. For all natural numbers $m$, $M$ applied to $m$ is equal to $bc$ applied to the sum of the product of $2$ and $m$ and $1$ and $m$.\nassistant\n", "label": "Mdef : m : Nat -> Eq (M m) (bc (plus (times (nd 2) m) (nd 1)) m) .", "predict": "Mdef : m : Nat -> Eq (M m) (bc (plus (times (nd 2) m) (nd 1)) m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCongruent_times. Let $n$ and $m$ and $n1$ and $m1$ and $p$ be natural numbers. Then if $0$ is less than $p$, then for all elements $__1$ of $congruent$ of $n$ and $n1$ and $p$, for all elements $__2$ of $congruent$ of $m$ and $m1$ and $p$, $congruent$ holds for the product of $n$ and $m$ and the product of $n1$ and $m1$ and $p$.\nassistant\n", "label": "postulate congruent_times : (n : Nat) -> (m : Nat) -> (n1 : Nat) -> (m1 : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : congruent n n1 p) -> (__2 : congruent m m1 p) -> congruent (times n m) (times n1 m1) p", "predict": "postulate congruent_times : (n : Nat) -> (m : Nat) -> (n1 : Nat) -> (m1 : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : congruent n n1 p) -> (__2 : congruent m m1 p) -> congruent (times n m) (times n1 m1) p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_inv_rect_Type4. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1440$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type4$, for all functions $_H1$ from elements $x_815$ of $Lt$ of $x4$ and $x2$ and elements $x_814$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1441$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_815$ and $x_814$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_815$ and $x_814$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_rect_Type4 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1440 : div_mod_spec x1 x2 x3 x4) -> Type4), forall _H1 : ((x_815 : x4 < x2) -> (x_814 : x1 = x3 * x2 + x4) -> (_z1441 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_815 x_814) -> P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814)), P Hterm .", "predict": "Axiom div_mod_spec_inv_rect_Type4 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1440 : div_mod_spec x1 x2 x3 x4) -> Type4), forall _H1 : ((x_815 : x4 < x2) -> (x_814 : x1 = x3 * x2 + x4) -> (_z1441 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_815 x_814) -> P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1551. For all natural numbers $m$ and $n$, if $0$ is equal to $n$, then for all natural numbers $x347$, $n$ is equal to the product of $x347$ and $n$.\nassistant\n", "label": "axiom let_clause_1551 (m n : Nat) (eqn0 : 0 = n) (x347 : Nat) : n = x347 * n", "predict": "axiom let_clause_1551 (m n : Nat) (eqn0 : 0 = n) (x347 : Nat) : n = x347 * n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1034. For all natural numbers $n$ and $m$ and $q$, if $0$ is less than $n$, then if $0$ is less than $m$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of $mod$ applied to $x2515$ and $x2516$ and the product of $x2516$ and the quotient of $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_1034 : forall n : nat, forall m : nat, forall q : nat, forall posn : (0 < n), forall posm : (0 < m), forall x2515 : nat, forall x2516 : nat, x2515 = mod x2515 x2516 + x2516 * (x2515 / x2516) .", "predict": "Axiom let_clause_1034 : forall n : nat, forall m : nat, forall q : nat, forall posn : (0 < n), forall posm : (0 < m), forall x2515 : nat, forall x2516 : nat, x2515 = mod x2515 x2516 + x2516 * (x2515 / x2516) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_le_to_lt. Let $n$ and $m$ be natural numbers. Then if $n$ is not less than or equal to $m$, then $m$ is less than $n$.\nassistant\n", "label": "Axiom not_le_to_lt : forall n : nat, forall m : nat, forall x__ : (~ Leq n m), m < n .", "predict": "Axiom not_le_to_lt : forall n : nat, forall m : nat, forall x__ : (~ Leq n m), m < n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_Conf3. For all sets $A$ and $B$, for all elements $succ$ of $relation2$ of $A$ and $B$, for all elements $R$ of $relation$ of $A$, for all elements $__$ of $Conf3$ of $A$ and $B$ and $succ$ and $R$, for all natural numbers $l$, $Conf3$ holds for $A$ and $B$ and $succ$ and $lstar$ applied to $A$ and $R$ and $l$.\nassistant\n", "label": "lstar_Conf3 : A : Set -> B : Set -> succ : relation2 A B -> R : relation A -> __ : Conf3 A B succ R -> l : Nat -> Conf3 A B succ (lstar A R l) .", "predict": "lstar_Conf3 : A : Set -> B : Set -> succ : relation2 A B -> R : relation A -> __ : Conf3 A B succ R -> l : Nat -> Conf3 A B succ (lstar A R l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp. Let $p$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $p$, then if $0$ is less than $m$, then the logarithm of $p$ and the product of the exponentiation of $p$ and $n$ and $m$ is equal to the sum of $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "axiom log_exp (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) : log p (pow p n * m) = n + log p m", "predict": "axiom log_exp (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) : log p (pow p n * m) = n + log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1531. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $n$ is divisible by $m$, then for all natural numbers $d$, if $m$ is equal to the product of $n$ and $0$, then $m$ is equal to $0$.\nassistant\n", "label": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0", "predict": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_minus_S_pred. For all natural numbers $n$ and $m$, the difference of $n$ and the sum of $m$ and $1$ is equal to $pred$ applied to the difference of $n$ and $m$.\nassistant\n", "label": "axiom eq_minus_S_pred (n m : Nat) : n - (m + 1) = pred (n - m)", "predict": "axiom eq_minus_S_pred (n m : Nat) : n - (m + 1) = pred (n - m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_singlevalued. Let $B$ be a set. Then for all elements $R$ of $relation2$ of $B$ and $B$, for all elements $__$ of $singlevalued$ of $B$ and $B$ and $R$, for all natural numbers $l$, $singlevalued$ holds for $B$ and $B$ and $lstar$ applied to $B$ and $R$ and $l$.\nassistant\n", "label": "lstar_singlevalued : B : Set -> R : relation2 B B -> __ : singlevalued B B R -> l : Nat -> singlevalued B B (lstar B R l) .", "predict": "lstar_singlevalued : B : Set -> R : relation2 B B -> __ : singlevalued B B R -> l : Nat -> singlevalued B B (lstar B R l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBijn_n_Sn. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and $n$, if $f$ applied to the sum of $n$ and $1$ is equal to the sum of $n$ and $1$, then $bijn$ holds for $f$ and the sum of $n$ and $1$.\nassistant\n", "label": "Axiom bijn_n_Sn : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : bijn f n, forall __1 : (f (n + 1) = n + 1), bijn f (n + 1) .", "predict": "Axiom bijn_n_Sn : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : bijn f n, forall __1 : (f (n + 1) = n + 1), bijn f (n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1532. Let $n$ and $m$ be natural numbers. Then if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $m$ is equal to $0$.\nassistant\n", "label": "let_clause_1532 : n : Nat -> m : Nat -> divnm : divisible n m -> H : Eq 0 n -> d : Nat -> auto : Eq m (times 0 d) -> Eq m 0 .", "predict": "let_clause_1532 : n : Nat -> m : Nat -> divnm : divisible n m -> H : Eq 0 n -> d : Nat -> auto : Eq m (times 0 d) -> Eq m 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_minus_to_plus_r. Let $a$ and $b$ and $c$ be natural numbers. Then if $c$ is less than or equal to $b$, then if $a$ is less than or equal to the difference of $b$ and $c$, then the sum of $a$ and $c$ is less than or equal to $b$.\nassistant\n", "label": "postulate le_minus_to_plus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq c b) -> (__1 : Leq a (minus b c)) -> Leq (plus a c) b", "predict": "postulate le_minus_to_plus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq c b) -> (__1 : Leq a (minus b c)) -> Leq (plus a c) b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin_body. For all natural numbers $__$ and $__1$, for all functions $__2$ from natural numbers $__2$ to booleans, $Nat$.\nassistant\n", "label": "Axiom min_body : forall x__ : nat, forall __1 : nat, forall __2 : ((__2 : nat) -> bool), nat .", "predict": "Axiom min_body : forall x__ : nat, forall __1 : nat, forall __2 : ((__2 : nat) -> bool), nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15491. Let $m$ and $n$ be natural numbers. Then if $0$ is equal to $n$, then for all natural numbers $x1106$, $x1106$ is equal to the difference of $x1106$ and $n$.\nassistant\n", "label": "let_clause_15491 : m : Nat -> n : Nat -> eqn0 : Eq 0 n -> x1106 : Nat -> Eq x1106 (minus x1106 n) .", "predict": "let_clause_15491 : m : Nat -> n : Nat -> eqn0 : Eq 0 n -> x1106 : Nat -> Eq x1106 (minus x1106 n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type1. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type1$, for all functions $_H_div_mod_spec_intro$ from elements $x_831$ of $Lt$ of $_r$ and $_m$ and elements $x_830$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_831$ and $x_830$, for all elements $x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_829$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type1 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_829 : div_mod_spec _n _m _q _r) -> Type1), forall _H_div_mod_spec_intro : ((x_831 : _r < _m) -> (x_830 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)), forall x_829 : div_mod_spec _n _m _q _r, Q_ x_829 .", "predict": "Axiom div_mod_spec_rect_Type1 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_829 : div_mod_spec _n _m _q _r) -> Type1), forall _H_div_mod_spec_intro : ((x_831 : _r < _m) -> (x_830 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)), forall x_829 : div_mod_spec _n _m _q _r, Q_ x_829 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $_n , __ \\in N$. Then we can say that $_n$ is less than or equal to $__$.\nassistant\n", "label": "postulate Leq : (_n : Nat) -> (_ : Nat) -> Prop", "predict": "postulate Leq : (_n : Nat) -> (_ : Nat) -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nCr_pair4. $cr_pair$ applied to $5$ and $7$ and $3$ and $2$ is equal to $23$.\nassistant\n", "label": "Axiom cr_pair4 : cr_pair 5 7 3 2 = 23 .", "predict": "Axiom cr_pair4 : cr_pair 5 7 3 2 = 23 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nCongruent_pi. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$ and $p$, if $0$ is less than $p$, then $congruent$ holds for $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $mod$ applied to $f$ applied to $i$ and $p$ and $p$.\nassistant\n", "label": "congruent_pi : f : (__ : Nat -> Nat) -> n : Nat -> p : Nat -> __ : Lt 0 p -> congruent (bigop n (i : Nat => true) Nat (nd 1) times (i : Nat => f i)) (bigop n (i : Nat => true) Nat (nd 1) times (i : Nat => mod (f i) p)) p .", "predict": "congruent_pi : f : (__ : Nat -> Nat) -> n : Nat -> p : Nat -> __ : Lt 0 p -> congruent (bigop n (i : Nat => true) Nat (nd 1) times (i : Nat => f i)) (bigop n (i : Nat => true) Nat (nd 1) times (i : Nat => mod (f i) p)) p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type5. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.\nassistant\n", "label": "Dop_rect_Type5 : A : Set -> _nil : A -> Q_ : (_x_947 : Dop A _nil -> Type5) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_947 : Dop A _nil -> Q_ x_947 .", "predict": "Dop_rect_Type5 : A : Set -> _nil : A -> Q_ : (_x_947 : Dop A _nil -> Type5) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_947 : Dop A _nil -> Q_ x_947 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_CProp5_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_877$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_877$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_877$.\nassistant\n", "label": "Axiom Aop_rect_CProp5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_877 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_877 : Aop A _nil, Q_ x_877 .", "predict": "Axiom Aop_rect_CProp5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_877 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_877 : Aop A _nil, Q_ x_877 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_to_lt_times. For all natural numbers $n$ and $m$ and $p$ and $q$, if $n$ is less than $m$, then if $p$ is less than or equal to $q$, then if $0$ is less than $q$, then the product of $n$ and $p$ is less than the product of $m$ and $q$.\nassistant\n", "label": "Axiom lt_to_le_to_lt_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : (n < m), forall __1 : Leq p q, forall __2 : (0 < q), n * p < m * q .", "predict": "Axiom lt_to_le_to_lt_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : (n < m), forall __1 : Leq p q, forall __2 : (0 < q), n * p < m * q ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLeb_true_to_le. For all natural numbers $n$ and $m$, if $leb$ applied to $n$ and $m$ is equal to $true$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "postulate leb_true_to_le : (n : Nat) -> (m : Nat) -> (_ : Eq (leb n m) true) -> Leq n m", "predict": "postulate leb_true_to_le : (n : Nat) -> (m : Nat) -> (_ : Eq (leb n m) true) -> Leq n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_times_n_to_lt_l. Let $n$ and $p$ and $q$ be natural numbers. Then if the product of $p$ and $n$ is less than the product of $q$ and $n$, then $p$ is less than $q$.\nassistant\n", "label": "lt_times_n_to_lt_l : n : Nat -> p : Nat -> q : Nat -> __ : Lt (times p n) (times q n) -> Lt p q .", "predict": "lt_times_n_to_lt_l : n : Nat -> p : Nat -> q : Nat -> __ : Lt (times p n) (times q n) -> Lt p q ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_Type5. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_817$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type5$, for all functions $_H_div_mod_spec_intro$ from elements $x_819$ of $Lt$ of $_r$ and $_m$ and elements $x_818$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_819$ and $x_818$, for all elements $x_817$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_817$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type5 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_817 : div_mod_spec _n _m _q _r) -> Type5) -> (_H_div_mod_spec_intro : (x_819 : Lt _r _m) -> (x_818 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818)) -> (x_817 : div_mod_spec _n _m _q _r) -> Q_ x_817", "predict": "postulate div_mod_spec_rect_Type5 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_817 : div_mod_spec _n _m _q _r) -> Type5) -> (_H_div_mod_spec_intro : (x_819 : Lt _r _m) -> (x_818 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818)) -> (x_817 : div_mod_spec _n _m _q _r) -> Q_ x_817"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_div. For all natural numbers $d$ and $n$, if $d$ is divisible by $n$, then the quotient of $n$ and $d$ is divisible by $n$.\nassistant\n", "label": "divides_div : d : Nat -> n : Nat -> __ : divisible d n -> divisible (div n d) n .", "predict": "divides_div : d : Nat -> n : Nat -> __ : divisible d n -> divisible (div n d) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_upper_bound5. Let $n$ and $m$ be natural numbers. Then if $nth_prime$ applied to $n$ is less than $m$, then $Nat$.\nassistant\n", "label": "axiom let_upper_bound5 (n m : Nat) (ltml : nth_prime n < m) : Nat", "predict": "axiom let_upper_bound5 (n m : Nat) (ltml : nth_prime n < m) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_SO_nth_prime_n. For all natural numbers $n$, $1$ is less than $nth_prime$ applied to $n$.\nassistant\n", "label": "postulate lt_SO_nth_prime_n : (n : Nat) -> Lt 1 (nth_prime n)", "predict": "postulate lt_SO_nth_prime_n : (n : Nat) -> Lt 1 (nth_prime n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type3. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type3$, for all functions $_H_div_mod_spec_intro$ from elements $x_823$ of $Lt$ of $_r$ and $_m$ and elements $x_822$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_823$ and $x_822$, for all elements $x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_821$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type3 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_821 : div_mod_spec _n _m _q _r) -> Type3), forall _H_div_mod_spec_intro : ((x_823 : _r < _m) -> (x_822 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)), forall x_821 : div_mod_spec _n _m _q _r, Q_ x_821 .", "predict": "Axiom div_mod_spec_rect_Type3 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_821 : div_mod_spec _n _m _q _r) -> Type3), forall _H_div_mod_spec_intro : ((x_823 : _r < _m) -> (x_822 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)), forall x_821 : div_mod_spec _n _m _q _r, Q_ x_821 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSub_hkO. For all functions $h$ and $k$ from natural numbers to natural numbers, for all sets $A$, for all elements $I$ and $J$ of $range$ of $A$, if $upto$ applied to $A$ and $I$ is equal to $0$, then $sub_hk$ holds for $h$ and $k$ and $A$ and $I$ and $J$.\nassistant\n", "label": "Axiom sub_hkO : forall h : ((x__ : nat) -> nat), forall k : ((x__ : nat) -> nat), forall A : Set, forall I : range A, forall J : range A, forall x__ : (upto A I = 0), sub_hk h k A I J .", "predict": "Axiom sub_hkO : forall h : ((x__ : nat) -> nat), forall k : ((x__ : nat) -> nat), forall A : Set, forall I : range A, forall J : range A, forall x__ : (upto A I = 0), sub_hk h k A I J ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_B_Psi. For all natural numbers $n$, $B$ applied to $n$ is less than or equal to $Psi$ applied to $n$.\nassistant\n", "label": "Axiom le_B_Psi : forall n : nat, Leq (B n) (Psi n) .", "predict": "Axiom le_B_Psi : forall n : nat, Leq (B n) (Psi n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nOrd_ord_rem. For all natural numbers $p$ and $q$ and $m$, if $0$ is less than $m$, then if $p$ is prime, then if $q$ is prime, then if $q$ is less than $p$, then $ord$ applied to $ord_rem$ applied to $m$ and $p$ and $q$ is equal to $ord$ applied to $m$ and $q$.\nassistant\n", "label": "ord_ord_rem : p : Nat -> q : Nat -> m : Nat -> __ : Lt 0 m -> __1 : prime p -> __2 : prime q -> __3 : Lt q p -> Eq (ord (ord_rem m p) q) (ord m q) .", "predict": "ord_ord_rem : p : Nat -> q : Nat -> m : Nat -> __ : Lt 0 m -> __1 : prime p -> __2 : prime q -> __3 : Lt q p -> Eq (ord (ord_rem m p) q) (ord m q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_Type4. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_863$ of $Aop$ of $A$ and $_nil$ to elements of $Type4$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_863$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_863$.\nassistant\n", "label": "Axiom Aop_rect_Type4 : forall A : Set, forall _nil : A, forall Q_ : ((_x_863 : Aop A _nil) -> Type4), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_863 : Aop A _nil, Q_ x_863 .", "predict": "Axiom Aop_rect_Type4 : forall A : Set, forall _nil : A, forall Q_ : ((_x_863 : Aop A _nil) -> Type4), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_863 : Aop A _nil, Q_ x_863 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_div. For all natural numbers $n$ and $d$, if $0$ is less than $n$, then if $d$ is divisible by $n$, then the quotient of $n$ and the quotient of $n$ and $d$ is equal to $d$.\nassistant\n", "label": "Axiom div_div : forall n : nat, forall d : nat, forall x__ : (0 < n), forall __1 : divisible d n, n / (n / d) = d .", "predict": "Axiom div_div : forall n : nat, forall d : nat, forall x__ : (0 < n), forall __1 : divisible d n, n / (n / d) = d ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExp_n_1. For all natural numbers $n$, $n$ is equal to the exponentiation of $n$ and $1$.\nassistant\n", "label": "Axiom exp_n_1 : forall n : nat, n = pow n 1 .", "predict": "Axiom exp_n_1 : forall n : nat, n = pow n 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1258. For all natural numbers $b$, if $1$ is less than $b$, then for all natural numbers $n$, if the product of the exponentiation of $b$ and $n$ and $b$ is equal to $1$, then the product of $b$ and the exponentiation of $b$ and $n$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1258 : (b : Nat) -> (lt1b : Lt 1 b) -> (n : Nat) -> (H : Eq (times (pow b n) b) 1) -> Eq (times b (pow b n)) 1", "predict": "postulate let_clause_1258 : (b : Nat) -> (lt1b : Lt 1 b) -> (n : Nat) -> (H : Eq (times (pow b n) b) 1) -> Eq (times b (pow b n)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_ind_l_aux. Let $B$ be a set. Then for all functions $R$ from elements of $B$ and elements $__1$ of $B$ to propositions, for all elements $b2$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b2$, for all functions $__1$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$, for all natural numbers $l$, for all elements $b1$ and $b$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$, if $b$ is equal to $b2$, then $P$ holds for $l$ and $b1$.\nassistant\n", "label": "lstar_ind_l_aux : B : Set -> R : (__ : B -> __1 : B -> Prop) -> b2 : B -> P : relation2 Nat B -> __ : P 0 b2 -> __1 : (l : Nat -> b1 : B -> b : B -> __1 : R b1 b -> __2 : lstar B R l b b2 -> __3 : P l b -> P (plus l (nd 1)) b1) -> l : Nat -> b1 : B -> b : B -> __2 : lstar B R l b1 b -> __3 : Eq b b2 -> P l b1 .", "predict": "lstar_ind_l_aux : B : Set -> R : (__ : B -> __1 : B -> Prop) -> b2 : B -> P : relation2 Nat B -> __ : P 0 b2 -> __1 : (l : Nat -> b1 : B -> b : B -> __1 : R b1 b -> __2 : lstar B R l b b2 -> __3 : P l b -> P (plus l (nd 1)) b1) -> l : Nat -> b1 : B -> b : B -> __2 : lstar B R l b1 b -> __3 : Eq b b2 -> P l b1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1062. Let $a$ and $b$ and $q$ and $r$ and $q1$ and $r1$ be natural numbers. Then for all elements $_clearme$ of $div_mod_spec$ of $a$ and $b$ and $q$ and $r$, if $r$ is less than $b$, then if $a$ is equal to the sum of the product of $q$ and $b$ and $r$, then for all elements $_clearme0$ of $div_mod_spec$ of $a$ and $b$ and $q1$ and $r1$, if $r1$ is less than $b$, then if $a$ is equal to the sum of the product of $q1$ and $b$ and $r1$, then if $q$ is not less than or equal to $q1$, then $a$ is equal to the sum of $r1$ and the product of $b$ and $q1$.\nassistant\n", "label": "let_clause_1062 : a : Nat -> b : Nat -> q : Nat -> r : Nat -> q1 : Nat -> r1 : Nat -> _clearme : div_mod_spec a b q r -> ltrb : Lt r b -> spec : Eq a (plus (times q b) r) -> _clearme0 : div_mod_spec a b q1 r1 -> ltr1b : Lt r1 b -> spec1 : Eq a (plus (times q1 b) r1) -> leqq1 : not (Leq q q1) -> Eq a (plus r1 (times b q1)) .", "predict": "let_clause_1062 : a : Nat -> b : Nat -> q : Nat -> r : Nat -> q1 : Nat -> r1 : Nat -> _clearme : div_mod_spec a b q r -> ltrb : Lt r b -> spec : Eq a (plus (times q b) r) -> _clearme0 : div_mod_spec a b q1 r1 -> ltr1b : Lt r1 b -> spec1 : Eq a (plus (times q1 b) r1) -> leqq1 : not (Leq q q1) -> Eq a (plus r1 (times b q1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_max_n. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$, $max$ applied to $n$ and $f$ is less than or equal to $n$.\nassistant\n", "label": "postulate le_max_n : (f : (_ : Nat) -> bool) -> (n : Nat) -> Leq (max n f) n", "predict": "postulate le_max_n : (f : (_ : Nat) -> bool) -> (n : Nat) -> Leq (max n f) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16001. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "axiom let_clause_16001 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : gcd m n = n * c - m * d", "predict": "axiom let_clause_16001 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : gcd m n = n * c - m * d"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEqb_true_to_eq. Let $n$ and $m$ be natural numbers. Then if $eqb$ applied to $n$ and $m$ is equal to $true$, then $n$ is equal to $m$.\nassistant\n", "label": "eqb_true_to_eq : n : Nat -> m : Nat -> __ : Eq (eqb n m) true -> Eq n m .", "predict": "eqb_true_to_eq : n : Nat -> m : Nat -> __ : Eq (eqb n m) true -> Eq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nFact_pi_p2. For all natural numbers $n$, the factorial of the product of $2$ and $n$ is equal to $bigop$ applied to the sum of the product of $2$ and $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and the product of $2$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the product of the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ and the exponentiation of $p$ and $mod$ applied to the quotient of the product of $2$ and $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ and $2$.\nassistant\n", "label": "axiom fact_pi_p2 (n : Nat) : factorial (2 * n) = bigop (2 * n + 1) (λ p => primeb p) Nat 1 times (λ p => bigop (log p (2 * n)) (λ i => true) Nat 1 times (λ i => pow p (2 * (n / pow p (i + 1))) * pow p (mod (2 * n / pow p (i + 1)) 2)))", "predict": "axiom fact_pi_p2 (n : Nat) : factorial (2 * n) = bigop (2 * n + 1) (λ p => primeb p) Nat 1 times (λ p => bigop (log p (2 * n)) (λ i => true) Nat 1 times (λ i => pow p (2 * (n / pow p (i + 1))) * pow p (mod (2 * n / pow p (i + 1)) 2)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_exp_log. For all natural numbers $p$ and $n$, if $0$ is less than $n$, then the exponentiation of $p$ and the logarithm of $p$ and $n$ is less than or equal to $n$.\nassistant\n", "label": "postulate le_exp_log : (p : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> Leq (pow p (log p n)) n", "predict": "postulate le_exp_log : (p : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> Leq (pow p (log p n)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nCommutative_min. $commutative$ holds for $Nat$ and $min$.\nassistant\n", "label": "Axiom commutative_min : commutative nat min .", "predict": "Axiom commutative_min : commutative nat min ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_CProp4. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1536$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1537$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_CProp4 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1536 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1537 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom Aop_inv_rect_CProp4 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1536 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1537 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLstar. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, $relation$ holds for $B$.\nassistant\n", "label": "axiom lstar (B : Set) (_R : relation B) (x__ : Nat) : relation B", "predict": "axiom lstar (B : Set) (_R : relation B) (x__ : Nat) : relation B"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_sigma_p. For all natural numbers $n$, for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, for all elements $__2$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the disjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and $true$ and $Lt$ applied to $g1$ applied to $i$ and $g2$ applied to $i$ and the conjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and absurdity and $Eq$ applied to $p2$ applied to $i$ and $true$ and $Lt$ applied to $0$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "postulate lt_sigma_p : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (__2 : ex Nat (\\ i : Nat -> and (Lt i n) (or (and (Eq (p1 i) true) (Lt (g1 i) (g2 i))) (and (and (Eq (p1 i) false) (Eq (p2 i) true)) (Lt 0 (g2 i)))))) -> Lt (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))", "predict": "postulate lt_sigma_p : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (__2 : ex Nat (\\ i : Nat -> and (Lt i n) (or (and (Eq (p1 i) true) (Lt (g1 i) (g2 i))) (and (and (Eq (p1 i) false) (Eq (p2 i) true)) (Lt 0 (g2 i)))))) -> Lt (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_smallest_factor_n. For all natural numbers $n$, if $0$ is less than $n$, then $smallest_factor$ applied to $n$ is divisible by $n$.\nassistant\n", "label": "divides_smallest_factor_n : n : Nat -> __ : Lt 0 n -> divisible (smallest_factor n) n .", "predict": "divides_smallest_factor_n : n : Nat -> __ : Lt 0 n -> divisible (smallest_factor n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nF3_ind_aux. For all sets $A1$ and $A2$ and $A3$, for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers, for all elements $P$ of $relation3$ of $A1$ and $A2$ and $A3$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$, for all natural numbers $n$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, if $f$ applied to $a1$ and $a2$ and $a3$ is equal to $n$, then $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "postulate f3_ind_aux : (A1 : Set) -> (A2 : Set) -> (A3 : Set) -> (f : (_ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) -> (P : relation3 A1 A2 A3) -> (_ : (n : Nat) -> (_ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (_ : Lt (f a1 a2 a3) n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : Eq (f a1 a2 a3) n) -> P a1 a2 a3) -> (n : Nat) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : Eq (f a1 a2 a3) n) -> P a1 a2 a3", "predict": "postulate f3_ind_aux : (A1 : Set) -> (A2 : Set) -> (A3 : Set) -> (f : (_ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) -> (P : relation3 A1 A2 A3) -> (_ : (n : Nat) -> (_ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (_ : Lt (f a1 a2 a3) n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : Eq (f a1 a2 a3) n) -> P a1 a2 a3) -> (n : Nat) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : Eq (f a1 a2 a3) n) -> P a1 a2 a3"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_Type1_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type1$, for all functions $_H_div_mod_spec_intro$ from elements $x_831$ of $Lt$ of $_r$ and $_m$ and elements $x_830$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_831$ and $x_830$, for all elements $x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_829$.\nassistant\n", "label": "axiom div_mod_spec_rect_Type1_body (_n _m _q _r : Nat) (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) (_H_div_mod_spec_intro : (x_831 : _r < _m) -> (x_830 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) (x_829 : div_mod_spec _n _m _q _r) : Q_ x_829", "predict": "axiom div_mod_spec_rect_Type1_body (_n _m _q _r : Nat) (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) (_H_div_mod_spec_intro : (x_831 : _r < _m) -> (x_830 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) (x_829 : div_mod_spec _n _m _q _r) : Q_ x_829"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_S_S_to_lt. Let $n$ and $m$ be natural numbers. Then if the sum of $n$ and $1$ is less than the sum of $m$ and $1$, then $n$ is less than $m$.\nassistant\n", "label": "postulate lt_S_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) (plus m 1)) -> Lt n m", "predict": "postulate lt_S_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) (plus m 1)) -> Lt n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_m_exp_nm. Let $n$ and $m$ be natural numbers. Then if $1$ is less than $n$, then $m$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "postulate lt_m_exp_nm : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> Lt m (pow n m)", "predict": "postulate lt_m_exp_nm : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> Lt m (pow n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSub_lt. For all sets $A$, for all functions $e$ from natural numbers to elements of $A$, for all functions $p$ from natural numbers to booleans, for all natural numbers $n$ and $m$, if $n$ is less than or equal to $m$, then $sub_hk$ holds for the function that maps $x$ to $x$ and the function that maps $x$ to $x$ and $A$ and $mk_range$ applied to $A$ and $e$ and $n$ and $p$ and $mk_range$ applied to $A$ and $e$ and $m$ and $p$.\nassistant\n", "label": "axiom sub_lt (A : Set) (e : (x__ : Nat) -> A) (p : (x__ : Nat) -> bool) (n m : Nat) (x__ : n ≤ m) : sub_hk (λ x => x) (λ x => x) A (mk_range A e n p) (mk_range A e m p)", "predict": "axiom sub_lt (A : Set) (e : (x__ : Nat) -> A) (p : (x__ : Nat) -> bool) (n m : Nat) (x__ : n ≤ m) : sub_hk (λ x => x) (λ x => x) A (mk_range A e n p) (mk_range A e m p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp4_body. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_839$ of $Lt$ of $_r$ and $_m$ and elements $x_838$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_839$ and $x_838$, for all elements $x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_837$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp4_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_837 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_839 : _r < _m) -> (x_838 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)), forall x_837 : div_mod_spec _n _m _q _r, Q_ x_837 .", "predict": "Axiom div_mod_spec_rect_CProp4_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_837 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_839 : _r < _m) -> (x_838 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)), forall x_837 : div_mod_spec _n _m _q _r, Q_ x_837 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_iter. Let $g$ be a function from natural numbers to natural numbers. Then for all natural numbers $a$, for all functions $__$ from natural numbers $x$ to elements of $Leq$ of $x$ and $g$ applied to $x$, for all natural numbers $i$, $a$ is less than or equal to $iter$ applied to $Nat$ and $g$ and $i$ and $a$.\nassistant\n", "label": "le_iter : g : (__ : Nat -> Nat) -> a : Nat -> __ : (x : Nat -> Leq x (g x)) -> i : Nat -> Leq a (iter Nat g i a) .", "predict": "le_iter : g : (__ : Nat -> Nat) -> a : Nat -> __ : (x : Nat -> Leq x (g x)) -> i : Nat -> Leq a (iter Nat g i a) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_times_to_lt_div. For all natural numbers $m$ and $n$ and $q$, if $n$ is less than the product of $m$ and $q$, then the quotient of $n$ and $q$ is less than $m$.\nassistant\n", "label": "postulate lt_times_to_lt_div : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt n (times m q)) -> Lt (div n q) m", "predict": "postulate lt_times_to_lt_div : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt n (times m q)) -> Lt (div n q) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_plus_to_le. For all natural numbers $n$ and $m$ and $p$, if $n$ is equal to the sum of $m$ and $p$, then $m$ is less than or equal to $n$.\nassistant\n", "label": "eq_plus_to_le : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Leq m n .", "predict": "eq_plus_to_le : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Leq m n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nF3_ind_aux. Let $A1$ and $A2$ and $A3$ be sets. Then for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers, for all elements $P$ of $relation3$ of $A1$ and $A2$ and $A3$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$, for all natural numbers $n$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, if $f$ applied to $a1$ and $a2$ and $a3$ is equal to $n$, then $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "f3_ind_aux : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> n : Nat -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3 .", "predict": "f3_ind_aux : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> n : Nat -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMinus_plus_plus_l. For all natural numbers $x$ and $y$ and $h$, the difference of the sum of $x$ and $h$ and the sum of $y$ and $h$ is equal to the difference of $x$ and $y$.\nassistant\n", "label": "postulate minus_plus_plus_l : (x : Nat) -> (y : Nat) -> (h : Nat) -> Eq (minus (plus x h) (plus y h)) (minus x y)", "predict": "postulate minus_plus_plus_l : (x : Nat) -> (y : Nat) -> (h : Nat) -> Eq (minus (plus x h) (plus y h)) (minus x y)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_n_to_le. For all functions $h$ from natural numbers to natural numbers, for all natural numbers $k$ and $n$, if $k$ is less than or equal to $n$, then for all elements $__1$ of $permut$ of $h$ and $n$, for all functions $__2$ from natural numbers $m$ and elements $__2$ of $Lt$ of $m$ and $k$ to elements of $Eq$ of $h$ applied to $m$ and $m$, for all natural numbers $j$, if $k$ is less than or equal to $j$, then if $j$ is less than or equal to $n$, then $k$ is less than or equal to $h$ applied to $j$.\nassistant\n", "label": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)", "predict": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMonotonic_div. Let $n$ be a natural number. Then if $0$ is less than $n$, then $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to the quotient of $m$ and $n$.\nassistant\n", "label": "postulate monotonic_div : (n : Nat) -> (_ : Lt 0 n) -> monotonic Nat Leq (\\ m : Nat -> div m n)", "predict": "postulate monotonic_div : (n : Nat) -> (_ : Lt 0 n) -> monotonic Nat Leq (\\ m : Nat -> div m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPermut_O_to_eq_O. Let $h$ be a function from natural numbers to natural numbers. Then for all elements $__$ of $permut$ of $h$ and $0$, $h$ applied to $0$ is equal to $0$.\nassistant\n", "label": "permut_O_to_eq_O : h : (__ : Nat -> Nat) -> __ : permut h 0 -> Eq (h 0) 0 .", "predict": "permut_O_to_eq_O : h : (__ : Nat -> Nat) -> __ : permut h 0 -> Eq (h 0) 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPi_p_primeb_dividesb. Let $n$ be a natural number. Then if $0$ is less than $n$, then $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $andb$ applied to $primeb$ applied to $p$ and $dividesb$ applied to $p$ and $n$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and $ord$ applied to $n$ and $p$.\nassistant\n", "label": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))", "predict": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_n_r. Let $n$ and $m$ be natural numbers. Then $m$ is less than or equal to the sum of $m$ and $n$.\nassistant\n", "label": "axiom le_plus_n_r (n m : Nat) : m ≤ m + n", "predict": "axiom le_plus_n_r (n m : Nat) : m ≤ m + n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrimes_below2. $primes_below$ holds for $nil$ applied to $Nat$ and $2$.\nassistant\n", "label": "Axiom primes_below2 : primes_below (nil nat) 2 .", "predict": "Axiom primes_below2 : primes_below (nil nat) 2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_inv_S1. For all natural numbers $x$ and $y$, if the sum of $x$ and $1$ is less than or equal to $y$, then $ex2$ holds for $Nat$ and the function that maps $z$ to $Leq$ applied to $x$ and $z$ and the function that maps $z$ to $Eq$ applied to $y$ and the sum of $z$ and $1$.\nassistant\n", "label": "le_inv_S1 : x : Nat -> y : Nat -> __ : Leq (plus x (nd 1)) y -> ex2 Nat (z : Nat => Leq x z) (z : Nat => Eq y (plus z (nd 1))) .", "predict": "le_inv_S1 : x : Nat -> y : Nat -> __ : Leq (plus x (nd 1)) y -> ex2 Nat (z : Nat => Leq x z) (z : Nat => Eq y (plus z (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax_spec_ind_body. For all natural numbers $_n$, for all functions $_f$ from natural numbers to booleans, for all functions $Q_$ from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions, for all functions $_H_found_max_spec$ from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $x_975$ and $x_974$ and $x_973$, for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $x_976$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "Axiom max_spec_ind_body : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall Q_ : ((x_971 : nat) -> (_x_972 : max_spec _n _f x_971) -> Prop), forall _H_found_max_spec : ((m : nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)), forall _H_not_found_max_spec : ((x_976 : (i : nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)), forall x_971 : nat, forall x_972 : max_spec _n _f x_971, Q_ x_971 x_972 .", "predict": "Axiom max_spec_ind_body : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall Q_ : ((x_971 : nat) -> (_x_972 : max_spec _n _f x_971) -> Prop), forall _H_found_max_spec : ((m : nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)), forall _H_not_found_max_spec : ((x_976 : (i : nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)), forall x_971 : nat, forall x_972 : max_spec _n _f x_971, Q_ x_971 x_972 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_plus. Let $n1$ and $n2$ and $m1$ and $m2$ be natural numbers. Then if $n1$ is less than or equal to $n2$, then if $m1$ is less than or equal to $m2$, then the sum of $n1$ and $m1$ is less than or equal to the sum of $n2$ and $m2$.\nassistant\n", "label": "Axiom le_plus : forall n1 : nat, forall n2 : nat, forall m1 : nat, forall m2 : nat, forall x__ : Leq n1 n2, forall __1 : Leq m1 m2, Leq (n1 + m1) (n2 + m2) .", "predict": "Axiom le_plus : forall n1 : nat, forall n2 : nat, forall m1 : nat, forall m2 : nat, forall x__ : Leq n1 n2, forall __1 : Leq m1 m2, Leq (n1 + m1) (n2 + m2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNull. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Dop$ of $A$ and $nil$, for all elements $a$ of $A$, $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $nil$ is equal to $nil$.\nassistant\n", "label": "postulate null : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> Eq (prod A nil xxx a nil) nil", "predict": "postulate null : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> Eq (prod A nil xxx a nil) nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLeb_body. Let $__$ and $__1$ be natural numbers. Then $bool$.\nassistant\n", "label": "axiom leb_body (x__ __1 : Nat) : bool", "predict": "axiom leb_body (x__ __1 : Nat) : bool"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_n_O. Let $n$ be a natural number. Then $0$ is equal to the product of $n$ and $0$.\nassistant\n", "label": "Axiom times_n_O : forall n : nat, 0 = n * 0 .", "predict": "Axiom times_n_O : forall n : nat, 0 = n * 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_Type3_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_867$ of $Aop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_867$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_867$.\nassistant\n", "label": "axiom Aop_rect_Type3_body (A : Set) (_nil : A) (Q_ : (_x_867 : Aop A _nil) -> Type3) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_867 : Aop A _nil) : Q_ x_867", "predict": "axiom Aop_rect_Type3_body (A : Set) (_nil : A) (Q_ : (_x_867 : Aop A _nil) -> Type3) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_867 : Aop A _nil) : Q_ x_867"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_step. For all sets $B$, for all functions $R$ from elements of $B$ and elements $__1$ of $B$ to propositions, for all elements $b1$ and $b2$ of $B$, for all elements $__$ of $R$ of $b1$ and $b2$, $lstar$ holds for $B$ and $R$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "Axiom lstar_step : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b1 : B, forall b2 : B, forall x__ : R b1 b2, lstar B R 1 b1 b2 .", "predict": "Axiom lstar_step : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b1 : B, forall b2 : B, forall x__ : R b1 b2, lstar B R 1 b1 b2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_p. For all natural numbers $p$, if $1$ is less than $p$, then $p_ord$ applied to $p$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $1$ and $1$.\nassistant\n", "label": "postulate p_ord_p : (p : Nat) -> (_ : Lt 1 p) -> Eq (p_ord p p) (mk_Prod Nat Nat 1 1)", "predict": "postulate p_ord_p : (p : Nat) -> (_ : Lt 1 p) -> Eq (p_ord p p) (mk_Prod Nat Nat 1 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type0. For all sets $_A$, for all functions $Q_$ from elements $_x_927$ of $range$ of $_A$ to sets, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_927$ of $range$ of $_A$, $Q_$ holds for $x_927$.\nassistant\n", "label": "postulate range_rect_Type0 : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927", "predict": "postulate range_rect_Type0 : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTrue_min. For all functions $f$ from natural numbers to booleans, for all natural numbers $b$, if $f$ applied to $b$ is equal to $true$, then for all natural numbers $n$, $min$ applied to $n$ and $b$ and $f$ is equal to $b$.\nassistant\n", "label": "axiom true_min (f : (x__ : Nat) -> bool) (b : Nat) (x__ : f b = true) (n : Nat) : min n b f = b", "predict": "axiom true_min (f : (x__ : Nat) -> bool) (b : Nat) (x__ : f b = true) (n : Nat) : min n b f = b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_eq_n_Sn. For all natural numbers $n$, $n$ is not equal to the sum of $n$ and $1$.\nassistant\n", "label": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) .", "predict": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBijn_transpose_l. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$ and $i$ and $j$, if $i$ is less than or equal to $n$, then if $j$ is less than or equal to $n$, then for all elements $__2$ of $bijn$ of $f$ and $n$, $bijn$ holds for the function that maps $p$ to $transpose$ applied to $i$ and $j$ and $f$ applied to $p$ and $n$.\nassistant\n", "label": "bijn_transpose_l : f : (__ : Nat -> Nat) -> n : Nat -> i : Nat -> j : Nat -> __ : Leq i n -> __1 : Leq j n -> __2 : bijn f n -> bijn (p : Nat => transpose i j (f p)) n .", "predict": "bijn_transpose_l : f : (__ : Nat -> Nat) -> n : Nat -> i : Nat -> j : Nat -> __ : Leq i n -> __1 : Leq j n -> __2 : bijn f n -> bijn (p : Nat => transpose i j (f p)) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMatch_lstar_r. Let $B$ be a set. Then for all elements $_R$ of $relation$ of $B$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from natural numbers and elements $__1$ of $B$ and elements $__2$ of $B$ and elements $z$ of $lstar_r$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_sort$, for all functions $case_lstar_r_O$ from elements $b$ of $B$ to elements of $return_type$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$, for all functions $case_lstar_r_S$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $__1$ of $_R$ of $b$ and $b2$ to elements of $return_type$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $__$ and $b2$ and $__1$, for all natural numbers $__$, for all elements $__1$ and $__2$ of $B$, for all elements $z$ of $lstar_r$ of $B$ and $_R$ and $__$ and $__1$ and $__2$, $return_type$ holds for $__$ and $__1$ and $__2$ and $z$.\nassistant\n", "label": "match_lstar_r : B : Set -> _R : relation B -> return_sort : Sort -> return_type : (__ : Nat -> __1 : B -> __2 : B -> z : lstar_r B _R __ __1 __2 -> return_sort) -> case_lstar_r_O : (b : B -> return_type 0 b b (lstar_r_O B _R b)) -> case_lstar_r_S : (l : Nat -> b1 : B -> b : B -> __ : lstar_r B _R l b1 b -> b2 : B -> __1 : _R b b2 -> return_type (plus l (nd 1)) b1 b2 (lstar_r_S B _R l b1 b __ b2 __1)) -> __ : Nat -> __1 : B -> __2 : B -> z : lstar_r B _R __ __1 __2 -> return_type __ __1 __2 z .", "predict": "match_lstar_r : B : Set -> _R : relation B -> return_sort : Sort -> return_type : (__ : Nat -> __1 : B -> __2 : B -> z : lstar_r B _R __ __1 __2 -> return_sort) -> case_lstar_r_O : (b : B -> return_type 0 b b (lstar_r_O B _R b)) -> case_lstar_r_S : (l : Nat -> b1 : B -> b : B -> __ : lstar_r B _R l b1 b -> b2 : B -> __1 : _R b b2 -> return_type (plus l (nd 1)) b1 b2 (lstar_r_S B _R l b1 b __ b2 __1)) -> __ : Nat -> __1 : B -> __2 : B -> z : lstar_r B _R __ __1 __2 -> return_type __ __1 __2 z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_rect_Type3. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_895$ of $ACop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_895$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_895$.\nassistant\n", "label": "ACop_rect_Type3 : A : Set -> _nil : A -> Q_ : (_x_895 : ACop A _nil -> Type3) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_895 : ACop A _nil -> Q_ x_895 .", "predict": "ACop_rect_Type3 : A : Set -> _nil : A -> Q_ : (_x_895 : ACop A _nil -> Type3) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_895 : ACop A _nil -> Q_ x_895 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nSmallest_factor. For all natural numbers $__$, $Nat$.\nassistant\n", "label": "smallest_factor : __ : Nat -> Nat .", "predict": "smallest_factor : __ : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMdef. Let $m$ be a natural number. Then $M$ applied to $m$ is equal to $bc$ applied to the sum of the product of $2$ and $m$ and $1$ and $m$.\nassistant\n", "label": "axiom Mdef (m : Nat) : M m = bc (2 * m + 1) m", "predict": "axiom Mdef (m : Nat) : M m = bc (2 * m + 1) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_gcd_r. For all natural numbers $n$ and $m$, the greatest common divisor of $n$ and $m$ is divisible by $m$.\nassistant\n", "label": "postulate divides_gcd_r : (n : Nat) -> (m : Nat) -> divisible (gcd n m) m", "predict": "postulate divides_gcd_r : (n : Nat) -> (m : Nat) -> divisible (gcd n m) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_CProp1. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_965$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_965$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_965$.\nassistant\n", "label": "postulate Dop_rect_CProp1 : (A : Set) -> (_nil : A) -> (Q_ : (_x_965 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_965 : Dop A _nil) -> Q_ x_965", "predict": "postulate Dop_rect_CProp1 : (A : Set) -> (_nil : A) -> (Q_ : (_x_965 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_965 : Dop A _nil) -> Q_ x_965"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type2_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_825$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type2$, for all functions $_H_div_mod_spec_intro$ from elements $x_827$ of $Lt$ of $_r$ and $_m$ and elements $x_826$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_827$ and $x_826$, for all elements $x_825$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_825$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type2_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_825 : div_mod_spec _n _m _q _r) -> Type2), forall _H_div_mod_spec_intro : ((x_827 : _r < _m) -> (x_826 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826)), forall x_825 : div_mod_spec _n _m _q _r, Q_ x_825 .", "predict": "Axiom div_mod_spec_rect_Type2_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_825 : div_mod_spec _n _m _q _r) -> Type2), forall _H_div_mod_spec_intro : ((x_827 : _r < _m) -> (x_826 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826)), forall x_825 : div_mod_spec _n _m _q _r, Q_ x_825 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEnum. Let $A$ be a set. Then for all elements $_xxx$ of $range$ of $A$, for all natural numbers $_x_942$, $A$.\nassistant\n", "label": "postulate enum : (A : Set) -> (_xxx : range A) -> (_x_942 : Nat) -> A", "predict": "postulate enum : (A : Set) -> (_xxx : range A) -> (_x_942 : Nat) -> A"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTimes_2_pred. For all natural numbers $n$, the product of $2$ and $pred$ applied to $n$ is less than or equal to $pred$ applied to the product of $2$ and $n$.\nassistant\n", "label": "postulate times_2_pred : (n : Nat) -> Leq (times 2 (pred n)) (pred (times 2 n))", "predict": "postulate times_2_pred : (n : Nat) -> Leq (times 2 (pred n)) (pred (times 2 n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_rect_CProp0. Let $Q_$ be a function from natural numbers $_x_413$ to propositions. Then for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_414$ and elements $_x_416$ of $Q_$ of $x_414$ to elements of $Q_$ of the sum of $x_414$ and $1$, for all natural numbers $x_413$, $Q_$ holds for $x_413$.\nassistant\n", "label": "Axiom nat_rect_CProp0 : forall Q_ : ((_x_413 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_414 : nat) -> (_x_416 : Q_ x_414) -> Q_ (x_414 + 1)), forall x_413 : nat, Q_ x_413 .", "predict": "Axiom nat_rect_CProp0 : forall Q_ : ((_x_413 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_414 : nat) -> (_x_416 : Q_ x_414) -> Q_ (x_414 + 1)), forall x_413 : nat, Q_ x_413 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_m. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $b$, $Nat$.\nassistant\n", "label": "postulate let_m : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> Nat", "predict": "postulate let_m : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_gcd_times. For all natural numbers $m$ and $n$ and $p$, if $0$ is less than $p$, then the greatest common divisor of $m$ and $n$ is less than or equal to the greatest common divisor of $m$ and the product of $n$ and $p$.\nassistant\n", "label": "axiom le_gcd_times (m n p : Nat) (x__ : 0 < p) : gcd m n ≤ gcd m (n * p)", "predict": "axiom le_gcd_times (m n p : Nat) (x__ : 0 < p) : gcd m n ≤ gcd m (n * p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_ind. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1500$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1501$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_ind : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1500 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1501 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "Aop_inv_ind : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1500 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1501 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrime_nth_prime. Let $n$ be a natural number. Then $nth_prime$ applied to $n$ is prime.\nassistant\n", "label": "prime_nth_prime : n : Nat -> prime (nth_prime n) .", "predict": "prime_nth_prime : n : Nat -> prime (nth_prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nGcd_1_to_lt_n. Let $i$ and $n$ be natural numbers. Then if $1$ is less than $n$, then if $i$ is less than or equal to $n$, then if the greatest common divisor of $i$ and $n$ is equal to $1$, then $i$ is less than $n$.\nassistant\n", "label": "gcd_1_to_lt_n : i : Nat -> n : Nat -> __ : Lt (nd 1) n -> __1 : Leq i n -> __2 : Eq (gcd i n) (nd 1) -> Lt i n .", "predict": "gcd_1_to_lt_n : i : Nat -> n : Nat -> __ : Lt (nd 1) n -> __1 : Leq i n -> __2 : Eq (gcd i n) (nd 1) -> Lt i n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPsi_def. For all natural numbers $n$, $Psi$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and the logarithm of $p$ and $n$.\nassistant\n", "label": "axiom psi_def (n : Nat) : Psi n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (log p n))", "predict": "axiom psi_def (n : Nat) : Psi n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (log p n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLeq_sqrt_n. Let $n$ be a natural number. Then the product of the square root of $n$ and the square root of $n$ is less than or equal to $n$.\nassistant\n", "label": "leq_sqrt_n : n : Nat -> Leq (times (sqrt n) (sqrt n)) n .", "predict": "leq_sqrt_n : n : Nat -> Leq (times (sqrt n) (sqrt n)) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTheta_def. Let $n$ be a natural number. Then $theta$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $p$.\nassistant\n", "label": "postulate theta_def : (n : Nat) -> Eq (theta n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> p))", "predict": "postulate theta_def : (n : Nat) -> Eq (theta n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin. Let $__$ and $__1$ be natural numbers. Then for all functions $__2$ from natural numbers $__2$ to booleans, $Nat$.\nassistant\n", "label": "axiom min (x__ __1 : Nat) (__2 : (__2 : Nat) -> bool) : Nat", "predict": "axiom min (x__ __1 : Nat) (__2 : (__2 : Nat) -> bool) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_discr. For all natural numbers $a1$ and $a2$ and $a3$ and $a4$, for all elements $x$ and $y$ of $div_mod_spec$ of $a1$ and $a2$ and $a3$ and $a4$, if $x$ is equal to $y$, then $match_div_mod_spec$ holds for $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $t0$ and $t1$ to $match_div_mod_spec$ applied to $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $u0$ and $u1$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R0$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and $u0$ and the function that maps $e0$ to $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R1$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and the function that maps $x_19$ and $_x_20$ to the function that maps $x0$ and $p0$ to $Eq$ applied to $a1$ and the sum of the product of $a3$ and $a2$ and $a4$ applied to $x_19$ and $_x_20$ and $t1$ and $u0$ and $e0$ and $u1$ and the function that maps $_e1$ to $P$ and the function that maps $_z53$ to $P$ and $y$ and $x$.\nassistant\n", "label": "Axiom div_mod_spec_discr : forall a1 : nat, forall a2 : nat, forall a3 : nat, forall a4 : nat, forall x : div_mod_spec a1 a2 a3 a4, forall y : div_mod_spec a1 a2 a3 a4, forall _e : (x = y), match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (fun x__ => univ Type2) (fun t0 => fun t1 => match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (fun x__ => univ Type2) (fun u0 => fun u1 => prod (Type1 + 1) Type1 (univ Type1) (fun P => prod Type1 Type1 (prod Prop Type1 (R0 (a4 < a2) t0 = u0) (fun e0 => prod Prop Type1 (R1 (a4 < a2) t0 (fun x_19 => fun _x_20 => (fun x0 => fun p0 => a1 = a3 * a2 + a4) x_19 _x_20) t1 u0 e0 = u1) (fun _e1 => P))) (fun _z53 => P))) y) x .", "predict": "Axiom div_mod_spec_discr : forall a1 : nat, forall a2 : nat, forall a3 : nat, forall a4 : nat, forall x : div_mod_spec a1 a2 a3 a4, forall y : div_mod_spec a1 a2 a3 a4, forall _e : (x = y), match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (fun x__ => univ Type2) (fun t0 => fun t1 => match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (fun x__ => univ Type2) (fun u0 => fun u1 => prod (Type1 + 1) Type1 (univ Type1) (fun P => prod Type1 Type1 (prod Prop Type1 (R0 (a4 < a2) t0 = u0) (fun e0 => prod Prop Type1 (R1 (a4 < a2) t0 (fun x_19 => fun _x_20 => (fun x0 => fun p0 => a1 = a3 * a2 + a4) x_19 _x_20) t1 u0 e0 = u1) (fun _e1 => P))) (fun _z53 => P))) y) x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nF3_ind_aux. Let $A1$ and $A2$ and $A3$ be sets. Then for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers, for all elements $P$ of $relation3$ of $A1$ and $A2$ and $A3$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$, for all natural numbers $n$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, if $f$ applied to $a1$ and $a2$ and $a3$ is equal to $n$, then $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "axiom f3_ind_aux (A1 A2 A3 : Set) (f : (x__ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) (P : relation3 A1 A2 A3) (x__ : (n : Nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (x__ : f a1 a2 a3 < n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : f a1 a2 a3 = n) -> P a1 a2 a3) (n : Nat) (a1 : A1) (a2 : A2) (a3 : A3) (__1 : f a1 a2 a3 = n) : P a1 a2 a3", "predict": "axiom f3_ind_aux (A1 A2 A3 : Set) (f : (x__ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) (P : relation3 A1 A2 A3) (x__ : (n : Nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (x__ : f a1 a2 a3 < n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : f a1 a2 a3 = n) -> P a1 a2 a3) (n : Nat) (a1 : A1) (a2 : A2) (a3 : A3) (__1 : f a1 a2 a3 = n) : P a1 a2 a3"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15625. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "axiom let_clause_15625 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15625 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $__$ be a natural number. Then we can say that $__$ is prime.\nassistant\n", "label": "prime : __ : Nat -> Prop .", "predict": "prime : __ : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_distr. For all natural numbers $n$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $R$ of $Dop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all elements $a$ of $B$, $let_mop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and $a$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $let_aop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $let_aop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and the function that maps $i$ to $let_mop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and $a$ and $f$ applied to $i$.\nassistant\n", "label": "Axiom bigop_distr : forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall R : Dop B nil, forall f : ((x__ : nat) -> B), forall a : B, let_mop n p B nil R f a a (bigop n (fun i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (fun i => f i)) = bigop n (fun i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (fun i => let_mop n p B nil R f a a (f i)) .", "predict": "Axiom bigop_distr : forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall R : Dop B nil, forall f : ((x__ : nat) -> B), forall a : B, let_mop n p B nil R f a a (bigop n (fun i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (fun i => f i)) = bigop n (fun i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (fun i => let_mop n p B nil R f a a (f i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_plus_to_minus. For all natural numbers $n$ and $m$ and $p$, if $n$ is less than or equal to the sum of $p$ and $m$, then the difference of $n$ and $m$ is less than or equal to $p$.\nassistant\n", "label": "Axiom le_plus_to_minus : forall n : nat, forall m : nat, forall p : nat, forall x__ : Leq n (p + m), Leq (n - m) p .", "predict": "Axiom le_plus_to_minus : forall n : nat, forall m : nat, forall p : nat, forall x__ : Leq n (p + m), Leq (n - m) p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n \\in N$. Then we can say that $bertrand$ holds for $_n$.\nassistant\n", "label": "bertrand : _n : Nat -> Prop .", "predict": "bertrand : _n : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_ind_body. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_811$ of $Lt$ of $_r$ and $_m$ and elements $x_810$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_811$ and $x_810$, for all elements $x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_809$.\nassistant\n", "label": "div_mod_spec_ind_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_809 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_811 : Lt _r _m -> x_810 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> x_809 : div_mod_spec _n _m _q _r -> Q_ x_809 .", "predict": "div_mod_spec_ind_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_809 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_811 : Lt _r _m -> x_810 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> x_809 : div_mod_spec _n _m _q _r -> Q_ x_809 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLprim_invariant. For all natural numbers $n$ and $i$, for all lists $acc$ of natural numbers, if $1$ is less than $i$, then for all elements $__1$ of $primes_below$ of $acc$ and $i$, $primes_below$ holds for $lprim$ applied to $n$ and $i$ and $acc$ and the sum of $n$ and $i$.\nassistant\n", "label": "lprim_invariant : n : Nat -> i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> primes_below (lprim n i acc) (plus n i) .", "predict": "lprim_invariant : n : Nat -> i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> primes_below (lprim n i acc) (plus n i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_rect_CProp1_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_883$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_883$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_883$.\nassistant\n", "label": "postulate Aop_rect_CProp1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_883 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_883 : Aop A _nil) -> Q_ x_883", "predict": "postulate Aop_rect_CProp1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_883 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_883 : Aop A _nil) -> Q_ x_883"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_Psi_exp1. For all natural numbers $n$, $Psi$ applied to the exponentiation of $2$ and $n$ is less than or equal to the exponentiation of $2$ and the difference of the product of $2$ and the exponentiation of $2$ and $n$ and the sum of $n$ and $2$.\nassistant\n", "label": "Axiom le_Psi_exp1 : forall n : nat, Leq (Psi (pow 2 n)) (pow 2 (2 * pow 2 n - (n + 2))) .", "predict": "Axiom le_Psi_exp1 : forall n : nat, Leq (Psi (pow 2 n)) (pow 2 (2 * pow 2 n - (n + 2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_CProp3. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_845$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_847$ of $Lt$ of $_r$ and $_m$ and elements $x_846$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_847$ and $x_846$, for all elements $x_845$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_845$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp3 (_n _m _q _r : Nat) (Q_ : (_x_845 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_847 : _r < _m) -> (x_846 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846)) (x_845 : div_mod_spec _n _m _q _r) : Q_ x_845", "predict": "axiom div_mod_spec_rect_CProp3 (_n _m _q _r : Nat) (Q_ : (_x_845 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_847 : _r < _m) -> (x_846 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846)) (x_845 : div_mod_spec _n _m _q _r) : Q_ x_845"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_discr. Let $a1$ be a set. Then for all elements $a2$ of $a1$, for all elements $x$ and $y$ of $Aop$ of $a1$ and $a2$, if $x$ is equal to $y$, then $match_Aop$ holds for $a1$ and $a2$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2", "label": "Aop_discr : a1 : Set -> a2 : a1 -> x : Aop a1 a2 -> y : Aop a1 a2 -> _e : Eq x y -> match_Aop a1 a2 (plus Type2 (nd 1)) (__ : Aop a1 a2 => univ Type2) (t0 : (__ : a1 -> __1 : a1 -> a1) => t1 : (a : a1 -> Eq (t0 a2 a) a) => t2 : (a : a1 -> Eq (t0 a a2) a) => t3 : (a : a1 -> b : a1 -> c : a1 -> Eq (t0 a (t0 b c)) (t0 (t0 a b) c)) => match_Aop a1 a2 (plus Type2 (nd 1)) (__ : Aop a1 a2 => univ Type2) (u0 : (__ : a1 -> __1 : a1 -> a1) => u1 : (a : a1 -> Eq (u0 a2 a) a) => u2 : (a : a1 -> Eq (u0 a a2) a) => u3 : (a : a1 -> b : a1 -> c : a1 -> Eq (u0 a (u0 b c)) (u0 (u0 a b) c)) => prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => prod Type1 Type1 (prod Prop Type1 (Eq (R0 (prod Set Set a1 (__ : a1 => prod Set Set a1 (__1 : a1 => a1))) t0) u0) (e0 : Eq (R0 (prod Set Set a1 (__ : a1 => prod Set Set a1 (__1 : a1 => a1))) t0) u0 => prod Prop Type1 (Eq (R1 (prod Set Set a1 (__ : a1 => prod Set Set a1 (__1 : a1 => a1))) t0 (x_19 : (__ : a1 -> __1 : a1 -> a1) => _x_20 : Eq t0 x_19 => (x0 : (__ : a1 -> __1 : a1 -> a1) => p0 : Eq t0 x0 => prod Set Prop a1 (a : a1 => Eq (x0 a2 a) a)) x_19 _x_20) t1 u0 e0) u1) (e1 : Eq (R1 (prod Set Set a1 (__ : a1 => prod Set Set a1 (__1 : a1 => a1))) t0 (x_19 : (__ : a1 -> __1 : a1 -> a1) => _x_20 : Eq t0 x_19 => (x0 : (__ : a1 -> __1 : a1 -> a1) => p0 : Eq t0 x0 => prod Set Prop a1 (a : a1 => Eq (x0 a2 a) a)) x_19 _x_20) t1 u0 e0) u1 => prod Prop Type1 (Eq (R2 (prod Set Set a1 (__ : a1 => prod Set Set a1 (__1 : a1 => a1))) t0 (x0 : (__ : a1 -> __1 : a1 -> a1) => __ : Eq t0 x0 => (x01 : (__1 : a1 -> __2 : a1 -> a1) => p0 : Eq t0 x01 => prod Set Prop a1 (a : a1 => Eq (x01 a2 a) a)) x0 __) t1 (x0 : (__ : a1 -> __1 : a1 -> a1) => p0 : Eq t0 x0 => x1 : (x01 : (__ : a1 -> __1 : a1 -> a1) => p01 : Eq t0 x01 => prod Set Prop a1 (a : a1 => Eq (x01 a", "predict": "$ and the function that maps (a : a1) => prod (Type2) (a1) (a2) (a : a1 => (b : a1 => Eq (plus (times a b) (times b a)) 0)) (Aop_discr : (a : a1) -> (b : a1) -> Eq (Aop a1 a2 (plus (times a b) (times b a))) (plus (times a2 b) (times b a2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_Type5. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_893$ of $ACop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_893$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_893$.\nassistant\n", "label": "axiom ACop_rect_Type5 (A : Set) (_nil : A) (Q_ : (_x_893 : ACop A _nil) -> Type5) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_893 : ACop A _nil) : Q_ x_893", "predict": "axiom ACop_rect_Type5 (A : Set) (_nil : A) (Q_ : (_x_893 : ACop A _nil) -> Type5) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_893 : ACop A _nil) : Q_ x_893"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_Type1_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_925$ of $range$ of $_A$ to elements of $Type1$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_925$ of $range$ of $_A$, $Q_$ holds for $x_925$.\nassistant\n", "label": "range_rect_Type1_body : _A : Set -> Q_ : (_x_925 : range _A -> Type1) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_925 : range _A -> Q_ x_925 .", "predict": "range_rect_Type1_body : _A : Set -> Q_ : (_x_925 : range _A -> Type1) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_925 : range _A -> Q_ x_925 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCongruent_n_n. Let $n$ and $p$ be natural numbers. Then $congruent$ holds for $n$ and $n$ and $p$.\nassistant\n", "label": "postulate congruent_n_n : (n : Nat) -> (p : Nat) -> congruent n n p", "predict": "postulate congruent_n_n : (n : Nat) -> (p : Nat) -> congruent n n p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLstar_lstar_r. For all sets $B$, for all elements $R$ of $relation$ of $B$, for all natural numbers $l$, for all elements $b1$ and $b2$ of $B$, for all elements $__$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, $lstar_r$ holds for $B$ and $R$ and $l$ and $b1$ and $b2$.\nassistant\n", "label": "postulate lstar_lstar_r : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> lstar_r B R l b1 b2", "predict": "postulate lstar_lstar_r : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> lstar_r B R l b1 b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nComm. Let $A$ be a set. Then for all elements $nil$ of $A$, for all elements $xxx$ of $ACop$ of $A$ and $nil$, for all elements $a$ and $b$ of $A$, $op$ applied to $A$ and $nil$ and $aop$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ is equal to $op$ applied to $A$ and $nil$ and $aop$ applied to $A$ and $nil$ and $xxx$ and $b$ and $a$.\nassistant\n", "label": "postulate comm : (A : Set) -> (nil : A) -> (xxx : ACop A nil) -> (a : A) -> (b : A) -> Eq (op A nil (aop A nil xxx) a b) (op A nil (aop A nil xxx) b a)", "predict": "postulate comm : (A : Set) -> (nil : A) -> (xxx : ACop A nil) -> (a : A) -> (b : A) -> Eq (op A nil (aop A nil xxx) a b) (op A nil (aop A nil xxx) b a)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSquare_S. For all natural numbers $a$, the exponentiation of the sum of $a$ and $1$ and $2$ is equal to the sum of the sum of the exponentiation of $a$ and $2$ and the product of $2$ and $a$ and $1$.\nassistant\n", "label": "Axiom square_S : forall a : nat, pow (a + 1) 2 = pow a 2 + 2 * a + 1 .", "predict": "Axiom square_S : forall a : nat, pow (a + 1) 2 = pow a 2 + 2 * a + 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_rect_CProp2_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_881$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_881$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_881$.\nassistant\n", "label": "postulate Aop_rect_CProp2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_881 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_881 : Aop A _nil) -> Q_ x_881", "predict": "postulate Aop_rect_CProp2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_881 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_881 : Aop A _nil) -> Q_ x_881"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPlus_to_minus. Let $n$ and $m$ and $p$ be natural numbers. Then if $n$ is equal to the sum of $m$ and $p$, then the difference of $n$ and $m$ is equal to $p$.\nassistant\n", "label": "postulate plus_to_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Eq n (plus m p)) -> Eq (minus n m) p", "predict": "postulate plus_to_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Eq n (plus m p)) -> Eq (minus n m) p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_inv_rect_CProp4. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1668$ of $range$ of $x1$ to propositions, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1669$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate range_inv_rect_CProp4 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1668 : range x1) -> Prop) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1669 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm", "predict": "postulate range_inv_rect_CProp4 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1668 : range x1) -> Prop) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1669 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_inv_rect_Type2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1452$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type2$, for all functions $_H1$ from elements $x_827$ of $Lt$ of $x4$ and $x2$ and elements $x_826$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1453$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_827$ and $x_826$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate div_mod_spec_inv_rect_Type2 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1452 : div_mod_spec x1 x2 x3 x4) -> Type2) -> (_H1 : (x_827 : Lt x4 x2) -> (x_826 : Eq x1 (plus (times x3 x2) x4)) -> (_z1453 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P Hterm", "predict": "postulate div_mod_spec_inv_rect_Type2 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1452 : div_mod_spec x1 x2 x3 x4) -> Type2) -> (_H1 : (x_827 : Lt x4 x2) -> (x_826 : Eq x1 (plus (times x3 x2) x4)) -> (_z1453 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDistributive_times_plus_r. Let $a$ and $b$ and $c$ be natural numbers. Then the product of the sum of $b$ and $c$ and $a$ is equal to the sum of the product of $b$ and $a$ and the product of $c$ and $a$.\nassistant\n", "label": "Axiom distributive_times_plus_r : forall a : nat, forall b : nat, forall c : nat, (b + c) * a = b * a + c * a .", "predict": "Axiom distributive_times_plus_r : forall a : nat, forall b : nat, forall c : nat, (b + c) * a = b * a + c * a ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_O_exp. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then $0$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "Axiom lt_O_exp : forall n : nat, forall m : nat, forall x__ : (0 < n), 0 < pow n m .", "predict": "Axiom lt_O_exp : forall n : nat, forall m : nat, forall x__ : (0 < n), 0 < pow n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrimeb_false_to_not_prime. For all natural numbers $n$, if $primeb$ applied to $n$ is equal to absurdity, then $n$ is not prime.\nassistant\n", "label": "Axiom primeb_false_to_not_prime : forall n : nat, forall x__ : (primeb n = false), ~ prime n .", "predict": "Axiom primeb_false_to_not_prime : forall n : nat, forall x__ : (primeb n = false), ~ prime n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLstar_S. Let $B$ be a set. Then for all elements $R$ of $relation$ of $B$, for all elements $b1$ and $b$ of $B$, for all elements $__$ of $R$ of $b1$ and $b$, for all natural numbers $l$, for all elements $b2$ of $B$, for all elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$, $lstar$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "postulate lstar_S : (B : Set) -> (R : relation B) -> (b1 : B) -> (b : B) -> (_ : R b1 b) -> (l : Nat) -> (b2 : B) -> (__1 : lstar B R l b b2) -> lstar B R (plus l 1) b1 b2", "predict": "postulate lstar_S : (B : Set) -> (R : relation B) -> (b1 : B) -> (b : B) -> (_ : R b1 b) -> (l : Nat) -> (b2 : B) -> (__1 : lstar B R l b b2) -> lstar B R (plus l 1) b1 b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_log_n_n. Let $p$ and $n$ be natural numbers. Then if $1$ is less than $p$, then if $0$ is less than $n$, then the logarithm of $p$ and $n$ is less than $n$.\nassistant\n", "label": "axiom lt_log_n_n (p n : Nat) (x__ : 1 < p) (__1 : 0 < n) : log p n < n", "predict": "axiom lt_log_n_n (p n : Nat) (x__ : 1 < p) (__1 : 0 < n) : log p n < n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_to_not_lt. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then $m$ is not less than $n$.\nassistant\n", "label": "postulate le_to_not_lt : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> not (Lt m n)", "predict": "postulate le_to_not_lt : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> not (Lt m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.\nassistant\n", "label": "axiom let_clause_15621 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15621 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_O_log. Let $p$ and $n$ be natural numbers. Then if $1$ is less than $n$, then if $p$ is less than or equal to $n$, then $0$ is less than the logarithm of $p$ and $n$.\nassistant\n", "label": "axiom lt_O_log (p n : Nat) (x__ : 1 < n) (__1 : p ≤ n) : 0 < log p n", "predict": "axiom lt_O_log (p n : Nat) (x__ : 1 < n) (__1 : p ≤ n) : 0 < log p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExample12. $nth_prime (3)= 7$.\nassistant\n", "label": "example12 : Eq (nth_prime (nd 3)) (nd 7) .", "predict": "example12 : Eq (nth_prime (nd 3)) (nd 7) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMod_plus_times. For all natural numbers $m$ and $q$ and $r$, if $r$ is less than $m$, then $mod$ applied to the sum of the product of $q$ and $m$ and $r$ and $m$ is equal to $r$.\nassistant\n", "label": "Axiom mod_plus_times : forall m : nat, forall q : nat, forall r : nat, forall x__ : (r < m), mod (q * m + r) m = r .", "predict": "Axiom mod_plus_times : forall m : nat, forall q : nat, forall r : nat, forall x__ : (r < m), mod (q * m + r) m = r ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_CProp0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_913$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_913$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_913$.\nassistant\n", "label": "axiom ACop_rect_CProp0 (A : Set) (_nil : A) (Q_ : (_x_913 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_913 : ACop A _nil) : Q_ x_913", "predict": "axiom ACop_rect_CProp0 (A : Set) (_nil : A) (Q_ : (_x_913 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_913 : ACop A _nil) : Q_ x_913"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFact_pi_p2. For all natural numbers $n$, the factorial of the product of $2$ and $n$ is equal to $bigop$ applied to the sum of the product of $2$ and $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and the product of $2$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the product of the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ and the exponentiation of $p$ and $mod$ applied to the quotient of the product of $2$ and $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ and $2$.\nassistant\n", "label": "postulate fact_pi_p2 : (n : Nat) -> Eq (factorial (times 2 n)) (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> times (pow p (times 2 (div n (pow p (plus i 1))))) (pow p (mod (div (times 2 n) (pow p (plus i 1))) 2)))))", "predict": "postulate fact_pi_p2 : (n : Nat) -> Eq (factorial (times 2 n)) (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> times (pow p (times 2 (div n (pow p (plus i 1)))))) (pow p (mod (div (times 2 n) (pow p (plus i 1))) 2)))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_n_Sm_elim. For all natural numbers $n$ and $m$, if $n$ is less than or equal to the sum of $m$ and $1$, then for all propositions $P$, for all functions $__1$ from elements $__1$ of $Leq$ of the sum of $n$ and $1$ and the sum of $m$ and $1$ to elements of $P$, for all functions $__2$ from elements $__2$ of $Eq$ of $n$ and the sum of $m$ and $1$ to elements of $P$, $P$.\nassistant\n", "label": "le_n_Sm_elim : n : Nat -> m : Nat -> __ : Leq n (plus m (nd 1)) -> P : Prop -> __1 : (__1 : Leq (plus n (nd 1)) (plus m (nd 1)) -> P) -> __2 : (__2 : Eq n (plus m (nd 1)) -> P) -> P .", "predict": "le_n_Sm_elim : n : Nat -> m : Nat -> __ : Leq n (plus m (nd 1)) -> P : Prop -> __1 : (__1 : Leq (plus n (nd 1)) (plus m (nd 1)) -> P) -> __2 : (__2 : Eq n (plus m (nd 1)) -> P) -> P ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_B1_theta. For all natural numbers $n$, if $18$ is less than or equal to $n$, then for all elements $__1$ of $not_bertrand$ of $n$, $B1$ applied to the product of $2$ and $n$ is less than or equal to $theta$ applied to the quotient of the product of $2$ and $n$ and $3$.\nassistant\n", "label": "axiom le_B1_theta (n : Nat) (x__ : 18 ≤ n) (__1 : not_bertrand n) : B1 (2 * n) ≤ theta (2 * n / 3)", "predict": "axiom le_B1_theta (n : Nat) (x__ : 18 ≤ n) (__1 : not_bertrand n) : B1 (2 * n) ≤ theta (2 * n / 3)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_eq_n_Sn. Let $n$ be a natural number. Then $n$ is not equal to the sum of $n$ and $1$.\nassistant\n", "label": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) .", "predict": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_CProp0. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1692$ of $range$ of $x1$ to propositions, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1693$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_CProp0 (x1 : Set) (Hterm : range x1) (P : (_z1692 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1693 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_CProp0 (x1 : Set) (Hterm : range x1) (P : (_z1692 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1693 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_Type2. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1518$ of $Aop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1519$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1518 : Aop x1 x2 -> Type2) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "Aop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1518 : Aop x1 x2 -> Type2) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__ \\in N$. Then we can say that $__$ is prime.\nassistant\n", "label": "Axiom prime : forall x__ : nat, Prop .", "predict": "Axiom prime : forall x__ : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_CProp3_body. For all functions $Q_$ from natural numbers $_x_401$ to propositions, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_402$ and elements $_x_404$ of $Q_$ of $x_402$ to elements of $Q_$ of the sum of $x_402$ and $1$, for all natural numbers $x_401$, $Q_$ holds for $x_401$.\nassistant\n", "label": "axiom nat_rect_CProp3_body (Q_ : (_x_401 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_402 : Nat) -> (_x_404 : Q_ x_402) -> Q_ (x_402 + 1)) (x_401 : Nat) : Q_ x_401", "predict": "axiom nat_rect_CProp3_body (Q_ : (_x_401 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_402 : Nat) -> (_x_404 : Q_ x_402) -> Q_ (x_402 + 1)) (x_401 : Nat) : Q_ x_401"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_inv_rect_Type2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1518$ of $Aop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1519$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate Aop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : Aop x1 x2) -> (P : (_z1518 : Aop x1 x2) -> Type2) -> (_H1 : (op : (_ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> Eq (op x2 a) a) -> (_nilr : (a : x1) -> Eq (op a x2) a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> Eq (op a (op b c)) (op (op a b) c)) -> (_z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm", "predict": "postulate Aop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : Aop x1 x2) -> (P : (_z1518 : Aop x1 x2) -> Type2) -> (_H1 : (op : (_ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> Eq (op x2 a) a) -> (_nilr : (a : x1) -> Eq (op a x2) a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> Eq (op a (op b c)) (op (op a b) c)) -> (_z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_sqrt_log_n. For all natural numbers $n$ and $b$, if $2$ is less than $b$, then the product of the square root of $n$ and the logarithm of $b$ and $n$ is less than or equal to $n$.\nassistant\n", "label": "axiom le_sqrt_log_n (n b : Nat) (x__ : 2 < b) : sqrt n * log b n ≤ n", "predict": "axiom le_sqrt_log_n (n b : Nat) (x__ : 2 < b) : sqrt n * log b n ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_not_bertrand_to_bertrand1. For all natural numbers $n$, if it is not the case that $not_bertrand$ holds for $n$, then for all natural numbers $x$, if $n$ is less than or equal to $x$, then if $x$ is less than or equal to the product of $2$ and $n$, then for all functions $__3$ from natural numbers $p$ and elements $__3$ of $Lt$ of $x$ and $p$ and elements $__4$ of $Leq$ of $p$ and the product of $2$ and $n$ to elements of $not$ of $prime$ applied to $p$, $ex$ holds for $Nat$ and the function that maps $p$ to the conjunction of the conjunction of $Lt$ applied to $n$ and $p$ and $Leq$ applied to $p$ and $x$ and $prime$ applied to $p$.\nassistant\n", "label": "axiom not_not_bertrand_to_bertrand1 (n : Nat) (x__ : ¬ not_bertrand n) (x : Nat) (__1 : n ≤ x) (__2 : x ≤ 2 * n) (__3 : (p : Nat) -> (__3 : x < p) -> (__4 : p ≤ 2 * n) -> ¬ prime p) : ex Nat (λ p => n < p ∧ p ≤ x ∧ prime p)", "predict": "axiom not_not_bertrand_to_bertrand1 (n : Nat) (x__ : ¬ not_bertrand n) (x : Nat) (__1 : n ≤ x) (__2 : x ≤ 2 * n) (__3 : (p : Nat) -> (__3 : x < p) -> (__4 : p ≤ 2 * n) -> ¬ prime p) : ex Nat (λ p => n < p ∧ p ≤ x ∧ prime p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIncreasing_to_injective. Let $f$ be a function from natural numbers to natural numbers. Then for all elements $__$ of $increasing$ of $f$, $injective$ holds for $Nat$ and $Nat$ and $f$.\nassistant\n", "label": "postulate increasing_to_injective : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> injective Nat Nat f", "predict": "postulate increasing_to_injective : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> injective Nat Nat f"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLePsi_r2. For all natural numbers $n$, the exponentiation of $n$ and $prim$ applied to $n$ is less than or equal to the product of $Psi$ applied to $n$ and $Psi$ applied to $n$.\nassistant\n", "label": "lePsi_r2 : n : Nat -> Leq (pow n (prim n)) (times (Psi n) (Psi n)) .", "predict": "lePsi_r2 : n : Nat -> Leq (pow n (prim n)) (times (Psi n) (Psi n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n , __ \\in N$. Then we can say that $_n$ is less than or equal to $__$.\nassistant\n", "label": "Leq : _n : Nat -> __ : Nat -> Prop .", "predict": "Leq : _n : Nat -> __ : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInv_ltransitive. Let $B$ be a set. Then $predicate$ holds for $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $relation$ applied to $B$.\nassistant\n", "label": "axiom inv_ltransitive (B : Set) : predicate (prod Set Set Nat (λ x__ => relation B))", "predict": "axiom inv_ltransitive (B : Set) : predicate (prod Set Set Nat (λ x__ => relation B))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_Type3. Let $Q_$ be a function from natural numbers $_x_377$ to elements of $Type3$. Then for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_378$ and elements $_x_380$ of $Q_$ of $x_378$ to elements of $Q_$ of the sum of $x_378$ and $1$, for all natural numbers $x_377$, $Q_$ holds for $x_377$.\nassistant\n", "label": "axiom nat_rect_Type3 (Q_ : (_x_377 : Nat) -> Type3) (_H_O : Q_ 0) (_H_S : (x_378 : Nat) -> (_x_380 : Q_ x_378) -> Q_ (x_378 + 1)) (x_377 : Nat) : Q_ x_377", "predict": "axiom nat_rect_Type3 (Q_ : (_x_377 : Nat) -> Type3) (_H_O : Q_ 0) (_H_S : (x_378 : Nat) -> (_x_380 : Q_ x_378) -> Q_ (x_378 + 1)) (x_377 : Nat) : Q_ x_377"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_inv_rect_CProp3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1542$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1543$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Aop_inv_rect_CProp3 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1542 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1543 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm", "predict": "axiom Aop_inv_rect_CProp3 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1542 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1543 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_sigma_p. Let $n$ be a natural number. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, for all elements $__2$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the disjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and $true$ and $Lt$ applied to $g1$ applied to $i$ and $g2$ applied to $i$ and the conjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and absurdity and $Eq$ applied to $p2$ applied to $i$ and $true$ and $Lt$ applied to $0$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "axiom lt_sigma_p (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) (__2 : ex Nat (λ i => i < n ∧ (p1 i = true ∧ g1 i < g2 i ∨ (p1 i = false ∧ p2 i = true ∧ 0 < g2 i)))) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) < bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)", "predict": "axiom lt_sigma_p (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) (__2 : ex Nat (λ i => i < n ∧ (p1 i = true ∧ g1 i < g2 i ∨ (p1 i = false ∧ p2 i = true ∧ 0 < g2 i)))) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) < bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_plus_to_le. Let $n$ and $m$ and $p$ be natural numbers. Then if $n$ is equal to the sum of $m$ and $p$, then $m$ is less than or equal to $n$.\nassistant\n", "label": "eq_plus_to_le : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Leq m n .", "predict": "eq_plus_to_le : n : Nat -> m : Nat -> p : Nat -> __ : Eq n (plus m p) -> Leq m n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_times_times. For all natural numbers $a$ and $b$ and $c$, if $0$ is less than $c$, then if $0$ is less than $b$, then the quotient of $a$ and $b$ is equal to the quotient of the product of $a$ and $c$ and the product of $b$ and $c$.\nassistant\n", "label": "axiom div_times_times (a b c : Nat) (x__ : 0 < c) (__1 : 0 < b) : a / b = a * c / (b * c)", "predict": "axiom div_times_times (a b c : Nat) (x__ : 0 < c) (__1 : 0 < b) : a / b = a * c / (b * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nCongruent_ab_lt. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then $ex$ holds for $Nat$ and the function that maps $x$ to the conjunction of the conjunction of $congruent$ applied to $x$ and $a$ and $m$ and $congruent$ applied to $x$ and $b$ and $n$ and $Lt$ applied to $x$ and the product of $m$ and $n$.\nassistant\n", "label": "axiom congruent_ab_lt (m n a b : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : gcd n m = 1) : ex Nat (λ x => congruent x a m ∧ congruent x b n ∧ x < m * n)", "predict": "axiom congruent_ab_lt (m n a b : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : gcd n m = 1) : ex Nat (λ x => congruent x a m ∧ congruent x b n ∧ x < m * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEqb_false_to_not_eq. Let $n$ and $m$ be natural numbers. Then if $eqb$ applied to $n$ and $m$ is equal to absurdity, then $n$ is not equal to $m$.\nassistant\n", "label": "axiom eqb_false_to_not_eq (n m : Nat) (x__ : eqb n m = false) : ¬ (n = m)", "predict": "axiom eqb_false_to_not_eq (n m : Nat) (x__ : eqb n m = false) : ¬ (n = m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCr_pair2. $cr_pair$ applied to $2$ and $3$ and $1$ and $0$ is equal to $3$.\nassistant\n", "label": "postulate cr_pair2 : Eq (cr_pair 2 3 1 0) 3", "predict": "postulate cr_pair2 : Eq (cr_pair 2 3 1 0) 3"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_mod_O. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is divisible by $m$, then $mod$ applied to $m$ and $n$ is equal to $0$.\nassistant\n", "label": "axiom divides_to_mod_O (n m : Nat) (x__ : 0 < n) (__1 : divisible n m) : mod m n = 0", "predict": "axiom divides_to_mod_O (n m : Nat) (x__ : 0 < n) (__1 : divisible n m) : mod m n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPermut_n_to_le. For all functions $h$ from natural numbers to natural numbers, for all natural numbers $k$ and $n$, if $k$ is less than or equal to $n$, then for all elements $__1$ of $permut$ of $h$ and $n$, for all functions $__2$ from natural numbers $m$ and elements $__2$ of $Lt$ of $m$ and $k$ to elements of $Eq$ of $h$ applied to $m$ and $m$, for all natural numbers $j$, if $k$ is less than or equal to $j$, then if $j$ is less than or equal to $n$, then $k$ is less than or equal to $h$ applied to $j$.\nassistant\n", "label": "Axiom permut_n_to_le : forall h : ((x__ : nat) -> nat), forall k : nat, forall n : nat, forall x__ : Leq k n, forall __1 : permut h n, forall __2 : ((m : nat) -> (__2 : m < k) -> h m = m), forall j : nat, forall __3 : Leq k j, forall __4 : Leq j n, Leq k (h j) .", "predict": "Axiom permut_n_to_le : forall h : ((x__ : nat) -> nat), forall k : nat, forall n : nat, forall x__ : Leq k n, forall __1 : permut h n, forall __2 : ((m : nat) -> (__2 : m < k) -> h m = m), forall j : nat, forall __3 : Leq k j, forall __4 : Leq j n, Leq k (h j) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTimes_Sn_m. Let $n$ and $m$ be natural numbers. Then the sum of $m$ and the product of $n$ and $m$ is equal to the product of the sum of $n$ and $1$ and $m$.\nassistant\n", "label": "postulate times_Sn_m : (n : Nat) -> (m : Nat) -> Eq (plus m (times n m)) (times (plus n 1) m)", "predict": "postulate times_Sn_m : (n : Nat) -> (m : Nat) -> Eq (plus m (times n m)) (times (plus n 1) m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type2_body. For all functions $Q_$ from natural numbers $_x_381$ to elements of $Type2$, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_382$ and elements $_x_384$ of $Q_$ of $x_382$ to elements of $Q_$ of the sum of $x_382$ and $1$, for all natural numbers $x_381$, $Q_$ holds for $x_381$.\nassistant\n", "label": "postulate nat_rect_Type2_body : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381", "predict": "postulate nat_rect_Type2_body : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_to_gcd_aux. For all natural numbers $p$ and $m$ and $n$, if $0$ is less than $p$, then if $0$ is less than $n$, then if $n$ is divisible by $m$, then $gcd_aux$ applied to $p$ and $m$ and $n$ is equal to $n$.\nassistant\n", "label": "divides_to_gcd_aux : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 p -> __1 : Lt 0 n -> __2 : divisible n m -> Eq (gcd_aux p m n) n .", "predict": "divides_to_gcd_aux : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 p -> __1 : Lt 0 n -> __2 : divisible n m -> Eq (gcd_aux p m n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLstar_ind_r. Let $B$ be a set. Then for all elements $R$ of $relation$ of $B$, for all elements $b1$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b1$, for all functions $__1$ from natural numbers $l$ and elements $b$ of $B$ and elements $b2$ of $B$ and elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$ and elements $__2$ of $R$ of $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b2$, for all natural numbers $l$, for all elements $b2$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, $P$ holds for $l$ and $b2$.\nassistant\n", "label": "axiom lstar_ind_r (B : Set) (R : relation B) (b1 : B) (P : relation2 Nat B) (x__ : P 0 b1) (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (l + 1) b2) (l : Nat) (b2 : B) (__2 : lstar B R l b1 b2) : P l b2", "predict": "axiom lstar_ind_r (B : Set) (R : relation B) (b1 : B) (P : relation2 Nat B) (x__ : P 0 b1) (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (l + 1) b2) (l : Nat) (b2 : B) (__2 : lstar B R l b1 b2) : P l b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPad_bigop1. For all natural numbers $k$ and $n$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Leq$ of $n$ and $i$ and elements $__2$ of $Lt$ of $i$ and $k$ to elements of $Eq$ of $p$ applied to $i$ and absurdity, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "pad_bigop1 : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> __ : Leq n k -> __1 : (i : Nat -> __1 : Leq n i -> __2 : Lt i k -> Eq (p i) false) -> Eq (bigop n (i : Nat => p i) B nil op (i : Nat => f i)) (bigop k (i : Nat => p i) B nil op (i : Nat => f i)) .", "predict": "pad_bigop1 : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> __ : Leq n k -> __1 : (i : Nat -> __1 : Leq n i -> __2 : Lt i k -> Eq (p i) false) -> Eq (bigop n (i : Nat => p i) B nil op (i : Nat => f i)) (bigop k (i : Nat => p i) B nil op (i : Nat => f i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_minus_to_plus. For all natural numbers $a$ and $b$ and $c$, if the difference of $a$ and $b$ is less than $c$, then $a$ is less than the sum of $c$ and $b$.\nassistant\n", "label": "Axiom lt_minus_to_plus : forall a : nat, forall b : nat, forall c : nat, forall x__ : (a - b < c), a < c + b .", "predict": "Axiom lt_minus_to_plus : forall a : nat, forall b : nat, forall c : nat, forall x__ : (a - b < c), a < c + b ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMin_spec_ind. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all functions $Q_$ from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions, for all functions $_H_found_min_spec$ from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$, for all functions $_H_not_found_min_spec$ from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$, for all natural numbers $x_1075$, for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "min_spec_ind : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 .", "predict": "min_spec_ind : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrimeb_false_to_not_prime. For all natural numbers $n$, if $primeb$ applied to $n$ is equal to absurdity, then $n$ is not prime.\nassistant\n", "label": "primeb_false_to_not_prime : n : Nat -> __ : Eq (primeb n) false -> not (prime n) .", "predict": "primeb_false_to_not_prime : n : Nat -> __ : Eq (primeb n) false -> not (prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_rect_CProp1. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_883$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_883$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_883$.\nassistant\n", "label": "Aop_rect_CProp1 : A : Set -> _nil : A -> Q_ : (_x_883 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_883 : Aop A _nil -> Q_ x_883 .", "predict": "Aop_rect_CProp1 : A : Set -> _nil : A -> Q_ : (_x_883 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_883 : Aop A _nil -> Q_ x_883 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type2. For all functions $Q_$ from natural numbers $_x_381$ to elements of $Type2$, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_382$ and elements $_x_384$ of $Q_$ of $x_382$ to elements of $Q_$ of the sum of $x_382$ and $1$, for all natural numbers $x_381$, $Q_$ holds for $x_381$.\nassistant\n", "label": "postulate nat_rect_Type2 : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381", "predict": "postulate nat_rect_Type2 : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTimes_n_O. Let $n$ be a natural number. Then $0$ is equal to the product of $n$ and $0$.\nassistant\n", "label": "axiom times_n_O (n : Nat) : 0 = n * 0", "predict": "axiom times_n_O (n : Nat) : 0 = n * 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExp_Sn. For all natural numbers $b$ and $n$, the exponentiation of $b$ and the sum of $n$ and $1$ is equal to the product of $b$ and the exponentiation of $b$ and $n$.\nassistant\n", "label": "exp_Sn : b : Nat -> n : Nat -> Eq (pow b (plus n (nd 1))) (times b (pow b n)) .", "predict": "exp_Sn : b : Nat -> n : Nat -> Eq (pow b (plus n (nd 1))) (times b (pow b n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMatch_range. Let $_A$ be a set. Then for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $range$ of $_A$ to elements of $return_sort$, for all functions $case_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $return_type$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $z$ of $range$ of $_A$, $return_type$ holds for $z$.\nassistant\n", "label": "match_range : _A : Set -> return_sort : Sort -> return_type : (z : range _A -> return_sort) -> case_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> return_type (mk_range _A _enum _upto _filter)) -> z : range _A -> return_type z .", "predict": "match_range : _A : Set -> return_sort : Sort -> return_type : (z : range _A -> return_sort) -> case_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> return_type (mk_range _A _enum _upto _filter)) -> z : range _A -> return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPlus_n_O. For all natural numbers $n$, $n$ is equal to the sum of $n$ and $0$.\nassistant\n", "label": "plus_n_O : n : Nat -> Eq n (plus n 0) .", "predict": "plus_n_O : n : Nat -> Eq n (plus n 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_to_not_eq. Let $n$ and $m$ be natural numbers. Then if $n$ is less than $m$, then $n$ is not equal to $m$.\nassistant\n", "label": "postulate lt_to_not_eq : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not (Eq n m)", "predict": "postulate lt_to_not_eq : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not (Eq n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFilter_divides. For all natural numbers $_n$ and $_m$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $divisible$ of $_n$ and $_m$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $divisible$ of $_n$ and $_m$ to elements of $return_type$ of $z$, if $_n$ is divisible by $_m$, then $return_type$ holds for $z$.\nassistant\n", "label": "Axiom filter_divides : forall _n : nat, forall _m : nat, forall return_sort : Sort, forall return_type : ((z : divisible _n _m) -> return_sort), forall return : ((z : divisible _n _m) -> return_type z), forall z : divisible _n _m, return_type z .", "predict": "Axiom filter_divides : forall _n : nat, forall _m : nat, forall return_sort : Sort, forall return_type : ((z : divisible _n _m) -> return_sort), forall return : ((z : divisible _n _m) -> return_type z), forall z : divisible _n _m, return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_log_exp. For all natural numbers $p$ and $n$, if $1$ is less than $p$, then the logarithm of $p$ and the exponentiation of $p$ and $n$ is equal to $n$.\nassistant\n", "label": "postulate eq_log_exp : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Eq (log p (pow p n)) n", "predict": "postulate eq_log_exp : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Eq (log p (pow p n)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_inv_ind. For all natural numbers $x1$ and $x2$, if $x1$ is less than or equal to $x2$, then for all functions $P$ from natural numbers $_z724$ to propositions, for all functions $_H1$ from elements $_z725$ of $Eq$ of $x2$ and $x1$ to elements of $P$ of $x1$, for all functions $_H2$ from natural numbers $m$ and elements $_x_419$ of $Leq$ of $x1$ and $m$ and functions $_x_421$ from elements $_z725$ of $Eq$ of $x2$ and $m$ to elements of $P$ of $m$ and elements $_z725$ of $Eq$ of $x2$ and the sum of $m$ and $1$ to elements of $P$ of the sum of $m$ and $1$, $P$ holds for $x2$.\nassistant\n", "label": "Axiom le_inv_ind : forall x1 : nat, forall x2 : nat, forall _Hterm : Leq x1 x2, forall P : ((_z724 : nat) -> Prop), forall _H1 : ((_z725 : x2 = x1) -> P x1), forall _H2 : ((m : nat) -> (_x_419 : Leq x1 m) -> (_x_421 : (_z725 : x2 = m) -> P m) -> (_z725 : x2 = m + 1) -> P (m + 1)), P x2 .", "predict": "Axiom le_inv_ind : forall x1 : nat, forall x2 : nat, forall _Hterm : Leq x1 x2, forall P : ((_z724 : nat) -> Prop), forall _H1 : ((_z725 : x2 = x1) -> P x1), forall _H2 : ((m : nat) -> (_x_419 : Leq x1 m) -> (_x_421 : (_z725 : x2 = m) -> P m) -> (_z725 : x2 = m + 1) -> P (m + 1)), P x2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nS_pred. For all natural numbers $n$, if $0$ is less than $n$, then the sum of $pred$ applied to $n$ and $1$ is equal to $n$.\nassistant\n", "label": "postulate S_pred : (n : Nat) -> (_ : Lt 0 n) -> Eq (plus (pred n) 1) n", "predict": "postulate S_pred : (n : Nat) -> (_ : Lt 0 n) -> Eq (plus (pred n) 1) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_Type4. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_917$ of $range$ of $_A$ to elements of $Type4$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_917$ of $range$ of $_A$, $Q_$ holds for $x_917$.\nassistant\n", "label": "range_rect_Type4 : _A : Set -> Q_ : (_x_917 : range _A -> Type4) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_917 : range _A -> Q_ x_917 .", "predict": "range_rect_Type4 : _A : Set -> Q_ : (_x_917 : range _A -> Type4) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_917 : range _A -> Q_ x_917 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15692. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLprim_invariant. Let $n$ and $i$ be natural numbers. Then for all lists $acc$ of natural numbers, if $1$ is less than $i$, then for all elements $__1$ of $primes_below$ of $acc$ and $i$, $primes_below$ holds for $lprim$ applied to $n$ and $i$ and $acc$ and the sum of $n$ and $i$.\nassistant\n", "label": "axiom lprim_invariant (n i : Nat) (acc : list Nat) (x__ : 1 < i) (__1 : primes_below acc i) : primes_below (lprim n i acc) (n + i)", "predict": "axiom lprim_invariant (n i : Nat) (acc : list Nat) (x__ : 1 < i) (__1 : primes_below acc i) : primes_below (lprim n i acc) (n + i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_f_g. Let $f$ and $g$ be functions from natural numbers to booleans. Then for all natural numbers $n$ and $b$, for all functions $__$ from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$, $min$ applied to $n$ and $b$ and $f$ is equal to $min$ applied to $n$ and $b$ and $g$.\nassistant\n", "label": "axiom min_f_g (f g : (x__ : Nat) -> bool) (n b : Nat) (x__ : (i : Nat) -> (x__ : b ≤ i) -> (__1 : i < n + b) -> f i = g i) : min n b f = min n b g", "predict": "axiom min_f_g (f g : (x__ : Nat) -> bool) (n b : Nat) (x__ : (i : Nat) -> (x__ : b ≤ i) -> (__1 : i < n + b) -> f i = g i) : min n b f = min n b g"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_aux_body. For all natural numbers $_p$ and $_m$ and $_n$, $Nat$.\nassistant\n", "label": "mod_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat .", "predict": "mod_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $_l$ be a list of natural numbers. Let $_n \\in N$. Then we can say that $all_below$ holds for $_l$ and $_n$.\nassistant\n", "label": "axiom all_below (_l : list Nat) (_n : Nat) : Prop", "predict": "axiom all_below (_l : list Nat) (_n : Nat) : Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_bertrand_to_le1. Let $n$ be a natural number. Then if the exponentiation of $2$ and $7$ is less than or equal to $n$, then for all elements $__1$ of $not_bertrand$ of $n$, the exponentiation of $2$ and the quotient of the product of $2$ and $n$ and $3$ is less than or equal to the exponentiation of the product of $2$ and $n$ and the quotient of the square root of the product of $2$ and $n$ and $2$.\nassistant\n", "label": "axiom not_bertrand_to_le1 (n : Nat) (x__ : pow 2 7 ≤ n) (__1 : not_bertrand n) : pow 2 (2 * n / 3) ≤ pow (2 * n) (sqrt (2 * n) / 2)", "predict": "axiom not_bertrand_to_le1 (n : Nat) (x__ : pow 2 7 ≤ n) (__1 : not_bertrand n) : pow 2 (2 * n / 3) ≤ pow (2 * n) (sqrt (2 * n) / 2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_inv_rect_Type1. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1656$ of $range$ of $x1$ to elements of $Type1$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1657$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "range_inv_rect_Type1 : x1 : Set -> Hterm : range x1 -> P : (_z1656 : range x1 -> Type1) -> _H1 : (_enum : (__ : Nat -> x1) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> _z1657 : Eq Hterm (mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm .", "predict": "range_inv_rect_Type1 : x1 : Set -> Hterm : range x1 -> P : (_z1656 : range x1 -> Type1) -> _H1 : (_enum : (__ : Nat -> x1) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> _z1657 : Eq Hterm (mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_length_to_mem_all. For all natural numbers $n$, for all lists $l$ of natural numbers, if $length$ applied to $Nat$ and $l$ is equal to $n$, then for all elements $__1$ of $unique$ of $Nat$ and $l$, for all functions $__2$ from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, for all natural numbers $i$, if $i$ is less than $n$, then $mem$ holds for $Nat$ and $i$ and $l$.\nassistant\n", "label": "postulate eq_length_to_mem_all : (n : Nat) -> (l : list Nat) -> (_ : Eq (length Nat l) n) -> (__1 : unique Nat l) -> (__2 : (x : Nat) -> (__2 : mem Nat x l) -> Lt x n) -> (i : Nat) -> (__3 : Lt i n) -> mem Nat i l", "predict": "postulate eq_length_to_mem_all : (n : Nat) -> (l : list Nat) -> (_ : Eq (length Nat l) n) -> (__1 : unique Nat l) -> (__2 : (x : Nat) -> (__2 : mem Nat x l) -> Lt x n) -> (i : Nat) -> (__3 : Lt i n) -> mem Nat i l"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16171. For all natural numbers $p$ and $m$ and $n$, if $0$ is less than $p$, then if the greatest common divisor of $p$ and $m$ is equal to $1$, then if $p$ is divisible by the product of $m$ and $n$, then for all natural numbers $c$, if the product of $m$ and $n$ is equal to the product of $p$ and $c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the greatest common divisor of $p$ and $m$ is equal to the difference of the product of $m$ and $b$ and the product of $p$ and $a$.\nassistant\n", "label": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a .", "predict": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInv_ltransitive. For all sets $B$, $predicate$ holds for $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $relation$ applied to $B$.\nassistant\n", "label": "Axiom inv_ltransitive : forall B : Set, predicate (prod Set Set nat (fun x__ => relation B)) .", "predict": "Axiom inv_ltransitive : forall B : Set, predicate (prod Set Set nat (fun x__ => relation B)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_div_div_div_times. Let $n$ and $m$ and $q$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then the quotient of the quotient of $q$ and $n$ and $m$ is equal to the quotient of $q$ and the product of $n$ and $m$.\nassistant\n", "label": "axiom eq_div_div_div_times (n m q : Nat) (x__ : 0 < n) (__1 : 0 < m) : q / n / m = q / (n * m)", "predict": "axiom eq_div_div_div_times (n m q : Nat) (x__ : 0 < n) (__1 : 0 < m) : q / n / m = q / (n * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_mod_m_m. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then $mod$ applied to $n$ and $m$ is less than $m$.\nassistant\n", "label": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt (mod n m) m", "predict": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt (mod n m) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFact_body. Let $__$ be a natural number. Then $Nat$.\nassistant\n", "label": "postulate fact_body : (_ : Nat) -> Nat", "predict": "postulate fact_body : (_ : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nUpto_body. Let $A$ be a set. Then for all elements $_xxx$ of $range$ of $A$, $Nat$.\nassistant\n", "label": "postulate upto_body : (A : Set) -> (_xxx : range A) -> Nat", "predict": "postulate upto_body : (A : Set) -> (_xxx : range A) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_plus_to_minus_r. Let $a$ and $b$ and $c$ be natural numbers. Then if the sum of $a$ and $b$ is less than or equal to $c$, then $a$ is less than or equal to the difference of $c$ and $b$.\nassistant\n", "label": "Axiom le_plus_to_minus_r : forall a : nat, forall b : nat, forall c : nat, forall x__ : Leq (a + b) c, Leq a (c - b) .", "predict": "Axiom le_plus_to_minus_r : forall a : nat, forall b : nat, forall c : nat, forall x__ : Leq (a + b) c, Leq a (c - b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__ , __1 \\in N$. Then the exponentiation of $__$ and $__1$ is a natural number.\nassistant\n", "label": "axiom pow (x__ __1 : Nat) : Nat", "predict": "axiom pow (x__ __1 : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_Type4. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$, for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_815$ and $x_814$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "axiom div_mod_spec_rect_Type4 (_n _m _q _r : Nat) (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) (_H_div_mod_spec_intro : (x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) (x_813 : div_mod_spec _n _m _q _r) : Q_ x_813", "predict": "axiom div_mod_spec_rect_Type4 (_n _m _q _r : Nat) (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) (_H_div_mod_spec_intro : (x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) (x_813 : div_mod_spec _n _m _q _r) : Q_ x_813"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_plus_minus_l. For all natural numbers $x$ and $y$ and $z$, if $y$ is less than or equal to $z$, then the difference of the sum of $z$ and $x$ and the difference of $z$ and $y$ is equal to the sum of $x$ and $y$.\nassistant\n", "label": "axiom minus_plus_minus_l (x y z : Nat) (x__ : y ≤ z) : z + x - (z - y) = x + y", "predict": "axiom minus_plus_minus_l (x y z : Nat) (x__ : y ≤ z) : z + x - (z - y) = x + y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $__$ be a function from natural numbers to natural numbers. Let $__1 \\in N$. Then we can say that $permut$ holds for $__$ and $__1$.\nassistant\n", "label": "permut : __ : (__ : Nat -> Nat) -> __1 : Nat -> Prop .", "predict": "permut : __ : (__ : Nat -> Nat) -> __1 : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExp_2. For all natural numbers $n$, the exponentiation of $n$ and $2$ is equal to the product of $n$ and $n$.\nassistant\n", "label": "axiom exp_2 (n : Nat) : pow n 2 = n * n", "predict": "axiom exp_2 (n : Nat) : pow n 2 = n * n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp3. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_845$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_847$ of $Lt$ of $_r$ and $_m$ and elements $x_846$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_847$ and $x_846$, for all elements $x_845$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_845$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp3 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_845 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_847 : _r < _m) -> (x_846 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846)), forall x_845 : div_mod_spec _n _m _q _r, Q_ x_845 .", "predict": "Axiom div_mod_spec_rect_CProp3 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_845 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_847 : _r < _m) -> (x_846 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846)), forall x_845 : div_mod_spec _n _m _q _r, Q_ x_845 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_to_eq2. For all natural numbers $a$ and $b$ and $q$ and $r$ and $q1$ and $r1$, for all elements $__$ of $div_mod_spec$ of $a$ and $b$ and $q$ and $r$, for all elements $__1$ of $div_mod_spec$ of $a$ and $b$ and $q1$ and $r1$, $r$ is equal to $r1$.\nassistant\n", "label": "Axiom div_mod_spec_to_eq2 : forall a : nat, forall b : nat, forall q : nat, forall r : nat, forall q1 : nat, forall r1 : nat, forall x__ : div_mod_spec a b q r, forall __1 : div_mod_spec a b q1 r1, r = r1 .", "predict": "Axiom div_mod_spec_to_eq2 : forall a : nat, forall b : nat, forall q : nat, forall r : nat, forall q1 : nat, forall r1 : nat, forall x__ : div_mod_spec a b q r, forall __1 : div_mod_spec a b q1 r1, r = r1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16. For all natural numbers $n$ and $m$, if the sum of $n$ and $1$ is less than the sum of $m$ and $1$, then for all natural numbers $x32$, the sum of $x32$ and $1$ is equal to the sum of $x32$ and $1$.\nassistant\n", "label": "postulate let_clause_16 : (n : Nat) -> (m : Nat) -> (auto : Lt (plus n 1) (plus m 1)) -> (x32 : Nat) -> Eq (plus x32 1) (plus x32 1)", "predict": "postulate let_clause_16 : (n : Nat) -> (m : Nat) -> (auto : Lt (plus n 1) (plus m 1)) -> (x32 : Nat) -> Eq (plus x32 1) (plus x32 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIncreasing_to_le. Let $f$ be a function from natural numbers to natural numbers. Then for all elements $__$ of $increasing$ of $f$, for all natural numbers $m$, $ex$ holds for $Nat$ and the function that maps $i$ to $Leq$ applied to $m$ and $f$ applied to $i$.\nassistant\n", "label": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))", "predict": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_prim_n. Let $n$ be a natural number. Then $prim$ applied to $n$ is less than or equal to $n$.\nassistant\n", "label": "axiom le_prim_n (n : Nat) : prim n ≤ n", "predict": "axiom le_prim_n (n : Nat) : prim n ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_plus_to_lt_l. Let $n$ and $p$ and $q$ be natural numbers. Then if the sum of $p$ and $n$ is less than the sum of $q$ and $n$, then $p$ is less than $q$.\nassistant\n", "label": "postulate lt_plus_to_lt_l : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : Lt (plus p n) (plus q n)) -> Lt p q", "predict": "postulate lt_plus_to_lt_l : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : Lt (plus p n) (plus q n)) -> Lt p q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_SO_n. Let $n$ be a natural number. Then $1$ is divisible by $n$.\nassistant\n", "label": "divides_SO_n : n : Nat -> divisible (nd 1) n .", "predict": "divides_SO_n : n : Nat -> divisible (nd 1) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPlus_plus_comm_23. Let $x$ and $y$ and $z$ be natural numbers. Then the sum of the sum of $x$ and $y$ and $z$ is equal to the sum of the sum of $x$ and $z$ and $y$.\nassistant\n", "label": "axiom plus_plus_comm_23 (x y z : Nat) : x + y + z = x + z + y", "predict": "axiom plus_plus_comm_23 (x y z : Nat) : x + y + z = x + z + y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_p_ord_q_O. Let $p$ and $n$ and $q$ be natural numbers. Then if $p_ord$ applied to $n$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $0$, then $n$ is equal to $0$ and $q$ is equal to $0$.\nassistant\n", "label": "Axiom eq_p_ord_q_O : forall p : nat, forall n : nat, forall q : nat, forall x__ : (p_ord n p = mk_Prod nat nat q 0), n = 0 /\\ q = 0 .", "predict": "Axiom eq_p_ord_q_O : forall p : nat, forall n : nat, forall q : nat, forall x__ : (p_ord n p = mk_Prod nat nat q 0), n = 0 /\\ q = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_lt_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Then if $n$ is less than or equal to $m$, then if $m$ is less than $p$, then $n$ is less than $p$.\nassistant\n", "label": "axiom le_to_lt_to_lt (n m p : Nat) (x__ : n ≤ m) (__1 : m < p) : n < p", "predict": "axiom le_to_lt_to_lt (n m p : Nat) (x__ : n ≤ m) (__1 : m < p) : n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1595. For all natural numbers $p$ and $n$ and $m$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $p$ and $n$ is equal to $1$, then if the greatest common divisor of $p$ and $m$ is equal to $1$, then if $1$ is less than the greatest common divisor of $p$ and the product of $n$ and $m$, then if $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $n$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, forall posn : (0 < n), forall posm : (0 < m), forall primepn : (gcd p n = 1), forall primepm : (gcd p m = 1), forall lt1gcd : (1 < gcd p (n * m)), forall H : divisible (smallest_factor (gcd p (n * m))) m, gcd p n = gcd p m .", "predict": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, forall posn : (0 < n), forall posm : (0 < m), forall primepn : (gcd p n = 1), forall primepm : (gcd p m = 1), forall lt1gcd : (1 < gcd p (n * m)), forall H : divisible (smallest_factor (gcd p (n * m))) m, gcd p n = gcd p m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDecidable_divides. Let $n$ and $m$ be natural numbers. Then $decidable$ holds for $divisible$ applied to $n$ and $m$.\nassistant\n", "label": "postulate decidable_divides : (n : Nat) -> (m : Nat) -> decidable (divisible n m)", "predict": "postulate decidable_divides : (n : Nat) -> (m : Nat) -> decidable (divisible n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBijn_n_Sn. Let $f$ be a function from natural numbers to natural numbers. Then for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and $n$, if $f$ applied to the sum of $n$ and $1$ is equal to the sum of $n$ and $1$, then $bijn$ holds for $f$ and the sum of $n$ and $1$.\nassistant\n", "label": "Axiom bijn_n_Sn : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : bijn f n, forall __1 : (f (n + 1) = n + 1), bijn f (n + 1) .", "predict": "Axiom bijn_n_Sn : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : bijn f n, forall __1 : (f (n + 1) = n + 1), bijn f (n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nF3_ind_aux. For all sets $A1$ and $A2$ and $A3$, for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers, for all elements $P$ of $relation3$ of $A1$ and $A2$ and $A3$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$, for all natural numbers $n$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, if $f$ applied to $a1$ and $a2$ and $a3$ is equal to $n$, then $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "f3_ind_aux : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> n : Nat -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3 .", "predict": "f3_ind_aux : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> n : Nat -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nB2_def. Let $n$ be a natural number. Then $B2$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and the product of $bool_to_nat$ applied to $leb$ applied to $2$ and $k$ applied to $n$ and $p$ and $k$ applied to $n$ and $p$.\nassistant\n", "label": "B2_def : n : Nat -> Eq (B2 n) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => pow p (times (bool_to_nat (leb (nd 2) (k n p))) (k n p)))) .", "predict": "B2_def : n : Nat -> Eq (B2 n) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => pow p (times (bool_to_nat (leb (nd 2) (k n p))) (k n p)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_to_or_lt_eq. For all natural numbers $n$ and $m$, if $n$ is less than or equal to $m$, then $n$ is less than $m$ or $n$ is equal to $m$.\nassistant\n", "label": "Axiom le_to_or_lt_eq : forall n : nat, forall m : nat, forall x__ : Leq n m, n < m \\/ n = m .", "predict": "Axiom le_to_or_lt_eq : forall n : nat, forall m : nat, forall x__ : Leq n m, n < m \\/ n = m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1692. Let $m$ be a natural number. Then if $0$ is less than $m$, then for all natural numbers $a$ and $x358$ and $x359$, $aop__o__op$ applied to $Nat$ and $0$ and $plusAC$ and $x358$ and the product of $x358$ and $x359$ is equal to the product of $x358$ and the sum of $x359$ and $1$.\nassistant\n", "label": "let_clause_1692 : m : Nat -> posm : Lt 0 m -> a : Nat -> x358 : Nat -> x359 : Nat -> Eq (aop__o__op Nat 0 plusAC x358 (times x358 x359)) (times x358 (plus x359 (nd 1))) .", "predict": "let_clause_1692 : m : Nat -> posm : Lt 0 m -> a : Nat -> x358 : Nat -> x359 : Nat -> Eq (aop__o__op Nat 0 plusAC x358 (times x358 x359)) (times x358 (plus x359 (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp1. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_855$ and $x_854$, for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp1 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_853 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_855 : _r < _m) -> (x_854 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)), forall x_853 : div_mod_spec _n _m _q _r, Q_ x_853 .", "predict": "Axiom div_mod_spec_rect_CProp1 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_853 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_855 : _r < _m) -> (x_854 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)), forall x_853 : div_mod_spec _n _m _q _r, Q_ x_853 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDividesb. Let $__$ and $__1$ be natural numbers. Then $bool$.\nassistant\n", "label": "dividesb : __ : Nat -> __1 : Nat -> bool .", "predict": "dividesb : __ : Nat -> __1 : Nat -> bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_rect_CProp0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_913$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_913$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_913$.\nassistant\n", "label": "Axiom ACop_rect_CProp0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_913 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_913 : ACop A _nil, Q_ x_913 .", "predict": "Axiom ACop_rect_CProp0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_913 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_913 : ACop A _nil, Q_ x_913 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nF2_ind. Let $A1$ and $A2$ be sets. Then for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ to natural numbers, for all elements $P$ of $relation2$ of $A1$ and $A2$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $n$ to elements of $P$ of $a1$ and $a2$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $n$ to elements of $P$ of $a1$ and $a2$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, $P$ holds for $a1$ and $a2$.\nassistant\n", "label": "axiom f2_ind (A1 A2 : Set) (f : (x__ : A1) -> (__1 : A2) -> Nat) (P : relation2 A1 A2) (x__ : (n : Nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (x__ : f a1 a2 < n) -> P a1 a2) -> (a1 : A1) -> (a2 : A2) -> (__1 : f a1 a2 = n) -> P a1 a2) (a1 : A1) (a2 : A2) : P a1 a2", "predict": "axiom f2_ind (A1 A2 : Set) (f : (x__ : A1) -> (__1 : A2) -> Nat) (P : relation2 A1 A2) (x__ : (n : Nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (x__ : f a1 a2 < n) -> P a1 a2) -> (a1 : A1) -> (a2 : A2) -> (__1 : f a1 a2 = n) -> P a1 a2) (a1 : A1) (a2 : A2) : P a1 a2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_inv. Let $_p$ and $_m$ and $_x$ be natural numbers. Then $Nat$.\nassistant\n", "label": "Axiom p_ord_inv : forall _p : nat, forall _m : nat, forall _x : nat, nat .", "predict": "Axiom p_ord_inv : forall _p : nat, forall _m : nat, forall _x : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPi_p_primeb_dividesb. For all natural numbers $n$, if $0$ is less than $n$, then $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $andb$ applied to $primeb$ applied to $p$ and $dividesb$ applied to $p$ and $n$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and $ord$ applied to $n$ and $p$.\nassistant\n", "label": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))", "predict": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCongruent_ab. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then $ex$ holds for $Nat$ and the function that maps $x$ to the conjunction of $congruent$ applied to $x$ and $a$ and $m$ and $congruent$ applied to $x$ and $b$ and $n$.\nassistant\n", "label": "postulate congruent_ab : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Eq (gcd n m) 1) -> ex Nat (\\ x : Nat -> and (congruent x a m) (congruent x b n))", "predict": "postulate congruent_ab : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Eq (gcd n m) 1) -> ex Nat (\\ x : Nat -> and (congruent x a m) (congruent x b n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMinus_Sn_n. Let $n$ be a natural number. Then $1$ is equal to the difference of the sum of $n$ and $1$ and $n$.\nassistant\n", "label": "postulate minus_Sn_n : (n : Nat) -> Eq 1 (minus (plus n 1) n)", "predict": "postulate minus_Sn_n : (n : Nat) -> Eq 1 (minus (plus n 1) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDistr. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Dop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $aop__o__op$ applied to $A$ and $nil$ and $sum$ applied to $A$ and $nil$ and $xxx$ and $b$ and $c$ is equal to $aop__o__op$ applied to $A$ and $nil$ and $sum$ applied to $A$ and $nil$ and $xxx$ and $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ and $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $c$.\nassistant\n", "label": "Axiom distr : forall A : Set, forall nil : A, forall xxx : Dop A nil, forall a : A, forall b : A, forall c : A, prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c) = aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c) .", "predict": "Axiom distr : forall A : Set, forall nil : A, forall xxx : Dop A nil, forall a : A, forall b : A, forall c : A, prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c) = aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1047. For all natural numbers $k$ and $n$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all natural numbers $j$, if $n$ is less than or equal to $j$, then for all functions $Hind$ from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$, for all functions $Hfalse$ from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity, for all natural numbers $x2571$ and $x2572$, $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.\nassistant\n", "label": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 .", "predict": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLop_Sfalse. Let $m$ and $i$ be natural numbers. Then for all lists $acc$ of natural numbers, if $list_divides$ applied to $acc$ and $i$ is equal to absurdity, then $lprim$ applied to the sum of $m$ and $1$ and $i$ and $acc$ is equal to $lprim$ applied to $m$ and the sum of $i$ and $1$ and $append$ applied to $Nat$ and $acc$ and $cons$ applied to $Nat$ and $i$ and $nil$ applied to $Nat$.\nassistant\n", "label": "postulate lop_Sfalse : (m : Nat) -> (i : Nat) -> (acc : list Nat) -> (_ : Eq (list_divides acc i) false) -> Eq (lprim (plus m 1) i acc) (lprim m (plus i 1) (append Nat acc (cons Nat i (nil Nat))))", "predict": "postulate lop_Sfalse : (m : Nat) -> (i : Nat) -> (acc : list Nat) -> (_ : Eq (list_divides acc i) false) -> Eq (lprim (plus m 1) i acc) (lprim m (plus i 1) (append Nat acc (cons Nat i (nil Nat))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_Type0. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) -> (_H_div_mod_spec_intro : (x_835 : Lt _r _m) -> (x_834 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) -> (x_833 : div_mod_spec _n _m _q _r) -> Q_ x_833", "predict": "postulate div_mod_spec_rect_Type0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) -> (_H_div_mod_spec_intro : (x_835 : Lt _r _m) -> (x_834 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) -> (x_833 : div_mod_spec _n _m _q _r) -> Q_ x_833"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type1. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z677$ to elements of $Type1$, for all functions $_H1$ from elements $_z678$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_386$ and functions $_x_388$ from elements $_z678$ of $Eq$ of $Hterm$ and $x_386$ to elements of $P$ of $x_386$ and elements $_z678$ of $Eq$ of $Hterm$ and the sum of $x_386$ and $1$ to elements of $P$ of the sum of $x_386$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nCommutative_min. $commutative$ holds for $Nat$ and $min$.\nassistant\n", "label": "axiom commutative_min : commutative Nat min", "predict": "axiom commutative_min : commutative Nat min"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nF_min_true. Let $f$ be a function from natural numbers to booleans. Then for all natural numbers $n$ and $b$, for all elements $__$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of the conjunction of $Leq$ applied to $b$ and $i$ and $Lt$ applied to $i$ and the sum of $n$ and $b$ and $Eq$ applied to $f$ applied to $i$ and $true$, $f$ applied to $min$ applied to $n$ and $b$ and $f$ is equal to $true$.\nassistant\n", "label": "axiom f_min_true (f : (x__ : Nat) -> bool) (n b : Nat) (x__ : ex Nat (λ i => b ≤ i ∧ i < n + b ∧ f i = true)) : f (min n b f) = true", "predict": "axiom f_min_true (f : (x__ : Nat) -> bool) (n b : Nat) (x__ : ex Nat (λ i => b ≤ i ∧ i < n + b ∧ f i = true)) : f (min n b f) = true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_B_Psi4. For all natural numbers $n$, if $0$ is less than $n$, then the product of $2$ and $B$ applied to the product of $4$ and $n$ is less than or equal to $Psi$ applied to the product of $4$ and $n$.\nassistant\n", "label": "postulate le_B_Psi4 : (n : Nat) -> (_ : Lt 0 n) -> Leq (times 2 (B (times 4 n))) (Psi (times 4 n))", "predict": "postulate le_B_Psi4 : (n : Nat) -> (_ : Lt 0 n) -> Leq (times 2 (B (times 4 n))) (Psi (times 4 n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPrimeb_true_to_prime. Let $n$ be a natural number. Then if $primeb$ applied to $n$ is equal to $true$, then $n$ is prime.\nassistant\n", "label": "axiom primeb_true_to_prime (n : Nat) (x__ : primeb n = true) : prime n", "predict": "axiom primeb_true_to_prime (n : Nat) (x__ : primeb n = true) : prime n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPred_Sn. Let $n$ be a natural number. Then $n$ is equal to $pred$ applied to the sum of $n$ and $1$.\nassistant\n", "label": "Axiom pred_Sn : forall n : nat, n = pred (n + 1) .", "predict": "Axiom pred_Sn : forall n : nat, n = pred (n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDecidable_le. For all natural numbers $n$ and $m$, $decidable$ holds for $Leq$ applied to $n$ and $m$.\nassistant\n", "label": "postulate decidable_le : (n : Nat) -> (m : Nat) -> decidable (Leq n m)", "predict": "postulate decidable_le : (n : Nat) -> (m : Nat) -> decidable (Leq n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_CProp2. For all sets $_A$, for all functions $Q_$ from elements $_x_935$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_935$ of $range$ of $_A$, $Q_$ holds for $x_935$.\nassistant\n", "label": "postulate range_rect_CProp2 : (_A : Set) -> (Q_ : (_x_935 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_935 : range _A) -> Q_ x_935", "predict": "postulate range_rect_CProp2 : (_A : Set) -> (Q_ : (_x_935 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_935 : range _A) -> Q_ x_935"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_le. Let $x$ and $y$ be natural numbers. Then the difference of $x$ and $y$ is less than or equal to $x$.\nassistant\n", "label": "minus_le : x : Nat -> y : Nat -> Leq (minus x y) x .", "predict": "minus_le : x : Nat -> y : Nat -> Leq (minus x y) x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_Type0_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "axiom div_mod_spec_rect_Type0_body (_n _m _q _r : Nat) (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) (_H_div_mod_spec_intro : (x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) (x_833 : div_mod_spec _n _m _q _r) : Q_ x_833", "predict": "axiom div_mod_spec_rect_Type0_body (_n _m _q _r : Nat) (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) (_H_div_mod_spec_intro : (x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) (x_833 : div_mod_spec _n _m _q _r) : Q_ x_833"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_CProp5. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_905$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_905$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_905$.\nassistant\n", "label": "postulate ACop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_905 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_905 : ACop A _nil) -> Q_ x_905", "predict": "postulate ACop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_905 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_905 : ACop A _nil) -> Q_ x_905"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAssoc. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $op$ applied to $A$ and $nil$ and $xxx$ and $b$ and $c$ is equal to $op$ applied to $A$ and $nil$ and $xxx$ and $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ and $c$.\nassistant\n", "label": "assoc : A : Set -> nil : A -> xxx : Aop A nil -> a : A -> b : A -> c : A -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c) .", "predict": "assoc : A : Set -> nil : A -> xxx : Aop A nil -> a : A -> b : A -> c : A -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLop_Sfalse. For all natural numbers $m$ and $i$, for all lists $acc$ of natural numbers, if $list_divides$ applied to $acc$ and $i$ is equal to absurdity, then $lprim$ applied to the sum of $m$ and $1$ and $i$ and $acc$ is equal to $lprim$ applied to $m$ and the sum of $i$ and $1$ and $append$ applied to $Nat$ and $acc$ and $cons$ applied to $Nat$ and $i$ and $nil$ applied to $Nat$.\nassistant\n", "label": "Axiom lop_Sfalse : forall m : nat, forall i : nat, forall acc : list nat, forall x__ : (list_divides acc i = false), lprim (m + 1) i acc = lprim m (i + 1) (append nat acc (cons nat i (nil nat))) .", "predict": "Axiom lop_Sfalse : forall m : nat, forall i : nat, forall acc : list nat, forall x__ : (list_divides acc i = false), lprim (m + 1) i acc = lprim m (i + 1) (append nat acc (cons nat i (nil nat))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_S_times_2. Let $n$ be a natural number. Then if $0$ is less than $n$, then the sum of $n$ and $1$ is less than or equal to the product of $2$ and $n$.\nassistant\n", "label": "Axiom le_S_times_2 : forall n : nat, forall x__ : (0 < n), Leq (n + 1) (2 * n) .", "predict": "Axiom le_S_times_2 : forall n : nat, forall x__ : (0 < n), Leq (n + 1) (2 * n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTransitive_congruent. Let $p$ be a natural number. Then $transitive$ holds for $Nat$ and the function that maps $n$ and $m$ to $congruent$ applied to $n$ and $m$ and $p$.\nassistant\n", "label": "transitive_congruent : p : Nat -> transitive Nat (n : Nat => m : Nat => congruent n m p) .", "predict": "transitive_congruent : p : Nat -> transitive Nat (n : Nat => m : Nat => congruent n m p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nGcd_1_to_lt_O. For all natural numbers $i$ and $n$, if $1$ is less than $n$, then if the greatest common divisor of $i$ and $n$ is equal to $1$, then $0$ is less than $i$.\nassistant\n", "label": "postulate gcd_1_to_lt_O : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (gcd i n) 1) -> Lt 0 i", "predict": "postulate gcd_1_to_lt_O : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (gcd i n) 1) -> Lt 0 i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_aux_mod_aux. Let $p$ and $n$ and $m$ be natural numbers. Then $n$ is equal to the sum of the product of $div_aux$ applied to $p$ and $n$ and $m$ and the sum of $m$ and $1$ and $mod_aux$ applied to $p$ and $n$ and $m$.\nassistant\n", "label": "div_aux_mod_aux : p : Nat -> n : Nat -> m : Nat -> Eq n (plus (times (div_aux p n m) (plus m (nd 1))) (mod_aux p n m)) .", "predict": "div_aux_mod_aux : p : Nat -> n : Nat -> m : Nat -> Eq n (plus (times (div_aux p n m) (plus m (nd 1))) (mod_aux p n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_rect_Type5_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.\nassistant\n", "label": "Axiom Dop_rect_Type5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_947 : Dop A _nil) -> Type5), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_947 : Dop A _nil, Q_ x_947 .", "predict": "Axiom Dop_rect_Type5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_947 : Dop A _nil) -> Type5), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_947 : Dop A _nil, Q_ x_947 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExp_n_O. Let $n$ be a natural number. Then if $0$ is less than $n$, then the exponentiation of $0$ and $n$ is equal to $0$.\nassistant\n", "label": "axiom exp_n_O (n : Nat) (x__ : 0 < n) : pow 0 n = 0", "predict": "axiom exp_n_O (n : Nat) (x__ : 0 < n) : pow 0 n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_not_ord_O. Let $p$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $p$ is prime, then if $p$ is divisible by $m$, then $ord$ applied to $m$ and $p$ is not equal to $0$.\nassistant\n", "label": "postulate divides_to_not_ord_O : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : divisible p m) -> not (Eq (ord m p) 0)", "predict": "postulate divides_to_not_ord_O : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : divisible p m) -> not (Eq (ord m p) 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_exp_to_lt. Let $a$ and $n$ and $m$ be natural numbers. Then if $0$ is less than $a$, then if the exponentiation of $a$ and $n$ is less than the exponentiation of $a$ and $m$, then $n$ is less than $m$.\nassistant\n", "label": "postulate lt_exp_to_lt : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 a) -> (__1 : Lt (pow a n) (pow a m)) -> Lt n m", "predict": "postulate lt_exp_to_lt : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 a) -> (__1 : Lt (pow a n) (pow a m)) -> Lt n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nSub_hk. Let $__$ be a function from natural numbers to natural numbers. Then for all functions $__1$ from natural numbers $__1$ to natural numbers, for all sets $A$, $relation$ holds for $range$ applied to $A$.\nassistant\n", "label": "postulate sub_hk : (_ : (_ : Nat) -> Nat) -> (__1 : (__1 : Nat) -> Nat) -> (A : Set) -> relation (range A)", "predict": "postulate sub_hk : (_ : (_ : Nat) -> Nat) -> (__1 : (__1 : Nat) -> Nat) -> (A : Set) -> relation (range A)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrime_to_divides_M. Let $m$ and $p$ be natural numbers. Then if $p$ is prime, then if the sum of $m$ and $1$ is less than $p$, then if $p$ is less than or equal to the sum of the product of $2$ and $m$ and $1$, then $p$ is divisible by $M$ applied to $m$.\nassistant\n", "label": "prime_to_divides_M : m : Nat -> p : Nat -> __ : prime p -> __1 : Lt (plus m (nd 1)) p -> __2 : Leq p (plus (times (nd 2) m) (nd 1)) -> divisible p (M m) .", "predict": "prime_to_divides_M : m : Nat -> p : Nat -> __ : prime p -> __1 : Lt (plus m (nd 1)) p -> __2 : Leq p (plus (times (nd 2) m) (nd 1)) -> divisible p (M m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_minus_to_plus_r. Let $a$ and $b$ and $c$ be natural numbers. Then if $c$ is less than or equal to $b$, then if $a$ is less than or equal to the difference of $b$ and $c$, then the sum of $a$ and $c$ is less than or equal to $b$.\nassistant\n", "label": "le_minus_to_plus_r : a : Nat -> b : Nat -> c : Nat -> __ : Leq c b -> __1 : Leq a (minus b c) -> Leq (plus a c) b .", "predict": "le_minus_to_plus_r : a : Nat -> b : Nat -> c : Nat -> __ : Leq c b -> __1 : Leq a (minus b c) -> Leq (plus a c) b ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_divides_ord_rem. Let $p$ and $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if $p$ is prime, then if $n$ is divisible by $m$, then $ord_rem$ applied to $n$ and $p$ is divisible by $ord_rem$ applied to $m$ and $p$.\nassistant\n", "label": "axiom divides_to_divides_ord_rem (p n m : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : prime p) (__3 : divisible n m) : divisible (ord_rem n p) (ord_rem m p)", "predict": "axiom divides_to_divides_ord_rem (p n m : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : prime p) (__3 : divisible n m) : divisible (ord_rem n p) (ord_rem m p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15692. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_to_lt_to_lt. For all natural numbers $n$ and $m$ and $p$, if $n$ is less than or equal to $m$, then if $m$ is less than $p$, then $n$ is less than $p$.\nassistant\n", "label": "le_to_lt_to_lt : n : Nat -> m : Nat -> p : Nat -> __ : Leq n m -> __1 : Lt m p -> Lt n p .", "predict": "le_to_lt_to_lt : n : Nat -> m : Nat -> p : Nat -> __ : Leq n m -> __1 : Lt m p -> Lt n p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_to_lt. For all natural numbers $n$ and $m$ and $p$, if $n$ is less than $m$, then if $m$ is less than or equal to $p$, then $n$ is less than $p$.\nassistant\n", "label": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p .", "predict": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nF3_ind_aux. Let $A1$ and $A2$ and $A3$ be sets. Then for all functions $f$ from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers, for all elements $P$ of $relation3$ of $A1$ and $A2$ and $A3$, for all functions $__$ from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$, for all natural numbers $n$, for all elements $a1$ of $A1$, for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, if $f$ applied to $a1$ and $a2$ and $a3$ is equal to $n$, then $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "Axiom f3_ind_aux : forall A1 : Set, forall A2 : Set, forall A3 : Set, forall f : ((x__ : A1) -> (__1 : A2) -> (__2 : A3) -> nat), forall P : relation3 A1 A2 A3, forall x__ : ((n : nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (x__ : f a1 a2 a3 < n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : f a1 a2 a3 = n) -> P a1 a2 a3), forall n : nat, forall a1 : A1, forall a2 : A2, forall a3 : A3, forall __1 : (f a1 a2 a3 = n), P a1 a2 a3 .", "predict": "Axiom f3_ind_aux : forall A1 : Set, forall A2 : Set, forall A3 : Set, forall f : ((x__ : A1) -> (__1 : A2) -> (__2 : A3) -> nat), forall P : relation3 A1 A2 A3, forall x__ : ((n : nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (x__ : f a1 a2 a3 < n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : f a1 a2 a3 = n) -> P a1 a2 a3), forall n : nat, forall a1 : A1, forall a2 : A2, forall a3 : A3, forall __1 : (f a1 a2 a3 = n), P a1 a2 a3 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_iter. For all functions $g$ from natural numbers to natural numbers, for all natural numbers $a$, for all functions $__$ from natural numbers $x$ to elements of $Leq$ of $x$ and $g$ applied to $x$, for all natural numbers $i$, $a$ is less than or equal to $iter$ applied to $Nat$ and $g$ and $i$ and $a$.\nassistant\n", "label": "axiom le_iter (g : (x__ : Nat) -> Nat) (a : Nat) (x__ : (x : Nat) -> x ≤ g x) (i : Nat) : a ≤ iter Nat g i a", "predict": "axiom le_iter (g : (x__ : Nat) -> Nat) (a : Nat) (x__ : (x : Nat) -> x ≤ g x) (i : Nat) : a ≤ iter Nat g i a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEx_prime. Let $n$ be a natural number. Then if $1$ is less than or equal to $n$, then $ex$ holds for $Nat$ and the function that maps $m$ to the conjunction of the conjunction of $Lt$ applied to $n$ and $m$ and $Leq$ applied to $m$ and the sum of the factorial of $n$ and $1$ and $prime$ applied to $m$.\nassistant\n", "label": "Axiom ex_prime : forall n : nat, forall x__ : Leq 1 n, ex nat (fun m => n < m /\\ Leq m (factorial n + 1) /\\ prime m) .", "predict": "Axiom ex_prime : forall n : nat, forall x__ : Leq 1 n, ex nat (fun m => n < m /\\ Leq m (factorial n + 1) /\\ prime m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_O_n. For all natural numbers $n$, $0$ is less than or equal to $n$.\nassistant\n", "label": "axiom le_O_n (n : Nat) : 0 ≤ n", "predict": "axiom le_O_n (n : Nat) : 0 ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_priml1. Let $n$ be a natural number. Then if $0$ is less than $n$, then the difference of the quotient of the product of $2$ and $n$ and the sum of the logarithm of $2$ and $n$ and $2$ and $1$ is less than or equal to $prim$ applied to the product of $2$ and $n$.\nassistant\n", "label": "axiom le_priml1 (n : Nat) (x__ : 0 < n) : 2 * n / (log 2 n + 2) - 1 ≤ prim (2 * n)", "predict": "axiom le_priml1 (n : Nat) (x__ : 0 < n) : 2 * n / (log 2 n + 2) - 1 ≤ prim (2 * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_2_fact. For all natural numbers $n$, if $1$ is less than $n$, then $2$ is less than or equal to the factorial of $n$.\nassistant\n", "label": "le_2_fact : n : Nat -> __ : Lt (nd 1) n -> Leq (nd 2) (factorial n) .", "predict": "le_2_fact : n : Nat -> __ : Lt (nd 1) n -> Leq (nd 2) (factorial n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_d_gcd. Let $m$ and $n$ and $d$ be natural numbers. Then if $d$ is divisible by $m$, then if $d$ is divisible by $n$, then $d$ is divisible by the greatest common divisor of $n$ and $m$.\nassistant\n", "label": "Axiom divides_d_gcd : forall m : nat, forall n : nat, forall d : nat, forall x__ : divisible d m, forall __1 : divisible d n, divisible d (gcd n m) .", "predict": "Axiom divides_d_gcd : forall m : nat, forall n : nat, forall d : nat, forall x__ : divisible d m, forall __1 : divisible d n, divisible d (gcd n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSameF_upto. Let $__$ be a natural number. Then for all sets $A$, $relation$ holds for $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__1$ to $A$.\nassistant\n", "label": "Axiom sameF_upto : forall x__ : nat, forall A : Set, relation (prod Set Set nat (fun __1 => A)) .", "predict": "Axiom sameF_upto : forall x__ : nat, forall A : Set, relation (prod Set Set nat (fun __1 => A)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_SO_n. Let $n$ be a natural number. Then $1$ is divisible by $n$.\nassistant\n", "label": "postulate divides_SO_n : (n : Nat) -> divisible 1 n", "predict": "postulate divides_SO_n : (n : Nat) -> divisible 1 n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFilter_le. For all natural numbers $_n$ and $__$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_type$ of $z$, if $_n$ is less than or equal to $__$, then $return_type$ holds for $z$.\nassistant\n", "label": "postulate filter_le : (_n : Nat) -> (_ : Nat) -> (return_sort : Sort) -> (return_type : (z : Leq _n __) -> return_sort) -> (return : (z : Leq _n __) -> return_type z) -> (z : Leq _n __) -> return_type z", "predict": "postulate filter_le : (_n : Nat) -> (_ : Nat) -> (return_sort : Sort) -> (return_type : (z : Leq _n __) -> return_sort) -> (return : (z : Leq _n __) -> return_type z) -> (z : Leq _n __) -> return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_gcd_nm. Let $n$ and $m$ be natural numbers. Then the greatest common divisor of $n$ and $m$ is divisible by $m$ and the greatest common divisor of $n$ and $m$ is divisible by $n$.\nassistant\n", "label": "Axiom divides_gcd_nm : forall n : nat, forall m : nat, divisible (gcd n m) m /\\ divisible (gcd n m) n .", "predict": "Axiom divides_gcd_nm : forall n : nat, forall m : nat, divisible (gcd n m) m /\\ divisible (gcd n m) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_SO_smallest_factor. Let $n$ be a natural number. Then if $1$ is less than $n$, then $1$ is less than $smallest_factor$ applied to $n$.\nassistant\n", "label": "lt_SO_smallest_factor : n : Nat -> __ : Lt (nd 1) n -> Lt (nd 1) (smallest_factor n) .", "predict": "lt_SO_smallest_factor : n : Nat -> __ : Lt (nd 1) n -> Lt (nd 1) (smallest_factor n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_theta. For all natural numbers $m$, $theta$ applied to $m$ is less than or equal to the exponentiation of $2$ and the product of $2$ and $m$.\nassistant\n", "label": "axiom le_theta (m : Nat) : theta m ≤ pow 2 (2 * m)", "predict": "axiom le_theta (m : Nat) : theta m ≤ pow 2 (2 * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_found_min_spec. Let $n$ and $b$ be natural numbers. Then for all functions $f$ from natural numbers to booleans, for all functions $__$ from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and the sum of $n$ and $b$.\nassistant\n", "label": "axiom not_found_min_spec (n b : Nat) (f : (x__ : Nat) -> bool) (x__ : (i : Nat) -> (x__ : b ≤ i) -> (__1 : i < n + b) -> f i = false) : min_spec n b f (n + b)", "predict": "axiom not_found_min_spec (n b : Nat) (f : (x__ : Nat) -> bool) (x__ : (i : Nat) -> (x__ : b ≤ i) -> (__1 : i < n + b) -> f i = false) : min_spec n b f (n + b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTimes_n_Sm. Let $n$ and $m$ be natural numbers. Then the sum of $n$ and the product of $n$ and $m$ is equal to the product of $n$ and the sum of $m$ and $1$.\nassistant\n", "label": "times_n_Sm : n : Nat -> m : Nat -> Eq (plus n (times n m)) (times n (plus m (nd 1))) .", "predict": "times_n_Sm : n : Nat -> m : Nat -> Eq (plus n (times n m)) (times n (plus m (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n$ be a natural number. Then if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin_prim. Let $n$ be a natural number. Then $ex$ holds for $Nat$ and the function that maps $p$ to the conjunction of the conjunction of $Lt$ applied to $n$ and $p$ and $prime$ applied to $p$ and $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $q$ to $prod$ applied to $Prop$ and $Prop$ and $prime$ applied to $q$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $q$ and $p$ and the function that maps $__1$ to $Leq$ applied to $q$ and $n$.\nassistant\n", "label": "postulate min_prim : (n : Nat) -> ex Nat (\\ p : Nat -> and (and (Lt n p) (prime p)) (prod Set Prop Nat (\\ q : Nat -> prod Prop Prop (prime q) (\\ _ : prime q -> prod Prop Prop (Lt q p) (\\ __1 : Lt q p -> Leq q n)))))", "predict": "postulate min_prim : (n : Nat) -> ex Nat (\\ p : Nat -> and (and (Lt n p) (prime p)) (prod Set Prop Nat (\\ q : Nat -> prod Prop Prop (prime q) (\\ _ : prime q -> prod Prop Prop (Lt q p) (\\ __1 : Lt q p -> Leq q n)))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1560. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $n$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_1560 (n m : Nat) (divnm : divisible n m) (H : 0 = n) (d : Nat) (auto : m = 0 * d) : n = 0", "predict": "axiom let_clause_1560 (n m : Nat) (divnm : divisible n m) (H : 0 = n) (d : Nat) (auto : m = 0 * d) : n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nGcd_aux_body. For all natural numbers $_p$ and $_m$ and $_n$, $Nat$.\nassistant\n", "label": "gcd_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat .", "predict": "gcd_aux_body : _p : Nat -> _m : Nat -> _n : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_inv_rect_CProp0. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z713$ to propositions, for all functions $_H1$ from elements $_z714$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_414$ and functions $_x_416$ from elements $_z714$ of $Eq$ of $Hterm$ and $x_414$ to elements of $P$ of $x_414$ and elements $_z714$ of $Eq$ of $Hterm$ and the sum of $x_414$ and $1$ to elements of $P$ of the sum of $x_414$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "nat_inv_rect_CProp0 : Hterm : Nat -> P : (_z713 : Nat -> Prop) -> _H1 : (_z714 : Eq Hterm 0 -> P 0) -> _H2 : (x_414 : Nat -> _x_416 : (_z714 : Eq Hterm x_414 -> P x_414) -> _z714 : Eq Hterm (plus x_414 (nd 1)) -> P (plus x_414 (nd 1))) -> P Hterm .", "predict": "nat_inv_rect_CProp0 : Hterm : Nat -> P : (_z713 : Nat -> Prop) -> _H1 : (_z714 : Eq Hterm 0 -> P 0) -> _H2 : (x_414 : Nat -> _x_416 : (_z714 : Eq Hterm x_414 -> P x_414) -> _z714 : Eq Hterm (plus x_414 (nd 1)) -> P (plus x_414 (nd 1))) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_log_O. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $m$ is less than $n$, then the logarithm of $n$ and $m$ is equal to $0$.\nassistant\n", "label": "lt_to_log_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : Lt m n -> Eq (log n m) 0 .", "predict": "lt_to_log_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : Lt m n -> Eq (log n m) 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__ , __1 \\in N$. Then we can say that $__$ is less than $__1$.\nassistant\n", "label": "axiom Lt (x__ __1 : Nat) : Prop", "predict": "axiom Lt (x__ __1 : Nat) : Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1572. Let $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if the greatest common divisor of $m$ and $n$ is equal to $0$, then if $m$ is equal to $0$, then if $n$ is equal to $0$, then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0", "predict": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNot_divides_to_p_ord_O. Let $n$ and $i$ be natural numbers. Then if $nth_prime$ applied to $i$ is not divisible by $n$, then $p_ord$ applied to $n$ and $nth_prime$ applied to $i$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $0$ and $n$.\nassistant\n", "label": "not_divides_to_p_ord_O : n : Nat -> i : Nat -> __ : not (divisible (nth_prime i) n) -> Eq (p_ord n (nth_prime i)) (mk_Prod Nat Nat 0 n) .", "predict": "not_divides_to_p_ord_O : n : Nat -> i : Nat -> __ : not (divisible (nth_prime i) n) -> Eq (p_ord n (nth_prime i)) (mk_Prod Nat Nat 0 n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_gcd_aux_mn. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to $p$, then $gcd_aux$ applied to $p$ and $m$ and $n$ is divisible by $m$ and $gcd_aux$ applied to $p$ and $m$ and $n$ is divisible by $n$.\nassistant\n", "label": "divides_gcd_aux_mn : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> and (divisible (gcd_aux p m n) m) (divisible (gcd_aux p m n) n) .", "predict": "divides_gcd_aux_mn : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> and (divisible (gcd_aux p m n) m) (divisible (gcd_aux p m n) n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDecidable_forall. For all functions $P$ from natural numbers to propositions, for all functions $__$ from natural numbers $i$ to elements of $decidable$ of $P$ applied to $i$, for all natural numbers $n$, $decidable$ holds for $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__1$ to $P$ applied to $i$.\nassistant\n", "label": "postulate decidable_forall : (P : (_ : Nat) -> Prop) -> (_ : (i : Nat) -> decidable (P i)) -> (n : Nat) -> decidable (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ __1 : Lt i n -> P i)))", "predict": "postulate decidable_forall : (P : (_ : Nat) -> Prop) -> (_ : (i : Nat) -> decidable (P i)) -> (n : Nat) -> decidable (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ __1 : Lt i n -> P i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_gcd_mod. For all natural numbers $m$ and $n$, if $0$ is less than $n$, then the greatest common divisor of $m$ and $n$ is divisible by the greatest common divisor of $n$ and $mod$ applied to $m$ and $n$.\nassistant\n", "label": "axiom divides_gcd_mod (m n : Nat) (x__ : 0 < n) : divisible (gcd m n) (gcd n (mod m n))", "predict": "axiom divides_gcd_mod (m n : Nat) (x__ : 0 < n) : divisible (gcd m n) (gcd n (mod m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_times_l. Let $p$ and $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if $1$ is less than $p$, then the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ is less than or equal to the logarithm of $p$ and the product of $n$ and $m$.\nassistant\n", "label": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Lt 1 p) -> Leq (plus (log p n) (log p m)) (log p (times n m))", "predict": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Lt 1 p) -> Leq (plus (log p n) (log p m)) (log p (times n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_CProp4. For all sets $_A$, for all functions $Q_$ from elements $_x_929$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_929$ of $range$ of $_A$, $Q_$ holds for $x_929$.\nassistant\n", "label": "Axiom range_rect_CProp4 : forall _A : Set, forall Q_ : ((_x_929 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_929 : range _A, Q_ x_929 .", "predict": "Axiom range_rect_CProp4 : forall _A : Set, forall Q_ : ((_x_929 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_929 : range _A, Q_ x_929 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_pred_n. Let $n$ be a natural number. Then $pred$ applied to $n$ is less than or equal to $n$.\nassistant\n", "label": "Axiom le_pred_n : forall n : nat, Leq (pred n) n .", "predict": "Axiom le_pred_n : forall n : nat, Leq (pred n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax_to_max_spec. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $m$, if $max$ applied to $n$ and $f$ is equal to $m$, then $max_spec$ holds for $n$ and $f$ and $m$.\nassistant\n", "label": "axiom max_to_max_spec (f : (x__ : Nat) -> bool) (n m : Nat) (x__ : max n f = m) : max_spec n f m", "predict": "axiom max_to_max_spec (f : (x__ : Nat) -> bool) (n m : Nat) (x__ : max n f = m) : max_spec n f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_Psi_BPsi. Let $n$ be a natural number. Then $Psi$ applied to the product of $2$ and $n$ is less than or equal to the product of $B$ applied to the product of $2$ and $n$ and $Psi$ applied to $n$.\nassistant\n", "label": "le_Psi_BPsi : n : Nat -> Leq (Psi (times (nd 2) n)) (times (B (times (nd 2) n)) (Psi n)) .", "predict": "le_Psi_BPsi : n : Nat -> Leq (Psi (times (nd 2) n)) (times (B (times (nd 2) n)) (Psi n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_n_to_le. Let $h$ be a function from natural numbers to natural numbers. Then for all natural numbers $k$ and $n$, if $k$ is less than or equal to $n$, then for all elements $__1$ of $permut$ of $h$ and $n$, for all functions $__2$ from natural numbers $m$ and elements $__2$ of $Lt$ of $m$ and $k$ to elements of $Eq$ of $h$ applied to $m$ and $m$, for all natural numbers $j$, if $k$ is less than or equal to $j$, then if $j$ is less than or equal to $n$, then $k$ is less than or equal to $h$ applied to $j$.\nassistant\n", "label": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)", "predict": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__$ be a function from natural numbers to natural numbers. Let $__1 \\in N$. Then we can say that $injn$ holds for $__$ and $__1$.\nassistant\n", "label": "Axiom injn : forall x__ : ((x__ : nat) -> nat), forall __1 : nat, Prop .", "predict": "Axiom injn : forall x__ : ((x__ : nat) -> nat), forall __1 : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSameF_p_le. For all sets $A$, for all functions $p$ from natural numbers to booleans, for all functions $f$ and $g$ from natural numbers to elements of $A$, for all natural numbers $n$ and $m$, if $n$ is less than or equal to $m$, then for all elements $__1$ of $sameF_p$ of $m$ and $p$ and $A$ and $f$ and $g$, $sameF_p$ holds for $n$ and $p$ and $A$ and $f$ and $g$.\nassistant\n", "label": "axiom sameF_p_le (A : Set) (p : (x__ : Nat) -> bool) (f g : (x__ : Nat) -> A) (n m : Nat) (x__ : n ≤ m) (__1 : sameF_p m p A f g) : sameF_p n p A f g", "predict": "axiom sameF_p_le (A : Set) (p : (x__ : Nat) -> bool) (f g : (x__ : Nat) -> A) (n m : Nat) (x__ : n ≤ m) (__1 : sameF_p m p A f g) : sameF_p n p A f g"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_plus_to_le. For all natural numbers $a$ and $n$ and $m$, if the sum of $a$ and $n$ is less than or equal to the sum of $a$ and $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "le_plus_to_le : a : Nat -> n : Nat -> m : Nat -> __ : Leq (plus a n) (plus a m) -> Leq n m .", "predict": "le_plus_to_le : a : Nat -> n : Nat -> m : Nat -> __ : Leq (plus a n) (plus a m) -> Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_Type0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_901$ of $ACop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_901$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_901$.\nassistant\n", "label": "axiom ACop_rect_Type0 (A : Set) (_nil : A) (Q_ : (_x_901 : ACop A _nil) -> Set) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_901 : ACop A _nil) : Q_ x_901", "predict": "axiom ACop_rect_Type0 (A : Set) (_nil : A) (Q_ : (_x_901 : ACop A _nil) -> Set) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_901 : ACop A _nil) : Q_ x_901"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_inv_rect_CProp2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1482$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_851$ of $Lt$ of $x4$ and $x2$ and elements $x_850$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1483$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate div_mod_spec_inv_rect_CProp2 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1482 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_851 : Lt x4 x2) -> (x_850 : Eq x1 (plus (times x3 x2) x4)) -> (_z1483 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P Hterm", "predict": "postulate div_mod_spec_inv_rect_CProp2 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1482 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_851 : Lt x4 x2) -> (x_850 : Eq x1 (plus (times x3 x2) x4)) -> (_z1483 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_1_to_le_exp_B. For all natural numbers $n$, if $1$ is less than $n$, then the exponentiation of $2$ and the product of $2$ and $n$ is less than or equal to the product of the product of $2$ and $n$ and $B$ applied to the product of $2$ and $n$.\nassistant\n", "label": "Axiom lt_1_to_le_exp_B : forall n : nat, forall x__ : (1 < n), Leq (pow 2 (2 * n)) (2 * n * B (2 * n)) .", "predict": "Axiom lt_1_to_le_exp_B : forall n : nat, forall x__ : (1 < n), Leq (pow 2 (2 * n)) (2 * n * B (2 * n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDecidable_prime. Let $n$ be a natural number. Then $decidable$ holds for $prime$ applied to $n$.\nassistant\n", "label": "Axiom decidable_prime : forall n : nat, decidable (prime n) .", "predict": "Axiom decidable_prime : forall n : nat, decidable (prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__$ be a natural number. Then the successor of $__$ is a natural number.\nassistant\n", "label": "axiom succ (x__ : Nat) : Nat", "predict": "axiom succ (x__ : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBceq. Let $n$ and $k$ be natural numbers. Then $bc$ applied to $n$ and $k$ is equal to the quotient of the factorial of $n$ and the product of the factorial of $k$ and the factorial of the difference of $n$ and $k$.\nassistant\n", "label": "Axiom bceq : forall n : nat, forall k : nat, bc n k = factorial n / (factorial k * factorial (n - k)) .", "predict": "Axiom bceq : forall n : nat, forall k : nat, bc n k = factorial n / (factorial k * factorial (n - k)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_le_ord. For all natural numbers $p$ and $n$ and $m$, if $0$ is less than $n$, then if $0$ is less than $m$, then if $p$ is prime, then if $n$ is divisible by $m$, then $ord$ applied to $n$ and $p$ is less than or equal to $ord$ applied to $m$ and $p$.\nassistant\n", "label": "axiom divides_to_le_ord (p n m : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : prime p) (__3 : divisible n m) : ord n p ≤ ord m p", "predict": "axiom divides_to_le_ord (p n m : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : prime p) (__3 : divisible n m) : ord n p ≤ ord m p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_plus_to_le. Let $a$ and $n$ and $m$ be natural numbers. Then if the sum of $a$ and $n$ is less than or equal to the sum of $a$ and $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "postulate le_plus_to_le : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq (plus a n) (plus a m)) -> Leq n m", "predict": "postulate le_plus_to_le : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq (plus a n) (plus a m)) -> Leq n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nGcd_SO_n. Let $n$ be a natural number. Then the greatest common divisor of $1$ and $n$ is equal to $1$.\nassistant\n", "label": "axiom gcd_SO_n (n : Nat) : gcd 1 n = 1", "predict": "axiom gcd_SO_n (n : Nat) : gcd 1 n = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLstar_r. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, $relation$ holds for $B$.\nassistant\n", "label": "axiom lstar_r (B : Set) (_R : relation B) (x__ : Nat) : relation B", "predict": "axiom lstar_r (B : Set) (_R : relation B) (x__ : Nat) : relation B"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_a. Let $a$ and $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then $n$ is less than or equal to the sum of $a$ and $m$.\nassistant\n", "label": "axiom le_plus_a (a n m : Nat) (x__ : n ≤ m) : n ≤ a + m", "predict": "axiom le_plus_a (a n m : Nat) (x__ : n ≤ m) : n ≤ a + m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_Type3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1710$ of $Dop$ of $x1$ and $x2$ to elements of $Type3$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1711$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_Type3 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1710 : Dop x1 x2 -> Type3) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1711 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "Dop_inv_rect_Type3 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1710 : Dop x1 x2 -> Type3) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1711 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_ind. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_889$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_889$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_889$.\nassistant\n", "label": "Axiom ACop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_889 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_889 : ACop A _nil, Q_ x_889 .", "predict": "Axiom ACop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_889 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_889 : ACop A _nil, Q_ x_889 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_div_S. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then $n$ is less than the product of the sum of the quotient of $n$ and $m$ and $1$ and $m$.\nassistant\n", "label": "postulate lt_div_S : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt n (times (plus (div n m) 1) m)", "predict": "postulate lt_div_S : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt n (times (plus (div n m) 1) m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNth_prime_body. For all natural numbers $__$, $Nat$.\nassistant\n", "label": "nth_prime_body : __ : Nat -> Nat .", "predict": "nth_prime_body : __ : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_ord_sigma_p. Let $n$ and $m$ and $x$ be natural numbers. Then if $0$ is less than $n$, then if $x$ is prime, then if the exponentiation of $x$ and $m$ is less than or equal to $n$, then if $n$ is less than the exponentiation of $x$ and the sum of $m$ and $1$, then $ord$ applied to $n$ and $x$ is equal to $bigop$ applied to $m$ and the function that maps $i$ to $dividesb$ applied to the exponentiation of $x$ and the sum of $i$ and $1$ and $n$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $1$.\nassistant\n", "label": "postulate eq_ord_sigma_p : (n : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt 0 n) -> (__1 : prime x) -> (__2 : Leq (pow x m) n) -> (__3 : Lt n (pow x (plus m 1))) -> Eq (ord n x) (bigop m (\\ i : Nat -> dividesb (pow x (plus i 1)) n) Nat 0 plus (\\ i : Nat -> 1))", "predict": "postulate eq_ord_sigma_p : (n : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt 0 n) -> (__1 : prime x) -> (__2 : Leq (pow x m) n) -> (__3 : Lt n (pow x (plus m 1))) -> Eq (ord n x) (bigop m (\\ i : Nat -> dividesb (pow x (plus i 1)) n) Nat 0 plus (\\ i : Nat -> 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_n_n. For all natural numbers $n$, if $0$ is less than $n$, then the quotient of $n$ and $n$ is equal to $1$.\nassistant\n", "label": "axiom div_n_n (n : Nat) (x__ : 0 < n) : n / n = 1", "predict": "axiom div_n_n (n : Nat) (x__ : 0 < n) : n / n = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBceq. For all natural numbers $n$ and $k$, $bc$ applied to $n$ and $k$ is equal to the quotient of the factorial of $n$ and the product of the factorial of $k$ and the factorial of the difference of $n$ and $k$.\nassistant\n", "label": "postulate bceq : (n : Nat) -> (k : Nat) -> Eq (bc n k) (div (factorial n) (times (factorial k) (factorial (minus n k))))", "predict": "postulate bceq : (n : Nat) -> (k : Nat) -> Eq (bc n k) (div (factorial n) (times (factorial k) (factorial (minus n k))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_Type1. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1524$ of $Aop$ of $x1$ and $x2$ to elements of $Type1$, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1525$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_Type1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1524 : Aop x1 x2 -> Type1) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1525 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "Aop_inv_rect_Type1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1524 : Aop x1 x2 -> Type1) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1525 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_log_exp. Let $p$ and $n$ be natural numbers. Then if $1$ is less than $p$, then the logarithm of $p$ and the exponentiation of $p$ and $n$ is equal to $n$.\nassistant\n", "label": "postulate eq_log_exp : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Eq (log p (pow p n)) n", "predict": "postulate eq_log_exp : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Eq (log p (pow p n)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_log2_sqrt. Let $n$ be a natural number. Then if the exponentiation of $2$ and $4$ is less than or equal to $n$, then the logarithm of $2$ and $n$ is less than or equal to the square root of $n$.\nassistant\n", "label": "Axiom le_log2_sqrt : forall n : nat, forall x__ : Leq (pow 2 4) n, Leq (log 2 n) (sqrt n) .", "predict": "Axiom le_log2_sqrt : forall n : nat, forall x__ : Leq (pow 2 4) n, Leq (log 2 n) (sqrt n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_inv_rect_Type0. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z683$ to sets, for all functions $_H1$ from elements $_z684$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_390$ and functions $_x_392$ from elements $_z684$ of $Eq$ of $Hterm$ and $x_390$ to elements of $P$ of $x_390$ and elements $_z684$ of $Eq$ of $Hterm$ and the sum of $x_390$ and $1$ to elements of $P$ of the sum of $x_390$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "nat_inv_rect_Type0 : Hterm : Nat -> P : (_z683 : Nat -> Set) -> _H1 : (_z684 : Eq Hterm 0 -> P 0) -> _H2 : (x_390 : Nat -> _x_392 : (_z684 : Eq Hterm x_390 -> P x_390) -> _z684 : Eq Hterm (plus x_390 (nd 1)) -> P (plus x_390 (nd 1))) -> P Hterm .", "predict": "nat_inv_rect_Type0 : Hterm : Nat -> P : (_z683 : Nat -> Set) -> _H1 : (_z684 : Eq Hterm 0 -> P 0) -> _H2 : (x_390 : Nat -> _x_392 : (_z684 : Eq Hterm x_390 -> P x_390) -> _z684 : Eq Hterm (plus x_390 (nd 1)) -> P (plus x_390 (nd 1))) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nOrd_eq. For all natural numbers $n$ and $p$, $ord$ applied to $n$ and $p$ is equal to $fst$ applied to $Nat$ and $Nat$ and $p_ord$ applied to $n$ and $p$.\nassistant\n", "label": "Axiom ord_eq : forall n : nat, forall p : nat, ord n p = fst nat nat (p_ord n p) .", "predict": "Axiom ord_eq : forall n : nat, forall p : nat, ord n p = fst nat nat (p_ord n p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLstar_ind_r_aux. Let $B$ be a set. Then for all elements $R$ of $relation$ of $B$, for all elements $b1$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b1$, for all functions $__1$ from natural numbers $l$ and elements $b$ of $B$ and elements $b2$ of $B$ and elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$ and elements $__2$ of $R$ of $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b2$, for all natural numbers $l$, for all elements $b$ and $b2$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$, if $b$ is equal to $b1$, then $P$ holds for $l$ and $b2$.\nassistant\n", "label": "postulate lstar_ind_r_aux : (B : Set) -> (R : relation B) -> (b1 : B) -> (P : relation2 Nat B) -> (_ : P 0 b1) -> (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (plus l 1) b2) -> (l : Nat) -> (b : B) -> (b2 : B) -> (__2 : lstar B R l b b2) -> (__3 : Eq b b1) -> P l b2", "predict": "postulate lstar_ind_r_aux : (B : Set) -> (R : relation B) -> (b1 : B) -> (P : relation2 Nat B) -> (_ : P 0 b1) -> (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (plus l 1) b2) -> (l : Nat) -> (b : B) -> (b2 : B) -> (__2 : lstar B R l b b2) -> (__3 : Eq b b1) -> P l b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_to_eq_O. For all natural numbers $n$ and $m$, if $1$ is less than $n$, then if the exponentiation of $n$ and $m$ is equal to $1$, then $m$ is equal to $0$.\nassistant\n", "label": "postulate exp_to_eq_O : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (pow n m) 1) -> Eq m 0", "predict": "postulate exp_to_eq_O : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (pow n m) 1) -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type0_body. For all sets $_A$, for all functions $Q_$ from elements $_x_927$ of $range$ of $_A$ to sets, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_927$ of $range$ of $_A$, $Q_$ holds for $x_927$.\nassistant\n", "label": "postulate range_rect_Type0_body : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927", "predict": "postulate range_rect_Type0_body : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_m_exp_nm. For all natural numbers $n$ and $m$, if $1$ is less than $n$, then $m$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "lt_m_exp_nm : n : Nat -> m : Nat -> __ : Lt (nd 1) n -> Lt m (pow n m) .", "predict": "lt_m_exp_nm : n : Nat -> m : Nat -> __ : Lt (nd 1) n -> Lt m (pow n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1033. Let $p$ and $n$ be natural numbers. Then if $1$ is less than $p$, then for all natural numbers $m$ and $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_1033 : forall p : nat, forall n : nat, forall lt1p : (1 < p), forall m : nat, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall p : nat, forall n : nat, forall lt1p : (1 < p), forall m : nat, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_inv_rect_Type3. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z665$ to elements of $Type3$, for all functions $_H1$ from elements $_z666$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_378$ and functions $_x_380$ from elements $_z666$ of $Eq$ of $Hterm$ and $x_378$ to elements of $P$ of $x_378$ and elements $_z666$ of $Eq$ of $Hterm$ and the sum of $x_378$ and $1$ to elements of $P$ of the sum of $x_378$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "nat_inv_rect_Type3 : Hterm : Nat -> P : (_z665 : Nat -> Type3) -> _H1 : (_z666 : Eq Hterm 0 -> P 0) -> _H2 : (x_378 : Nat -> _x_380 : (_z666 : Eq Hterm x_378 -> P x_378) -> _z666 : Eq Hterm (plus x_378 (nd 1)) -> P (plus x_378 (nd 1))) -> P Hterm .", "predict": "nat_inv_rect_Type3 : Hterm : Nat -> P : (_z665 : Nat -> Type3) -> _H1 : (_z666 : Eq Hterm 0 -> P 0) -> _H2 : (x_378 : Nat -> _x_380 : (_z666 : Eq Hterm x_378 -> P x_378) -> _z666 : Eq Hterm (plus x_378 (nd 1)) -> P (plus x_378 (nd 1))) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10333. Let $n$ be a natural number. Then if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_10333 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10333 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNilr. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ of $A$, $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $nil$ is equal to $a$.\nassistant\n", "label": "axiom nilr (A : Set) (nil : A) (xxx : Aop A nil) (a : A) : op A nil xxx a nil = a", "predict": "axiom nilr (A : Set) (nil : A) (xxx : Aop A nil) (a : A) : op A nil xxx a nil = a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nS_mod. For all natural numbers $_n$ and $_m$, $Nat$.\nassistant\n", "label": "S_mod : _n : Nat -> _m : Nat -> Nat .", "predict": "S_mod : _n : Nat -> _m : Nat -> Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_times_plus_to_congruent. Let $n$ and $m$ and $p$ and $r$ be natural numbers. Then if $0$ is less than $p$, then if $n$ is equal to the sum of the product of $r$ and $p$ and $m$, then $congruent$ holds for $n$ and $m$ and $p$.\nassistant\n", "label": "eq_times_plus_to_congruent : n : Nat -> m : Nat -> p : Nat -> r : Nat -> __ : Lt 0 p -> __1 : Eq n (plus (times r p) m) -> congruent n m p .", "predict": "eq_times_plus_to_congruent : n : Nat -> m : Nat -> p : Nat -> r : Nat -> __ : Lt 0 p -> __1 : Eq n (plus (times r p) m) -> congruent n m p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_minus_gcd_aux. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to $p$, then $ex$ holds for $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $p$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $p$ and $m$ and $n$.\nassistant\n", "label": "eq_minus_gcd_aux : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux p m n)) (Eq (minus (times b m) (times a n)) (gcd_aux p m n)))) .", "predict": "eq_minus_gcd_aux : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux p m n)) (Eq (minus (times b m) (times a n)) (gcd_aux p m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_r_sn. Let $B$ be a set. Then for all elements $R$ of $relation$ of $B$, for all natural numbers $l$, for all elements $b$ and $b2$ of $B$, for all elements $__$ of $lstar_r$ of $B$ and $R$ and $l$ and $b$ and $b2$, for all elements $b1$ of $B$, for all elements $__1$ of $R$ of $b1$ and $b$, $lstar_r$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "lstar_r_sn : B : Set -> R : relation B -> l : Nat -> b : B -> b2 : B -> __ : lstar_r B R l b b2 -> b1 : B -> __1 : R b1 b -> lstar_r B R (plus l (nd 1)) b1 b2 .", "predict": "lstar_r_sn : B : Set -> R : relation B -> l : Nat -> b : B -> b2 : B -> __ : lstar_r B R l b b2 -> b1 : B -> __1 : R b1 b -> lstar_r B R (plus l (nd 1)) b1 b2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_ind_plus. For all elements $R$ of $predicate$ of $Nat$, for all elements $__$ of $R$ of $0$, for all functions $__1$ from natural numbers $n$ and elements $__1$ of $R$ of $n$ to elements of $R$ of the sum of $n$ and $1$, for all natural numbers $n$, $R$ holds for $n$.\nassistant\n", "label": "postulate nat_ind_plus : (R : predicate Nat) -> (_ : R 0) -> (__1 : (n : Nat) -> (__1 : R n) -> R (plus n 1)) -> (n : Nat) -> R n", "predict": "postulate nat_ind_plus : (R : predicate Nat) -> (_ : R 0) -> (__1 : (n : Nat) -> (__1 : R n) -> R (plus n 1)) -> (n : Nat) -> R n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_Psi_exp1. Let $n$ be a natural number. Then $Psi$ applied to the exponentiation of $2$ and $n$ is less than or equal to the exponentiation of $2$ and the difference of the product of $2$ and the exponentiation of $2$ and $n$ and the sum of $n$ and $2$.\nassistant\n", "label": "postulate le_Psi_exp1 : (n : Nat) -> Leq (Psi (pow 2 n)) (pow 2 (minus (times 2 (pow 2 n)) (plus n 2)))", "predict": "postulate le_Psi_exp1 : (n : Nat) -> Leq (Psi (pow 2 n)) (pow 2 (minus (times 2 (pow 2 n)) (plus n 2)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_cr_pair. For all natural numbers $m$ and $n$ and $a$ and $b$, if $a$ is less than $m$, then if $b$ is less than $n$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then $mod$ applied to $cr_pair$ applied to $m$ and $n$ and $a$ and $b$ and $m$ is equal to $a$ and $mod$ applied to $cr_pair$ applied to $m$ and $n$ and $a$ and $b$ and $n$ is equal to $b$.\nassistant\n", "label": "mod_cr_pair : m : Nat -> n : Nat -> a : Nat -> b : Nat -> __ : Lt a m -> __1 : Lt b n -> __2 : Eq (gcd n m) (nd 1) -> and (Eq (mod (cr_pair m n a b) m) a) (Eq (mod (cr_pair m n a b) n) b) .", "predict": "mod_cr_pair : m : Nat -> n : Nat -> a : Nat -> b : Nat -> __ : Lt a m -> __1 : Lt b n -> __2 : Eq (gcd n m) (nd 1) -> and (Eq (mod (cr_pair m n a b) m) a) (Eq (mod (cr_pair m n a b) n) b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_pred_pred. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then if $0$ is less than $m$, then the difference of $pred$ applied to $n$ and $pred$ applied to $m$ is equal to the difference of $n$ and $m$.\nassistant\n", "label": "axiom minus_pred_pred (n m : Nat) (x__ : 0 < n) (__1 : 0 < m) : pred n - pred m = n - m", "predict": "axiom minus_pred_pred (n m : Nat) (x__ : 0 < n) (__1 : 0 < m) : pred n - pred m = n - m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_ind_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_889$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_889$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_889$.\nassistant\n", "label": "Axiom ACop_ind_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_889 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_889 : ACop A _nil, Q_ x_889 .", "predict": "Axiom ACop_ind_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_889 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_889 : ACop A _nil, Q_ x_889 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_to_min_spec. Let $f$ be a function from natural numbers to booleans. Then for all natural numbers $n$ and $b$ and $m$, if $min$ applied to $n$ and $b$ and $f$ is equal to $m$, then $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "axiom min_to_min_spec (f : (x__ : Nat) -> bool) (n b m : Nat) (x__ : min n b f = m) : min_spec n b f m", "predict": "axiom min_to_min_spec (f : (x__ : Nat) -> bool) (n b m : Nat) (x__ : min n b f = m) : min_spec n b f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_inv_rect_Type4. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1704$ of $Dop$ of $x1$ and $x2$ to elements of $Type4$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1705$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Dop_inv_rect_Type4 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1704 : Dop x1 x2) -> Type4) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1705 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm", "predict": "axiom Dop_inv_rect_Type4 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1704 : Dop x1 x2) -> Type4) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1705 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1033. For all natural numbers $n$, if $1$ is less than $n$, then if the product of $2$ and $n$ is prime, then if $1$ is less than the product of $2$ and $n$, then for all functions $H1$ from natural numbers $m$ and elements of $divisible$ of $m$ and the product of $2$ and $n$ and elements $__1$ of $Lt$ of $1$ and $m$ to elements of $Eq$ of $m$ and the product of $2$ and $n$, for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> ltn : Lt (nd 1) n -> _clearme : prime (times (nd 2) n) -> H : Lt (nd 1) (times (nd 2) n) -> H1 : (m : Nat -> __ : divisible m (times (nd 2) n) -> __1 : Lt (nd 1) m -> Eq m (times (nd 2) n)) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Nat -> ltn : Lt (nd 1) n -> _clearme : prime (times (nd 2) n) -> H : Lt (nd 1) (times (nd 2) n) -> H1 : (m : Nat -> __ : divisible m (times (nd 2) n) -> __1 : Lt (nd 1) m -> Eq m (times (nd 2) n)) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLeq_sqrt_n. For all natural numbers $n$, the product of the square root of $n$ and the square root of $n$ is less than or equal to $n$.\nassistant\n", "label": "Axiom leq_sqrt_n : forall n : nat, Leq (sqrt n * sqrt n) n .", "predict": "Axiom leq_sqrt_n : forall n : nat, Leq (sqrt n * sqrt n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_CProp2. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_851$ of $Lt$ of $_r$ and $_m$ and elements $x_850$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_851$ and $x_850$, for all elements $x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_849$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849", "predict": "postulate div_mod_spec_rect_CProp2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__$ and $__1$ be natural numbers. Then the difference of $__$ and $__1$ is a natural number.\nassistant\n", "label": "postulate minus : (_ : Nat) -> (__1 : Nat) -> Nat", "predict": "postulate minus : (_ : Nat) -> (__1 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLog_exp2. Let $p$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $p$, then if $0$ is less than $n$, then the product of $m$ and the logarithm of $p$ and $n$ is less than or equal to the logarithm of $p$ and the exponentiation of $n$ and $m$.\nassistant\n", "label": "Axiom log_exp2 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), Leq (m * log p n) (log p (pow n m)) .", "predict": "Axiom log_exp2 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), Leq (m * log p n) (log p (pow n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_fact_pi_p. For all natural numbers $n$, the factorial of $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $leb$ applied to $1$ and $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $i$.\nassistant\n", "label": "Axiom eq_fact_pi_p : forall n : nat, factorial n = bigop (n + 1) (fun i => leb 1 i) nat 1 times (fun i => i) .", "predict": "Axiom eq_fact_pi_p : forall n : nat, factorial n = bigop (n + 1) (fun i => leb 1 i) nat 1 times (fun i => i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAssoc. Let $A$ be a set. Then for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $op$ applied to $A$ and $nil$ and $xxx$ and $b$ and $c$ is equal to $op$ applied to $A$ and $nil$ and $xxx$ and $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ and $c$.\nassistant\n", "label": "Axiom assoc : forall A : Set, forall nil : A, forall xxx : Aop A nil, forall a : A, forall b : A, forall c : A, op A nil xxx a (op A nil xxx b c) = op A nil xxx (op A nil xxx a b) c .", "predict": "Axiom assoc : forall A : Set, forall nil : A, forall xxx : Aop A nil, forall a : A, forall b : A, forall c : A, op A nil xxx a (op A nil xxx b c) = op A nil xxx (op A nil xxx a b) c ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_body. For all natural numbers $__$ and $__1$, $Nat$.\nassistant\n", "label": "axiom minus_body (x__ __1 : Nat) : Nat", "predict": "axiom minus_body (x__ __1 : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_ord_log. Let $n$ and $p$ be natural numbers. Then if $0$ is less than $n$, then if $1$ is less than $p$, then $ord$ applied to $n$ and $p$ is less than or equal to the logarithm of $p$ and $n$.\nassistant\n", "label": "le_ord_log : n : Nat -> p : Nat -> __ : Lt 0 n -> __1 : Lt (nd 1) p -> Leq (ord n p) (log p n) .", "predict": "le_ord_log : n : Nat -> p : Nat -> __ : Lt 0 n -> __1 : Lt (nd 1) p -> Leq (ord n p) (log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEven_or_odd. Let $n$ be a natural number. Then $ex$ holds for $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n$ and the product of $2$ and $a$ and $Eq$ applied to $n$ and the sum of the product of $2$ and $a$ and $1$.\nassistant\n", "label": "Axiom even_or_odd : forall n : nat, ex nat (fun a => n = 2 * a \\/ n = 2 * a + 1) .", "predict": "Axiom even_or_odd : forall n : nat, ex nat (fun a => n = 2 * a \\/ n = 2 * a + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_intro. For all natural numbers $n$ and $m$ and $q$ and $r$, if $r$ is less than $m$, then if $n$ is equal to the sum of the product of $q$ and $m$ and $r$, then $div_mod_spec$ holds for $n$ and $m$ and $q$ and $r$.\nassistant\n", "label": "Axiom div_mod_spec_intro : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall x__ : (r < m), forall __1 : (n = q * m + r), div_mod_spec n m q r .", "predict": "Axiom div_mod_spec_intro : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall x__ : (r < m), forall __1 : (n = q * m + r), div_mod_spec n m q r ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrimes_below_to_bertrand. Let $pm$ be a natural number. Then for all lists $l$ of natural numbers, if $pm$ is prime, then for all elements $__1$ of $primes_below$ of $l$ and the sum of $pm$ and $1$, for all functions $__2$ from natural numbers $p$ and elements $__2$ of $mem$ of $Nat$ and $p$ and $l$ and elements $__3$ of $Lt$ of $2$ and $p$ to elements of $ex$ of $Nat$ and the function that maps $pp$ to the conjunction of the conjunction of $mem$ applied to $Nat$ and $pp$ and $l$ and $Lt$ applied to $pp$ and $p$ and $Leq$ applied to $p$ and the product of $2$ and $pp$, for all natural numbers $n$, if $0$ is less than $n$, then if $n$ is less than $pm$, then $bertrand$ holds for $n$.\nassistant\n", "label": "primes_below_to_bertrand : pm : Nat -> l : list Nat -> __ : prime pm -> __1 : primes_below l (plus pm (nd 1)) -> __2 : (p : Nat -> __2 : mem Nat p l -> __3 : Lt (nd 2) p -> ex Nat (pp : Nat => and (and (mem Nat pp l) (Lt pp p)) (Leq p (times (nd 2) pp)))) -> n : Nat -> __3 : Lt 0 n -> __4 : Lt n pm -> bertrand n .", "predict": "primes_below_to_bertrand : pm : Nat -> l : list Nat -> __ : prime pm -> __1 : primes_below l (plus pm (nd 1)) -> __2 : (p : Nat -> __2 : mem Nat p l -> __3 : Lt (nd 2) p -> ex Nat (pp : Nat => and (and (mem Nat pp l) (Lt pp p)) (Leq p (times (nd 2) pp)))) -> n : Nat -> __3 : Lt 0 n -> __4 : Lt n pm -> bertrand n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10331. For all natural numbers $n$, for all functions $p$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all natural numbers $n1$, for all functions $Hind$ from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g2$ applied to $i$, for all functions $Hle$ from natural numbers $i$ and elements of $Lt$ of $i$ and the sum of $n1$ and $1$ and elements $__1$ of $Eq$ of $p$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, if $p$ applied to $n1$ is equal to $true$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> p : (__ : Nat -> bool) -> g1 : (__ : Nat -> Nat) -> g2 : (__ : Nat -> Nat) -> n1 : Nat -> Hind : (__ : (i : Nat -> __ : Lt i n1 -> __1 : Eq (p i) true -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (i : Nat => p i) Nat (nd 1) times (i : Nat => g1 i)) (bigop n1 (i : Nat => p i) Nat (nd 1) times (i : Nat => g2 i))) -> Hle : (i : Nat -> __ : Lt i (plus n1 (nd 1)) -> __1 : Eq (p i) true -> Leq (g1 i) (g2 i)) -> Hcase : Eq (p n1) true -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Nat -> p : (__ : Nat -> bool) -> g1 : (__ : Nat -> Nat) -> g2 : (__ : Nat -> Nat) -> n1 : Nat -> Hind : (__ : (i : Nat -> __ : Lt i n1 -> __1 : Eq (p i) true -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (i : Nat => p i) Nat (nd 1) times (i : Nat => g1 i)) (bigop n1 (i : Nat => p i) Nat (nd 1) times (i : Nat => g2 i))) -> Hle : (i : Nat -> __ : Lt i (plus n1 (nd 1)) -> __1 : Eq (p i) true -> Leq (g1 i) (g2 i)) -> Hcase : Eq (p n1) true -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15321. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $0$ is equal to $n$, then if $0$ is divisible by $m$, then for all natural numbers $q$, if $m$ is equal to the product of $0$ and $q$, then $m$ is equal to $0$.\nassistant\n", "label": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0", "predict": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax. Let $_n$ be a natural number. Then for all functions $_f$ from natural numbers to booleans, $Nat$.\nassistant\n", "label": "Axiom max : forall _n : nat, forall _f : ((x__ : nat) -> bool), nat .", "predict": "Axiom max : forall _n : nat, forall _f : ((x__ : nat) -> bool), nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_967$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_967$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_967$.\nassistant\n", "label": "Dop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_967 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_967 : Dop A _nil -> Q_ x_967 .", "predict": "Dop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_967 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_967 : Dop A _nil -> Q_ x_967 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp1_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_855$ and $x_854$, for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.\nassistant\n", "label": "div_mod_spec_rect_CProp1_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_853 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_855 : Lt _r _m -> x_854 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> x_853 : div_mod_spec _n _m _q _r -> Q_ x_853 .", "predict": "div_mod_spec_rect_CProp1_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_853 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_855 : Lt _r _m -> x_854 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> x_853 : div_mod_spec _n _m _q _r -> Q_ x_853 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_priml1. Let $n$ be a natural number. Then if $0$ is less than $n$, then the difference of the quotient of the product of $2$ and $n$ and the sum of the logarithm of $2$ and $n$ and $2$ and $1$ is less than or equal to $prim$ applied to the product of $2$ and $n$.\nassistant\n", "label": "postulate le_priml1 : (n : Nat) -> (_ : Lt 0 n) -> Leq (minus (div (times 2 n) (plus (log 2 n) 2)) 1) (prim (times 2 n))", "predict": "postulate le_priml1 : (n : Nat) -> (_ : Lt 0 n) -> Leq (minus (div (times 2 n) (plus (log 2 n) 2)) 1) (prim (times 2 n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax_not_exists. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $max$ applied to $n$ and $f$ is equal to $0$.\nassistant\n", "label": "Axiom max_not_exists : forall f : ((x__ : nat) -> bool), forall n : nat, forall x__ : ((i : nat) -> (x__ : i < n) -> f i = false), max n f = 0 .", "predict": "Axiom max_not_exists : forall f : ((x__ : nat) -> bool), forall n : nat, forall x__ : ((i : nat) -> (x__ : i < n) -> f i = false), max n f = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_Type4_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_891$ of $ACop$ of $A$ and $_nil$ to elements of $Type4$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_891$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_891$.\nassistant\n", "label": "postulate ACop_rect_Type4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_891 : ACop A _nil) -> Type4) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_891 : ACop A _nil) -> Q_ x_891", "predict": "postulate ACop_rect_Type4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_891 : ACop A _nil) -> Type4) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_891 : ACop A _nil) -> Q_ x_891"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax_f_g. For all functions $f$ and $g$ from natural numbers to booleans, for all natural numbers $n$, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$, $max$ applied to $n$ and $f$ is equal to $max$ applied to $n$ and $g$.\nassistant\n", "label": "Axiom max_f_g : forall f : ((x__ : nat) -> bool), forall g : ((x__ : nat) -> bool), forall n : nat, forall x__ : ((i : nat) -> (x__ : i < n) -> f i = g i), max n f = max n g .", "predict": "Axiom max_f_g : forall f : ((x__ : nat) -> bool), forall g : ((x__ : nat) -> bool), forall n : nat, forall x__ : ((i : nat) -> (x__ : i < n) -> f i = g i), max n f = max n g ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nGcd_O_to_eq_O. Let $m$ and $n$ be natural numbers. Then if the greatest common divisor of $m$ and $n$ is equal to $0$, then $m$ is equal to $0$ and $n$ is equal to $0$.\nassistant\n", "label": "Axiom gcd_O_to_eq_O : forall m : nat, forall n : nat, forall x__ : (gcd m n = 0), m = 0 /\\ n = 0 .", "predict": "Axiom gcd_O_to_eq_O : forall m : nat, forall n : nat, forall x__ : (gcd m n = 0), m = 0 /\\ n = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_Type3_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_895$ of $ACop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_895$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_895$.\nassistant\n", "label": "postulate ACop_rect_Type3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_895 : ACop A _nil) -> Type3) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_895 : ACop A _nil) -> Q_ x_895", "predict": "postulate ACop_rect_Type3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_895 : ACop A _nil) -> Type3) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_895 : ACop A _nil) -> Q_ x_895"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNot_not_bertrand_to_bertrand1. For all natural numbers $n$, if it is not the case that $not_bertrand$ holds for $n$, then for all natural numbers $x$, if $n$ is less than or equal to $x$, then if $x$ is less than or equal to the product of $2$ and $n$, then for all functions $__3$ from natural numbers $p$ and elements $__3$ of $Lt$ of $x$ and $p$ and elements $__4$ of $Leq$ of $p$ and the product of $2$ and $n$ to elements of $not$ of $prime$ applied to $p$, $ex$ holds for $Nat$ and the function that maps $p$ to the conjunction of the conjunction of $Lt$ applied to $n$ and $p$ and $Leq$ applied to $p$ and $x$ and $prime$ applied to $p$.\nassistant\n", "label": "not_not_bertrand_to_bertrand1 : n : Nat -> __ : not (not_bertrand n) -> x : Nat -> __1 : Leq n x -> __2 : Leq x (times (nd 2) n) -> __3 : (p : Nat -> __3 : Lt x p -> __4 : Leq p (times (nd 2) n) -> not (prime p)) -> ex Nat (p : Nat => and (and (Lt n p) (Leq p x)) (prime p)) .", "predict": "not_not_bertrand_to_bertrand1 : n : Nat -> __ : not (not_bertrand n) -> x : Nat -> __1 : Leq n x -> __2 : Leq x (times (nd 2) n) -> __3 : (p : Nat -> __3 : Lt x p -> __4 : Leq p (times (nd 2) n) -> not (prime p)) -> ex Nat (p : Nat => and (and (Lt n p) (Leq p x)) (prime p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_O_n. For all natural numbers $n$, $0$ is less than or equal to $n$.\nassistant\n", "label": "postulate le_O_n : (n : Nat) -> Leq 0 n", "predict": "postulate le_O_n : (n : Nat) -> Leq 0 n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nList_of_primes_def. Let $n$ be a natural number. Then $list_of_primes$ applied to $n$ is equal to $lprim$ applied to $n$ and $2$ and $nil$ applied to $Nat$.\nassistant\n", "label": "Axiom list_of_primes_def : forall n : nat, list_of_primes n = lprim n 2 (nil nat) .", "predict": "Axiom list_of_primes_def : forall n : nat, list_of_primes n = lprim n 2 (nil nat) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_to_lt_O. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $n$ is divisible by $m$, then $0$ is less than $n$.\nassistant\n", "label": "divides_to_lt_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Lt 0 n .", "predict": "divides_to_lt_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Lt 0 n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_previous_prime1. Let $n$ be a natural number. Then $Nat$.\nassistant\n", "label": "axiom let_previous_prime1 (n : Nat) : Nat", "predict": "axiom let_previous_prime1 (n : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin_body. Let $__$ and $__1$ be natural numbers. Then for all functions $__2$ from natural numbers $__2$ to booleans, $Nat$.\nassistant\n", "label": "postulate min_body : (_ : Nat) -> (__1 : Nat) -> (__2 : (__2 : Nat) -> bool) -> Nat", "predict": "postulate min_body : (_ : Nat) -> (__1 : Nat) -> (__2 : (__2 : Nat) -> bool) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_prod. Let $k1$ and $k2$ be natural numbers. Then for all functions $p1$ from natural numbers to booleans, for all functions $p2$ from natural numbers and natural numbers $__1$ to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers and natural numbers $__1$ to elements of $B$, $bigop$ applied to $k1$ and the function that maps $x$ to $p1$ applied to $x$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $x$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $x$ and $i$ is equal to $bigop$ applied to the product of $k1$ and $k2$ and the function that maps $i$ to $andb$ applied to $p1$ applied to the quotient of $i$ and $k2$ and $p2$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$.\nassistant\n", "label": "Axiom bigop_prod : forall k1 : nat, forall k2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> (__1 : nat) -> bool), forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> (__1 : nat) -> B), bigop k1 (fun x => p1 x) B nil (op B nil op) (fun x => bigop k2 (fun i => p2 x i) B nil (op B nil op) (fun i => f x i)) = bigop (k1 * k2) (fun i => andb (p1 (i / k2)) (p2 (i / k2) (mod i k2))) B nil (op B nil op) (fun i => f (i / k2) (mod i k2)) .", "predict": "Axiom bigop_prod : forall k1 : nat, forall k2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> (__1 : nat) -> bool), forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> (__1 : nat) -> B), bigop k1 (fun x => p1 x) B nil (op B nil op) (fun x => bigop k2 (fun i => p2 x i) B nil (op B nil op) (fun i => f x i)) = bigop (k1 * k2) (fun i => andb (p1 (i / k2)) (p2 (i / k2) (mod i k2))) B nil (op B nil op) (fun i => f (i / k2) (mod i k2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_to_divides. Let $n$ and $m$ and $q$ be natural numbers. Then for all elements $__$ of $div_mod_spec$ of $m$ and $n$ and $q$ and $0$, $n$ is divisible by $m$.\nassistant\n", "label": "Axiom div_mod_spec_to_divides : forall n : nat, forall m : nat, forall q : nat, forall x__ : div_mod_spec m n q 0, divisible n m .", "predict": "Axiom div_mod_spec_to_divides : forall n : nat, forall m : nat, forall q : nat, forall x__ : div_mod_spec m n q 0, divisible n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nStart_lprim. Let $n$ and $m$ and $a$ be natural numbers. Then for all lists $acc$ of natural numbers, $option_hd$ applied to $Nat$ and $lprim$ applied to $n$ and $m$ and $cons$ applied to $Nat$ and $a$ and $acc$ is equal to $Some$ applied to $Nat$ and $a$.\nassistant\n", "label": "Axiom start_lprim : forall n : nat, forall m : nat, forall a : nat, forall acc : list nat, option_hd nat (lprim n m (cons nat a acc)) = Some nat a .", "predict": "Axiom start_lprim : forall n : nat, forall m : nat, forall a : nat, forall acc : list nat, option_hd nat (lprim n m (cons nat a acc)) = Some nat a ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp0_body. For all sets $_A$, for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "range_rect_CProp0_body : _A : Set -> Q_ : (_x_939 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_939 : range _A -> Q_ x_939 .", "predict": "range_rect_CProp0_body : _A : Set -> Q_ : (_x_939 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_939 : range _A -> Q_ x_939 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_sqrt_to_le_times_l. For all natural numbers $m$ and $n$, if $n$ is less than or equal to the square root of $m$, then the product of $n$ and $n$ is less than or equal to $m$.\nassistant\n", "label": "le_sqrt_to_le_times_l : m : Nat -> n : Nat -> __ : Leq n (sqrt m) -> Leq (times n n) m .", "predict": "le_sqrt_to_le_times_l : m : Nat -> n : Nat -> __ : Leq n (sqrt m) -> Leq (times n n) m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_ind_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_861$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_861$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_861$.\nassistant\n", "label": "Axiom Aop_ind_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_861 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_861 : Aop A _nil, Q_ x_861 .", "predict": "Axiom Aop_ind_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_861 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_861 : Aop A _nil, Q_ x_861 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15601. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $0$ is equal to $n$, then if $0$ is divisible by $m$, then for all natural numbers $q$, if $m$ is equal to the product of $0$ and $q$, then $n$ is equal to $0$.\nassistant\n", "label": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq n 0", "predict": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq n 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_eq_S. Let $n$ and $m$ be natural numbers. Then if $n$ is not equal to $m$, then the sum of $n$ and $1$ is not equal to the sum of $m$ and $1$.\nassistant\n", "label": "axiom not_eq_S (n m : Nat) (x__ : ¬ (n = m)) : ¬ (n + 1 = m + 1)", "predict": "axiom not_eq_S (n m : Nat) (x__ : ¬ (n = m)) : ¬ (n + 1 = m + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_to_le. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $n$ is divisible by $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "Axiom divides_to_le : forall n : nat, forall m : nat, forall x__ : (0 < m), forall __1 : divisible n m, Leq n m .", "predict": "Axiom divides_to_le : forall n : nat, forall m : nat, forall x__ : (0 < m), forall __1 : divisible n m, Leq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_to_le_to_lt. For all natural numbers $n$ and $m$ and $p$, if $n$ is less than $m$, then if $m$ is less than or equal to $p$, then $n$ is less than $p$.\nassistant\n", "label": "axiom lt_to_le_to_lt (n m p : Nat) (x__ : n < m) (__1 : m ≤ p) : n < p", "predict": "axiom lt_to_le_to_lt (n m p : Nat) (x__ : n < m) (__1 : m ≤ p) : n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_prim_n2. Let $n$ be a natural number. Then if $7$ is less than or equal to $n$, then $prim$ applied to the sum of the product of $2$ and $n$ and $1$ is less than or equal to $pred$ applied to $n$.\nassistant\n", "label": "axiom le_prim_n2 (n : Nat) (x__ : 7 ≤ n) : prim (2 * n + 1) ≤ pred n", "predict": "axiom le_prim_n2 (n : Nat) (x__ : 7 ≤ n) : prim (2 * n + 1) ≤ pred n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_div_O. Let $n$ and $m$ be natural numbers. Then if $n$ is less than $m$, then the quotient of $n$ and $m$ is equal to $0$.\nassistant\n", "label": "axiom eq_div_O (n m : Nat) (x__ : n < m) : n / m = 0", "predict": "axiom eq_div_O (n m : Nat) (x__ : n < m) : n / m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBk_def. Let $n$ be a natural number. Then $Bk$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and $k$ applied to $n$ and $p$.\nassistant\n", "label": "axiom Bk_def (n : Nat) : Bk n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (k n p))", "predict": "axiom Bk_def (n : Nat) : Bk n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (k n p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLog_div. Let $p$ and $n$ and $m$ be natural numbers. Then if $1$ is less than $p$, then if $0$ is less than $m$, then if $m$ is less than or equal to $n$, then the logarithm of $p$ and the quotient of $n$ and $m$ is less than or equal to the difference of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) .", "predict": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_Strue. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to $true$, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $f$ applied to $k$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "Axiom bigop_Strue : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall x__ : (p k = true), bigop (k + 1) (fun i => p i) B nil op (fun i => f i) = op (f k) (bigop k (fun i => p i) B nil op (fun i => f i)) .", "predict": "Axiom bigop_Strue : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall x__ : (p k = true), bigop (k + 1) (fun i => p i) B nil op (fun i => f i) = op (f k) (bigop k (fun i => p i) B nil op (fun i => f i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_rect_Type0. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_901$ of $ACop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_901$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_901$.\nassistant\n", "label": "Axiom ACop_rect_Type0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_901 : ACop A _nil) -> Set), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_901 : ACop A _nil, Q_ x_901 .", "predict": "Axiom ACop_rect_Type0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_901 : ACop A _nil) -> Set), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_901 : ACop A _nil, Q_ x_901 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_1_n. For all natural numbers $n$, $1$ is equal to the exponentiation of $1$ and $n$.\nassistant\n", "label": "postulate exp_1_n : (n : Nat) -> Eq 1 (pow 1 n)", "predict": "postulate exp_1_n : (n : Nat) -> Eq 1 (pow 1 n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_pi. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all functions $f$ and $g$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the product of $f$ applied to $i$ and $g$ applied to $i$ is equal to the product of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g$ applied to $i$.\nassistant\n", "label": "Axiom times_pi : forall n : nat, forall p : ((x__ : nat) -> bool), forall f : ((x__ : nat) -> nat), forall g : ((x__ : nat) -> nat), bigop n (fun i => p i) nat 1 times (fun i => f i * g i) = bigop n (fun i => p i) nat 1 times (fun i => f i) * bigop n (fun i => p i) nat 1 times (fun i => g i) .", "predict": "Axiom times_pi : forall n : nat, forall p : ((x__ : nat) -> bool), forall f : ((x__ : nat) -> nat), forall g : ((x__ : nat) -> nat), bigop n (fun i => p i) nat 1 times (fun i => f i * g i) = bigop n (fun i => p i) nat 1 times (fun i => f i) * bigop n (fun i => p i) nat 1 times (fun i => g i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type4_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_945$ of $Dop$ of $A$ and $_nil$ to elements of $Type4$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_945$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_945$.\nassistant\n", "label": "Dop_rect_Type4_body : A : Set -> _nil : A -> Q_ : (_x_945 : Dop A _nil -> Type4) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_945 : Dop A _nil -> Q_ x_945 .", "predict": "Dop_rect_Type4_body : A : Set -> _nil : A -> Q_ : (_x_945 : Dop A _nil -> Type4) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_945 : Dop A _nil -> Q_ x_945 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop. For all sets $A$, for all elements $nil$ of $A$, for all elements $_xxx$ of $ACop$ of $A$ and $nil$, $Aop$ holds for $A$ and $nil$.\nassistant\n", "label": "aop : A : Set -> nil : A -> _xxx : ACop A nil -> Aop A nil .", "predict": "aop : A : Set -> nil : A -> _xxx : ACop A nil -> Aop A nil ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_inv_ind. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Then for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1434$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_811$ of $Lt$ of $x4$ and $x2$ and elements $x_810$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1435$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_811$ and $x_810$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_811$ and $x_810$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1434 : div_mod_spec x1 x2 x3 x4) -> Prop), forall _H1 : ((x_811 : x4 < x2) -> (x_810 : x1 = x3 * x2 + x4) -> (_z1435 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_811 x_810) -> P (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810)), P Hterm .", "predict": "Axiom div_mod_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1434 : div_mod_spec x1 x2 x3 x4) -> Prop), forall _H1 : ((x_811 : x4 < x2) -> (x_810 : x1 = x3 * x2 + x4) -> (_z1435 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_811 x_810) -> P (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_to_eqb_true. Let $n$ and $m$ be natural numbers. Then if $n$ is equal to $m$, then $eqb$ applied to $n$ and $m$ is equal to $true$.\nassistant\n", "label": "eq_to_eqb_true : n : Nat -> m : Nat -> __ : Eq n m -> Eq (eqb n m) true .", "predict": "eq_to_eqb_true : n : Nat -> m : Nat -> __ : Eq n m -> Eq (eqb n m) true ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFst_p_ord_times. For all natural numbers $p$ and $a$ and $b$, if $p$ is prime, then if $0$ is less than $a$, then if $0$ is less than $b$, then $fst$ applied to $Nat$ and $Nat$ and $p_ord$ applied to the product of $a$ and $b$ and $p$ is equal to the sum of $fst$ applied to $Nat$ and $Nat$ and $p_ord$ applied to $a$ and $p$ and $fst$ applied to $Nat$ and $Nat$ and $p_ord$ applied to $b$ and $p$.\nassistant\n", "label": "fst_p_ord_times : p : Nat -> a : Nat -> b : Nat -> __ : prime p -> __1 : Lt 0 a -> __2 : Lt 0 b -> Eq (fst Nat Nat (p_ord (times a b) p)) (plus (fst Nat Nat (p_ord a p)) (fst Nat Nat (p_ord b p))) .", "predict": "fst_p_ord_times : p : Nat -> a : Nat -> b : Nat -> __ : prime p -> __1 : Lt 0 a -> __2 : Lt 0 b -> Eq (fst Nat Nat (p_ord (times a b) p)) (plus (fst Nat Nat (p_ord a p)) (fst Nat Nat (p_ord b p))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nOr_div_mod. For all natural numbers $n$ and $q$, if $0$ is less than $q$, then the sum of $mod$ applied to $n$ and $q$ and $1$ is equal to $q$ and the sum of $n$ and $1$ is equal to the product of the sum of the quotient of $n$ and $q$ and $1$ and $q$ or the sum of $mod$ applied to $n$ and $q$ and $1$ is less than $q$ and the sum of $n$ and $1$ is equal to the sum of the product of the quotient of $n$ and $q$ and $q$ and the sum of $mod$ applied to $n$ and $q$ and $1$.\nassistant\n", "label": "postulate or_div_mod : (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> or (and (Eq (plus (mod n q) 1) q) (Eq (plus n 1) (times (plus (div n q) 1) q))) (and (Lt (plus (mod n q) 1) q) (Eq (plus n 1) (plus (times (div n q) q) (plus (mod n q) 1))))", "predict": "postulate or_div_mod : (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> or (and (Eq (plus (mod n q) 1) q) (Eq (plus n 1) (times (plus (div n q) 1) q))) (and (Lt (plus (mod n q) 1) q) (Eq (plus n 1) (plus (times (div n q) q) (plus (mod n q) 1))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_n_8_to_le_Psi_exp. For all natural numbers $n$, if $n$ is less than or equal to $8$, then $Psi$ applied to $n$ is less than or equal to the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $3$.\nassistant\n", "label": "axiom le_n_8_to_le_Psi_exp (n : Nat) (x__ : n ≤ 8) : Psi n ≤ pow 2 (2 * n - 3)", "predict": "axiom le_n_8_to_le_Psi_exp (n : Nat) (x__ : n ≤ 8) : Psi n ≤ pow 2 (2 * n - 3)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLstar_inv_S. Let $B$ be a set. Then for all elements $R$ of $relation$ of $B$, for all natural numbers $l$, for all elements $b1$ and $b2$ of $B$, for all elements $__$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, for all natural numbers $l0$, if the sum of $l0$ and $1$ is equal to $l$, then $ex2$ holds for $B$ and the function that maps $b$ to $R$ applied to $b1$ and $b$ and the function that maps $b$ to $lstar$ applied to $B$ and $R$ and $l0$ and $b$ and $b2$.\nassistant\n", "label": "postulate lstar_inv_S : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> (l0 : Nat) -> (__1 : Eq (plus l0 1) l) -> ex2 B (\\ b : B -> R b1 b) (\\ b : B -> lstar B R l0 b b2)", "predict": "postulate lstar_inv_S : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> (l0 : Nat) -> (__1 : Eq (plus l0 1) l) -> ex2 B (\\ b : B -> R b1 b) (\\ b : B -> lstar B R l0 b b2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1562. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.\nassistant\n", "label": "Axiom let_clause_1562 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), n * c - m * d = 1 .", "predict": "Axiom let_clause_1562 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), n * c - m * d = 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_exp. Let $n$ and $m$ and $p$ be natural numbers. Then if $1$ is less than $p$, then if $n$ is less than $m$, then the exponentiation of $p$ and $n$ is less than the exponentiation of $p$ and $m$.\nassistant\n", "label": "lt_exp : n : Nat -> m : Nat -> p : Nat -> __ : Lt (nd 1) p -> __1 : Lt n m -> Lt (pow p n) (pow p m) .", "predict": "lt_exp : n : Nat -> m : Nat -> p : Nat -> __ : Lt (nd 1) p -> __1 : Lt n m -> Lt (pow p n) (pow p m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_times_to_lt_S_to_div. For all natural numbers $a$ and $c$ and $b$, if $0$ is less than $b$, then if the product of $b$ and $c$ is less than or equal to $a$, then if $a$ is less than the product of $b$ and the sum of $c$ and $1$, then the quotient of $a$ and $b$ is equal to $c$.\nassistant\n", "label": "Axiom lt_to_le_times_to_lt_S_to_div : forall a : nat, forall c : nat, forall b : nat, forall x__ : (0 < b), forall __1 : Leq (b * c) a, forall __2 : (a < b * (c + 1)), a / b = c .", "predict": "Axiom lt_to_le_times_to_lt_S_to_div : forall a : nat, forall c : nat, forall b : nat, forall x__ : (0 < b), forall __1 : Leq (b * c) a, forall __2 : (a < b * (c + 1)), a / b = c ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nChecker_body. For all lists $__$ of natural numbers, $bool$.\nassistant\n", "label": "Axiom checker_body : forall x__ : list nat, bool .", "predict": "Axiom checker_body : forall x__ : list nat, bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLeq_sqrt_n. Let $n$ be a natural number. Then the product of the square root of $n$ and the square root of $n$ is less than or equal to $n$.\nassistant\n", "label": "Axiom leq_sqrt_n : forall n : nat, Leq (sqrt n * sqrt n) n .", "predict": "Axiom leq_sqrt_n : forall n : nat, Leq (sqrt n * sqrt n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDistr_body. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Dop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $aop__o__op$ applied to $A$ and $nil$ and $sum$ applied to $A$ and $nil$ and $xxx$ and $b$ and $c$ is equal to $aop__o__op$ applied to $A$ and $nil$ and $sum$ applied to $A$ and $nil$ and $xxx$ and $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ and $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $c$.\nassistant\n", "label": "postulate distr_body : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c)) (aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c))", "predict": "postulate distr_body : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c)) (aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBceq. For all natural numbers $n$ and $k$, $bc$ applied to $n$ and $k$ is equal to the quotient of the factorial of $n$ and the product of the factorial of $k$ and the factorial of the difference of $n$ and $k$.\nassistant\n", "label": "axiom bceq (n k : Nat) : bc n k = factorial n / (factorial k * factorial (n - k))", "predict": "axiom bceq (n k : Nat) : bc n k = factorial n / (factorial k * factorial (n - k))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nSquare_S. For all natural numbers $a$, the exponentiation of the sum of $a$ and $1$ and $2$ is equal to the sum of the sum of the exponentiation of $a$ and $2$ and the product of $2$ and $a$ and $1$.\nassistant\n", "label": "postulate square_S : (a : Nat) -> Eq (pow (plus a 1) 2) (plus (plus (pow a 2) (times 2 a)) 1)", "predict": "postulate square_S : (a : Nat) -> Eq (pow (plus a 1) 2) (plus (plus (pow a 2) (times 2 a)) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_div_to_times. Let $n$ and $m$ and $q$ be natural numbers. Then if $0$ is less than $q$, then if the quotient of $n$ and $q$ is less than $m$, then $n$ is less than the product of $q$ and $m$.\nassistant\n", "label": "lt_div_to_times : n : Nat -> m : Nat -> q : Nat -> __ : Lt 0 q -> __1 : Lt (div n q) m -> Lt n (times q m) .", "predict": "lt_div_to_times : n : Nat -> m : Nat -> q : Nat -> __ : Lt 0 q -> __1 : Lt (div n q) m -> Lt n (times q m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nSum. For all sets $A$, for all elements $nil$ of $A$, for all elements $_xxx$ of $Dop$ of $A$ and $nil$, $ACop$ holds for $A$ and $nil$.\nassistant\n", "label": "postulate sum : (A : Set) -> (nil : A) -> (_xxx : Dop A nil) -> ACop A nil", "predict": "postulate sum : (A : Set) -> (nil : A) -> (_xxx : Dop A nil) -> ACop A nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_gcd. Let $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is divisible by $m$, then the greatest common divisor of $n$ and $m$ is equal to $n$.\nassistant\n", "label": "postulate divides_to_gcd : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible n m) -> Eq (gcd n m) n", "predict": "postulate divides_to_gcd : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible n m) -> Eq (gcd n m) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1560. Let $n$ and $m$ be natural numbers. Then if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $n$ is equal to $0$.\nassistant\n", "label": "Axiom let_clause_1560 : forall n : nat, forall m : nat, forall divnm : divisible n m, forall H : (0 = n), forall d : nat, forall auto : (m = 0 * d), n = 0 .", "predict": "Axiom let_clause_1560 : forall n : nat, forall m : nat, forall divnm : divisible n m, forall H : (0 = n), forall d : nat, forall auto : (m = 0 * d), n = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMatch_Aop. For all sets $A$, for all elements $_nil$ of $A$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $Aop$ of $A$ and $_nil$ to elements of $return_sort$, for all functions $case_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $return_type$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $z$ of $Aop$ of $A$ and $_nil$, $return_type$ holds for $z$.\nassistant\n", "label": "match_Aop : A : Set -> _nil : A -> return_sort : Sort -> return_type : (z : Aop A _nil -> return_sort) -> case_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> return_type (mk_Aop A _nil op _nill _nilr _assoc)) -> z : Aop A _nil -> return_type z .", "predict": "match_Aop : A : Set -> _nil : A -> return_sort : Sort -> return_type : (z : Aop A _nil -> return_sort) -> case_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> return_type (mk_Aop A _nil op _nill _nilr _assoc)) -> z : Aop A _nil -> return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $__$ be a function from natural numbers to natural numbers. Let $__1$ be a natural number. Then we can say that $bijn$ holds for $__$ and $__1$.\nassistant\n", "label": "Axiom bijn : forall x__ : ((x__ : nat) -> nat), forall __1 : nat, Prop .", "predict": "Axiom bijn : forall x__ : ((x__ : nat) -> nat), forall __1 : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_gcd_aux. For all natural numbers $p$ and $m$ and $n$ and $d$, if $0$ is less than $n$, then if $n$ is less than or equal to $m$, then if $n$ is less than or equal to $p$, then if $d$ is divisible by $m$, then if $d$ is divisible by $n$, then $d$ is divisible by $gcd_aux$ applied to $p$ and $m$ and $n$.\nassistant\n", "label": "divides_gcd_aux : p : Nat -> m : Nat -> n : Nat -> d : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> __3 : divisible d m -> __4 : divisible d n -> divisible d (gcd_aux p m n) .", "predict": "divides_gcd_aux : p : Nat -> m : Nat -> n : Nat -> d : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> __3 : divisible d m -> __4 : divisible d n -> divisible d (gcd_aux p m n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_ind. Let $_n$ and $_m$ be natural numbers. Then for all functions $Q_$ from elements $_x_1192$ of $divisible$ of $_n$ and $_m$ to propositions, for all functions $_H_quotient$ from natural numbers $q$ and elements $x_1193$ of $Eq$ of $_m$ and the product of $_n$ and $q$ to elements of $Q_$ of $quotient$ applied to $_n$ and $_m$ and $q$ and $x_1193$, if $_n$ is divisible by $_m$, then $Q_$ holds for $x_1192$.\nassistant\n", "label": "divides_ind : _n : Nat -> _m : Nat -> Q_ : (_x_1192 : divisible _n _m -> Prop) -> _H_quotient : (q : Nat -> x_1193 : Eq _m (times _n q) -> Q_ (quotient _n _m q x_1193)) -> x_1192 : divisible _n _m -> Q_ x_1192 .", "predict": "divides_ind : _n : Nat -> _m : Nat -> Q_ : (_x_1192 : divisible _n _m -> Prop) -> _H_quotient : (q : Nat -> x_1193 : Eq _m (times _n q) -> Q_ (quotient _n _m q x_1193)) -> x_1192 : divisible _n _m -> Q_ x_1192 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_times_n. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then $m$ is less than or equal to the product of $n$ and $m$.\nassistant\n", "label": "axiom lt_times_n (n m : Nat) (x__ : 0 < n) : m ≤ n * m", "predict": "axiom lt_times_n (n m : Nat) (x__ : 0 < n) : m ≤ n * m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBertrand. For all natural numbers $n$, if $0$ is less than $n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "bertrand : n : Nat -> __ : Lt 0 n -> bertrand n .", "predict": "bertrand : n : Nat -> __ : Lt 0 n -> bertrand n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__$ be a natural number. Then the factorial of $__$ is a natural number.\nassistant\n", "label": "postulate factorial : (_ : Nat) -> Nat", "predict": "postulate factorial : (_ : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin0. For all natural numbers $_n$, for all functions $_f$ from natural numbers to booleans, $Nat$.\nassistant\n", "label": "Axiom min0 : forall _n : nat, forall _f : ((x__ : nat) -> bool), nat .", "predict": "Axiom min0 : forall _n : nat, forall _f : ((x__ : nat) -> bool), nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type0. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type0 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 .", "predict": "Axiom div_mod_spec_rect_Type0 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_rect_Type1_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_925$ of $range$ of $_A$ to elements of $Type1$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_925$ of $range$ of $_A$, $Q_$ holds for $x_925$.\nassistant\n", "label": "axiom range_rect_Type1_body (_A : Set) (Q_ : (_x_925 : range _A) -> Type1) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_925 : range _A) : Q_ x_925", "predict": "axiom range_rect_Type1_body (_A : Set) (Q_ : (_x_925 : range _A) -> Type1) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_925 : range _A) : Q_ x_925"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_inv_ind. For all sets $x1$, for all elements $x2$ of $relation$ of $x1$, for all natural numbers $x3$, for all elements $x4$ and $x5$ of $x1$, for all elements $_Hterm$ of $lstar_r$ of $x1$ and $x2$ and $x3$ and $x4$ and $x5$, for all functions $P$ from natural numbers $_z2386$ and elements $_z2385$ of $x1$ and elements $_z2384$ of $x1$ to propositions, for all functions $_H1$ from elements $b$ of $x1$ and elements $_z2389$ of $Eq$ of $x3$ and $0$ and elements $_z2388$ of $Eq$ of $x4$ and $b$ and elements $_z2387$ of $Eq$ of $x5$ and $b$ to elements of $P$ of $0$ and $b$ and $b$, for all functions $_H2$ from natural numbers $l$ and elements $b1$ of $x1$ and elements $b$ of $x1$ and elements $_x_1340$ of $lstar_r$ of $x1$ and $x2$ and $l$ and $b1$ and $b$ and elements $b2$ of $x1$ and elements $_x_1339$ of $x2$ of $b$ and $b2$ and functions $_x_1342$ from elements $_z2389$ of $Eq$ of $x3$ and $l$ and elements $_z2388$ of $Eq$ of $x4$ and $b1$ and elements $_z2387$ of $Eq$ of $x5$ and $b$ to elements of $P$ of $l$ and $b1$ and $b$ and elements $_z2389$ of $Eq$ of $x3$ and the sum of $l$ and $1$ and elements $_z2388$ of $Eq$ of $x4$ and $b1$ and elements $_z2387$ of $Eq$ of $x5$ and $b2$ to elements of $P$ of the sum of $l$ and $1$ and $b1$ and $b2$, $P$ holds for $x3$ and $x4$ and $x5$.\nassistant\n", "label": "Axiom lstar_r_inv_ind : forall x1 : Set, forall x2 : relation x1, forall x3 : nat, forall x4 : x1, forall x5 : x1, forall _Hterm : lstar_r x1 x2 x3 x4 x5, forall P : ((_z2386 : nat) -> (_z2385 : x1) -> (_z2384 : x1) -> Prop), forall _H1 : ((b : x1) -> (_z2389 : x3 = 0) -> (_z2388 : x4 = b) -> (_z2387 : x5 = b) -> P 0 b b), forall _H2 : ((l : nat) -> (b1 : x1) -> (b : x1) -> (_x_1340 : lstar_r x1 x2 l b1 b) -> (b2 : x1) -> (_x_1339 : x2 b b2) -> (_x_1342 : (_z2389 : x3 = l) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b) -> P l b1 b) -> (_z2389 : x3 = l + 1) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b2) -> P (l + 1) b1 b2), P x3 x4 x5 .", "predict": "Axiom lstar_r_inv_ind : forall x1 : Set, forall x2 : relation x1, forall x3 : nat, forall x4 : x1, forall x5 : x1, forall _Hterm : lstar_r x1 x2 x3 x4 x5, forall P : ((_z2386 : nat) -> (_z2385 : x1) -> (_z2384 : x1) -> Prop), forall _H1 : ((b : x1) -> (_z2389 : x3 = 0) -> (_z2388 : x4 = b) -> (_z2387 : x5 = b) -> P 0 b b), forall _H2 : ((l : nat) -> (b1 : x1) -> (b : x1) -> (_x_1340 : lstar_r x1 x2 l b1 b) -> (b2 : x1) -> (_x_1339 : x2 b b2) -> (_x_1342 : (_z2389 : x3 = l) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b) -> P l b1 b) -> (_z2389 : x3 = l + 1) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b2) -> P (l + 1) b1 b2), P x3 x4 x5 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nB1_def. Let $n$ be a natural number. Then $B1$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and the product of $bool_to_nat$ applied to $leb$ applied to $k$ applied to $n$ and $p$ and $1$ and $k$ applied to $n$ and $p$.\nassistant\n", "label": "Axiom B1_def : forall n : nat, B1 n = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => pow p (bool_to_nat (leb (k n p) 1) * k n p)) .", "predict": "Axiom B1_def : forall n : nat, B1 n = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => pow p (bool_to_nat (leb (k n p) 1) * k n p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_sigma. Let $n$ be a natural number. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than or equal to $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "Axiom le_sigma : forall n : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall g1 : ((x__ : nat) -> nat), forall g2 : ((x__ : nat) -> nat), forall x__ : ((i : nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true), forall __1 : ((i : nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> Leq (g1 i) (g2 i)), Leq (bigop n (fun i => p1 i) nat 0 plus (fun i => g1 i)) (bigop n (fun i => p2 i) nat 0 plus (fun i => g2 i)) .", "predict": "Axiom le_sigma : forall n : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall g1 : ((x__ : nat) -> nat), forall g2 : ((x__ : nat) -> nat), forall x__ : ((i : nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true), forall __1 : ((i : nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> Leq (g1 i) (g2 i)), Leq (bigop n (fun i => p1 i) nat 0 plus (fun i => g1 i)) (bigop n (fun i => p2 i) nat 0 plus (fun i => g2 i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nP_ord_p. For all natural numbers $p$, if $1$ is less than $p$, then $p_ord$ applied to $p$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $1$ and $1$.\nassistant\n", "label": "p_ord_p : p : Nat -> __ : Lt (nd 1) p -> Eq (p_ord p p) (mk_Prod Nat Nat (nd 1) (nd 1)) .", "predict": "p_ord_p : p : Nat -> __ : Lt (nd 1) p -> Eq (p_ord p p) (mk_Prod Nat Nat (nd 1) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1575. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then for all natural numbers $x1029$, $x1029$ is equal to the product of $x1029$ and the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) .", "predict": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPermut_n_to_eq_n. For all functions $h$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $__$ of $permut$ of $h$ and $n$, for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Lt$ of $m$ and $n$ to elements of $Eq$ of $h$ applied to $m$ and $m$, $h$ applied to $n$ is equal to $n$.\nassistant\n", "label": "permut_n_to_eq_n : h : (__ : Nat -> Nat) -> n : Nat -> __ : permut h n -> __1 : (m : Nat -> __1 : Lt m n -> Eq (h m) m) -> Eq (h n) n .", "predict": "permut_n_to_eq_n : h : (__ : Nat -> Nat) -> n : Nat -> __ : permut h n -> __1 : (m : Nat -> __1 : Lt m n -> Eq (h m) m) -> Eq (h n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp2_body. For all sets $_A$, for all functions $Q_$ from elements $_x_935$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_935$ of $range$ of $_A$, $Q_$ holds for $x_935$.\nassistant\n", "label": "range_rect_CProp2_body : _A : Set -> Q_ : (_x_935 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_935 : range _A -> Q_ x_935 .", "predict": "range_rect_CProp2_body : _A : Set -> Q_ : (_x_935 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_935 : range _A -> Q_ x_935 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_rect_CProp3. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.\nassistant\n", "label": "Axiom Dop_rect_CProp3 : forall A : Set, forall _nil : A, forall Q_ : ((_x_961 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_961 : Dop A _nil, Q_ x_961 .", "predict": "Axiom Dop_rect_CProp3 : forall A : Set, forall _nil : A, forall Q_ : ((_x_961 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_961 : Dop A _nil, Q_ x_961 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1585. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then if $m$ is divisible by $n$, then for all natural numbers $d$, if $0$ is equal to $m$, then if $n$ is equal to the product of $m$ and $d$, then $0$ is equal to $n$.\nassistant\n", "label": "let_clause_1585 : n : Nat -> m : Nat -> posn : Lt 0 n -> _clearme : divisible m n -> d : Nat -> auto : Eq 0 m -> auto' : Eq n (times m d) -> Eq 0 n .", "predict": "let_clause_1585 : n : Nat -> m : Nat -> posn : Lt 0 n -> _clearme : divisible m n -> d : Nat -> auto : Eq 0 m -> auto' : Eq n (times m d) -> Eq 0 n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_inv_plus_l. For all natural numbers $x$ and $y$ and $z$, if the sum of $x$ and $y$ is less than $z$, then $x$ is less than $z$ and $y$ is less than the difference of $z$ and $x$.\nassistant\n", "label": "lt_inv_plus_l : x : Nat -> y : Nat -> z : Nat -> __ : Lt (plus x y) z -> and (Lt x z) (Lt y (minus z x)) .", "predict": "lt_inv_plus_l : x : Nat -> y : Nat -> z : Nat -> __ : Lt (plus x y) z -> and (Lt x z) (Lt y (minus z x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_ind_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_861$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_861$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_861$.\nassistant\n", "label": "Aop_ind_body : A : Set -> _nil : A -> Q_ : (_x_861 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_861 : Aop A _nil -> Q_ x_861 .", "predict": "Aop_ind_body : A : Set -> _nil : A -> Q_ : (_x_861 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_861 : Aop A _nil -> Q_ x_861 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp3_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_933$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_933$ of $range$ of $_A$, $Q_$ holds for $x_933$.\nassistant\n", "label": "range_rect_CProp3_body : _A : Set -> Q_ : (_x_933 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_933 : range _A -> Q_ x_933 .", "predict": "range_rect_CProp3_body : _A : Set -> Q_ : (_x_933 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_933 : range _A -> Q_ x_933 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_exp_to_divides. For all natural numbers $p$ and $n$ and $m$, if $p$ is prime, then if $p$ is divisible by the exponentiation of $n$ and $m$, then $p$ is divisible by $n$.\nassistant\n", "label": "divides_exp_to_divides : p : Nat -> n : Nat -> m : Nat -> __ : prime p -> __1 : divisible p (pow n m) -> divisible p n .", "predict": "divides_exp_to_divides : p : Nat -> n : Nat -> m : Nat -> __ : prime p -> __1 : divisible p (pow n m) -> divisible p n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_or_gt. Let $n$ be a natural number. Then $0$ is equal to $n$ or $0$ is less than $n$.\nassistant\n", "label": "axiom eq_or_gt (n : Nat) : 0 = n ∨ 0 < n", "predict": "axiom eq_or_gt (n : Nat) : 0 = n ∨ 0 < n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_divides_to_gcd_aux. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is not divisible by $m$, then $gcd_aux$ applied to the sum of $p$ and $1$ and $m$ and $n$ is equal to $gcd_aux$ applied to $p$ and $n$ and $mod$ applied to $m$ and $n$.\nassistant\n", "label": "axiom not_divides_to_gcd_aux (p m n : Nat) (x__ : 0 < n) (__1 : ¬ divisible n m) : gcd_aux (p + 1) m n = gcd_aux p n (mod m n)", "predict": "axiom not_divides_to_gcd_aux (p m n : Nat) (x__ : 0 < n) (__1 : ¬ divisible n m) : gcd_aux (p + 1) m n = gcd_aux p n (mod m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDexp. $Dop$ holds for $Nat$ and $1$.\nassistant\n", "label": "Dexp : Dop Nat (nd 1) .", "predict": "Dexp : Dop Nat (nd 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_rect_CProp1_body. For all functions $Q_$ from natural numbers $_x_409$ to propositions, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_410$ and elements $_x_412$ of $Q_$ of $x_410$ to elements of $Q_$ of the sum of $x_410$ and $1$, for all natural numbers $x_409$, $Q_$ holds for $x_409$.\nassistant\n", "label": "nat_rect_CProp1_body : Q_ : (_x_409 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_410 : Nat -> _x_412 : Q_ x_410 -> Q_ (plus x_410 (nd 1))) -> x_409 : Nat -> Q_ x_409 .", "predict": "nat_rect_CProp1_body : Q_ : (_x_409 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_410 : Nat -> _x_412 : Q_ x_410 -> Q_ (plus x_410 (nd 1))) -> x_409 : Nat -> Q_ x_409 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_div_S. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then $n$ is less than the product of the sum of the quotient of $n$ and $m$ and $1$ and $m$.\nassistant\n", "label": "axiom lt_div_S (n m : Nat) (x__ : 0 < m) : n < (n / m + 1) * m", "predict": "axiom lt_div_S (n m : Nat) (x__ : 0 < m) : n < (n / m + 1) * m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_ind_body. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_811$ of $Lt$ of $_r$ and $_m$ and elements $x_810$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_811$ and $x_810$, for all elements $x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_809$.\nassistant\n", "label": "Axiom div_mod_spec_ind_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_809 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_811 : _r < _m) -> (x_810 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)), forall x_809 : div_mod_spec _n _m _q _r, Q_ x_809 .", "predict": "Axiom div_mod_spec_ind_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_809 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_811 : _r < _m) -> (x_810 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)), forall x_809 : div_mod_spec _n _m _q _r, Q_ x_809 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_gcd_mod. Let $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then the greatest common divisor of $m$ and $n$ is divisible by the greatest common divisor of $n$ and $mod$ applied to $m$ and $n$.\nassistant\n", "label": "axiom divides_gcd_mod (m n : Nat) (x__ : 0 < n) : divisible (gcd m n) (gcd n (mod m n))", "predict": "axiom divides_gcd_mod (m n : Nat) (x__ : 0 < n) : divisible (gcd m n) (gcd n (mod m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_Psi_exp5. Let $n$ be a natural number. Then $Psi$ applied to $n$ is less than or equal to the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $3$.\nassistant\n", "label": "Axiom le_Psi_exp5 : forall n : nat, Leq (Psi n) (pow 2 (2 * n - 3)) .", "predict": "Axiom le_Psi_exp5 : forall n : nat, Leq (Psi n) (pow 2 (2 * n - 3)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_times. Let $a$ and $b$ be natural numbers. Then if $0$ is less than $b$, then the quotient of the product of $a$ and $b$ and $b$ is equal to $a$.\nassistant\n", "label": "div_times : a : Nat -> b : Nat -> __ : Lt 0 b -> Eq (div (times a b) b) a .", "predict": "div_times : a : Nat -> b : Nat -> __ : Lt 0 b -> Eq (div (times a b) b) a ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_exp_to_divides. For all natural numbers $p$ and $n$ and $m$, if $p$ is prime, then if $p$ is divisible by the exponentiation of $n$ and $m$, then $p$ is divisible by $n$.\nassistant\n", "label": "axiom divides_exp_to_divides (p n m : Nat) (x__ : prime p) (__1 : divisible p (pow n m)) : divisible p n", "predict": "axiom divides_exp_to_divides (p n m : Nat) (x__ : prime p) (__1 : divisible p (pow n m)) : divisible p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTranspose. Let $__$ and $__1$ and $__2$ be natural numbers. Then $Nat$.\nassistant\n", "label": "postulate transpose : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Nat", "predict": "postulate transpose : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrime_to_lt_O. Let $p$ be a natural number. Then if $p$ is prime, then $0$ is less than $p$.\nassistant\n", "label": "prime_to_lt_O : p : Nat -> __ : prime p -> Lt 0 p .", "predict": "prime_to_lt_O : p : Nat -> __ : prime p -> Lt 0 p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExample11. $nth_prime$ applied to $2$ is equal to $5$.\nassistant\n", "label": "Axiom example11 : nth_prime 2 = 5 .", "predict": "Axiom example11 : nth_prime 2 = 5 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTimes_O_n. For all natural numbers $n$, $0$ is equal to the product of $0$ and $n$.\nassistant\n", "label": "times_O_n : n : Nat -> Eq 0 (times 0 n) .", "predict": "times_O_n : n : Nat -> Eq 0 (times 0 n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_CProp4. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1668$ of $range$ of $x1$ to propositions, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1669$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_CProp4 (x1 : Set) (Hterm : range x1) (P : (_z1668 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1669 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_CProp4 (x1 : Set) (Hterm : range x1) (P : (_z1668 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1669 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_Type4_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_891$ of $ACop$ of $A$ and $_nil$ to elements of $Type4$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_891$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_891$.\nassistant\n", "label": "axiom ACop_rect_Type4_body (A : Set) (_nil : A) (Q_ : (_x_891 : ACop A _nil) -> Type4) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_891 : ACop A _nil) : Q_ x_891", "predict": "axiom ACop_rect_Type4_body (A : Set) (_nil : A) (Q_ : (_x_891 : ACop A _nil) -> Type4) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_891 : ACop A _nil) : Q_ x_891"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPlusAC. $ACop$ holds for $Nat$ and $0$.\nassistant\n", "label": "plusAC : ACop Nat 0 .", "predict": "plusAC : ACop Nat 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_divides_S_fact. Let $n$ and $i$ be natural numbers. Then if $1$ is less than $i$, then if $i$ is less than or equal to $n$, then $i$ is not divisible by the sum of the factorial of $n$ and $1$.\nassistant\n", "label": "postulate not_divides_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> not (divisible i (plus (factorial n) 1))", "predict": "postulate not_divides_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> not (divisible i (plus (factorial n) 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_CProp5. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_843$ of $Lt$ of $_r$ and $_m$ and elements $x_842$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_843$ and $x_842$, for all elements $x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_841$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp5 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_841 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_843 : Lt _r _m) -> (x_842 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> (x_841 : div_mod_spec _n _m _q _r) -> Q_ x_841", "predict": "postulate div_mod_spec_rect_CProp5 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_841 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_843 : Lt _r _m) -> (x_842 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> (x_841 : div_mod_spec _n _m _q _r) -> Q_ x_841"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_O_smallest_factor. Let $n$ be a natural number. Then if $0$ is less than $n$, then $0$ is less than $smallest_factor$ applied to $n$.\nassistant\n", "label": "postulate lt_O_smallest_factor : (n : Nat) -> (_ : Lt 0 n) -> Lt 0 (smallest_factor n)", "predict": "postulate lt_O_smallest_factor : (n : Nat) -> (_ : Lt 0 n) -> Lt 0 (smallest_factor n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEqb_sym. Let $a$ and $b$ be natural numbers. Then $eqb$ applied to $a$ and $b$ is equal to $eqb$ applied to $b$ and $a$.\nassistant\n", "label": "eqb_sym : a : Nat -> b : Nat -> Eq (eqb a b) (eqb b a) .", "predict": "eqb_sym : a : Nat -> b : Nat -> Eq (eqb a b) (eqb b a) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__$ be a natural number. Then we can say that $not_zero$ holds for $__$.\nassistant\n", "label": "axiom not_zero (x__ : Nat) : Prop", "predict": "axiom not_zero (x__ : Nat) : Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod. For all natural numbers $n$ and $m$, $n$ is equal to the sum of the product of the quotient of $n$ and $m$ and $m$ and $mod$ applied to $n$ and $m$.\nassistant\n", "label": "postulate div_mod : (n : Nat) -> (m : Nat) -> Eq n (plus (times (div n m) m) (mod n m))", "predict": "postulate div_mod : (n : Nat) -> (m : Nat) -> Eq n (plus (times (div n m) m) (mod n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type1. For all sets $_A$, for all functions $Q_$ from elements $_x_925$ of $range$ of $_A$ to elements of $Type1$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_925$ of $range$ of $_A$, $Q_$ holds for $x_925$.\nassistant\n", "label": "postulate range_rect_Type1 : (_A : Set) -> (Q_ : (_x_925 : range _A) -> Type1) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_925 : range _A) -> Q_ x_925", "predict": "postulate range_rect_Type1 : (_A : Set) -> (Q_ : (_x_925 : range _A) -> Type1) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_925 : range _A) -> Q_ x_925"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTimesAC. $ACop$ holds for $Nat$ and $1$.\nassistant\n", "label": "postulate timesAC : ACop Nat 1", "predict": "postulate timesAC : ACop Nat 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_Type1_body. For all sets $_A$, for all functions $Q_$ from elements $_x_925$ of $range$ of $_A$ to elements of $Type1$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_925$ of $range$ of $_A$, $Q_$ holds for $x_925$.\nassistant\n", "label": "Axiom range_rect_Type1_body : forall _A : Set, forall Q_ : ((_x_925 : range _A) -> Type1), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_925 : range _A, Q_ x_925 .", "predict": "Axiom range_rect_Type1_body : forall _A : Set, forall Q_ : ((_x_925 : range _A) -> Type1), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_925 : range _A, Q_ x_925 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nB_SSSSO. $B (4)= 6$.\nassistant\n", "label": "B_SSSSO : Eq (B (nd 4)) (nd 6) .", "predict": "B_SSSSO : Eq (B (nd 4)) (nd 6) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_inv_rect_Type2. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1650$ of $range$ of $x1$ to elements of $Type2$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1651$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "range_inv_rect_Type2 : x1 : Set -> Hterm : range x1 -> P : (_z1650 : range x1 -> Type2) -> _H1 : (_enum : (__ : Nat -> x1) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> _z1651 : Eq Hterm (mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm .", "predict": "range_inv_rect_Type2 : x1 : Set -> Hterm : range x1 -> P : (_z1650 : range x1 -> Type2) -> _H1 : (_enum : (__ : Nat -> x1) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> _z1651 : Eq Hterm (mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nP_ord_to_not_eq_O. For all natural numbers $n$ and $p$ and $q$ and $r$, if $1$ is less than $n$, then if $p_ord$ applied to $n$ and $nth_prime$ applied to $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$, then $r$ is not equal to $0$.\nassistant\n", "label": "p_ord_to_not_eq_O : n : Nat -> p : Nat -> q : Nat -> r : Nat -> __ : Lt (nd 1) n -> __1 : Eq (p_ord n (nth_prime p)) (mk_Prod Nat Nat q r) -> not (Eq r 0) .", "predict": "p_ord_to_not_eq_O : n : Nat -> p : Nat -> q : Nat -> r : Nat -> __ : Lt (nd 1) n -> __1 : Eq (p_ord n (nth_prime p)) (mk_Prod Nat Nat q r) -> not (Eq r 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_inv_rect_CProp2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1614$ of $ACop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1615$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom ACop_inv_rect_CProp2 (x1 : Set) (x2 : x1) (Hterm : ACop x1 x2) (P : (_z1614 : ACop x1 x2) -> Prop) (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1615 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) : P Hterm", "predict": "axiom ACop_inv_rect_CProp2 (x1 : Set) (x2 : x1) (Hterm : ACop x1 x2) (P : (_z1614 : ACop x1 x2) -> Prop) (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1615 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBertrand_down. For all natural numbers $n$, if $0$ is less than $n$, then if $n$ is less than or equal to the exponentiation of $2$ and $8$, then $bertrand$ holds for $n$.\nassistant\n", "label": "axiom bertrand_down (n : Nat) (x__ : 0 < n) (__1 : n ≤ pow 2 8) : bertrand n", "predict": "axiom bertrand_down (n : Nat) (x__ : 0 < n) (__1 : n ≤ pow 2 8) : bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBijn_n_Sn. Let $f$ be a function from natural numbers to natural numbers. Then for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and $n$, if $f$ applied to the sum of $n$ and $1$ is equal to the sum of $n$ and $1$, then $bijn$ holds for $f$ and the sum of $n$ and $1$.\nassistant\n", "label": "postulate bijn_n_Sn : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f n) -> (__1 : Eq (f (plus n 1)) (plus n 1)) -> bijn f (plus n 1)", "predict": "postulate bijn_n_Sn : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f n) -> (__1 : Eq (f (plus n 1)) (plus n 1)) -> bijn f (plus n 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1033. Let $p$ and $n$ and $q$ and $r$ be natural numbers. Then if $0$ is less than $p$, then if $p$ is not divisible by $r$, then if $n$ is equal to the product of the exponentiation of $p$ and $q$ and $r$, then for all natural numbers $q0$ and $q1$, if the sum of $q1$ and $1$ is less than or equal to the exponentiation of $p$ and the sum of $q1$ and $1$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_1033 : forall p : nat, forall n : nat, forall q : nat, forall r : nat, forall posp : (0 < p), forall ndivpr : (~ divisible p r), forall Hn : (n = pow p q * r), forall q0 : nat, forall q1 : nat, forall Hind : Leq (q1 + 1) (pow p (q1 + 1)), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall p : nat, forall n : nat, forall q : nat, forall r : nat, forall posp : (0 < p), forall ndivpr : (~ divisible p r), forall Hn : (n = pow p q * r), forall q0 : nat, forall q1 : nat, forall Hind : Leq (q1 + 1) (pow p (q1 + 1)), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_times_n_to_lt_r. Let $n$ and $p$ and $q$ be natural numbers. Then if the product of $n$ and $p$ is less than the product of $n$ and $q$, then $p$ is less than $q$.\nassistant\n", "label": "axiom lt_times_n_to_lt_r (n p q : Nat) (x__ : n * p < n * q) : p < q", "predict": "axiom lt_times_n_to_lt_r (n p q : Nat) (x__ : n * p < n * q) : p < q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExample12. $nth_prime$ applied to $3$ is equal to $7$.\nassistant\n", "label": "axiom example12 : nth_prime 3 = 7", "predict": "axiom example12 : nth_prime 3 = 7"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_CProp0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_913$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_913$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_913$.\nassistant\n", "label": "postulate ACop_rect_CProp0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_913 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_913 : ACop A _nil) -> Q_ x_913", "predict": "postulate ACop_rect_CProp0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_913 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_913 : ACop A _nil) -> Q_ x_913"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_inv_rect_CProp1. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1620$ of $ACop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1621$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "ACop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1620 : ACop x1 x2 -> Prop) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1621 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "ACop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1620 : ACop x1 x2 -> Prop) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1621 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nGcd_SO_n. Let $n$ be a natural number. Then the greatest common divisor of $1$ and $n$ is equal to $1$.\nassistant\n", "label": "Axiom gcd_SO_n : forall n : nat, gcd 1 n = 1 .", "predict": "Axiom gcd_SO_n : forall n : nat, gcd 1 n = 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_diff. Let $p$ be a function from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all natural numbers $i$ and $n$, if $i$ is less than $n$, then if $p$ applied to $i$ is equal to $true$, then $bigop$ applied to $n$ and the function that maps $x$ to $p$ applied to $x$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $f$ applied to $x$ is equal to $aop__o__op$ applied to $B$ and $nil$ and $op$ and $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $x$ to $andb$ applied to $notb$ applied to $eqb$ applied to $i$ and $x$ and $p$ applied to $x$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $f$ applied to $x$.\nassistant\n", "label": "Axiom bigop_diff : forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall i : nat, forall n : nat, forall x__ : (i < n), forall __1 : (p i = true), bigop n (fun x => p x) B nil (aop__o__op B nil op) (fun x => f x) = aop__o__op B nil op (f i) (bigop n (fun x => andb (notb (eqb i x)) (p x)) B nil (aop__o__op B nil op) (fun x => f x)) .", "predict": "Axiom bigop_diff : forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall i : nat, forall n : nat, forall x__ : (i < n), forall __1 : (p i = true), bigop n (fun x => p x) B nil (aop__o__op B nil op) (fun x => f x) = aop__o__op B nil op (f i) (bigop n (fun x => andb (notb (eqb i x)) (p x)) B nil (aop__o__op B nil op) (fun x => f x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMatch_divides. For all natural numbers $_n$ and $_m$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $divisible$ of $_n$ and $_m$ to elements of $return_sort$, for all functions $case_quotient$ from natural numbers $q$ and elements of $Eq$ of $_m$ and the product of $_n$ and $q$ to elements of $return_type$ of $quotient$ applied to $_n$ and $_m$ and $q$ and $__$, if $_n$ is divisible by $_m$, then $return_type$ holds for $z$.\nassistant\n", "label": "axiom match_divides (_n _m : Nat) (return_sort : Sort) (return_type : (z : divisible _n _m) -> return_sort) (case_quotient : (q : Nat) -> (x__ : _m = _n * q) -> return_type (quotient _n _m q __)) (z : divisible _n _m) : return_type z", "predict": "axiom match_divides (_n _m : Nat) (return_sort : Sort) (return_type : (z : divisible _n _m) -> return_sort) (case_quotient : (q : Nat) -> (x__ : _m = _n * q) -> return_type (quotient _n _m q __)) (z : divisible _n _m) : return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nSmallest_factor_fact. For all natural numbers $n$, $n$ is less than $smallest_factor$ applied to the sum of the factorial of $n$ and $1$.\nassistant\n", "label": "postulate smallest_factor_fact : (n : Nat) -> Lt n (smallest_factor (plus (factorial n) 1))", "predict": "postulate smallest_factor_fact : (n : Nat) -> Lt n (smallest_factor (plus (factorial n) 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_discr. Let $a1$ be a set. Then for all elements $a2$ of $a1$, for all elements $x$ and $y$ of $ACop$ of $a1$ and $a2$, if $x$ is equal to $y$, then $match_ACop$ holds for $a1$ and $a2$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $t0$ and $t1$ to $match_ACop$ applied to $a1$ and $a2$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $u0$ and $u1$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R0$ applied to $Aop$ applied to $a1$ and $a2$ and $t0$ and $u0$ and the function that maps $e0$ to $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R1$ applied to $Aop$ applied to $a1$ and $a2$ and $t0$ and the function that maps $x_19$ and $_x_20$ to the function that maps $x0$ and $p0$ to $prod$ applied to $Set$ and $Prop$ and $a1$ and the function that maps $a$ to $prod$ applied to $Set$ and $Prop$ and $a1$ and the function that maps $b$ to $Eq$ applied to $op$ applied to $a1$ and $a2$ and $x0$ and $a$ and $b$ and $op$ applied to $a1$ and $a2$ and $x0$ and $b$ and $a$ applied to $x_19$ and $_x_20$ and $t1$ and $u0$ and $e0$ and $u1$ and the function that maps $_e1$ to $P$ and the function that maps $_z57$ to $P$ and $y$ and $x$.\nassistant\n", "label": "Axiom ACop_discr : forall a1 : Set, forall a2 : a1, forall x : ACop a1 a2, forall y : ACop a1 a2, forall _e : (x = y), match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun t0 => fun t1 => match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun u0 => fun u1 => prod (Type1 + 1) Type1 (univ Type1) (fun P => prod Type1 Type1 (prod Prop Type1 (R0 (Aop a1 a2) t0 = u0) (fun e0 => prod Prop Type1 (R1 (Aop a1 a2) t0 (fun x_19 => fun _x_20 => (fun x0 => fun p0 => prod Set Prop a1 (fun a => prod Set Prop a1 (fun b => op a1 a2 x0 a b = op a1 a2 x0 b a))) x_19 _x_20) t1 u0 e0 = u1) (fun _e1 => P))) (fun _z57 => P))) y) x .", "predict": "Axiom ACop_discr : forall a1 : Set, forall a2 : a1, forall x : ACop a1 a2, forall y : ACop a1 a2, forall _e : (x = y), match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun t0 => fun t1 => match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun u0 => fun u1 => prod (Type1 + 1) Type1 (univ Type1) (fun P => prod Type1 Type1 (prod Prop Type1 (R0 (Aop a1 a2) t0 = u0) (fun e0 => prod Prop Type1 (R1 (Aop a1 a2) t0 (fun x_19 => fun _x_20 => (fun x0 => fun p0 => prod Set Prop a1 (fun a => prod Set Prop a1 (fun b => op a1 a2 x0 a b = op a1 a2 x0 b a))) x_19 _x_20) t1 u0 e0 = u1) (fun _e1 => P))) (fun _z57 => P))) y) x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15625. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCommutative_gcd. For all natural numbers $n$ and $m$, the greatest common divisor of $n$ and $m$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate commutative_gcd : (n : Nat) -> (m : Nat) -> Eq (gcd n m) (gcd m n)", "predict": "postulate commutative_gcd : (n : Nat) -> (m : Nat) -> Eq (gcd n m) (gcd m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_4_to_le_B_exp. Let $n$ be a natural number. Then if $4$ is less than $n$, then $B$ applied to the product of $2$ and $n$ is less than or equal to the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $2$.\nassistant\n", "label": "axiom lt_4_to_le_B_exp (n : Nat) (x__ : 4 < n) : B (2 * n) ≤ pow 2 (2 * n - 2)", "predict": "axiom lt_4_to_le_B_exp (n : Nat) (x__ : 4 < n) : B (2 * n) ≤ pow 2 (2 * n - 2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nChecker. For all lists $__$ of natural numbers, $bool$.\nassistant\n", "label": "checker : __ : list Nat -> bool .", "predict": "checker : __ : list Nat -> bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEqb_elim. Let $n$ and $m$ be natural numbers. Then for all functions $P$ from booleans to propositions, for all functions $__$ from elements of $Eq$ of $n$ and $m$ to elements of $P$ of $true$, for all functions $__1$ from elements $__1$ of $not$ of $Eq$ applied to $n$ and $m$ to elements of $P$ of absurdity, $P$ holds for $eqb$ applied to $n$ and $m$.\nassistant\n", "label": "postulate eqb_elim : (n : Nat) -> (m : Nat) -> (P : (_ : bool) -> Prop) -> (_ : (_ : Eq n m) -> P true) -> (__1 : (__1 : not (Eq n m)) -> P false) -> P (eqb n m)", "predict": "postulate eqb_elim : (n : Nat) -> (m : Nat) -> (P : (_ : bool) -> Prop) -> (_ : (_ : Eq n m) -> P true) -> (__1 : (__1 : not (Eq n m)) -> P false) -> P (eqb n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_div. For all natural numbers $n$ and $d$, if $0$ is less than $n$, then if $d$ is divisible by $n$, then the quotient of $n$ and the quotient of $n$ and $d$ is equal to $d$.\nassistant\n", "label": "postulate div_div : (n : Nat) -> (d : Nat) -> (_ : Lt 0 n) -> (__1 : divisible d n) -> Eq (div n (div n d)) d", "predict": "postulate div_div : (n : Nat) -> (d : Nat) -> (_ : Lt 0 n) -> (__1 : divisible d n) -> Eq (div n (div n d)) d"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMinus_S_S. For all natural numbers $n$ and $m$, the difference of the sum of $n$ and $1$ and the sum of $m$ and $1$ is equal to the difference of $n$ and $m$.\nassistant\n", "label": "Axiom minus_S_S : forall n : nat, forall m : nat, n + 1 - (m + 1) = n - m .", "predict": "Axiom minus_S_S : forall n : nat, forall m : nat, n + 1 - (m + 1) = n - m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__ \\in N$. Then the factorial of $__$ is a natural number.\nassistant\n", "label": "postulate factorial : (_ : Nat) -> Nat", "predict": "postulate factorial : (_ : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDecidable_eq_nat. For all natural numbers $n$ and $m$, $decidable$ holds for $Eq$ applied to $n$ and $m$.\nassistant\n", "label": "Axiom decidable_eq_nat : forall n : nat, forall m : nat, decidable (n = m) .", "predict": "Axiom decidable_eq_nat : forall n : nat, forall m : nat, decidable (n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInjective_times_l. Let $n$ be a natural number. Then if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $m$ and $n$.\nassistant\n", "label": "postulate injective_times_l : (n : Nat) -> (_ : Lt 0 n) -> injective Nat Nat (\\ m : Nat -> times m n)", "predict": "postulate injective_times_l : (n : Nat) -> (_ : Lt 0 n) -> injective Nat Nat (\\ m : Nat -> times m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_rect_Type1. For all functions $Q_$ from natural numbers $_x_385$ to elements of $Type1$, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_386$ and elements $_x_388$ of $Q_$ of $x_386$ to elements of $Q_$ of the sum of $x_386$ and $1$, for all natural numbers $x_385$, $Q_$ holds for $x_385$.\nassistant\n", "label": "nat_rect_Type1 : Q_ : (_x_385 : Nat -> Type1) -> _H_O : Q_ 0 -> _H_S : (x_386 : Nat -> _x_388 : Q_ x_386 -> Q_ (plus x_386 (nd 1))) -> x_385 : Nat -> Q_ x_385 .", "predict": "nat_rect_Type1 : Q_ : (_x_385 : Nat -> Type1) -> _H_O : Q_ 0 -> _H_S : (x_386 : Nat -> _x_388 : Q_ x_386 -> Q_ (plus x_386 (nd 1))) -> x_385 : Nat -> Q_ x_385 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nProdF. For all sets $A$ and $B$, for all functions $_f$ from natural numbers to elements of $A$, for all functions $_g$ from natural numbers to elements of $B$, for all natural numbers $_m$ and $_x$, $Prod$ holds for $A$ and $B$.\nassistant\n", "label": "axiom prodF (A B : Set) (_f : (x__ : Nat) -> A) (_g : (x__ : Nat) -> B) (_m _x : Nat) : Prod A B", "predict": "axiom prodF (A B : Set) (_f : (x__ : Nat) -> A) (_g : (x__ : Nat) -> B) (_m _x : Nat) : Prod A B"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_found_min_spec. Let $n$ and $b$ be natural numbers. Then for all functions $f$ from natural numbers to booleans, for all functions $__$ from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and the sum of $n$ and $b$.\nassistant\n", "label": "postulate not_found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) false) -> min_spec n b f (plus n b)", "predict": "postulate not_found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) false) -> min_spec n b f (plus n b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_Psil. For all natural numbers $n$, $Psi$ applied to $n$ is less than or equal to the exponentiation of $n$ and $prim$ applied to $n$.\nassistant\n", "label": "postulate le_Psil : (n : Nat) -> Leq (Psi n) (pow n (prim n))", "predict": "postulate le_Psil : (n : Nat) -> Leq (Psi n) (pow n (prim n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDpi1__o__aop. For all sets $x0$, for all elements $x1$ of $x0$, for all functions $x2$ from elements of $ACop$ of $x0$ and $x1$ to sets, for all elements $x3$ of $DPair$ of $ACop$ applied to $x0$ and $x1$ and $x2$, $Aop$ holds for $x0$ and $x1$.\nassistant\n", "label": "dpi1__o__aop : x0 : Set -> x1 : x0 -> x2 : (__ : ACop x0 x1 -> Set) -> x3 : DPair (ACop x0 x1) x2 -> Aop x0 x1 .", "predict": "dpi1__o__aop : x0 : Set -> x1 : x0 -> x2 : (__ : ACop x0 x1 -> Set) -> x3 : DPair (ACop x0 x1) x2 -> Aop x0 x1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_inv_rect_CProp3. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z695$ to propositions, for all functions $_H1$ from elements $_z696$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_402$ and functions $_x_404$ from elements $_z696$ of $Eq$ of $Hterm$ and $x_402$ to elements of $P$ of $x_402$ and elements $_z696$ of $Eq$ of $Hterm$ and the sum of $x_402$ and $1$ to elements of $P$ of the sum of $x_402$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom nat_inv_rect_CProp3 : forall Hterm : nat, forall P : ((_z695 : nat) -> Prop), forall _H1 : ((_z696 : Hterm = 0) -> P 0), forall _H2 : ((x_402 : nat) -> (_x_404 : (_z696 : Hterm = x_402) -> P x_402) -> (_z696 : Hterm = x_402 + 1) -> P (x_402 + 1)), P Hterm .", "predict": "Axiom nat_inv_rect_CProp3 : forall Hterm : nat, forall P : ((_z695 : nat) -> Prop), forall _H1 : ((_z696 : Hterm = 0) -> P 0), forall _H2 : ((x_402 : nat) -> (_x_404 : (_z696 : Hterm = x_402) -> P x_402) -> (_z696 : Hterm = x_402 + 1) -> P (x_402 + 1)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15692. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "Axiom let_clause_15692 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15692 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMinus_minus. Let $n$ and $m$ and $p$ be natural numbers. Then if $p$ is less than or equal to $m$, then if $m$ is less than or equal to $n$, then the sum of $p$ and the difference of $n$ and $m$ is equal to the difference of $n$ and the difference of $m$ and $p$.\nassistant\n", "label": "Axiom minus_minus : forall n : nat, forall m : nat, forall p : nat, forall x__ : Leq p m, forall __1 : Leq m n, p + (n - m) = n - (m - p) .", "predict": "Axiom minus_minus : forall n : nat, forall m : nat, forall p : nat, forall x__ : Leq p m, forall __1 : Leq m n, p + (n - m) = n - (m - p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEqb. Let $__$ and $__1$ be natural numbers. Then $bool$.\nassistant\n", "label": "eqb : __ : Nat -> __1 : Nat -> bool .", "predict": "eqb : __ : Nat -> __1 : Nat -> bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFilter_le. Let $_n$ and $__$ be natural numbers. Then for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_type$ of $z$, if $_n$ is less than or equal to $__$, then $return_type$ holds for $z$.\nassistant\n", "label": "Axiom filter_le : forall _n : nat, forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : Leq _n x__) -> return_sort), forall return : ((z : Leq _n x__) -> return_type z), forall z : Leq _n x__, return_type z .", "predict": "Axiom filter_le : forall _n : nat, forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : Leq _n x__) -> return_sort), forall return : ((z : Leq _n x__) -> return_type z), forall z : Leq _n x__, return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPsidef. Let $n$ be a natural number. Then $Psi'$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $p$.\nassistant\n", "label": "Psidef : n : Nat -> Eq (Psi' n) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p n) (i : Nat => true) Nat (nd 1) times (i : Nat => p))) .", "predict": "Psidef : n : Nat -> Eq (Psi' n) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p n) (i : Nat => true) Nat (nd 1) times (i : Nat => p))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n , _m , _q , _r \\in N$. Then $div_mod_spec$ applied to $_n$ and $_m$ and $_q$ and $_r$ is a proposition.\nassistant\n", "label": "div_mod_spec : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Prop .", "predict": "div_mod_spec : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type5_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.\nassistant\n", "label": "Dop_rect_Type5_body : A : Set -> _nil : A -> Q_ : (_x_947 : Dop A _nil -> Type5) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_947 : Dop A _nil -> Q_ x_947 .", "predict": "Dop_rect_Type5_body : A : Set -> _nil : A -> Q_ : (_x_947 : Dop A _nil -> Type5) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_947 : Dop A _nil -> Q_ x_947 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAop_rect_Type0. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_873$ of $Aop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_873$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_873$.\nassistant\n", "label": "postulate Aop_rect_Type0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_873 : Aop A _nil) -> Set) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_873 : Aop A _nil) -> Q_ x_873", "predict": "postulate Aop_rect_Type0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_873 : Aop A _nil) -> Set) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_873 : Aop A _nil) -> Q_ x_873"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_length_to_not_mem. For all natural numbers $n$, for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, if $length$ applied to $Nat$ and $l$ is less than $n$, then $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the negation of $mem$ applied to $Nat$ and $i$ and $l$.\nassistant\n", "label": "lt_length_to_not_mem : n : Nat -> l : list Nat -> __ : unique Nat l -> __1 : (x : Nat -> __1 : mem Nat x l -> Lt x n) -> __2 : Lt (length Nat l) n -> ex Nat (i : Nat => and (Lt i n) (not (mem Nat i l))) .", "predict": "lt_length_to_not_mem : n : Nat -> l : list Nat -> __ : unique Nat l -> __1 : (x : Nat -> __1 : mem Nat x l -> Lt x n) -> __2 : Lt (length Nat l) n -> ex Nat (i : Nat => and (Lt i n) (not (mem Nat i l))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_rect_CProp0_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_913$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_913$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_913$.\nassistant\n", "label": "ACop_rect_CProp0_body : A : Set -> _nil : A -> Q_ : (_x_913 : ACop A _nil -> Prop) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_913 : ACop A _nil -> Q_ x_913 .", "predict": "ACop_rect_CProp0_body : A : Set -> _nil : A -> Q_ : (_x_913 : ACop A _nil -> Prop) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_913 : ACop A _nil -> Q_ x_913 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp4. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_957$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_957$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_957$.\nassistant\n", "label": "Dop_rect_CProp4 : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 .", "predict": "Dop_rect_CProp4 : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1531. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $n$ is divisible by $m$, then for all natural numbers $d$, if $m$ is equal to the product of $n$ and $0$, then $m$ is equal to $0$.\nassistant\n", "label": "let_clause_1531 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> eqm : Eq m (times n 0) -> Eq m 0 .", "predict": "let_clause_1531 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> eqm : Eq m (times n 0) -> Eq m 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLtn_to_ltO. For all natural numbers $n$ and $m$, if $n$ is less than $m$, then $0$ is less than $m$.\nassistant\n", "label": "ltn_to_ltO : n : Nat -> m : Nat -> __ : Lt n m -> Lt 0 m .", "predict": "ltn_to_ltO : n : Nat -> m : Nat -> __ : Lt n m -> Lt 0 m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_rect_CProp0_body. For all sets $_A$, for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "axiom range_rect_CProp0_body (_A : Set) (Q_ : (_x_939 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_939 : range _A) : Q_ x_939", "predict": "axiom range_rect_CProp0_body (_A : Set) (Q_ : (_x_939 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_939 : range _A) : Q_ x_939"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp0. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_859$ of $Lt$ of $_r$ and $_m$ and elements $x_858$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_859$ and $x_858$, for all elements $x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_857$.\nassistant\n", "label": "div_mod_spec_rect_CProp0 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_857 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_859 : Lt _r _m -> x_858 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> x_857 : div_mod_spec _n _m _q _r -> Q_ x_857 .", "predict": "div_mod_spec_rect_CProp0 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_857 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_859 : Lt _r _m -> x_858 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> x_857 : div_mod_spec _n _m _q _r -> Q_ x_857 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_elim1. Let $n$ be a natural number. Then for all functions $P$ from natural numbers to propositions, for all functions $__$ from natural numbers $m$ and functions from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ to elements of $P$ of $p$ to elements of $P$ of $m$, $P$ holds for $n$.\nassistant\n", "label": "axiom nat_elim1 (n : Nat) (P : (x__ : Nat) -> Prop) (x__ : (m : Nat) -> (x__ : (p : Nat) -> (x__ : p < m) -> P p) -> P m) : P n", "predict": "axiom nat_elim1 (n : Nat) (P : (x__ : Nat) -> Prop) (x__ : (m : Nat) -> (x__ : (p : Nat) -> (x__ : p < m) -> P p) -> P m) : P n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_O_exp. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then $0$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "axiom lt_O_exp (n m : Nat) (x__ : 0 < n) : 0 < pow n m", "predict": "axiom lt_O_exp (n m : Nat) (x__ : 0 < n) : 0 < pow n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPi_p_primeb5. Let $n$ be a natural number. Then if $1$ is less than $n$, then $bigop$ applied to the sum of the product of $2$ and $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and the product of $2$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$.\nassistant\n", "label": "Axiom pi_p_primeb5 : forall n : nat, forall x__ : (1 < n), bigop (2 * n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p (2 * n)) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p n) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) .", "predict": "Axiom pi_p_primeb5 : forall n : nat, forall x__ : (1 < n), bigop (2 * n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p (2 * n)) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p n) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_log2_sqrt. For all natural numbers $n$, if the exponentiation of $2$ and $6$ is less than or equal to $n$, then the logarithm of $2$ and $n$ is less than the square root of $n$.\nassistant\n", "label": "postulate lt_log2_sqrt : (n : Nat) -> (_ : Leq (pow 2 6) n) -> Lt (log 2 n) (sqrt n)", "predict": "postulate lt_log2_sqrt : (n : Nat) -> (_ : Leq (pow 2 6) n) -> Lt (log 2 n) (sqrt n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTech. Let $n$ be a natural number. Then if the product of $2$ and the sum of the logarithm of $2$ and the product of $2$ and $n$ and $1$ is less than or equal to the square root of the product of $2$ and $n$, then the product of the quotient of the square root of the product of $2$ and $n$ and $2$ and the sum of the logarithm of $2$ and the product of $2$ and $n$ and $1$ is less than or equal to the quotient of the product of $2$ and $n$ and $4$.\nassistant\n", "label": "tech : n : Nat -> __ : Leq (times (nd 2) (plus (log (nd 2) (times (nd 2) n)) (nd 1))) (sqrt (times (nd 2) n)) -> Leq (times (div (sqrt (times (nd 2) n)) (nd 2)) (plus (log (nd 2) (times (nd 2) n)) (nd 1))) (div (times (nd 2) n) (nd 4)) .", "predict": "tech : n : Nat -> __ : Leq (times (nd 2) (plus (log (nd 2) (times (nd 2) n)) (nd 1))) (sqrt (times (nd 2) n)) -> Leq (times (div (sqrt (times (nd 2) n)) (nd 2)) (plus (log (nd 2) (times (nd 2) n)) (nd 1))) (div (times (nd 2) n) (nd 4)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_times. For all natural numbers $n$ and $m$ and $p$ and $q$, if $n$ is less than $m$, then if $p$ is less than $q$, then the product of $n$ and $p$ is less than the product of $m$ and $q$.\nassistant\n", "label": "Axiom lt_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : (n < m), forall __1 : (p < q), n * p < m * q .", "predict": "Axiom lt_times : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : (n < m), forall __1 : (p < q), n * p < m * q ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInjective_invert_permut. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $__$ of $permut$ of $f$ and $n$, $injn$ holds for $invert_permut$ applied to $n$ and $f$ and $n$.\nassistant\n", "label": "Axiom injective_invert_permut : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : permut f n, injn (invert_permut n f) n .", "predict": "Axiom injective_invert_permut : forall f : ((x__ : nat) -> nat), forall n : nat, forall x__ : permut f n, injn (invert_permut n f) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_1_to_le_exp_B. Let $n$ be a natural number. Then if $1$ is less than $n$, then the exponentiation of $2$ and the product of $2$ and $n$ is less than or equal to the product of the product of $2$ and $n$ and $B$ applied to the product of $2$ and $n$.\nassistant\n", "label": "lt_1_to_le_exp_B : n : Nat -> __ : Lt (nd 1) n -> Leq (pow (nd 2) (times (nd 2) n)) (times (times (nd 2) n) (B (times (nd 2) n))) .", "predict": "lt_1_to_le_exp_B : n : Nat -> __ : Lt (nd 1) n -> Leq (pow (nd 2) (times (nd 2) n)) (times (times (nd 2) n) (B (times (nd 2) n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. For all natural numbers $n$, if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_CProp2_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_851$ of $Lt$ of $_r$ and $_m$ and elements $x_850$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_851$ and $x_850$, for all elements $x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_849$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp2_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849", "predict": "postulate div_mod_spec_rect_CProp2_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_inv_rect_Type2. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1716$ of $Dop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1717$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Dop_inv_rect_Type2 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : ((_z1716 : Dop x1 x2) -> Type2), forall _H1 : ((sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1717 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)), P Hterm .", "predict": "Axiom Dop_inv_rect_Type2 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : ((_z1716 : Dop x1 x2) -> Type2), forall _H1 : ((sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1717 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLstar_ind_body. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all functions $Q_$ from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions, for all functions $_H_lstar_O$ from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$, for all functions $_H_lstar_S$ from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$, for all natural numbers $x_1233$, for all elements $x_1232$ and $x_1231$ of $B$, for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.\nassistant\n", "label": "axiom lstar_ind_body (B : Set) (_R : relation B) (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (l + 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) (x_1233 : Nat) (x_1232 x_1231 : B) (x_1234 : lstar B _R x_1233 x_1232 x_1231) : Q_ x_1233 x_1232 x_1231 x_1234", "predict": "axiom lstar_ind_body (B : Set) (_R : relation B) (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (l + 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) (x_1233 : Nat) (x_1232 x_1231 : B) (x_1234 : lstar B _R x_1233 x_1232 x_1231) : Q_ x_1233 x_1232 x_1231 x_1234"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_discr. For all natural numbers $x$ and $y$, if $x$ is equal to $y$, then $match_nat$ holds for the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and $match_nat$ applied to the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $P$ and the function that maps $_z23$ to $P$ and the function that maps $u0$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $P$ and $y$ and the function that maps $t0$ to $match_nat$ applied to the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $P$ and the function that maps $u0$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R0$ applied to $Nat$ and $t0$ and $u0$ and the function that maps $_e0$ to $P$ and the function that maps $_z24$ to $P$ and $y$ and $x$.\nassistant\n", "label": "nat_discr : x : Nat -> y : Nat -> _e : Eq x y -> match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => prod Type1 Type1 P (_z23 : P => P))) (u0 : Nat => prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => P)) y) (t0 : Nat => match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => P)) (u0 : Nat => prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => prod Type1 Type1 (prod Prop Type1 (Eq (R0 Nat t0) u0) (_e0 : Eq (R0 Nat t0) u0 => P)) (_z24 : (_e0 : Eq (R0 Nat t0) u0 -> P) => P))) y) x .", "predict": "nat_discr : x : Nat -> y : Nat -> _e : Eq x y -> match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => prod Type1 Type1 P (_z23 : P => P))) (u0 : Nat => prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => P)) y) (t0 : Nat => match_nat (plus Type2 (nd 1)) (__ : Nat => univ Type2) (prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => P)) (u0 : Nat => prod (plus Type1 (nd 1)) Type1 (univ Type1) (P : Type1 => prod Type1 Type1 (prod Prop Type1 (Eq (R0 Nat t0) u0) (_e0 : Eq (R0 Nat t0) u0 => P)) (_z24 : (_e0 : Eq (R0 Nat t0) u0 -> P) => P))) y) x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBigop_diff. For all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all natural numbers $i$ and $n$, if $i$ is less than $n$, then if $p$ applied to $i$ is equal to $true$, then $bigop$ applied to $n$ and the function that maps $x$ to $p$ applied to $x$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $f$ applied to $x$ is equal to $aop__o__op$ applied to $B$ and $nil$ and $op$ and $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $x$ to $andb$ applied to $notb$ applied to $eqb$ applied to $i$ and $x$ and $p$ applied to $x$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $f$ applied to $x$.\nassistant\n", "label": "postulate bigop_diff : (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> B) -> (i : Nat) -> (n : Nat) -> (_ : Lt i n) -> (__1 : Eq (p i) true) -> Eq (bigop n (\\ x : Nat -> p x) B nil (aop__o__op B nil op) (\\ x : Nat -> f x)) (aop__o__op B nil op (f i) (bigop n (\\ x : Nat -> andb (notb (eqb i x)) (p x)) B nil (aop__o__op B nil op) (\\ x : Nat -> f x)))", "predict": "postulate bigop_diff : (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> B) -> (i : Nat) -> (n : Nat) -> (_ : Lt i n) -> (__1 : Eq (p i) true) -> Eq (bigop n (\\ x : Nat -> p x) B nil (aop__o__op B nil op) (\\ x : Nat -> f x)) (aop__o__op B nil op (f i) (bigop n (\\ x : Nat -> andb (notb (eqb i x)) (p x)) B nil (aop__o__op B nil op) (\\ x : Nat -> f x)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp4_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_957$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_957$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_957$.\nassistant\n", "label": "Dop_rect_CProp4_body : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 .", "predict": "Dop_rect_CProp4_body : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_inv_rect_Type3. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1578$ of $ACop$ of $x1$ and $x2$ to elements of $Type3$, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1579$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom ACop_inv_rect_Type3 (x1 : Set) (x2 : x1) (Hterm : ACop x1 x2) (P : (_z1578 : ACop x1 x2) -> Type3) (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1579 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) : P Hterm", "predict": "axiom ACop_inv_rect_Type3 (x1 : Set) (x2 : x1) (Hterm : ACop x1 x2) (P : (_z1578 : ACop x1 x2) -> Type3) (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1579 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_le_to_eq. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then if $m$ is less than or equal to $n$, then $n$ is equal to $m$.\nassistant\n", "label": "axiom le_to_le_to_eq (n m : Nat) (x__ : n ≤ m) (__1 : m ≤ n) : n = m", "predict": "axiom le_to_le_to_eq (n m : Nat) (x__ : n ≤ m) (__1 : m ≤ n) : n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $__ , __1 \\in N$. Then the product of $__$ and $__1$ is a natural number.\nassistant\n", "label": "axiom times (x__ __1 : Nat) : Nat", "predict": "axiom times (x__ __1 : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_O_n. For all natural numbers $n$, $0$ is equal to the difference of $0$ and $n$.\nassistant\n", "label": "axiom minus_O_n (n : Nat) : 0 = 0 - n", "predict": "axiom minus_O_n (n : Nat) : 0 = 0 - n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMax_cases. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$, $f$ applied to $n$ is equal to $true$ and $max$ applied to the sum of $n$ and $1$ and $f$ is equal to $n$ or $f$ applied to $n$ is equal to absurdity and $max$ applied to the sum of $n$ and $1$ and $f$ is equal to $max$ applied to $n$ and $f$.\nassistant\n", "label": "max_cases : f : (__ : Nat -> bool) -> n : Nat -> or (and (Eq (f n) true) (Eq (max (plus n (nd 1)) f) n)) (and (Eq (f n) false) (Eq (max (plus n (nd 1)) f) (max n f))) .", "predict": "max_cases : f : (__ : Nat -> bool) -> n : Nat -> or (and (Eq (f n) true) (Eq (max (plus n (nd 1)) f) n)) (and (Eq (f n) false) (Eq (max (plus n (nd 1)) f) (max n f))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_pred_n. For all natural numbers $n$, $pred$ applied to $n$ is less than or equal to $n$.\nassistant\n", "label": "Axiom le_pred_n : forall n : nat, Leq (pred n) n .", "predict": "Axiom le_pred_n : forall n : nat, Leq (pred n) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type0. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_955$ of $Dop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_955$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_955$.\nassistant\n", "label": "Dop_rect_Type0 : A : Set -> _nil : A -> Q_ : (_x_955 : Dop A _nil -> Set) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_955 : Dop A _nil -> Q_ x_955 .", "predict": "Dop_rect_Type0 : A : Set -> _nil : A -> Q_ : (_x_955 : Dop A _nil -> Set) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_955 : Dop A _nil -> Q_ x_955 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_Type3_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_949$ of $Dop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_949$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_949$.\nassistant\n", "label": "postulate Dop_rect_Type3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_949 : Dop A _nil) -> Type3) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_949 : Dop A _nil) -> Q_ x_949", "predict": "postulate Dop_rect_Type3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_949 : Dop A _nil) -> Type3) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_949 : Dop A _nil) -> Q_ x_949"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_1_to_le_exp_B. Let $n$ be a natural number. Then if $1$ is less than $n$, then the exponentiation of $2$ and the product of $2$ and $n$ is less than or equal to the product of the product of $2$ and $n$ and $B$ applied to the product of $2$ and $n$.\nassistant\n", "label": "axiom lt_1_to_le_exp_B (n : Nat) (x__ : 1 < n) : pow 2 (2 * n) ≤ 2 * n * B (2 * n)", "predict": "axiom lt_1_to_le_exp_B (n : Nat) (x__ : 1 < n) : pow 2 (2 * n) ≤ 2 * n * B (2 * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_ind_body. For all natural numbers $_n$, for all functions $Q_$ from natural numbers $x_417$ and elements $_x_418$ of $Leq$ of $_n$ and $x_417$ to propositions, for all elements $_H_le_n$ of $Q_$ of $_n$ and $le_n$ applied to $_n$, for all functions $_H_le_S$ from natural numbers $m$ and elements $x_419$ of $Leq$ of $_n$ and $m$ and elements $_x_421$ of $Q_$ of $m$ and $x_419$ to elements of $Q_$ of the sum of $m$ and $1$ and $le_S$ applied to $_n$ and $m$ and $x_419$, for all natural numbers $x_417$, if $_n$ is less than or equal to $x_417$, then $Q_$ holds for $x_417$ and $x_418$.\nassistant\n", "label": "postulate le_ind_body : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418", "predict": "postulate le_ind_body : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_minus_to_plus_r. For all natural numbers $a$ and $b$ and $c$, if $c$ is less than or equal to $b$, then if $a$ is less than or equal to the difference of $b$ and $c$, then the sum of $a$ and $c$ is less than or equal to $b$.\nassistant\n", "label": "postulate le_minus_to_plus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq c b) -> (__1 : Leq a (minus b c)) -> Leq (plus a c) b", "predict": "postulate le_minus_to_plus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq c b) -> (__1 : Leq a (minus b c)) -> Leq (plus a c) b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_Type1. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type1$, for all functions $_H_div_mod_spec_intro$ from elements $x_831$ of $Lt$ of $_r$ and $_m$ and elements $x_830$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_831$ and $x_830$, for all elements $x_829$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_829$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) -> (_H_div_mod_spec_intro : (x_831 : Lt _r _m) -> (x_830 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) -> (x_829 : div_mod_spec _n _m _q _r) -> Q_ x_829", "predict": "postulate div_mod_spec_rect_Type1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_829 : div_mod_spec _n _m _q _r) -> Type1) -> (_H_div_mod_spec_intro : (x_831 : Lt _r _m) -> (x_830 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_831 x_830)) -> (x_829 : div_mod_spec _n _m _q _r) -> Q_ x_829"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_minus_to_plus. Let $n$ and $m$ and $p$ be natural numbers. Then if the difference of $n$ and $m$ is less than or equal to $p$, then $n$ is less than or equal to the sum of $p$ and $m$.\nassistant\n", "label": "le_minus_to_plus : n : Nat -> m : Nat -> p : Nat -> __ : Leq (minus n m) p -> Leq n (plus p m) .", "predict": "le_minus_to_plus : n : Nat -> m : Nat -> p : Nat -> __ : Leq (minus n m) p -> Leq n (plus p m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDecidable_prime. For all natural numbers $n$, $decidable$ holds for $prime$ applied to $n$.\nassistant\n", "label": "decidable_prime : n : Nat -> decidable (prime n) .", "predict": "decidable_prime : n : Nat -> decidable (prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_smallest_factor_to_not_divides. For all natural numbers $n$ and $i$, if $1$ is less than $n$, then if $1$ is less than $i$, then if $i$ is less than $smallest_factor$ applied to $n$, then $i$ is not divisible by $n$.\nassistant\n", "label": "axiom lt_smallest_factor_to_not_divides (n i : Nat) (x__ : 1 < n) (__1 : 1 < i) (__2 : i < smallest_factor n) : ¬ divisible i n", "predict": "axiom lt_smallest_factor_to_not_divides (n i : Nat) (x__ : 1 < n) (__1 : 1 < i) (__2 : i < smallest_factor n) : ¬ divisible i n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nB1_def. For all natural numbers $n$, $B1$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and the product of $bool_to_nat$ applied to $leb$ applied to $k$ applied to $n$ and $p$ and $1$ and $k$ applied to $n$ and $p$.\nassistant\n", "label": "axiom B1_def (n : Nat) : B1 n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (bool_to_nat (leb (k n p) 1) * k n p))", "predict": "axiom B1_def (n : Nat) : B1 n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => pow p (bool_to_nat (leb (k n p) 1) * k n p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLength_unique_le. For all natural numbers $n$, for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, $length$ applied to $Nat$ and $l$ is less than or equal to $n$.\nassistant\n", "label": "Axiom length_unique_le : forall n : nat, forall l : list nat, forall x__ : unique nat l, forall __1 : ((x : nat) -> (__1 : mem nat x l) -> x < n), Leq (length nat l) n .", "predict": "Axiom length_unique_le : forall n : nat, forall l : list nat, forall x__ : unique nat l, forall __1 : ((x : nat) -> (__1 : mem nat x l) -> x < n), Leq (length nat l) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1607. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "Axiom let_clause_1607 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_1607 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEqb. For all natural numbers $__$ and $__1$, $bool$.\nassistant\n", "label": "postulate eqb : (_ : Nat) -> (__1 : Nat) -> bool", "predict": "postulate eqb : (_ : Nat) -> (__1 : Nat) -> bool"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_O_exp. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then $0$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "Axiom lt_O_exp : forall n : nat, forall m : nat, forall x__ : (0 < n), 0 < pow n m .", "predict": "Axiom lt_O_exp : forall n : nat, forall m : nat, forall x__ : (0 < n), 0 < pow n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nFilter_div_mod_spec. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_type$ of $z$, for all elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $return_type$ holds for $z$.\nassistant\n", "label": "axiom filter_div_mod_spec (_n _m _q _r : Nat) (return_sort : Sort) (return_type : (z : div_mod_spec _n _m _q _r) -> return_sort) (return : (z : div_mod_spec _n _m _q _r) -> return_type z) (z : div_mod_spec _n _m _q _r) : return_type z", "predict": "axiom filter_div_mod_spec (_n _m _q _r : Nat) (return_sort : Sort) (return_type : (z : div_mod_spec _n _m _q _r) -> return_sort) (return : (z : div_mod_spec _n _m _q _r) -> return_type z) (z : div_mod_spec _n _m _q _r) : return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nOrd_exp. Let $p$ and $m$ be natural numbers. Then if $1$ is less than $p$, then $ord$ applied to the exponentiation of $p$ and $m$ and $p$ is equal to $m$.\nassistant\n", "label": "axiom ord_exp (p m : Nat) (x__ : 1 < p) : ord (pow p m) p = m", "predict": "axiom ord_exp (p m : Nat) (x__ : 1 < p) : ord (pow p m) p = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp5. For all sets $_A$, for all functions $Q_$ from elements $_x_931$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_931$ of $range$ of $_A$, $Q_$ holds for $x_931$.\nassistant\n", "label": "range_rect_CProp5 : _A : Set -> Q_ : (_x_931 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_931 : range _A -> Q_ x_931 .", "predict": "range_rect_CProp5 : _A : Set -> Q_ : (_x_931 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_931 : range _A -> Q_ x_931 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_exp. For all natural numbers $p$ and $n$ and $m$, if $1$ is less than $p$, then if $0$ is less than $m$, then the logarithm of $p$ and the product of the exponentiation of $p$ and $n$ and $m$ is equal to the sum of $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "postulate log_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 m) -> Eq (log p (times (pow p n) m)) (plus n (log p m))", "predict": "postulate log_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 m) -> Eq (log p (times (pow p n) m)) (plus n (log p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDpi1__o__op. For all sets $x0$, for all elements $x1$ of $x0$, for all functions $x2$ from elements of $Aop$ of $x0$ and $x1$ to sets, for all elements $x3$ of $DPair$ of $Aop$ applied to $x0$ and $x1$ and $x2$, for all elements $_x_887$ and $_x_888$ of $x0$, $x0$.\nassistant\n", "label": "Axiom dpi1__o__op : forall x0 : Set, forall x1 : x0, forall x2 : ((x__ : Aop x0 x1) -> Set), forall x3 : DPair (Aop x0 x1) x2, forall _x_887 : x0, forall _x_888 : x0, x0 .", "predict": "Axiom dpi1__o__op : forall x0 : Set, forall x1 : x0, forall x2 : ((x__ : Aop x0 x1) -> Set), forall x3 : DPair (Aop x0 x1) x2, forall _x_887 : x0, forall _x_888 : x0, x0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_Type2_body. For all sets $_A$, for all functions $Q_$ from elements $_x_923$ of $range$ of $_A$ to elements of $Type2$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_923$ of $range$ of $_A$, $Q_$ holds for $x_923$.\nassistant\n", "label": "range_rect_Type2_body : _A : Set -> Q_ : (_x_923 : range _A -> Type2) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_923 : range _A -> Q_ x_923 .", "predict": "range_rect_Type2_body : _A : Set -> Q_ : (_x_923 : range _A -> Type2) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_923 : range _A -> Q_ x_923 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1034. For all natural numbers $n$ and $m$ and $p$, if $0$ is less than $p$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of $mod$ applied to $x2515$ and $x2516$ and the product of $x2516$ and the quotient of $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_1034 : forall n : nat, forall m : nat, forall p : nat, forall posp : (0 < p), forall x2515 : nat, forall x2516 : nat, x2515 = mod x2515 x2516 + x2516 * (x2515 / x2516) .", "predict": "Axiom let_clause_1034 : forall n : nat, forall m : nat, forall p : nat, forall posp : (0 < p), forall x2515 : nat, forall x2516 : nat, x2515 = mod x2515 x2516 + x2516 * (x2515 / x2516) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDpi1__o__aop. Let $x0$ be a set. Then for all elements $x1$ of $x0$, for all functions $x2$ from elements of $ACop$ of $x0$ and $x1$ to sets, for all elements $x3$ of $DPair$ of $ACop$ applied to $x0$ and $x1$ and $x2$, $Aop$ holds for $x0$ and $x1$.\nassistant\n", "label": "dpi1__o__aop : x0 : Set -> x1 : x0 -> x2 : (__ : ACop x0 x1 -> Set) -> x3 : DPair (ACop x0 x1) x2 -> Aop x0 x1 .", "predict": "dpi1__o__aop : x0 : Set -> x1 : x0 -> x2 : (__ : ACop x0 x1 -> Set) -> x3 : DPair (ACop x0 x1) x2 -> Aop x0 x1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_rect_CProp5. For all sets $_A$, for all functions $Q_$ from elements $_x_931$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_931$ of $range$ of $_A$, $Q_$ holds for $x_931$.\nassistant\n", "label": "axiom range_rect_CProp5 (_A : Set) (Q_ : (_x_931 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_931 : range _A) : Q_ x_931", "predict": "axiom range_rect_CProp5 (_A : Set) (Q_ : (_x_931 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_931 : range _A) : Q_ x_931"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $A$ be a set. Let $_nil$ be an element of $A$. Then $Aop (A , _nil)$ is a set.\nassistant\n", "label": "postulate Aop : (A : Set) -> (_nil : A) -> Set", "predict": "postulate Aop : (A : Set) -> (_nil : A) -> Set"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nCr_pair1. $cr_pair (2 , 3 , 0 , 0)= 0$.\nassistant\n", "label": "cr_pair1 : Eq (cr_pair (nd 2) (nd 3) 0 0) 0 .", "predict": "cr_pair1 : Eq (cr_pair (nd 2) (nd 3) 0 0) 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIncreasing_nth_prime. For all natural numbers $n$, $nth_prime$ applied to $n$ is less than $nth_prime$ applied to the sum of $n$ and $1$.\nassistant\n", "label": "postulate increasing_nth_prime : (n : Nat) -> Lt (nth_prime n) (nth_prime (plus n 1))", "predict": "postulate increasing_nth_prime : (n : Nat) -> Lt (nth_prime n) (nth_prime (plus n 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMod_times. Let $n$ and $m$ and $p$ be natural numbers. Then if $0$ is less than $p$, then $mod$ applied to the product of $n$ and $m$ and $p$ is equal to $mod$ applied to the product of $mod$ applied to $n$ and $p$ and $mod$ applied to $m$ and $p$ and $p$.\nassistant\n", "label": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), mod (n * m) p = mod (mod n p * mod m p) p .", "predict": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), mod (n * m) p = mod (mod n p * mod m p) p ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1559. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $m$ is equal to $n$.\nassistant\n", "label": "axiom let_clause_1559 (n m : Nat) (divnm : divisible n m) (H : 0 = n) (d : Nat) (auto : m = 0 * d) : m = n", "predict": "axiom let_clause_1559 (n m : Nat) (divnm : divisible n m) (H : 0 = n) (d : Nat) (auto : m = 0 * d) : m = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrime_nth_prime. Let $n$ be a natural number. Then $nth_prime$ applied to $n$ is prime.\nassistant\n", "label": "Axiom prime_nth_prime : forall n : nat, prime (nth_prime n) .", "predict": "Axiom prime_nth_prime : forall n : nat, prime (nth_prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_rect_CProp0_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_885$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_885$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_885$.\nassistant\n", "label": "Aop_rect_CProp0_body : A : Set -> _nil : A -> Q_ : (_x_885 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_885 : Aop A _nil -> Q_ x_885 .", "predict": "Aop_rect_CProp0_body : A : Set -> _nil : A -> Q_ : (_x_885 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_885 : Aop A _nil -> Q_ x_885 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMatch_lstar. Let $B$ be a set. Then for all elements $_R$ of $relation$ of $B$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from natural numbers and elements $__1$ of $B$ and elements $__2$ of $B$ and elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_sort$, for all functions $case_lstar_O$ from elements $b$ of $B$ to elements of $return_type$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$, for all functions $case_lstar_S$ from elements $b1$ of $B$ and elements $b$ of $B$ and elements of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $__1$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ to elements of $return_type$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $__$ and $l$ and $b2$ and $__1$, for all natural numbers $__$, for all elements $__1$ and $__2$ of $B$, for all elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$, $return_type$ holds for $__$ and $__1$ and $__2$ and $z$.\nassistant\n", "label": "axiom match_lstar (B : Set) (_R : relation B) (return_sort : Sort) (return_type : (x__ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar B _R __ __1 __2) -> return_sort) (case_lstar_O : (b : B) -> return_type 0 b b (lstar_O B _R b)) (case_lstar_S : (b1 : B) -> (b : B) -> (x__ : _R b1 b) -> (l : Nat) -> (b2 : B) -> (__1 : lstar B _R l b b2) -> return_type (l + 1) b1 b2 (lstar_S B _R b1 b __ l b2 __1)) (x__ : Nat) (__1 __2 : B) (z : lstar B _R __ __1 __2) : return_type __ __1 __2 z", "predict": "axiom match_lstar (B : Set) (_R : relation B) (return_sort : Sort) (return_type : (x__ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar B _R __ __1 __2) -> return_sort) (case_lstar_O : (b : B) -> return_type 0 b b (lstar_O B _R b)) (case_lstar_S : (b1 : B) -> (b : B) -> (x__ : _R b1 b) -> (l : Nat) -> (b2 : B) -> (__1 : lstar B _R l b b2) -> return_type (l + 1) b1 b2 (lstar_S B _R b1 b __ l b2 __1)) (x__ : Nat) (__1 __2 : B) (z : lstar B _R __ __1 __2) : return_type __ __1 __2 z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type4. For all sets $_A$, for all functions $Q_$ from elements $_x_917$ of $range$ of $_A$ to elements of $Type4$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_917$ of $range$ of $_A$, $Q_$ holds for $x_917$.\nassistant\n", "label": "postulate range_rect_Type4 : (_A : Set) -> (Q_ : (_x_917 : range _A) -> Type4) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_917 : range _A) -> Q_ x_917", "predict": "postulate range_rect_Type4 : (_A : Set) -> (Q_ : (_x_917 : range _A) -> Type4) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_917 : range _A) -> Q_ x_917"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTransitive_congruent. Let $p$ be a natural number. Then $transitive$ holds for $Nat$ and the function that maps $n$ and $m$ to $congruent$ applied to $n$ and $m$ and $p$.\nassistant\n", "label": "postulate transitive_congruent : (p : Nat) -> transitive Nat (\\ n : Nat -> \\ m : Nat -> congruent n m p)", "predict": "postulate transitive_congruent : (p : Nat) -> transitive Nat (\\ n : Nat -> \\ m : Nat -> congruent n m p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_rect_CProp2. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_851$ of $Lt$ of $_r$ and $_m$ and elements $x_850$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_851$ and $x_850$, for all elements $x_849$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_849$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849", "predict": "postulate div_mod_spec_rect_CProp2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMdef. Let $m$ be a natural number. Then $M$ applied to $m$ is equal to $bc$ applied to the sum of the product of $2$ and $m$ and $1$ and $m$.\nassistant\n", "label": "Axiom Mdef : forall m : nat, M m = bc (2 * m + 1) m .", "predict": "Axiom Mdef : forall m : nat, M m = bc (2 * m + 1) m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_le_to_not_le_S_S. For all natural numbers $n$ and $m$, if $n$ is not less than or equal to $m$, then the sum of $n$ and $1$ is not less than or equal to the sum of $m$ and $1$.\nassistant\n", "label": "postulate not_le_to_not_le_S_S : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> not (Leq (plus n 1) (plus m 1))", "predict": "postulate not_le_to_not_le_S_S : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> not (Leq (plus n 1) (plus m 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_ord_rem. Let $n$ and $m$ be natural numbers. Then if $n$ is prime, then if $0$ is less than $m$, then if $n$ is divisible by $m$, then $ord_rem$ applied to $m$ and $n$ is less than $m$.\nassistant\n", "label": "axiom lt_ord_rem (n m : Nat) (x__ : prime n) (__1 : 0 < m) (__2 : divisible n m) : ord_rem m n < m", "predict": "axiom lt_ord_rem (n m : Nat) (x__ : prime n) (__1 : 0 < m) (__2 : divisible n m) : ord_rem m n < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_times_n. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then $m$ is less than or equal to the product of $n$ and $m$.\nassistant\n", "label": "postulate lt_times_n : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> Leq m (times n m)", "predict": "postulate lt_times_n : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> Leq m (times n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_min_to_false. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $m$ and $b$, if $b$ is less than or equal to $m$, then if $m$ is less than $min$ applied to $n$ and $b$ and $f$, then $f$ applied to $m$ is equal to absurdity.\nassistant\n", "label": "Axiom lt_min_to_false : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall b : nat, forall x__ : Leq b m, forall __1 : (m < min n b f), f m = false .", "predict": "Axiom lt_min_to_false : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall b : nat, forall x__ : Leq b m, forall __1 : (m < min n b f), f m = false ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_inv_rect_Type2. Let $Hterm$ be a natural number. Then for all functions $P$ from natural numbers $_z671$ to elements of $Type2$, for all functions $_H1$ from elements $_z672$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_382$ and functions $_x_384$ from elements $_z672$ of $Eq$ of $Hterm$ and $x_382$ to elements of $P$ of $x_382$ and elements $_z672$ of $Eq$ of $Hterm$ and the sum of $x_382$ and $1$ to elements of $P$ of the sum of $x_382$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_Type2 : (Hterm : Nat) -> (P : (_z671 : Nat) -> Type2) -> (_H1 : (_z672 : Eq Hterm 0) -> P 0) -> (_H2 : (x_382 : Nat) -> (_x_384 : (_z672 : Eq Hterm x_382) -> P x_382) -> (_z672 : Eq Hterm (plus x_382 1)) -> P (plus x_382 1)) -> P Hterm", "predict": "postulate nat_inv_rect_Type2 : (Hterm : Nat) -> (P : (_z671 : Nat) -> Type2) -> (_H1 : (_z672 : Eq Hterm 0) -> P 0) -> (_H2 : (x_382 : Nat) -> (_x_384 : (_z672 : Eq Hterm x_382) -> P x_382) -> (_z672 : Eq Hterm (plus x_382 1)) -> P (plus x_382 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nGcd_n_times_nm. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then the greatest common divisor of $n$ and the product of $n$ and $m$ is equal to $n$.\nassistant\n", "label": "axiom gcd_n_times_nm (n m : Nat) (x__ : 0 < m) : gcd n (n * m) = n", "predict": "axiom gcd_n_times_nm (n m : Nat) (x__ : 0 < m) : gcd n (n * m) = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPsi_3. $Psi$ applied to $3$ is equal to $6$.\nassistant\n", "label": "axiom Psi_3 : Psi 3 = 6", "predict": "axiom Psi_3 : Psi 3 = 6"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLength_unique_le. For all natural numbers $n$, for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, $length$ applied to $Nat$ and $l$ is less than or equal to $n$.\nassistant\n", "label": "axiom length_unique_le (n : Nat) (l : list Nat) (x__ : unique Nat l) (__1 : (x : Nat) -> (__1 : mem Nat x l) -> x < n) : length Nat l ≤ n", "predict": "axiom length_unique_le (n : Nat) (l : list Nat) (x__ : unique Nat l) (__1 : (x : Nat) -> (__1 : mem Nat x l) -> x < n) : length Nat l ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16001. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_S_S. Let $n$ and $m$ be natural numbers. Then the difference of the sum of $n$ and $1$ and the sum of $m$ and $1$ is equal to the difference of $n$ and $m$.\nassistant\n", "label": "minus_S_S : n : Nat -> m : Nat -> Eq (minus (plus n (nd 1)) (plus m (nd 1))) (minus n m) .", "predict": "minus_S_S : n : Nat -> m : Nat -> Eq (minus (plus n (nd 1)) (plus m (nd 1))) (minus n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_transpose_r. Let $f$ be a function from natural numbers to natural numbers. Then for all natural numbers $m$ and $i$ and $j$, if $i$ is less than or equal to $m$, then if $j$ is less than or equal to $m$, then for all elements $__2$ of $permut$ of $f$ and $m$, $permut$ holds for the function that maps $n$ to $f$ applied to $transpose$ applied to $i$ and $j$ and $n$ and $m$.\nassistant\n", "label": "postulate permut_transpose_r : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i m) -> (__1 : Leq j m) -> (__2 : permut f m) -> permut (\\ n : Nat -> f (transpose i j n)) m", "predict": "postulate permut_transpose_r : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i m) -> (__1 : Leq j m) -> (__2 : permut f m) -> permut (\\ n : Nat -> f (transpose i j n)) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInjective_times_l. For all natural numbers $n$, if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $m$ and $n$.\nassistant\n", "label": "Axiom injective_times_l : forall n : nat, forall x__ : (0 < n), injective nat nat (fun m => m * n) .", "predict": "Axiom injective_times_l : forall n : nat, forall x__ : (0 < n), injective nat nat (fun m => m * n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLePsi_r2. For all natural numbers $n$, the exponentiation of $n$ and $prim$ applied to $n$ is less than or equal to the product of $Psi$ applied to $n$ and $Psi$ applied to $n$.\nassistant\n", "label": "postulate lePsi_r2 : (n : Nat) -> Leq (pow n (prim n)) (times (Psi n) (Psi n))", "predict": "postulate lePsi_r2 : (n : Nat) -> Leq (pow n (prim n)) (times (Psi n) (Psi n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTransitive_divides. $transitive$ holds for $Nat$ and $divisible$.\nassistant\n", "label": "axiom transitive_divides : transitive Nat divisible", "predict": "axiom transitive_divides : transitive Nat divisible"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMinus_le. Let $x$ and $y$ be natural numbers. Then the difference of $x$ and $y$ is less than or equal to $x$.\nassistant\n", "label": "axiom minus_le (x y : Nat) : x - y ≤ x", "predict": "axiom minus_le (x y : Nat) : x - y ≤ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_not_bertrand_to_bertrand. Let $n$ be a natural number. Then if it is not the case that $not_bertrand$ holds for $n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "axiom not_not_bertrand_to_bertrand (n : Nat) (x__ : ¬ not_bertrand n) : bertrand n", "predict": "axiom not_not_bertrand_to_bertrand (n : Nat) (x__ : ¬ not_bertrand n) : bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNot_forall_to_exists. Let $P$ be a function from natural numbers to propositions. Then for all natural numbers $n$, for all functions $__$ from natural numbers $i$ to elements of $decidable$ of $P$ applied to $i$, if it is not the case that $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__1$ to $P$ applied to $i$, then $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the negation of $P$ applied to $i$.\nassistant\n", "label": "not_forall_to_exists : P : (__ : Nat -> Prop) -> n : Nat -> __ : (i : Nat -> decidable (P i)) -> __1 : not (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n) (__1 : Lt i n => P i))) -> ex Nat (i : Nat => and (Lt i n) (not (P i))) .", "predict": "not_forall_to_exists : P : (__ : Nat -> Prop) -> n : Nat -> __ : (i : Nat -> decidable (P i)) -> __1 : not (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n) (__1 : Lt i n => P i))) -> ex Nat (i : Nat => and (Lt i n) (not (P i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBijn_transpose_r. Let $f$ be a function from natural numbers to natural numbers. Then for all natural numbers $n$ and $i$ and $j$, if $i$ is less than or equal to $n$, then if $j$ is less than or equal to $n$, then for all elements $__2$ of $bijn$ of $f$ and $n$, $bijn$ holds for the function that maps $p$ to $f$ applied to $transpose$ applied to $i$ and $j$ and $p$ and $n$.\nassistant\n", "label": "axiom bijn_transpose_r (f : (x__ : Nat) -> Nat) (n i j : Nat) (x__ : i ≤ n) (__1 : j ≤ n) (__2 : bijn f n) : bijn (λ p => f (transpose i j p)) n", "predict": "axiom bijn_transpose_r (f : (x__ : Nat) -> Nat) (n i j : Nat) (x__ : i ≤ n) (__1 : j ≤ n) (__2 : bijn f n) : bijn (λ p => f (transpose i j p)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type0. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_927$ of $range$ of $_A$ to sets, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_927$ of $range$ of $_A$, $Q_$ holds for $x_927$.\nassistant\n", "label": "postulate range_rect_Type0 : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927", "predict": "postulate range_rect_Type0 : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEqb_body. For all natural numbers $__$ and $__1$, $bool$.\nassistant\n", "label": "Axiom eqb_body : forall x__ : nat, forall __1 : nat, bool .", "predict": "Axiom eqb_body : forall x__ : nat, forall __1 : nat, bool ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSub_hkO. For all functions $h$ and $k$ from natural numbers to natural numbers, for all sets $A$, for all elements $I$ and $J$ of $range$ of $A$, if $upto$ applied to $A$ and $I$ is equal to $0$, then $sub_hk$ holds for $h$ and $k$ and $A$ and $I$ and $J$.\nassistant\n", "label": "axiom sub_hkO (h k : (x__ : Nat) -> Nat) (A : Set) (I J : range A) (x__ : upto A I = 0) : sub_hk h k A I J", "predict": "axiom sub_hkO (h k : (x__ : Nat) -> Nat) (A : Set) (I J : range A) (x__ : upto A I = 0) : sub_hk h k A I J"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_inv_ind. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1632$ of $range$ of $x1$ to propositions, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1633$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom range_inv_ind : forall x1 : Set, forall Hterm : range x1, forall P : ((_z1632 : range x1) -> Prop), forall _H1 : ((_enum : (x__ : nat) -> x1) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> (_z1633 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)), P Hterm .", "predict": "Axiom range_inv_ind : forall x1 : Set, forall Hterm : range x1, forall P : ((_z1632 : range x1) -> Prop), forall _H1 : ((_enum : (x__ : nat) -> x1) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> (_z1633 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExample1. $smallest_factor (3)= 3$.\nassistant\n", "label": "axiom example1 : smallest_factor 3 = 3", "predict": "axiom example1 : smallest_factor 3 = 3"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type5_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_817$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type5$, for all functions $_H_div_mod_spec_intro$ from elements $x_819$ of $Lt$ of $_r$ and $_m$ and elements $x_818$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_819$ and $x_818$, for all elements $x_817$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_817$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type5_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_817 : div_mod_spec _n _m _q _r) -> Type5), forall _H_div_mod_spec_intro : ((x_819 : _r < _m) -> (x_818 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818)), forall x_817 : div_mod_spec _n _m _q _r, Q_ x_817 .", "predict": "Axiom div_mod_spec_rect_Type5_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_817 : div_mod_spec _n _m _q _r) -> Type5), forall _H_div_mod_spec_intro : ((x_819 : _r < _m) -> (x_818 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818)), forall x_817 : div_mod_spec _n _m _q _r, Q_ x_817 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_inv_rect_CProp0. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1626$ of $ACop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1627$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate ACop_inv_rect_CProp0 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1626 : ACop x1 x2) -> Prop) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1627 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm", "predict": "postulate ACop_inv_rect_CProp0 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1626 : ACop x1 x2) -> Prop) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1627 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_Type4. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$, for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_815$ and $x_814$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "axiom div_mod_spec_rect_Type4 (_n _m _q _r : Nat) (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) (_H_div_mod_spec_intro : (x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) (x_813 : div_mod_spec _n _m _q _r) : Q_ x_813", "predict": "axiom div_mod_spec_rect_Type4 (_n _m _q _r : Nat) (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) (_H_div_mod_spec_intro : (x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) (x_813 : div_mod_spec _n _m _q _r) : Q_ x_813"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1545. For all natural numbers $m$ and $n$, if the greatest common divisor of $m$ and $n$ is equal to $0$, then if $0$ is divisible by $n$, then for all natural numbers $q1$, if $n$ is equal to the product of $0$ and $q1$, then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m$ is equal to the product of $0$ and $q2$, then $m$ is equal to $0$.\nassistant\n", "label": "Axiom let_clause_1545 : forall m : nat, forall n : nat, forall H : (gcd m n = 0), forall _clearme : divisible 0 n, forall q1 : nat, forall H1 : (n = 0 * q1), forall _clearme0 : divisible 0 m, forall q2 : nat, forall H2 : (m = 0 * q2), m = 0 .", "predict": "Axiom let_clause_1545 : forall m : nat, forall n : nat, forall H : (gcd m n = 0), forall _clearme : divisible 0 n, forall q1 : nat, forall H1 : (n = 0 * q1), forall _clearme0 : divisible 0 m, forall q2 : nat, forall H2 : (m = 0 * q2), m = 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax_spec_inv_ind. Let $x1$ be a natural number. Then for all functions $x2$ from natural numbers to booleans, for all natural numbers $x3$, for all elements $_Hterm$ of $max_spec$ of $x1$ and $x2$ and $x3$, for all functions $P$ from natural numbers $_z1769$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2$ applied to $m$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.\nassistant\n", "label": "axiom max_spec_inv_ind (x1 : Nat) (x2 : (x__ : Nat) -> bool) (x3 : Nat) (_Hterm : max_spec x1 x2 x3) (P : (_z1769 : Nat) -> Prop) (_H1 : (m : Nat) -> (_x_975 : m < x1) -> (_x_974 : x2 m = true) -> (_x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < x1) -> x2 i = false) -> (_z1770 : x3 = m) -> P m) (_H2 : (_x_976 : (i : Nat) -> (x__ : i < x1) -> x2 i = false) -> (_z1770 : x3 = 0) -> P 0) : P x3", "predict": "axiom max_spec_inv_ind (x1 : Nat) (x2 : (x__ : Nat) -> bool) (x3 : Nat) (_Hterm : max_spec x1 x2 x3) (P : (_z1769 : Nat) -> Prop) (_H1 : (m : Nat) -> (_x_975 : m < x1) -> (_x_974 : x2 m = true) -> (_x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < x1) -> x2 i = false) -> (_z1770 : x3 = m) -> P m) (_H2 : (_x_976 : (i : Nat) -> (x__ : i < x1) -> x2 i = false) -> (_z1770 : x3 = 0) -> P 0) : P x3"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp1. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1752$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1753$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1752 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1753 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "Dop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1752 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1753 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_CProp2_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_881$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_881$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_881$.\nassistant\n", "label": "axiom Aop_rect_CProp2_body (A : Set) (_nil : A) (Q_ : (_x_881 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_881 : Aop A _nil) : Q_ x_881", "predict": "axiom Aop_rect_CProp2_body (A : Set) (_nil : A) (Q_ : (_x_881 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_881 : Aop A _nil) : Q_ x_881"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_to_eqb_true. Let $n$ and $m$ be natural numbers. Then if $n$ is equal to $m$, then $eqb$ applied to $n$ and $m$ is equal to $true$.\nassistant\n", "label": "postulate eq_to_eqb_true : (n : Nat) -> (m : Nat) -> (_ : Eq n m) -> Eq (eqb n m) true", "predict": "postulate eq_to_eqb_true : (n : Nat) -> (m : Nat) -> (_ : Eq n m) -> Eq (eqb n m) true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAxiom. Let $_p$ and $_n$ be natural numbers. Then the logarithm of $_p$ and $_n$ is a natural number.\nassistant\n", "label": "Axiom log : forall _p : nat, forall _n : nat, nat .", "predict": "Axiom log : forall _p : nat, forall _n : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTimes_pi. For all natural numbers $n$, for all functions $p$ from natural numbers to booleans, for all functions $f$ and $g$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the product of $f$ applied to $i$ and $g$ applied to $i$ is equal to the product of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g$ applied to $i$.\nassistant\n", "label": "postulate times_pi : (n : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> times (f i) (g i))) (times (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> f i)) (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g i)))", "predict": "postulate times_pi : (n : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> times (f i) (g i))) (times (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> f i)) (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nSameF_p. For all natural numbers $__$, for all functions $__1$ from natural numbers $__1$ to booleans, for all sets $A$, $relation$ holds for $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__2$ to $A$.\nassistant\n", "label": "postulate sameF_p : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (A : Set) -> relation (prod Set Set Nat (\\ __2 : Nat -> A))", "predict": "postulate sameF_p : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (A : Set) -> relation (prod Set Set Nat (\\ __2 : Nat -> A))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBijn_Sn_n. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and the sum of $n$ and $1$, if $f$ applied to the sum of $n$ and $1$ is equal to the sum of $n$ and $1$, then $bijn$ holds for $f$ and $n$.\nassistant\n", "label": "postulate bijn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f (plus n 1)) -> (__1 : Eq (f (plus n 1)) (plus n 1)) -> bijn f n", "predict": "postulate bijn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f (plus n 1)) -> (__1 : Eq (f (plus n 1)) (plus n 1)) -> bijn f n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLength_unique_le. Let $n$ be a natural number. Then for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, $length$ applied to $Nat$ and $l$ is less than or equal to $n$.\nassistant\n", "label": "postulate length_unique_le : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> Leq (length Nat l) n", "predict": "postulate length_unique_le : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> Leq (length Nat l) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_prim_n2. Let $n$ be a natural number. Then if $7$ is less than or equal to $n$, then $prim$ applied to the sum of the product of $2$ and $n$ and $1$ is less than or equal to $pred$ applied to $n$.\nassistant\n", "label": "Axiom le_prim_n2 : forall n : nat, forall x__ : Leq 7 n, Leq (prim (2 * n + 1)) (pred n) .", "predict": "Axiom le_prim_n2 : forall n : nat, forall x__ : Leq 7 n, Leq (prim (2 * n + 1)) (pred n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFmin_true. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $m$ and $b$, if $m$ is equal to $min$ applied to $n$ and $b$ and $f$, then if $m$ is less than the sum of $n$ and $b$, then $f$ applied to $m$ is equal to $true$.\nassistant\n", "label": "Axiom fmin_true : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall b : nat, forall x__ : (m = min n b f), forall __1 : (m < n + b), f m = true .", "predict": "Axiom fmin_true : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall b : nat, forall x__ : (m = min n b f), forall __1 : (m < n + b), f m = true ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_sqrt_n. For all natural numbers $n$, if $1$ is less than $n$, then the square root of $n$ is less than $n$.\nassistant\n", "label": "postulate lt_sqrt_n : (n : Nat) -> (_ : Lt 1 n) -> Lt (sqrt n) n", "predict": "postulate lt_sqrt_n : (n : Nat) -> (_ : Lt 1 n) -> Lt (sqrt n) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_S_times_2. For all natural numbers $n$, if $0$ is less than $n$, then the sum of $n$ and $1$ is less than or equal to the product of $2$ and $n$.\nassistant\n", "label": "Axiom le_S_times_2 : forall n : nat, forall x__ : (0 < n), Leq (n + 1) (2 * n) .", "predict": "Axiom le_S_times_2 : forall n : nat, forall x__ : (0 < n), Leq (n + 1) (2 * n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_sqrt_to_lt_times_l. Let $m$ and $n$ be natural numbers. Then if $n$ is less than the square root of $m$, then the product of $n$ and $n$ is less than $m$.\nassistant\n", "label": "axiom lt_sqrt_to_lt_times_l (m n : Nat) (x__ : n < sqrt m) : n * n < m", "predict": "axiom lt_sqrt_to_lt_times_l (m n : Nat) (x__ : n < sqrt m) : n * n < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_mod_to_divides. Let $p$ and $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then if $p$ is divisible by $mod$ applied to $m$ and $n$, then if $p$ is divisible by $n$, then $p$ is divisible by $m$.\nassistant\n", "label": "postulate divides_mod_to_divides : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible p (mod m n)) -> (__2 : divisible p n) -> divisible p m", "predict": "postulate divides_mod_to_divides : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible p (mod m n)) -> (__2 : divisible p n) -> divisible p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNull_body. Let $A$ be a set. Then for all elements $nil$ of $A$, for all elements $xxx$ of $Dop$ of $A$ and $nil$, for all elements $a$ of $A$, $prod$ applied to $A$ and $nil$ and $xxx$ and $a$ and $nil$ is equal to $nil$.\nassistant\n", "label": "axiom null_body (A : Set) (nil : A) (xxx : Dop A nil) (a : A) : prod A nil xxx a nil = nil", "predict": "axiom null_body (A : Set) (nil : A) (xxx : Dop A nil) (a : A) : prod A nil xxx a nil = nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_O_to_not_divides. Let $n$ and $i$ and $r$ be natural numbers. Then if $0$ is less than $n$, then if $p_ord$ applied to $n$ and $nth_prime$ applied to $i$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $0$ and $r$, then $nth_prime$ applied to $i$ is not divisible by $n$.\nassistant\n", "label": "postulate p_ord_O_to_not_divides : (n : Nat) -> (i : Nat) -> (r : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (p_ord n (nth_prime i)) (mk_Prod Nat Nat 0 r)) -> not (divisible (nth_prime i) n)", "predict": "postulate p_ord_O_to_not_divides : (n : Nat) -> (i : Nat) -> (r : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (p_ord n (nth_prime i)) (mk_Prod Nat Nat 0 r)) -> not (divisible (nth_prime i) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nEq_ord_sigma_p. Let $n$ and $m$ and $x$ be natural numbers. Then if $0$ is less than $n$, then if $x$ is prime, then if the exponentiation of $x$ and $m$ is less than or equal to $n$, then if $n$ is less than the exponentiation of $x$ and the sum of $m$ and $1$, then $ord$ applied to $n$ and $x$ is equal to $bigop$ applied to $m$ and the function that maps $i$ to $dividesb$ applied to the exponentiation of $x$ and the sum of $i$ and $1$ and $n$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $1$.\nassistant\n", "label": "axiom eq_ord_sigma_p (n m x : Nat) (x__ : 0 < n) (__1 : prime x) (__2 : pow x m ≤ n) (__3 : n < pow x (m + 1)) : ord n x = bigop m (λ i => dividesb (pow x (i + 1)) n) Nat 0 plus (λ i => 1)", "predict": "axiom eq_ord_sigma_p (n m x : Nat) (x__ : 0 < n) (__1 : prime x) (__2 : pow x m ≤ n) (__3 : n < pow x (m + 1)) : ord n x = bigop m (λ i => dividesb (pow x (i + 1)) n) Nat 0 plus (λ i => 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_degenerate. For all natural numbers $p$ and $n$, $p_ord_aux$ applied to $p$ and $n$ and $1$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $p$ and $n$.\nassistant\n", "label": "postulate p_ord_degenerate : (p : Nat) -> (n : Nat) -> Eq (p_ord_aux p n 1) (mk_Prod Nat Nat p n)", "predict": "postulate p_ord_degenerate : (p : Nat) -> (n : Nat) -> Eq (p_ord_aux p n 1) (mk_Prod Nat Nat p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMod_O_n. Let $n$ be a natural number. Then $mod$ applied to $0$ and $n$ is equal to $0$.\nassistant\n", "label": "axiom mod_O_n (n : Nat) : mod 0 n = 0", "predict": "axiom mod_O_n (n : Nat) : mod 0 n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBigop_body. Let $__$ be a natural number. Then for all functions $__1$ from natural numbers $__1$ to booleans, for all sets $H$, for all elements $__2$ of $H$, for all functions $__3$ from elements $__3$ of $H$ and elements $__4$ of $H$ to elements of $H$, for all functions $__4$ from natural numbers $__4$ to elements of $H$, $H$.\nassistant\n", "label": "postulate bigop_body : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (H : Set) -> (__2 : H) -> (__3 : (__3 : H) -> (__4 : H) -> H) -> (__4 : (__4 : Nat) -> H) -> H", "predict": "postulate bigop_body : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (H : Set) -> (__2 : H) -> (__3 : (__3 : H) -> (__4 : H) -> H) -> (__4 : (__4 : Nat) -> H) -> H"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_le_to_lt. Let $n$ and $m$ be natural numbers. Then if $n$ is not less than or equal to $m$, then $m$ is less than $n$.\nassistant\n", "label": "postulate not_le_to_lt : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> Lt m n", "predict": "postulate not_le_to_lt : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> Lt m n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBertrand. Let $n$ be a natural number. Then if $0$ is less than $n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "axiom bertrand (n : Nat) (x__ : 0 < n) : bertrand n", "predict": "axiom bertrand (n : Nat) (x__ : 0 < n) : bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_b. For all natural numbers $b$ and $n$ and $m$, if the sum of $n$ and $b$ is less than or equal to $m$, then $n$ is less than or equal to $m$.\nassistant\n", "label": "axiom le_plus_b (b n m : Nat) (x__ : n + b ≤ m) : n ≤ m", "predict": "axiom le_plus_b (b n m : Nat) (x__ : n + b ≤ m) : n ≤ m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPermut_mod. Let $p$ and $a$ be natural numbers. Then if $p$ is prime, then if $p$ is not divisible by $a$, then $permut$ holds for the function that maps $n$ to $mod$ applied to the product of $a$ and $n$ and $p$ and $pred$ applied to $p$.\nassistant\n", "label": "permut_mod : p : Nat -> a : Nat -> __ : prime p -> __1 : not (divisible p a) -> permut (n : Nat => mod (times a n) p) (pred p) .", "predict": "permut_mod : p : Nat -> a : Nat -> __ : prime p -> __1 : not (divisible p a) -> permut (n : Nat => mod (times a n) p) (pred p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_inv_rect_CProp2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1746$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1747$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Dop_inv_rect_CProp2 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1746 : Dop x1 x2) -> Prop) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1747 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm", "predict": "axiom Dop_inv_rect_CProp2 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1746 : Dop x1 x2) -> Prop) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1747 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLstar_ind_l_aux. For all sets $B$, for all functions $R$ from elements of $B$ and elements $__1$ of $B$ to propositions, for all elements $b2$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b2$, for all functions $__1$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$, for all natural numbers $l$, for all elements $b1$ and $b$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$, if $b$ is equal to $b2$, then $P$ holds for $l$ and $b1$.\nassistant\n", "label": "postulate lstar_ind_l_aux : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (b : B) -> (__2 : lstar B R l b1 b) -> (__3 : Eq b b2) -> P l b1", "predict": "postulate lstar_ind_l_aux : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (b : B) -> (__2 : lstar B R l b1 b) -> (__3 : Eq b b2) -> P l b1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_mod. Let $m$ and $n$ and $q$ be natural numbers. Then if $0$ is less than $q$, then $mod$ applied to the sum of $m$ and $n$ and $q$ is less than or equal to the sum of $mod$ applied to $m$ and $q$ and $mod$ applied to $n$ and $q$.\nassistant\n", "label": "axiom le_plus_mod (m n q : Nat) (x__ : 0 < q) : mod (m + n) q ≤ mod m q + mod n q", "predict": "axiom le_plus_mod (m n q : Nat) (x__ : 0 < q) : mod (m + n) q ≤ mod m q + mod n q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_invert_permut. Let $f$ be a function from natural numbers to natural numbers. Then for all natural numbers $n$, for all elements $__$ of $permut$ of $f$ and $n$, $permut$ holds for $invert_permut$ applied to $n$ and $f$ and $n$.\nassistant\n", "label": "postulate permut_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> permut (invert_permut n f) n", "predict": "postulate permut_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> permut (invert_permut n f) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBigop_distr. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $R$ of $Dop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, for all elements $a$ of $B$, $let_mop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and $a$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $let_aop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $let_aop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and the function that maps $i$ to $let_mop$ applied to $n$ and $p$ and $B$ and $nil$ and $R$ and $f$ and $a$ and $a$ and $f$ applied to $i$.\nassistant\n", "label": "bigop_distr : n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> R : Dop B nil -> f : (__ : Nat -> B) -> a : B -> Eq (let_mop n p B nil R f a a (bigop n (i : Nat => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (i : Nat => f i))) (bigop n (i : Nat => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (i : Nat => let_mop n p B nil R f a a (f i))) .", "predict": "bigop_distr : n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> R : Dop B nil -> f : (__ : Nat -> B) -> a : B -> Eq (let_mop n p B nil R f a a (bigop n (i : Nat => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (i : Nat => f i))) (bigop n (i : Nat => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (i : Nat => let_mop n p B nil R f a a (f i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_rect_Type5_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_865$ of $Aop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_865$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_865$.\nassistant\n", "label": "Aop_rect_Type5_body : A : Set -> _nil : A -> Q_ : (_x_865 : Aop A _nil -> Type5) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_865 : Aop A _nil -> Q_ x_865 .", "predict": "Aop_rect_Type5_body : A : Set -> _nil : A -> Q_ : (_x_865 : Aop A _nil -> Type5) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_865 : Aop A _nil -> Q_ x_865 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1532. For all natural numbers $n$ and $m$, if $n$ is divisible by $m$, then if $0$ is equal to $n$, then for all natural numbers $d$, if $m$ is equal to the product of $0$ and $d$, then $m$ is equal to $0$.\nassistant\n", "label": "let_clause_1532 : n : Nat -> m : Nat -> divnm : divisible n m -> H : Eq 0 n -> d : Nat -> auto : Eq m (times 0 d) -> Eq m 0 .", "predict": "let_clause_1532 : n : Nat -> m : Nat -> divnm : divisible n m -> H : Eq 0 n -> d : Nat -> auto : Eq m (times 0 d) -> Eq m 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_Type4. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1440$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type4$, for all functions $_H1$ from elements $x_815$ of $Lt$ of $x4$ and $x2$ and elements $x_814$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1441$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_815$ and $x_814$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_815$ and $x_814$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_Type4 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1440 : div_mod_spec x1 x2 x3 x4) -> Type4) (_H1 : (x_815 : x4 < x2) -> (x_814 : x1 = x3 * x2 + x4) -> (_z1441 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_815 x_814) -> P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_Type4 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1440 : div_mod_spec x1 x2 x3 x4) -> Type4) (_H1 : (x_815 : x4 < x2) -> (x_814 : x1 = x3 * x2 + x4) -> (_z1441 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_815 x_814) -> P (div_mod_spec_intro x1 x2 x3 x4 x_815 x_814)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $__$ be a function from natural numbers to natural numbers. Let $__1 \\in N$. Then we can say that $bijn$ holds for $__$ and $__1$.\nassistant\n", "label": "postulate bijn : (_ : (_ : Nat) -> Nat) -> (__1 : Nat) -> Prop", "predict": "postulate bijn : (_ : (_ : Nat) -> Nat) -> (__1 : Nat) -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPlus_minus. For all natural numbers $m$ and $n$ and $p$, if $m$ is less than or equal to $n$, then the sum of the difference of $n$ and $m$ and $p$ is equal to the difference of the sum of $n$ and $p$ and $m$.\nassistant\n", "label": "plus_minus : m : Nat -> n : Nat -> p : Nat -> __ : Leq m n -> Eq (plus (minus n m) p) (minus (plus n p) m) .", "predict": "plus_minus : m : Nat -> n : Nat -> p : Nat -> __ : Leq m n -> Eq (plus (minus n m) p) (minus (plus n p) m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSigma_const. Let $n$ be a natural number. Then $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $1$ is equal to $n$.\nassistant\n", "label": "axiom sigma_const (n : Nat) : bigop n (λ i => true) Nat 0 plus (λ i => 1) = n", "predict": "axiom sigma_const (n : Nat) : bigop n (λ i => true) Nat 0 plus (λ i => 1) = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMin_spec_to_min. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $b$ and $m$, for all elements $__$ of $min_spec$ of $n$ and $b$ and $f$ and $m$, $min$ applied to $n$ and $b$ and $f$ is equal to $m$.\nassistant\n", "label": "min_spec_to_min : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> m : Nat -> __ : min_spec n b f m -> Eq (min n b f) m .", "predict": "min_spec_to_min : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> m : Nat -> __ : min_spec n b f m -> Eq (min n b f) m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\n0. $Nat$.\nassistant\n", "label": "0 : Nat .", "predict": "0 : Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_ind_body. For all sets $_A$, for all functions $Q_$ from elements $_x_915$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_915$ of $range$ of $_A$, $Q_$ holds for $x_915$.\nassistant\n", "label": "range_ind_body : _A : Set -> Q_ : (_x_915 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_915 : range _A -> Q_ x_915 .", "predict": "range_ind_body : _A : Set -> Q_ : (_x_915 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_915 : range _A -> Q_ x_915 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n$ be a natural number. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all natural numbers $n1$, for all functions $Hind$ from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$ and functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n1$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$, for all functions $H1$ from natural numbers $i$ and elements of $Lt$ of $i$ and the sum of $n1$ and $1$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $H2$ from natural numbers $i$ and elements of $Lt$ of $i$ and the sum of $n1$ and $1$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, if $p2$ applied to $n1$ is equal to $true$, then if $p1$ applied to $n1$ is equal to $true$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (n1 : Nat) (Hind : (x__ : (i : Nat) -> (x__ : i < n1) -> (__1 : p1 i = true) -> p2 i = true) -> (__1 : (i : Nat) -> (__1 : i < n1) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) -> bigop n1 (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n1 (λ i => p2 i) Nat 0 plus (λ i => g2 i)) (H1 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> p2 i = true) (H2 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> g1 i ≤ g2 i) (Hp2 : p2 n1 = true) (Hp1 : p1 n1 = true) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (n1 : Nat) (Hind : (x__ : (i : Nat) -> (x__ : i < n1) -> (__1 : p1 i = true) -> p2 i = true) -> (__1 : (i : Nat) -> (__1 : i < n1) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) -> bigop n1 (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n1 (λ i => p2 i) Nat 0 plus (λ i => g2 i)) (H1 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> p2 i = true) (H2 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> g1 i ≤ g2 i) (Hp2 : p2 n1 = true) (Hp1 : p1 n1 = true) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTimes_times. Let $x$ and $y$ and $z$ be natural numbers. Then the product of $x$ and the product of $y$ and $z$ is equal to the product of $y$ and the product of $x$ and $z$.\nassistant\n", "label": "times_times : x : Nat -> y : Nat -> z : Nat -> Eq (times x (times y z)) (times y (times x z)) .", "predict": "times_times : x : Nat -> y : Nat -> z : Nat -> Eq (times x (times y z)) (times y (times x z)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_prime_times_2. Let $n$ be a natural number. Then if $1$ is less than $n$, then the product of $2$ and $n$ is not prime.\nassistant\n", "label": "postulate not_prime_times_2 : (n : Nat) -> (_ : Lt 1 n) -> not (prime (times 2 n))", "predict": "postulate not_prime_times_2 : (n : Nat) -> (_ : Lt 1 n) -> not (prime (times 2 n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrimes_below2. $primes_below$ holds for $nil$ applied to $Nat$ and $2$.\nassistant\n", "label": "primes_below2 : primes_below (nil Nat) (nd 2) .", "predict": "primes_below2 : primes_below (nil Nat) (nd 2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_Type1. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1722$ of $Dop$ of $x1$ and $x2$ to elements of $Type1$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1723$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_Type1 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1722 : Dop x1 x2 -> Type1) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1723 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "Dop_inv_rect_Type1 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1722 : Dop x1 x2 -> Type1) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1723 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_CProp3. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_907$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_907$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_907$.\nassistant\n", "label": "axiom ACop_rect_CProp3 (A : Set) (_nil : A) (Q_ : (_x_907 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_907 : ACop A _nil) : Q_ x_907", "predict": "axiom ACop_rect_CProp3 (A : Set) (_nil : A) (Q_ : (_x_907 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_907 : ACop A _nil) : Q_ x_907"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_ind. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "postulate Dop_ind : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943", "predict": "postulate Dop_ind : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin. Let $__$ and $__1$ be natural numbers. Then $Nat$.\nassistant\n", "label": "postulate min : (_ : Nat) -> (__1 : Nat) -> Nat", "predict": "postulate min : (_ : Nat) -> (__1 : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nOrd_eq. Let $n$ and $p$ be natural numbers. Then $ord$ applied to $n$ and $p$ is equal to $fst$ applied to $Nat$ and $Nat$ and $p_ord$ applied to $n$ and $p$.\nassistant\n", "label": "ord_eq : n : Nat -> p : Nat -> Eq (ord n p) (fst Nat Nat (p_ord n p)) .", "predict": "ord_eq : n : Nat -> p : Nat -> Eq (ord n p) (fst Nat Nat (p_ord n p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_bertrand_to_le1. Let $n$ be a natural number. Then if the exponentiation of $2$ and $7$ is less than or equal to $n$, then for all elements $__1$ of $not_bertrand$ of $n$, the exponentiation of $2$ and the quotient of the product of $2$ and $n$ and $3$ is less than or equal to the exponentiation of the product of $2$ and $n$ and the quotient of the square root of the product of $2$ and $n$ and $2$.\nassistant\n", "label": "Axiom not_bertrand_to_le1 : forall n : nat, forall x__ : Leq (pow 2 7) n, forall __1 : not_bertrand n, Leq (pow 2 (2 * n / 3)) (pow (2 * n) (sqrt (2 * n) / 2)) .", "predict": "Axiom not_bertrand_to_le1 : forall n : nat, forall x__ : Leq (pow 2 7) n, forall __1 : not_bertrand n, Leq (pow 2 (2 * n / 3)) (pow (2 * n) (sqrt (2 * n) / 2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nCongruent_ab_lt. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then $ex$ holds for $Nat$ and the function that maps $x$ to the conjunction of the conjunction of $congruent$ applied to $x$ and $a$ and $m$ and $congruent$ applied to $x$ and $b$ and $n$ and $Lt$ applied to $x$ and the product of $m$ and $n$.\nassistant\n", "label": "postulate congruent_ab_lt : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Eq (gcd n m) 1) -> ex Nat (\\ x : Nat -> and (and (congruent x a m) (congruent x b n)) (Lt x (times m n)))", "predict": "postulate congruent_ab_lt : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Eq (gcd n m) 1) -> ex Nat (\\ x : Nat -> and (and (congruent x a m) (congruent x b n)) (Lt x (times m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMax_spec_ind. Let $_n$ be a natural number. Then for all functions $_f$ from natural numbers to booleans, for all functions $Q_$ from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions, for all functions $_H_found_max_spec$ from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $x_975$ and $x_974$ and $x_973$, for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $x_976$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "Axiom max_spec_ind : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall Q_ : ((x_971 : nat) -> (_x_972 : max_spec _n _f x_971) -> Prop), forall _H_found_max_spec : ((m : nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)), forall _H_not_found_max_spec : ((x_976 : (i : nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)), forall x_971 : nat, forall x_972 : max_spec _n _f x_971, Q_ x_971 x_972 .", "predict": "Axiom max_spec_ind : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall Q_ : ((x_971 : nat) -> (_x_972 : max_spec _n _f x_971) -> Prop), forall _H_found_max_spec : ((m : nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)), forall _H_not_found_max_spec : ((x_976 : (i : nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)), forall x_971 : nat, forall x_972 : max_spec _n _f x_971, Q_ x_971 x_972 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type1. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z677$ to elements of $Type1$, for all functions $_H1$ from elements $_z678$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_386$ and functions $_x_388$ from elements $_z678$ of $Eq$ of $Hterm$ and $x_386$ to elements of $P$ of $x_386$ and elements $_z678$ of $Eq$ of $Hterm$ and the sum of $x_386$ and $1$ to elements of $P$ of the sum of $x_386$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExample11. $nth_prime$ applied to $2$ is equal to $5$.\nassistant\n", "label": "example11 : Eq (nth_prime (nd 2)) (nd 5) .", "predict": "example11 : Eq (nth_prime (nd 2)) (nd 5) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_eq_n_Sn. For all natural numbers $n$, $n$ is not equal to the sum of $n$ and $1$.\nassistant\n", "label": "axiom not_eq_n_Sn (n : Nat) : ¬ (n = n + 1)", "predict": "axiom not_eq_n_Sn (n : Nat) : ¬ (n = n + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExample13. $nth_prime$ applied to $4$ is equal to $11$.\nassistant\n", "label": "postulate example13 : Eq (nth_prime 4) 11", "predict": "postulate example13 : Eq (nth_prime 4) 11"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_S. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if the sum of $mod$ applied to $n$ and $m$ and $1$ is less than $m$, then $mod$ applied to the sum of $n$ and $1$ and $m$ is equal to the sum of $mod$ applied to $n$ and $m$ and $1$.\nassistant\n", "label": "mod_S : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : Lt (plus (mod n m) (nd 1)) m -> Eq (mod (plus n (nd 1)) m) (plus (mod n m) (nd 1)) .", "predict": "mod_S : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : Lt (plus (mod n m) (nd 1)) m -> Eq (mod (plus n (nd 1)) m) (plus (mod n m) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDecidable_mem_nat. Let $n$ be a natural number. Then for all lists $l$ of natural numbers, $decidable$ holds for $mem$ applied to $Nat$ and $n$ and $l$.\nassistant\n", "label": "Axiom decidable_mem_nat : forall n : nat, forall l : list nat, decidable (mem nat n l) .", "predict": "Axiom decidable_mem_nat : forall n : nat, forall l : list nat, decidable (mem nat n l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_dividesb_true1. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $m$, then if $n$ is divisible by $m$, then $dividesb$ applied to $n$ and $m$ is equal to $true$.\nassistant\n", "label": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true", "predict": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp5_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_843$ of $Lt$ of $_r$ and $_m$ and elements $x_842$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_843$ and $x_842$, for all elements $x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_841$.\nassistant\n", "label": "div_mod_spec_rect_CProp5_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_841 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_843 : Lt _r _m -> x_842 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> x_841 : div_mod_spec _n _m _q _r -> Q_ x_841 .", "predict": "div_mod_spec_rect_CProp5_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_841 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_843 : Lt _r _m -> x_842 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> x_841 : div_mod_spec _n _m _q _r -> Q_ x_841 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTimes_div_le. For all natural numbers $a$ and $b$ and $c$ and $d$, if $0$ is less than $b$, then if $0$ is less than $d$, then the product of the quotient of $a$ and $b$ and the quotient of $c$ and $d$ is less than or equal to the quotient of the product of $a$ and $c$ and the product of $b$ and $d$.\nassistant\n", "label": "axiom times_div_le (a b c d : Nat) (x__ : 0 < b) (__1 : 0 < d) : a / b * (c / d) ≤ a * c / (b * d)", "predict": "axiom times_div_le (a b c d : Nat) (x__ : 0 < b) (__1 : 0 < d) : a / b * (c / d) ≤ a * c / (b * d)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_times_r. Let $n$ be a natural number. Then if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $n$ and $m$.\nassistant\n", "label": "axiom injective_times_r (n : Nat) (x__ : 0 < n) : injective Nat Nat (λ m => n * m)", "predict": "axiom injective_times_r (n : Nat) (x__ : 0 < n) : injective Nat Nat (λ m => n * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBertrand_up. For all natural numbers $n$, if the exponentiation of $2$ and $8$ is less than or equal to $n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "bertrand_up : n : Nat -> __ : Leq (pow (nd 2) (nd 8)) n -> bertrand n .", "predict": "bertrand_up : n : Nat -> __ : Leq (pow (nd 2) (nd 8)) n -> bertrand n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_or_ge. For all natural numbers $m$ and $n$, $m$ is less than $n$ or $n$ is less than or equal to $m$.\nassistant\n", "label": "postulate lt_or_ge : (m : Nat) -> (n : Nat) -> or (Lt m n) (Leq n m)", "predict": "postulate lt_or_ge : (m : Nat) -> (n : Nat) -> or (Lt m n) (Leq n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_rect_CProp1. Let $Q_$ be a function from natural numbers $_x_409$ to propositions. Then for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_410$ and elements $_x_412$ of $Q_$ of $x_410$ to elements of $Q_$ of the sum of $x_410$ and $1$, for all natural numbers $x_409$, $Q_$ holds for $x_409$.\nassistant\n", "label": "Axiom nat_rect_CProp1 : forall Q_ : ((_x_409 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_410 : nat) -> (_x_412 : Q_ x_410) -> Q_ (x_410 + 1)), forall x_409 : nat, Q_ x_409 .", "predict": "Axiom nat_rect_CProp1 : forall Q_ : ((_x_409 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_410 : nat) -> (_x_412 : Q_ x_410) -> Q_ (x_410 + 1)), forall x_409 : nat, Q_ x_409 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_aux_0. For all natural numbers $n$ and $m$, $p_ord_aux$ applied to $0$ and $n$ and $m$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $0$ and $n$.\nassistant\n", "label": "axiom p_ord_aux_0 (n m : Nat) : p_ord_aux 0 n m = mk_Prod Nat Nat 0 n", "predict": "axiom p_ord_aux_0 (n m : Nat) : p_ord_aux 0 n m = mk_Prod Nat Nat 0 n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1569. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.\nassistant\n", "label": "axiom let_clause_1569 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_1569 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_mod_gcd. Let $m$ and $n$ be natural numbers. Then if $0$ is less than $n$, then the greatest common divisor of $n$ and $mod$ applied to $m$ and $n$ is divisible by the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "axiom divides_mod_gcd (m n : Nat) (x__ : 0 < n) : divisible (gcd n (mod m n)) (gcd m n)", "predict": "axiom divides_mod_gcd (m n : Nat) (x__ : 0 < n) : divisible (gcd n (mod m n)) (gcd m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExample1. $smallest_factor (3)= 3$.\nassistant\n", "label": "example1 : Eq (smallest_factor (nd 3)) (nd 3) .", "predict": "example1 : Eq (smallest_factor (nd 3)) (nd 3) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1600. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "let_clause_1600 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) .", "predict": "let_clause_1600 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_Type3. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_921$ of $range$ of $_A$ to elements of $Type3$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_921$ of $range$ of $_A$, $Q_$ holds for $x_921$.\nassistant\n", "label": "range_rect_Type3 : _A : Set -> Q_ : (_x_921 : range _A -> Type3) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_921 : range _A -> Q_ x_921 .", "predict": "range_rect_Type3 : _A : Set -> Q_ : (_x_921 : range _A -> Type3) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_921 : range _A -> Q_ x_921 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_times_to_le_div. Let $a$ and $b$ and $c$ be natural numbers. Then if $0$ is less than $b$, then if the product of $b$ and $c$ is less than or equal to $a$, then $c$ is less than or equal to the quotient of $a$ and $b$.\nassistant\n", "label": "Axiom le_times_to_le_div : forall a : nat, forall b : nat, forall c : nat, forall x__ : (0 < b), forall __1 : Leq (b * c) a, Leq c (a / b) .", "predict": "Axiom le_times_to_le_div : forall a : nat, forall b : nat, forall c : nat, forall x__ : (0 < b), forall __1 : Leq (b * c) a, Leq c (a / b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNat_inv_rect_CProp2. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z701$ to propositions, for all functions $_H1$ from elements $_z702$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_406$ and functions $_x_408$ from elements $_z702$ of $Eq$ of $Hterm$ and $x_406$ to elements of $P$ of $x_406$ and elements $_z702$ of $Eq$ of $Hterm$ and the sum of $x_406$ and $1$ to elements of $P$ of the sum of $x_406$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "nat_inv_rect_CProp2 : Hterm : Nat -> P : (_z701 : Nat -> Prop) -> _H1 : (_z702 : Eq Hterm 0 -> P 0) -> _H2 : (x_406 : Nat -> _x_408 : (_z702 : Eq Hterm x_406 -> P x_406) -> _z702 : Eq Hterm (plus x_406 (nd 1)) -> P (plus x_406 (nd 1))) -> P Hterm .", "predict": "nat_inv_rect_CProp2 : Hterm : Nat -> P : (_z701 : Nat -> Prop) -> _H1 : (_z702 : Eq Hterm 0 -> P 0) -> _H2 : (x_406 : Nat -> _x_408 : (_z702 : Eq Hterm x_406 -> P x_406) -> _z702 : Eq Hterm (plus x_406 (nd 1)) -> P (plus x_406 (nd 1))) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPrime_to_gcd_1. Let $n$ and $m$ be natural numbers. Then if $n$ is prime, then if $n$ is not divisible by $m$, then the greatest common divisor of $n$ and $m$ is equal to $1$.\nassistant\n", "label": "prime_to_gcd_1 : n : Nat -> m : Nat -> __ : prime n -> __1 : not (divisible n m) -> Eq (gcd n m) (nd 1) .", "predict": "prime_to_gcd_1 : n : Nat -> m : Nat -> __ : prime n -> __1 : not (divisible n m) -> Eq (gcd n m) (nd 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPad_bigop_nil. Let $k$ and $n$ be natural numbers. Then for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Leq$ of $n$ and $i$ and elements $__2$ of $Lt$ of $i$ and $k$ to elements of $or$ of $Eq$ applied to $p$ applied to $i$ and absurdity and $Eq$ applied to $f$ applied to $i$ and $nil$, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "postulate pad_bigop_nil : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i))", "predict": "postulate pad_bigop_nil : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1034. Let $n$ and $m$ and $p$ be natural numbers. Then if $0$ is less than $p$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of $mod$ applied to $x2515$ and $x2516$ and the product of $x2516$ and the quotient of $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1034 : n : Nat -> m : Nat -> p : Nat -> posp : Lt 0 p -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (div x2515 x2516))) .", "predict": "let_clause_1034 : n : Nat -> m : Nat -> p : Nat -> posp : Lt 0 p -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (div x2515 x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_inv_rect_CProp4. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1602$ of $ACop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1603$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "ACop_inv_rect_CProp4 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1602 : ACop x1 x2 -> Prop) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1603 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "ACop_inv_rect_CProp4 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1602 : ACop x1 x2 -> Prop) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1603 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAxiom. Let $_p , _n \\in N$. Then the logarithm of $_p$ and $_n$ is a natural number.\nassistant\n", "label": "postulate log : (_p : Nat) -> (_n : Nat) -> Nat", "predict": "postulate log : (_p : Nat) -> (_n : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nCr_pair. For all natural numbers $_n$ and $_m$ and $_a$ and $_b$, $Nat$.\nassistant\n", "label": "Axiom cr_pair : forall _n : nat, forall _m : nat, forall _a : nat, forall _b : nat, nat .", "predict": "Axiom cr_pair : forall _n : nat, forall _m : nat, forall _a : nat, forall _b : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPlus_div. Let $n$ and $m$ and $d$ be natural numbers. Then if $0$ is less than $d$, then if $d$ is divisible by $n$, then if $d$ is divisible by $m$, then the quotient of the sum of $n$ and $m$ and $d$ is equal to the sum of the quotient of $n$ and $d$ and the quotient of $m$ and $d$.\nassistant\n", "label": "postulate plus_div : (n : Nat) -> (m : Nat) -> (d : Nat) -> (_ : Lt 0 d) -> (__1 : divisible d n) -> (__2 : divisible d m) -> Eq (div (plus n m) d) (plus (div n d) (div m d))", "predict": "postulate plus_div : (n : Nat) -> (m : Nat) -> (d : Nat) -> (_ : Lt 0 d) -> (__1 : divisible d n) -> (__2 : divisible d m) -> Eq (div (plus n m) d) (plus (div n d) (div m d))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMonotonic_div. For all natural numbers $n$, if $0$ is less than $n$, then $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to the quotient of $m$ and $n$.\nassistant\n", "label": "Axiom monotonic_div : forall n : nat, forall x__ : (0 < n), monotonic nat Leq (fun m => m / n) .", "predict": "Axiom monotonic_div : forall n : nat, forall x__ : (0 < n), monotonic nat Leq (fun m => m / n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMatch_min_spec. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from natural numbers and elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_sort$, for all functions $case_found_min_spec$ from natural numbers $m$ and elements of $Leq$ of $_b$ and $m$ and elements $__1$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $__2$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $_b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $return_type$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $__$ and $__1$ and $__2$ and $__3$, for all functions $case_not_found_min_spec$ from functions from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $return_type$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $__$, for all natural numbers $__$, for all elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$, $return_type$ holds for $__$ and $z$.\nassistant\n", "label": "match_min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> return_sort : Sort -> return_type : (__ : Nat -> z : min_spec _n _b _f __ -> return_sort) -> case_found_min_spec : (m : Nat -> __ : Leq _b m -> __1 : Lt m (plus _n _b) -> __2 : Eq (_f m) true -> __3 : (i : Nat -> __3 : Leq _b i -> __4 : Lt i m -> Eq (_f i) false) -> return_type m (found_min_spec _n _b _f m __ __1 __2 __3)) -> case_not_found_min_spec : (__ : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> return_type (plus _n _b) (not_found_min_spec _n _b _f __)) -> __ : Nat -> z : min_spec _n _b _f __ -> return_type __ z .", "predict": "match_min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> return_sort : Sort -> return_type : (__ : Nat -> z : min_spec _n _b _f __ -> return_sort) -> case_found_min_spec : (m : Nat -> __ : Leq _b m -> __1 : Lt m (plus _n _b) -> __2 : Eq (_f m) true -> __3 : (i : Nat -> __3 : Leq _b i -> __4 : Lt i m -> Eq (_f i) false) -> return_type m (found_min_spec _n _b _f m __ __1 __2 __3)) -> case_not_found_min_spec : (__ : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> return_type (plus _n _b) (not_found_min_spec _n _b _f __)) -> __ : Nat -> z : min_spec _n _b _f __ -> return_type __ z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_elim1. For all natural numbers $n$, for all functions $P$ from natural numbers to propositions, for all functions $__$ from natural numbers $m$ and functions from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ to elements of $P$ of $p$ to elements of $P$ of $m$, $P$ holds for $n$.\nassistant\n", "label": "postulate nat_elim1 : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (m : Nat) -> (_ : (p : Nat) -> (_ : Lt p m) -> P p) -> P m) -> P n", "predict": "postulate nat_elim1 : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (m : Nat) -> (_ : (p : Nat) -> (_ : Lt p m) -> P p) -> P m) -> P n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPsi. Let $__$ be a natural number. Then $Nat$.\nassistant\n", "label": "postulate Psi : (_ : Nat) -> Nat", "predict": "postulate Psi : (_ : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type0_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 .", "predict": "Axiom div_mod_spec_rect_Type0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInvert_permut. Let $__$ be a natural number. Then for all functions $__1$ from natural numbers $__1$ to natural numbers, for all natural numbers $__2$, $Nat$.\nassistant\n", "label": "axiom invert_permut (x__ : Nat) (__1 : (__1 : Nat) -> Nat) (__2 : Nat) : Nat", "predict": "axiom invert_permut (x__ : Nat) (__1 : (__1 : Nat) -> Nat) (__2 : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTheta_pi_p_theta. For all natural numbers $m$, $theta$ applied to the sum of the product of $2$ and $m$ and $1$ is equal to the product of $bigop$ applied to the sum of the product of $2$ and $m$ and $2$ and the function that maps $p$ to $andb$ applied to $leb$ applied to the sum of $m$ and $2$ and $p$ and $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $p$ and $theta$ applied to the sum of $m$ and $1$.\nassistant\n", "label": "axiom theta_pi_p_theta (m : Nat) : theta (2 * m + 1) = bigop (2 * m + 2) (λ p => andb (leb (m + 2) p) (primeb p)) Nat 1 times (λ p => p) * theta (m + 1)", "predict": "axiom theta_pi_p_theta (m : Nat) : theta (2 * m + 1) = bigop (2 * m + 2) (λ p => andb (leb (m + 2) p) (primeb p)) Nat 1 times (λ p => p) * theta (m + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_CProp5_body. For all sets $_A$, for all functions $Q_$ from elements $_x_931$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_931$ of $range$ of $_A$, $Q_$ holds for $x_931$.\nassistant\n", "label": "postulate range_rect_CProp5_body : (_A : Set) -> (Q_ : (_x_931 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_931 : range _A) -> Q_ x_931", "predict": "postulate range_rect_CProp5_body : (_A : Set) -> (Q_ : (_x_931 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_931 : range _A) -> Q_ x_931"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_plus_div. For all natural numbers $m$ and $n$ and $q$, if $0$ is less than $q$, then the sum of the quotient of $m$ and $q$ and the quotient of $n$ and $q$ is less than or equal to the quotient of the sum of $m$ and $n$ and $q$.\nassistant\n", "label": "Axiom le_plus_div : forall m : nat, forall n : nat, forall q : nat, forall x__ : (0 < q), Leq (m / q + n / q) ((m + n) / q) .", "predict": "Axiom le_plus_div : forall m : nat, forall n : nat, forall q : nat, forall x__ : (0 < q), Leq (m / q + n / q) ((m + n) / q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_primr. Let $n$ be a natural number. Then if $1$ is less than $n$, then $prim$ applied to $n$ is less than or equal to the quotient of the product of $2$ and the difference of the product of $2$ and $n$ and $3$ and the logarithm of $2$ and $n$.\nassistant\n", "label": "le_primr : n : Nat -> __ : Lt (nd 1) n -> Leq (prim n) (div (times (nd 2) (minus (times (nd 2) n) (nd 3))) (log (nd 2) n)) .", "predict": "le_primr : n : Nat -> __ : Lt (nd 1) n -> Leq (prim n) (div (times (nd 2) (minus (times (nd 2) n) (nd 3))) (log (nd 2) n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_max_n. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$, if $0$ is less than $n$, then $max$ applied to $n$ and $f$ is less than $n$.\nassistant\n", "label": "lt_max_n : f : (__ : Nat -> bool) -> n : Nat -> __ : Lt 0 n -> Lt (max n f) n .", "predict": "lt_max_n : f : (__ : Nat -> bool) -> n : Nat -> __ : Lt 0 n -> Lt (max n f) n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin_O_f. Let $f$ be a function from natural numbers to booleans. Then for all natural numbers $b$, $min$ applied to $0$ and $b$ and $f$ is equal to $b$.\nassistant\n", "label": "postulate min_O_f : (f : (_ : Nat) -> bool) -> (b : Nat) -> Eq (min 0 b f) b", "predict": "postulate min_O_f : (f : (_ : Nat) -> bool) -> (b : Nat) -> Eq (min 0 b f) b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_prim_n3. For all natural numbers $n$, if $15$ is less than or equal to $n$, then $prim$ applied to $n$ is less than or equal to $pred$ applied to the quotient of $n$ and $2$.\nassistant\n", "label": "le_prim_n3 : n : Nat -> __ : Leq (nn 1 (nd 5)) n -> Leq (prim n) (pred (div n (nd 2))) .", "predict": "le_prim_n3 : n : Nat -> __ : Leq (nn 1 (nd 5)) n -> Leq (prim n) (pred (div n (nd 2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMax_f_g. Let $f$ and $g$ be functions from natural numbers to booleans. Then for all natural numbers $n$, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$, $max$ applied to $n$ and $f$ is equal to $max$ applied to $n$ and $g$.\nassistant\n", "label": "postulate max_f_g : (f : (_ : Nat) -> bool) -> (g : (_ : Nat) -> bool) -> (n : Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> Eq (f i) (g i)) -> Eq (max n f) (max n g)", "predict": "postulate max_f_g : (f : (_ : Nat) -> bool) -> (g : (_ : Nat) -> bool) -> (n : Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> Eq (f i) (g i)) -> Eq (max n f) (max n g)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nNot_le_to_lt. For all natural numbers $n$ and $m$, if $n$ is not less than or equal to $m$, then $m$ is less than $n$.\nassistant\n", "label": "not_le_to_lt : n : Nat -> m : Nat -> __ : not (Leq n m) -> Lt m n .", "predict": "not_le_to_lt : n : Nat -> m : Nat -> __ : not (Leq n m) -> Lt m n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExp_exp_times. Let $n$ and $p$ and $q$ be natural numbers. Then the exponentiation of the exponentiation of $n$ and $p$ and $q$ is equal to the exponentiation of $n$ and the product of $p$ and $q$.\nassistant\n", "label": "Axiom exp_exp_times : forall n : nat, forall p : nat, forall q : nat, pow (pow n p) q = pow n (p * q) .", "predict": "Axiom exp_exp_times : forall n : nat, forall p : nat, forall q : nat, pow (pow n p) q = pow n (p * q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nFilter_min_spec. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all natural numbers $__$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_type$ of $z$, for all elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$, $return_type$ holds for $z$.\nassistant\n", "label": "axiom filter_min_spec (_n _b : Nat) (_f : (x__ : Nat) -> bool) (x__ : Nat) (return_sort : Sort) (return_type : (z : min_spec _n _b _f __) -> return_sort) (return : (z : min_spec _n _b _f __) -> return_type z) (z : min_spec _n _b _f __) : return_type z", "predict": "axiom filter_min_spec (_n _b : Nat) (_f : (x__ : Nat) -> bool) (x__ : Nat) (return_sort : Sort) (return_type : (z : min_spec _n _b _f __) -> return_sort) (return : (z : min_spec _n _b _f __) -> return_type z) (z : min_spec _n _b _f __) : return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_rect_CProp2. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_963$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_963$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_963$.\nassistant\n", "label": "Axiom Dop_rect_CProp2 : forall A : Set, forall _nil : A, forall Q_ : ((_x_963 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_963 : Dop A _nil, Q_ x_963 .", "predict": "Axiom Dop_rect_CProp2 : forall A : Set, forall _nil : A, forall Q_ : ((_x_963 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_963 : Dop A _nil, Q_ x_963 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_aux_body. For all natural numbers $_p$ and $_m$ and $_n$, $Nat$.\nassistant\n", "label": "Axiom div_aux_body : forall _p : nat, forall _m : nat, forall _n : nat, nat .", "predict": "Axiom div_aux_body : forall _p : nat, forall _m : nat, forall _n : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_Type3. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1644$ of $range$ of $x1$ to elements of $Type3$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1645$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_Type3 (x1 : Set) (Hterm : range x1) (P : (_z1644 : range x1) -> Type3) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1645 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_Type3 (x1 : Set) (Hterm : range x1) (P : (_z1644 : range x1) -> Type3) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1645 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFact_to_exp. For all natural numbers $n$, the factorial of the product of $2$ and $n$ is less than or equal to the product of the product of the exponentiation of $2$ and $pred$ applied to the product of $2$ and $n$ and the factorial of $n$ and the factorial of $n$.\nassistant\n", "label": "postulate fact_to_exp : (n : Nat) -> Leq (factorial (times 2 n)) (times (times (pow 2 (pred (times 2 n))) (factorial n)) (factorial n))", "predict": "postulate fact_to_exp : (n : Nat) -> Leq (factorial (times 2 n)) (times (times (pow 2 (pred (times 2 n))) (factorial n)) (factorial n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_congruent. For all natural numbers $n$ and $m$ and $p$, if $0$ is less than $p$, then if $m$ is less than or equal to $n$, then if $p$ is divisible by the difference of $n$ and $m$, then $congruent$ holds for $n$ and $m$ and $p$.\nassistant\n", "label": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p", "predict": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nACop_rect_CProp4_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_903$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_903$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_903$.\nassistant\n", "label": "Axiom ACop_rect_CProp4_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_903 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_903 : ACop A _nil, Q_ x_903 .", "predict": "Axiom ACop_rect_CProp4_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_903 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_903 : ACop A _nil, Q_ x_903 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_rect_Type0_body. For all sets $_A$, for all functions $Q_$ from elements $_x_927$ of $range$ of $_A$ to sets, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_927$ of $range$ of $_A$, $Q_$ holds for $x_927$.\nassistant\n", "label": "axiom range_rect_Type0_body (_A : Set) (Q_ : (_x_927 : range _A) -> Set) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_927 : range _A) : Q_ x_927", "predict": "axiom range_rect_Type0_body (_A : Set) (Q_ : (_x_927 : range _A) -> Set) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_927 : range _A) : Q_ x_927"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10331. Let $n$ be a natural number. Then if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_prime_to_primeb_false. For all natural numbers $n$, if $n$ is not prime, then $primeb$ applied to $n$ is equal to absurdity.\nassistant\n", "label": "axiom not_prime_to_primeb_false (n : Nat) (x__ : ¬ prime n) : primeb n = false", "predict": "axiom not_prime_to_primeb_false (n : Nat) (x__ : ¬ prime n) : primeb n = false"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMax_spec_ind. For all natural numbers $_n$, for all functions $_f$ from natural numbers to booleans, for all functions $Q_$ from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions, for all functions $_H_found_max_spec$ from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $x_975$ and $x_974$ and $x_973$, for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $x_976$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972", "predict": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPrime_to_not_divides_fact. Let $p$ be a natural number. Then if $p$ is prime, then for all natural numbers $n$, if $n$ is less than $p$, then $p$ is not divisible by the factorial of $n$.\nassistant\n", "label": "axiom prime_to_not_divides_fact (p : Nat) (x__ : prime p) (n : Nat) (__1 : n < p) : ¬ divisible p (factorial n)", "predict": "axiom prime_to_not_divides_fact (p : Nat) (x__ : prime p) (n : Nat) (__1 : n < p) : ¬ divisible p (factorial n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAntisymmetric_divides. Let $n$ and $m$ be natural numbers. Then if $n$ is divisible by $m$, then if $m$ is divisible by $n$, then $n$ is equal to $m$.\nassistant\n", "label": "antisymmetric_divides : n : Nat -> m : Nat -> __ : divisible n m -> __1 : divisible m n -> Eq n m .", "predict": "antisymmetric_divides : n : Nat -> m : Nat -> __ : divisible n m -> __1 : divisible m n -> Eq n m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_ind. For all sets $x1$, for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1632$ of $range$ of $x1$ to propositions, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1633$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_ind (x1 : Set) (Hterm : range x1) (P : (_z1632 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1633 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_ind (x1 : Set) (Hterm : range x1) (P : (_z1632 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1633 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFound_min_spec. Let $n$ and $b$ be natural numbers. Then for all functions $f$ from natural numbers to booleans, for all natural numbers $m$, if $b$ is less than or equal to $m$, then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m", "predict": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDecidable_forall. Let $P$ be a function from natural numbers to propositions. Then for all functions $__$ from natural numbers $i$ to elements of $decidable$ of $P$ applied to $i$, for all natural numbers $n$, $decidable$ holds for $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__1$ to $P$ applied to $i$.\nassistant\n", "label": "postulate decidable_forall : (P : (_ : Nat) -> Prop) -> (_ : (i : Nat) -> decidable (P i)) -> (n : Nat) -> decidable (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ __1 : Lt i n -> P i)))", "predict": "postulate decidable_forall : (P : (_ : Nat) -> Prop) -> (_ : (i : Nat) -> decidable (P i)) -> (n : Nat) -> decidable (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ __1 : Lt i n -> P i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInjective_invert_permut. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$, for all elements $__$ of $permut$ of $f$ and $n$, $injn$ holds for $invert_permut$ applied to $n$ and $f$ and $n$.\nassistant\n", "label": "postulate injective_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> injn (invert_permut n f) n", "predict": "postulate injective_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> injn (invert_permut n f) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_or_ge. For all natural numbers $m$ and $n$, $m$ is less than or equal to $n$ or $n$ is less than or equal to $m$.\nassistant\n", "label": "axiom le_or_ge (m n : Nat) : m ≤ n ∨ n ≤ m", "predict": "axiom le_or_ge (m n : Nat) : m ≤ n ∨ n ≤ m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_Type1. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_899$ of $ACop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_899$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_899$.\nassistant\n", "label": "axiom ACop_rect_Type1 (A : Set) (_nil : A) (Q_ : (_x_899 : ACop A _nil) -> Type1) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_899 : ACop A _nil) : Q_ x_899", "predict": "axiom ACop_rect_Type1 (A : Set) (_nil : A) (Q_ : (_x_899 : ACop A _nil) -> Type1) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_899 : ACop A _nil) : Q_ x_899"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInjective_times_r. For all natural numbers $n$, if $0$ is less than $n$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $m$ to the product of $n$ and $m$.\nassistant\n", "label": "postulate injective_times_r : (n : Nat) -> (_ : Lt 0 n) -> injective Nat Nat (\\ m : Nat -> times n m)", "predict": "postulate injective_times_r : (n : Nat) -> (_ : Lt 0 n) -> injective Nat Nat (\\ m : Nat -> times n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_sqrt_to_le_times_l. Let $m$ and $n$ be natural numbers. Then if $n$ is less than or equal to the square root of $m$, then the product of $n$ and $n$ is less than or equal to $m$.\nassistant\n", "label": "axiom le_sqrt_to_le_times_l (m n : Nat) (x__ : n ≤ sqrt m) : n * n ≤ m", "predict": "axiom le_sqrt_to_le_times_l (m n : Nat) (x__ : n ≤ sqrt m) : n * n ≤ m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLstar_singlevalued. Let $B$ be a set. Then for all elements $R$ of $relation2$ of $B$ and $B$, for all elements $__$ of $singlevalued$ of $B$ and $B$ and $R$, for all natural numbers $l$, $singlevalued$ holds for $B$ and $B$ and $lstar$ applied to $B$ and $R$ and $l$.\nassistant\n", "label": "axiom lstar_singlevalued (B : Set) (R : relation2 B B) (x__ : singlevalued B B R) (l : Nat) : singlevalued B B (lstar B R l)", "predict": "axiom lstar_singlevalued (B : Set) (R : relation2 B B) (x__ : singlevalued B B R) (l : Nat) : singlevalued B B (lstar B R l)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFmax_false. Let $f$ be a function from natural numbers to booleans. Then for all natural numbers $n$ and $m$, if $max$ applied to $n$ and $f$ is equal to $m$, then if $f$ applied to $m$ is equal to absurdity, then $m$ is equal to $0$.\nassistant\n", "label": "postulate fmax_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Eq (max n f) m) -> (__1 : Eq (f m) false) -> Eq m 0", "predict": "postulate fmax_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Eq (max n f) m) -> (__1 : Eq (f m) false) -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type0. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_955$ of $Dop$ of $A$ and $_nil$ to sets, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_955$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_955$.\nassistant\n", "label": "Dop_rect_Type0 : A : Set -> _nil : A -> Q_ : (_x_955 : Dop A _nil -> Set) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_955 : Dop A _nil -> Q_ x_955 .", "predict": "Dop_rect_Type0 : A : Set -> _nil : A -> Q_ : (_x_955 : Dop A _nil -> Set) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_955 : Dop A _nil -> Q_ x_955 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFilter_min_spec. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all natural numbers $__$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_type$ of $z$, for all elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$, $return_type$ holds for $z$.\nassistant\n", "label": "filter_min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> __ : Nat -> return_sort : Sort -> return_type : (z : min_spec _n _b _f __ -> return_sort) -> return : (z : min_spec _n _b _f __ -> return_type z) -> z : min_spec _n _b _f __ -> return_type z .", "predict": "filter_min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> __ : Nat -> return_sort : Sort -> return_type : (z : min_spec _n _b _f __ -> return_sort) -> return : (z : min_spec _n _b _f __ -> return_type z) -> z : min_spec _n _b _f __ -> return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_rect_Type4_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_945$ of $Dop$ of $A$ and $_nil$ to elements of $Type4$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_945$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_945$.\nassistant\n", "label": "axiom Dop_rect_Type4_body (A : Set) (_nil : A) (Q_ : (_x_945 : Dop A _nil) -> Type4) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_945 : Dop A _nil) : Q_ x_945", "predict": "axiom Dop_rect_Type4_body (A : Set) (_nil : A) (Q_ : (_x_945 : Dop A _nil) -> Type4) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_945 : Dop A _nil) : Q_ x_945"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_rect_CProp1_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_965$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_965$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_965$.\nassistant\n", "label": "Axiom Dop_rect_CProp1_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_965 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_965 : Dop A _nil, Q_ x_965 .", "predict": "Axiom Dop_rect_CProp1_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_965 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_965 : Dop A _nil, Q_ x_965 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar. Let $B$ be a set. Then for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, $relation$ holds for $B$.\nassistant\n", "label": "Axiom lstar : forall B : Set, forall _R : relation B, forall x__ : nat, relation B .", "predict": "Axiom lstar : forall B : Set, forall _R : relation B, forall x__ : nat, relation B ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16002. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "axiom let_clause_16002 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16002 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nChecker_body. For all lists $__$ of natural numbers, $bool$.\nassistant\n", "label": "axiom checker_body (x__ : list Nat) : bool", "predict": "axiom checker_body (x__ : list Nat) : bool"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExp_exp_times. Let $n$ and $p$ and $q$ be natural numbers. Then the exponentiation of the exponentiation of $n$ and $p$ and $q$ is equal to the exponentiation of $n$ and the product of $p$ and $q$.\nassistant\n", "label": "exp_exp_times : n : Nat -> p : Nat -> q : Nat -> Eq (pow (pow n p) q) (pow n (times p q)) .", "predict": "exp_exp_times : n : Nat -> p : Nat -> q : Nat -> Eq (pow (pow n p) q) (pow n (times p q)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_ind_l_aux. For all sets $B$, for all functions $R$ from elements of $B$ and elements $__1$ of $B$ to propositions, for all elements $b2$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b2$, for all functions $__1$ from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$, for all natural numbers $l$, for all elements $b1$ and $b$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$, if $b$ is equal to $b2$, then $P$ holds for $l$ and $b1$.\nassistant\n", "label": "Axiom lstar_ind_l_aux : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b2 : B, forall P : relation2 nat B, forall x__ : P 0 b2, forall __1 : ((l : nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (l + 1) b1), forall l : nat, forall b1 : B, forall b : B, forall __2 : lstar B R l b1 b, forall __3 : (b = b2), P l b1 .", "predict": "Axiom lstar_ind_l_aux : forall B : Set, forall R : ((x__ : B) -> (__1 : B) -> Prop), forall b2 : B, forall P : relation2 nat B, forall x__ : P 0 b2, forall __1 : ((l : nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (l + 1) b1), forall l : nat, forall b1 : B, forall b : B, forall __2 : lstar B R l b1 b, forall __3 : (b = b2), P l b1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTimes_n_1. Let $n$ be a natural number. Then $n$ is equal to the product of $n$ and $1$.\nassistant\n", "label": "times_n_1 : n : Nat -> Eq n (times n (nd 1)) .", "predict": "times_n_1 : n : Nat -> Eq n (times n (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n$ be a natural number. Then if $1$ is less than $n$, then if the product of $2$ and $n$ is prime, then if $1$ is less than the product of $2$ and $n$, then for all functions $H1$ from natural numbers $m$ and elements of $divisible$ of $m$ and the product of $2$ and $n$ and elements $__1$ of $Lt$ of $1$ and $m$ to elements of $Eq$ of $m$ and the product of $2$ and $n$, for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (ltn : 1 < n) (_clearme : prime (2 * n)) (H : 1 < 2 * n) (H1 : (m : Nat) -> (x__ : divisible m (2 * n)) -> (__1 : 1 < m) -> m = 2 * n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (ltn : 1 < n) (_clearme : prime (2 * n)) (H : 1 < 2 * n) (H1 : (m : Nat) -> (x__ : divisible m (2 * n)) -> (__1 : 1 < m) -> m = 2 * n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_false. For all natural numbers $n$, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, $bigop$ applied to $n$ and the function that maps $i$ to absurdity and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $nil$.\nassistant\n", "label": "Axiom bigop_false : forall n : nat, forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), bigop n (fun i => false) B nil op (fun i => f i) = nil .", "predict": "Axiom bigop_false : forall n : nat, forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), bigop n (fun i => false) B nil op (fun i => f i) = nil ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_O_exp. For all natural numbers $n$ and $m$, if $0$ is less than $n$, then $0$ is less than the exponentiation of $n$ and $m$.\nassistant\n", "label": "postulate lt_O_exp : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> Lt 0 (pow n m)", "predict": "postulate lt_O_exp : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> Lt 0 (pow n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_SO_nth_prime_n. Let $n$ be a natural number. Then $1$ is less than $nth_prime$ applied to $n$.\nassistant\n", "label": "Axiom lt_SO_nth_prime_n : forall n : nat, 1 < nth_prime n .", "predict": "Axiom lt_SO_nth_prime_n : forall n : nat, 1 < nth_prime n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_plus_to_minus_r. For all natural numbers $a$ and $b$ and $c$, if the sum of $a$ and $b$ is less than $c$, then $a$ is less than the difference of $c$ and $b$.\nassistant\n", "label": "axiom lt_plus_to_minus_r (a b c : Nat) (x__ : a + b < c) : a < c - b", "predict": "axiom lt_plus_to_minus_r (a b c : Nat) (x__ : a + b < c) : a < c - b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nCr_pair1. $cr_pair (2 , 3 , 0 , 0)= 0$.\nassistant\n", "label": "axiom cr_pair1 : cr_pair 2 3 0 0 = 0", "predict": "axiom cr_pair1 : cr_pair 2 3 0 0 = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTimes_O_n. Let $n$ be a natural number. Then $0$ is equal to the product of $0$ and $n$.\nassistant\n", "label": "postulate times_O_n : (n : Nat) -> Eq 0 (times 0 n)", "predict": "postulate times_O_n : (n : Nat) -> Eq 0 (times 0 n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDivides_to_div_mod_spec. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $n$ is divisible by $m$, then $div_mod_spec$ holds for $m$ and $n$ and the quotient of $m$ and $n$ and $0$.\nassistant\n", "label": "divides_to_div_mod_spec : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : divisible n m -> div_mod_spec m n (div m n) 0 .", "predict": "divides_to_div_mod_spec : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : divisible n m -> div_mod_spec m n (div m n) 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_S_times_2. For all natural numbers $n$, if $0$ is less than $n$, then the sum of $n$ and $1$ is less than or equal to the product of $2$ and $n$.\nassistant\n", "label": "postulate le_S_times_2 : (n : Nat) -> (_ : Lt 0 n) -> Leq (plus n 1) (times 2 n)", "predict": "postulate le_S_times_2 : (n : Nat) -> (_ : Lt 0 n) -> Leq (plus n 1) (times 2 n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_dividesb_true1. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $n$ is divisible by $m$, then $dividesb$ applied to $n$ and $m$ is equal to $true$.\nassistant\n", "label": "axiom divides_to_dividesb_true1 (n m : Nat) (x__ : 0 < m) (__1 : divisible n m) : dividesb n m = true", "predict": "axiom divides_to_dividesb_true1 (n m : Nat) (x__ : 0 < m) (__1 : divisible n m) : dividesb n m = true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_Type3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1512$ of $Aop$ of $x1$ and $x2$ to elements of $Type3$, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1513$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_Type3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1512 : Aop x1 x2) -> Type3), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1513 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom Aop_inv_rect_Type3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1512 : Aop x1 x2) -> Type3), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1513 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAxiom. Let $_n$ be a natural number. Then the square root of $_n$ is a natural number.\nassistant\n", "label": "axiom sqrt (_n : Nat) : Nat", "predict": "axiom sqrt (_n : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_times. Let $p$ and $a$ and $b$ and $qa$ and $ra$ and $qb$ and $rb$ be natural numbers. Then if $p$ is prime, then if $0$ is less than $a$, then if $0$ is less than $b$, then if $p_ord$ applied to $a$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $qa$ and $ra$, then if $p_ord$ applied to $b$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $qb$ and $rb$, then $p_ord$ applied to the product of $a$ and $b$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and the sum of $qa$ and $qb$ and the product of $ra$ and $rb$.\nassistant\n", "label": "axiom p_ord_times (p a b qa ra qb rb : Nat) (x__ : prime p) (__1 : 0 < a) (__2 : 0 < b) (__3 : p_ord a p = mk_Prod Nat Nat qa ra) (__4 : p_ord b p = mk_Prod Nat Nat qb rb) : p_ord (a * b) p = mk_Prod Nat Nat (qa + qb) (ra * rb)", "predict": "axiom p_ord_times (p a b qa ra qb rb : Nat) (x__ : prime p) (__1 : 0 < a) (__2 : 0 < b) (__3 : p_ord a p = mk_Prod Nat Nat qa ra) (__4 : p_ord b p = mk_Prod Nat Nat qb rb) : p_ord (a * b) p = mk_Prod Nat Nat (qa + qb) (ra * rb)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_aux. Let $_p$ and $_m$ and $_n$ be natural numbers. Then $Nat$.\nassistant\n", "label": "axiom div_aux (_p _m _n : Nat) : Nat", "predict": "axiom div_aux (_p _m _n : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nCongruent_ab. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then $ex$ holds for $Nat$ and the function that maps $x$ to the conjunction of $congruent$ applied to $x$ and $a$ and $m$ and $congruent$ applied to $x$ and $b$ and $n$.\nassistant\n", "label": "Axiom congruent_ab : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall x__ : (0 < n), forall __1 : (0 < m), forall __2 : (gcd n m = 1), ex nat (fun x => congruent x a m /\\ congruent x b n) .", "predict": "Axiom congruent_ab : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall x__ : (0 < n), forall __1 : (0 < m), forall __2 : (gcd n m = 1), ex nat (fun x => congruent x a m /\\ congruent x b n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_rect_Type5_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.\nassistant\n", "label": "axiom Dop_rect_Type5_body (A : Set) (_nil : A) (Q_ : (_x_947 : Dop A _nil) -> Type5) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_947 : Dop A _nil) : Q_ x_947", "predict": "axiom Dop_rect_Type5_body (A : Set) (_nil : A) (Q_ : (_x_947 : Dop A _nil) -> Type5) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_947 : Dop A _nil) : Q_ x_947"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp1. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1554$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1555$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1554 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1555 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "Aop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1554 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1555 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPad_bigop_nil. For all natural numbers $k$ and $n$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Leq$ of $n$ and $i$ and elements $__2$ of $Lt$ of $i$ and $k$ to elements of $or$ of $Eq$ applied to $p$ applied to $i$ and absurdity and $Eq$ applied to $f$ applied to $i$ and $nil$, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "pad_bigop_nil : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> __ : Leq n k -> __1 : (i : Nat -> __1 : Leq n i -> __2 : Lt i k -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (i : Nat => p i) B nil (op B nil op) (i : Nat => f i)) (bigop k (i : Nat => p i) B nil (op B nil op) (i : Nat => f i)) .", "predict": "pad_bigop_nil : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> __ : Leq n k -> __1 : (i : Nat -> __1 : Leq n i -> __2 : Lt i k -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (i : Nat => p i) B nil (op B nil op) (i : Nat => f i)) (bigop k (i : Nat => p i) B nil (op B nil op) (i : Nat => f i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTimes_times. For all natural numbers $x$ and $y$ and $z$, the product of $x$ and the product of $y$ and $z$ is equal to the product of $y$ and the product of $x$ and $z$.\nassistant\n", "label": "times_times : x : Nat -> y : Nat -> z : Nat -> Eq (times x (times y z)) (times y (times x z)) .", "predict": "times_times : x : Nat -> y : Nat -> z : Nat -> Eq (times x (times y z)) (times y (times x z)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_previous_prime5. For all natural numbers $n$ and $m$, if $nth_prime$ applied to $n$ is less than $m$, then $Nat$.\nassistant\n", "label": "Axiom let_previous_prime5 : forall n : nat, forall m : nat, forall ltml : (nth_prime n < m), nat .", "predict": "Axiom let_previous_prime5 : forall n : nat, forall m : nat, forall ltml : (nth_prime n < m), nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTransitive_sub. For all functions $h1$ and $k1$ and $h2$ and $k2$ from natural numbers to natural numbers, for all sets $A$, for all elements $I$ and $J$ and $K$ of $range$ of $A$, for all elements $__$ of $sub_hk$ of $h1$ and $k1$ and $A$ and $I$ and $J$, for all elements $__1$ of $sub_hk$ of $h2$ and $k2$ and $A$ and $J$ and $K$, $sub_hk$ holds for the function that maps $x$ to $h2$ applied to $h1$ applied to $x$ and the function that maps $x$ to $k1$ applied to $k2$ applied to $x$ and $A$ and $I$ and $K$.\nassistant\n", "label": "transitive_sub : h1 : (__ : Nat -> Nat) -> k1 : (__ : Nat -> Nat) -> h2 : (__ : Nat -> Nat) -> k2 : (__ : Nat -> Nat) -> A : Set -> I : range A -> J : range A -> K : range A -> __ : sub_hk h1 k1 A I J -> __1 : sub_hk h2 k2 A J K -> sub_hk (x : Nat => h2 (h1 x)) (x : Nat => k1 (k2 x)) A I K .", "predict": "transitive_sub : h1 : (__ : Nat -> Nat) -> k1 : (__ : Nat -> Nat) -> h2 : (__ : Nat -> Nat) -> k2 : (__ : Nat -> Nat) -> A : Set -> I : range A -> J : range A -> K : range A -> __ : sub_hk h1 k1 A I J -> __1 : sub_hk h2 k2 A J K -> sub_hk (x : Nat => h2 (h1 x)) (x : Nat => k1 (k2 x)) A I K ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_to_divides. For all natural numbers $n$ and $m$ and $q$, for all elements $__$ of $div_mod_spec$ of $m$ and $n$ and $q$ and $0$, $n$ is divisible by $m$.\nassistant\n", "label": "axiom div_mod_spec_to_divides (n m q : Nat) (x__ : div_mod_spec m n q 0) : divisible n m", "predict": "axiom div_mod_spec_to_divides (n m q : Nat) (x__ : div_mod_spec m n q 0) : divisible n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_rect_CProp1_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_965$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_965$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_965$.\nassistant\n", "label": "axiom Dop_rect_CProp1_body (A : Set) (_nil : A) (Q_ : (_x_965 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_965 : Dop A _nil) : Q_ x_965", "predict": "axiom Dop_rect_CProp1_body (A : Set) (_nil : A) (Q_ : (_x_965 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_965 : Dop A _nil) : Q_ x_965"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_div_le. For all natural numbers $a$ and $b$ and $c$ and $d$, if $0$ is less than $b$, then if $0$ is less than $d$, then the product of the quotient of $a$ and $b$ and the quotient of $c$ and $d$ is less than or equal to the quotient of the product of $a$ and $c$ and the product of $b$ and $d$.\nassistant\n", "label": "Axiom times_div_le : forall a : nat, forall b : nat, forall c : nat, forall d : nat, forall x__ : (0 < b), forall __1 : (0 < d), Leq (a / b * (c / d)) (a * c / (b * d)) .", "predict": "Axiom times_div_le : forall a : nat, forall b : nat, forall c : nat, forall d : nat, forall x__ : (0 < b), forall __1 : (0 < d), Leq (a / b * (c / d)) (a * c / (b * d)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nS_mod. Let $_n$ and $_m$ be natural numbers. Then $Nat$.\nassistant\n", "label": "postulate S_mod : (_n : Nat) -> (_m : Nat) -> Nat", "predict": "postulate S_mod : (_n : Nat) -> (_m : Nat) -> Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp4. For all natural numbers $_n$ and $_m$ and $_q$ and $_r$, for all functions $Q_$ from elements $_x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_839$ of $Lt$ of $_r$ and $_m$ and elements $x_838$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_839$ and $x_838$, for all elements $x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_837$.\nassistant\n", "label": "div_mod_spec_rect_CProp4 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_837 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_839 : Lt _r _m -> x_838 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) -> x_837 : div_mod_spec _n _m _q _r -> Q_ x_837 .", "predict": "div_mod_spec_rect_CProp4 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_837 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_839 : Lt _r _m -> x_838 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) -> x_837 : div_mod_spec _n _m _q _r -> Q_ x_837 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nExp_body. Let $__$ and $__1$ be natural numbers. Then $Nat$.\nassistant\n", "label": "Axiom exp_body : forall x__ : nat, forall __1 : nat, nat .", "predict": "Axiom exp_body : forall x__ : nat, forall __1 : nat, nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nAssoc_body. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $op$ applied to $A$ and $nil$ and $xxx$ and $b$ and $c$ is equal to $op$ applied to $A$ and $nil$ and $xxx$ and $op$ applied to $A$ and $nil$ and $xxx$ and $a$ and $b$ and $c$.\nassistant\n", "label": "postulate assoc_body : (A : Set) -> (nil : A) -> (xxx : Aop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c)", "predict": "postulate assoc_body : (A : Set) -> (nil : A) -> (xxx : Aop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1746$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1747$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1746 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1747 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "Dop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1746 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1747 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm ."}