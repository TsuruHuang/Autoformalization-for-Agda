{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nRange_rect_CProp2_body. Låt $_A$ vara en mängd. Låt $Q_$ vara en funktion från element $_x_935$ av $range$ av $_A$ till påståenden. Låt $_H_mk_range$ vara en funktion från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range$ applicerat på $_A$ och $_enum$ och $_upto$ och $_filter$. Då för alla element $x_935$ av $range$ av $_A$, håller $Q_$ för $x_935$.\nassistant\n", "label": "postulate range_rect_CProp2_body : (_A : Set) -> (Q_ : (_x_935 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_935 : range _A) -> Q_ x_935", "predict": "postulate range_rect_CProp2_body : (A : Set) -> (Q : (x : range A) -> Prop) -> (H : (enum : Nat -> A) -> (upto : Nat) -> (filter : Nat -> Prop) -> Q (mk_range A enum upto filter))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n$ be a natural number. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $g1$ and $g2$ be functions from natural numbers to natural numbers. Let $n1$ be a natural number. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$ and functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n1$ and elements $__2$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$. Let $H1$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$. Let $H2$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$. Assume that $p2 (n1)= true$. Assume that $p1 (n1)= true$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (n1 : Nat) (Hind : (x__ : (i : Nat) -> (x__ : i < n1) -> (__1 : p1 i = true) -> p2 i = true) -> (__1 : (i : Nat) -> (__1 : i < n1) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) -> bigop n1 (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n1 (λ i => p2 i) Nat 0 plus (λ i => g2 i)) (H1 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> p2 i = true) (H2 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> g1 i ≤ g2 i) (Hp2 : p2 n1 = true) (Hp1 : p1 n1 = true) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (p1 p2 : Nat → Bool) (g1 g2 : Nat → Nat) (n1 : Nat) : Hind (λ i : Nat, Lt i n1) (p1 i) (true) (λ i : Nat, Eq (p2 i) true) (λ i : Nat, Leq (g1 i) (g2 i)) → Eq (p2 n) true ∧ Leq (g1 n) (g2 n) := sorry\n\naxiom let_clause_1033' (n1 : Nat) (H1 : Eq (p2 n1) true) (H2 : Leq (g1 n1) (g2 n1)) : ∀ x2515 : Nat, ∀ x2516 : Nat, x2515 = x2516 (x2515 / x2516) + mod (x2515, x2516) := sorry"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_O_to_divides. Let $n$ and $m$ be natural numbers. Assume that $0 < n$. Assume that $mod (m , n)= 0$. Then $n$ is divisible by $m$.\nassistant\n", "label": "mod_O_to_divides : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : Eq (mod m n) 0 -> divisible n m .", "predict": "mod_O_to_divides : (n : Elem Nat) -> (m : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Eq (mod m n) (nd 0)) -> Proof (Divisible n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Then if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (and (Leq a n) (Eq (f a) i)) -> b : Elem Nat -> Proof (if (and (Leq b n) (Eq (f b) j)) (if (Leq b n) (Eq (f b) j))) -> Proof (forall (f : Elem (Nat -> Nat)) -> forall (i0 : Elem Nat) -> forall (inj : Elem (Leq i0 n)) -> forall (injf : Elem (injn f n)) -> if (Eq a b) (Eq (f a) i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15311. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $n$ is divisible by $m$. Then for all natural numbers $d$ and $p$, if $m$ is equal to the product of $n$ and the sum of $p$ and $1$, then $m$ is equal to the sum of $n$ and the product of $n$ and $p$.\nassistant\n", "label": "Axiom let_clause_15311 : forall n : nat, forall m : nat, forall posm : (0 < m), forall _clearme : divisible n m, forall d : nat, forall p : nat, forall eqm : (m = n * (p + 1)), m = n + n * p .", "predict": "Axiom let_clause_15311 : forall n : nat, forall m : nat, (0 < m -> n mod m = 0 -> forall d : nat, forall p : nat, (m = n * (p + 1) -> m = n + n * p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nPlus_plus_comm_23. För alla naturliga tal $x$ och $y$ och $z$, $x + y + z = x + z + y$.\nassistant\n", "label": "Axiom plus_plus_comm_23 : forall x : nat, forall y : nat, forall z : nat, x + y + z = x + z + y .", "predict": "Axiom plus_plus_comm_23 : forall x : nat, forall y : nat, forall z : nat, (x + y + z = x + z + y) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1047. Soient $k$ et $n$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Supposons que $n \\leq k$. Soit $j$ un nombre naturel. Supposons que $n \\leq j$. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Leq$ de $n$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $j$ à des éléments de $Eq$ de $p (i)$ et de contradiction à des éléments de $Eq$ de $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et de $bigop$ appliqué à $j$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$. Soit $Hfalse$ une fonction des nombres naturels $i$ et des éléments de $Leq$ de $n$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $j + 1$ à des éléments de $Eq$ de $p (i)$ et de contradiction. Soit $x2571 , x2572 \\in N$. Alors $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.\nassistant\n", "label": "axiom let_clause_1047 (k n : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (lenk : n ≤ k) (j : Nat) (leup : n ≤ j) (Hind : (x__ : (i : Nat) -> (x__ : n ≤ i) -> (__1 : i < j) -> p i = false) -> bigop n (λ i => p i) B nil op (λ i => f i) = bigop j (λ i => p i) B nil op (λ i => f i)) (Hfalse : (i : Nat) -> (x__ : n ≤ i) -> (__1 : i < j + 1) -> p i = false) (x2571 x2572 : Nat) : x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572", "predict": "axiom let_clause_1047 (k n : Nat) (p : Nat → Bool) (B : Set) (nil : B) (op : B → B → B) (f : Nat → B) (x : n ≤ k) (j : Nat) (y : n ≤ j) (Hind : ∀ i : Nat, ∀ Leq : n ≤ i, ∀ Lt : i < j, Eq p i ∧ Contradiction → Eq (bigop n (λ i : Nat, Eq (p i) (contradiction))) (bigop j (λ i : Nat, Eq (p i) (contradiction))) := ...) (Hfalse : ∀ i : Nat, ∀ Leq : n ≤ i, ∀ Lt : i < j + 1, Eq p i ∧ Contradiction → Eq (bigop n (λ i : Nat, Eq (p i) (contradiction))) (bigop (j + 1) (λ i : Nat, Eq (p i) (contradiction)))) (x2571 x2572 : Nat) : x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nPrime_to_lt_SO. Låt $p$ vara ett naturligt tal. Anta att $p$ är primt. Då är $1$ mindre än $p$.\nassistant\n", "label": "Axiom prime_to_lt_SO : forall p : nat, forall x__ : prime p, 1 < p .", "predict": "Axiom prime_to_lt_SO : forall p : nat, (prime p -> 1 < p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_d_gcd. Let $m$ and $n$ and $d$ be natural numbers. Then if $d$ is divisible by $m$, then if $d$ is divisible by $n$, then $d$ is divisible by the greatest common divisor of $n$ and $m$.\nassistant\n", "label": "postulate divides_d_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> (_ : divisible d m) -> (__1 : divisible d n) -> divisible d (gcd n m)", "predict": "postulate divides_d_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> divides d m -> divides d n -> divides d (gcd n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nPad_bigop_nil. Soient $k$ et $n$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Alors pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $n$ est inférieur ou ágal à $k$, alors pour toutes les fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Leq$ de $n$ et de $i$ et des éléments $__2$ de $Lt$ de $i$ et de $k$ à des éléments de $or$ de $Eq$ appliqué à $p$ appliqué à $i$ et contradiction et de $Eq$ appliqué à $f$ appliqué à $i$ et $nil$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "axiom pad_bigop_nil (k n : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : Aop B nil) (f : (x__ : Nat) -> B) (x__ : n ≤ k) (__1 : (i : Nat) -> (__1 : n ≤ i) -> (__2 : i < k) -> p i = false ∨ f i = nil) : bigop n (λ i => p i) B nil (op B nil op) (λ i => f i) = bigop k (λ i => p i) B nil (op B nil op) (λ i => f i)", "predict": "axiom pad_bigop_nil (k n : Nat) (p : Nat → Bool) (B : Set) (nil : B) : ∀ op : Aop B nil, ∀ f : Nat → B, (n ≤ k → ∀ i : Nat, ∀ leq : Leq n i, ∀ lt : Lt i k, or (Eq p i ∧ contradiction) (Eq (f i) nil)) → bigop n (λ i, p i) B nil op (λ i, f i) = bigop k (λ i, p i) B nil op (λ i, f i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNat_ind_body. Soit $Q_$ une fonction des nombres naturels $_x_365$ à des propositions. Soit $_H_O$ un élément de $Q_$ de $0$. Soit $_H_S$ une fonction des nombres naturels $x_366$ et des éléments $_x_368$ de $Q_$ de $x_366$ à des éléments de $Q_$ de $x_366 + 1$. Soit $x_365 \\in N$. Alors $Q_$ tient pour $x_365$.\nassistant\n", "label": "nat_ind_body : Q_ : (_x_365 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_366 : Nat -> _x_368 : Q_ x_366 -> Q_ (plus x_366 (nd 1))) -> x_365 : Nat -> Q_ x_365 .", "predict": "nat_ind_body : (Q : Elem Nat -> Prop) -> Elem Q 0 -> (x : Elem Nat) -> Elem Q (plus x 1) -> Prop => x -> Proof (Q x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_1544 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : a * mod m n - b * n = gcd_aux q n (mod m n)) : a * mod m n - n * b = gcd_aux q n (mod m n)", "predict": "axiom let_clause_1544 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, ∀ x : Lt 0 n ∧ Leq n m ∧ Leq n (q + 1) ∧ ¬ (n % m = 0), ∀ a : Nat, ex Nat (b → Eq (a * n - b * m) (gcd_aux q m n) ∨ Eq (b * n - a * m) (gcd_aux q m n))) (m n : Nat) (x : 0 < n ∧ n ≤ m ∧ n ≤ q + 1 ∧ ¬ (n % m = 0)) : ∀ a : Nat, ex Nat (b → Eq (a % (m, n) - b * n) (gcd_aux q n (mod m n)) ∨ Eq (b * n - a % (m, n)) (gcd_aux q n (mod m n))) → ∀ b : Nat, (Eq (a % (m, n) - b * n) (gcd_aux q n (mod m n)) ∨ Eq (b * n - a % (m, n)) (gcd_aux q n (mod m n))) → Eq (a % (m, n) - n * b) (gcd_aux q n (mod m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nACop_rect_CProp0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_913$ de $ACop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$. Alors pour tous les éléments $x_913$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_913$.\nassistant\n", "label": "ACop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_913 : ACop A _nil -> Prop) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_913 : ACop A _nil -> Q_ x_913 .", "predict": "ACop_rect_CProp0 : (A : Elem) -> (x : Elem A) -> (Q : (x : Elem (ACop A)) -> (x : Elem A) -> Prop) -> (H : (aop : Elem Aop A) -> (x : Elem A) -> (comm : (a : Elem A) -> (b : Elem A) -> Elem (Eq (op A x aop a b) (op A x aop b a))) -> Prop) -> Proof (forall (x : Elem (ACop A) A) -> (x : Elem A) -> Q x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_max_n. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$, är $max$ applicerat på $n$ och $f$ mindre än eller lika med $n$.\nassistant\n", "label": "Axiom le_max_n : forall f : ((x__ : nat) -> bool), forall n : nat, Leq (max n f) n .", "predict": "Axiom le_max_n : forall f : nat -> bool, forall n : nat, max n (f n) <= n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_to_not_eq_O. Let $n$ and $p$ and $q$ and $r$ be natural numbers. Assume that $1$ is less than $n$. Assume that $p_ord$ applied to $n$ and $nth_prime$ applied to $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$. Then $r$ is not equal to $0$.\nassistant\n", "label": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, forall x__ : (1 < n), forall __1 : (p_ord n (nth_prime p) = mk_Prod nat nat q r), ~ (r = 0) .", "predict": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, (1 < n -> p_ord n (nth_prime p) = mk_Prod Nat Nat q r -> r <> 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1062. Soit $a , b , q , r , q1 , r1 \\in N$. Alors pour tous les éléments $_clearme$ de $div_mod_spec$ de $a$ et de $b$ et de $q$ et de $r$, si $r < b$ et $a = q b + r$, alors pour tous les éléments $_clearme0$ de $div_mod_spec$ de $a$ et de $b$ et de $q1$ et de $r1$, si $r1 < b$ et $a = q1 b + r1$, alors si $q$ n'est pas inférieur ou ágal à $q1$, alors $a = r1 + b q1$.\nassistant\n", "label": "let_clause_1062 : a : Nat -> b : Nat -> q : Nat -> r : Nat -> q1 : Nat -> r1 : Nat -> _clearme : div_mod_spec a b q r -> ltrb : Lt r b -> spec : Eq a (plus (times q b) r) -> _clearme0 : div_mod_spec a b q1 r1 -> ltr1b : Lt r1 b -> spec1 : Eq a (plus (times q1 b) r1) -> leqq1 : not (Leq q q1) -> Eq a (plus r1 (times b q1)) .", "predict": "let_clause_1062 : a : Elem Nat -> b : Elem Nat -> q : Elem Nat -> r : Elem Nat -> q1 : Elem Nat -> r1 : Elem Nat -> Proof (if (and (Lt r b) (Eq a (plus (times q b) r))) (if (and (Lt r1 b) (Eq a (plus (times q1 b) r1))) (if (Neq (Leq q q1) (True)) (Eq a (plus r1 (times b q1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDop_rect_Type0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_955$ de $Dop$ de $A$ et de $_nil$ à des ensembles. Alors pour toutes les fonctions $_H_mk_Dop$ des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$, pour tous les éléments $x_955$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_955$.\nassistant\n", "label": "postulate Dop_rect_Type0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_955 : Dop A _nil) -> Set) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_955 : Dop A _nil) -> Q_ x_955", "predict": "postulate dop_rect_Type0 : (A : Set) -> _nil : A -> (Q_ : Dop -> A -> _nil -> Set) -> all (forall (H : ACop -> A -> _nil -> Set) -> all (forall (prod : A -> _1 -> A) -> all (forall (a : A) -> Eq -> all (forall (x : Dop -> A -> _nil -> Eq) -> Eq -> all (forall (a : A) -> Eq -> all (forall (b : A) -> Eq -> all (forall (c : A) -> Eq -> Q_ (mk_Dop (A , _nil , sum , prod , _null , _distr)) x))))) -> all (forall (x : Dop -> A -> _nil -> Set) -> Q_ x))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Då för alla naturliga tal $n$, för alla element $permf$ av $permut$ av $f$ och $n$, för alla naturliga tal $i$ och $j$, om $i \\leq n$, så om $j \\leq n$, så för alla naturliga tal $a$, om $a \\leq n$ och $f (a)= i$, så om $a \\leq n$, så om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : Permut f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n -> (f a = i -> a <= n -> (f a = i -> forall b : nat, (b <= n -> (f b = j -> b <= n -> (forall __ : nat -> Leq i0 -> Leq n -> Leq (f (i0)) -> n, forall injf : nat -> Leq n, (injf (f n) = i -> injf (f n) = i -> a = b -> f a = i)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> (x : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> all Nat (\\ d -> if (or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (Leq n i -> Leq n j -> forall a : nat, (Leq n a /\\ (f a = i) /\\ Leq n a) -> (f a = i) -> forall b : nat, (Leq n b /\\ (f b = j) /\\ Leq n b) -> (f b = j) -> forall i0 : nat, forall injf : Leq i0 n /\\ Leq (f i0) n, (a = b -> f a = i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nP_ord_aux_to_not_mod_O. För alla naturliga tal $p$ och $n$ och $m$ och $q$ och $r$, om $1 < m$ och $0 < n$, så om $n \\leq p$ och $p_ord_aux (p , n , m)= mk_Prod (Nat , Nat , q , r)$, så är $mod (r , m)$ inte lika med $0$.\nassistant\n", "label": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 m) -> (__1 : Lt 0 n) -> (__2 : Leq n p) -> (__3 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> not (Eq (mod r m) 0)", "predict": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (1 < m) -> (0 < n) -> (n <= p) -> Eq (p_ord_aux (p , n , m)) (mk_Prod (Nat , Nat , q , r)) -> Neq (mod r m) 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_exp_r. Let $b \\in N$. Then if $1 < b$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $i$ to $b ^ i$.\nassistant\n", "label": "axiom injective_exp_r (b : Nat) (x__ : 1 < b) : injective Nat Nat (λ i => pow b i)", "predict": "axiom injective_exp_r (b : Nat) (x : 1 < b) : injective Nat Nat (fun i => pow b i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_n_O. For all natural numbers $n$, if $0$ is less than $n$, then the exponentiation of $0$ and $n$ is equal to $0$.\nassistant\n", "label": "postulate exp_n_O : (n : Nat) -> (_ : Lt 0 n) -> Eq (pow 0 n) 0", "predict": "postulate exp_n_O : (n : Nat) -> 0 < n -> 0 ^ n == 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1596$ of $ACop$ of $x1$ and $x2$ to sets, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1597$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "ACop_inv_rect_Type0 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1596 : ACop x1 x2 -> Set) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1597 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "ACop_inv_rect_Type0 : x1 : Elem Set -> x2 : Elem x1 -> Proof (forall (Hterm : Elem (ACop x1 x2)) -> forall (P : (forall (z1596 : Elem (ACop x1 x2)) -> Set)) -> forall (aop : Elem (Aop x1 x2)) -> forall (comm : (forall (a : Elem x1) -> forall (b : Elem x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a))) -> Proof (forall (z1597 : Eq (Hterm (mk_ACop x1 x2 aop (comm (a x1) (b x1)))) (P (mk_ACop x1 x2 aop (comm (a x1) (b x1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMin_not_exists. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $b$ vara naturliga tal. Låt $__$ vara en funktion från naturliga tal $i$ och element av $Leq$ av $b$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $n$ och $b$ till element av $Eq$ av $f$ applicerat på $i$ och kontradiktion. Då är $min$ applicerat på $n$ och $b$ och $f$ lika med summan av $n$ och $b$.\nassistant\n", "label": "postulate min_not_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) false) -> Eq (min n b f) (plus n b)", "predict": "postulate min_not_exists : (f : Nat -> Prop) -> n : Nat -> b : Nat -> (i : Nat) -> (x : Leq b i) -> (y : Lt i (plus n b)) -> Eq (min n b f) (plus n b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1544. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0 < n$ et $n \\leq m$. Supposons que $n \\leq q + 1$ et $n$ n'est pas divisible par $m$. Soit $a$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Alors pour tous les nombres naturels $b$, si $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ et $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, alors $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> Hind -> Eq (let a : Nat in let x : Nat -> Ex Nat in let y : Nat -> Disj (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n)) (Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nExp_n_O. För alla naturliga tal $n$, om $0 < n$, så $0 ^ n = 0$.\nassistant\n", "label": "exp_n_O : n : Nat -> __ : Lt 0 n -> Eq (pow 0 n) 0 .", "predict": "exp_n_O : n : Elem Nat -> Proof (if (Lt (nd 0) n) (Eq (pow (nd 0) n) (nd 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDivides_plus. Pour tous les nombres naturels $n$ et $p$ et $q$, si $n$ est et divisible par $p$ et divisible par $q$, alors $n$ est divisible par $p + q$.\nassistant\n", "label": "axiom divides_plus (n p q : Nat) (x__ : divisible n p) (__1 : divisible n q) : divisible n (p + q)", "predict": "axiom divides_plus (n p q : Nat) (x : divides n p ∧ divides n q) : divides n (p + q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nACop_inv_rect_Type1. Soit $x1$ un ensemble. Alors pour tous les éléments $x2$ de $x1$, pour tous les éléments $Hterm$ de $ACop$ de $x1$ et de $x2$, pour toutes les fonctions $P$ des éléments $_z1590$ de $ACop$ de $x1$ et de $x2$ à des éléments de $Type1$, pour toutes les fonctions $_H1$ des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1591$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom ACop_inv_rect_Type1 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1590 : ACop x1 x2) -> Type1), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1591 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm .", "predict": "Axiom cop_inv_rect_Type1 : forall x1 : Ensemble, forall x2 : x1 -> Prop, forall Hterm : ACop x1 -> x2 -> Prop, forall P : forall _z1590 : ACop x1 -> x2 -> Type1, forall aop : Aop x1 -> x2 -> Prop, forall _comm : forall a : x1, forall b : x1, Eq (op x1 x2 aop a) (op x1 x2 aop b) -> Eq (op x1 x2 aop b) (op x1 x2 aop a), forall _z1591 : Eq Hterm (mk_ACop x1 x2 aop _comm), P (mk_ACop x1 x2 aop _comm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLog_times1. For all natural numbers $p$ and $n$ and $m$, if $1$ is less than $p$, then if $0$ is less than $n$, then if $0$ is less than $m$, then the logarithm of $p$ and the product of $n$ and $m$ is less than or equal to the sum of the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ and $1$.\nassistant\n", "label": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), forall __2 : (0 < m), Leq (log p (n * m)) (log p n + log p m + 1) .", "predict": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, (1 < p -> 0 < n -> 0 < m -> log p (n * m) <= log p n + log p m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDivides_times_gcd_aux. Soit $p , m , n , d , c \\in N$. Supposons que $0 < c$ et $0 < n$. Supposons que $n \\leq m$ et $n \\leq p$. Supposons que $d$ est et divisible par $c \\times m$ et divisible par $c \\times n$. Alors $d$ est divisible par $c \\times gcd_aux (p , m , n)$.\nassistant\n", "label": "Axiom divides_times_gcd_aux : forall p : nat, forall m : nat, forall n : nat, forall d : nat, forall c : nat, forall x__ : (0 < c), forall __1 : (0 < n), forall __2 : Leq n m, forall __3 : Leq n p, forall __4 : divisible d (c * m), forall __5 : divisible d (c * n), divisible d (c * gcd_aux p m n) .", "predict": "Axiom divides_times_gcd_aux : forall p : nat, forall m : nat, forall n : nat, forall d : nat, forall c : nat, (0 < c /\\ 0 < n /\\ n <= m /\\ n <= p /\\ (divisible d (c * m) /\\ divisible d (c * n)) -> divisible d (c * gcd_aux p m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16171. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a .", "predict": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ Eq (gcd p m) 1 /\\ Divisible p (m * n)) -> forall c : nat, (Eq (m * n) (p * c)) -> forall a : nat, forall x : ex (Nat -> Prop), forall b : nat, (Eq (gcd p m) (a * p - b * m) \\/ Eq (gcd p m) (b * m - a * p)) -> (Eq (b * m - a * p) 1 -> Eq (m * b - p * a) (gcd p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nP_ord_to_exp1. Låt $p , n , q , r \\in N$. Anta att $1 < p$ och $0 < n$. Då om $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$, så är $p$ inte delbart med $r$ och $n = p ^ q r$.\nassistant\n", "label": "postulate p_ord_to_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> (__2 : Eq (p_ord n p) (mk_Prod Nat Nat q r)) -> and (not (divisible p r)) (Eq n (times (pow p q) r))", "predict": "postulate p_ord_to_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> and (Lt 1 p) (Gt 0 n) -> Eq (p_ord n p) (mk_Prod Nat Nat q r) -> not (divides p r) && Eq n (pow p q * r)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLt_smallest_factor_to_not_divides. För alla naturliga tal $n$ och $i$, om $1$ är mindre än $n$, så om $1$ är mindre än $i$, så om $i$ är mindre än $smallest_factor$ applicerat på $n$, så är $i$ inte delbart med $n$.\nassistant\n", "label": "lt_smallest_factor_to_not_divides : n : Nat -> i : Nat -> __ : Lt (nd 1) n -> __1 : Lt (nd 1) i -> __2 : Lt i (smallest_factor n) -> not (divisible i n) .", "predict": "Lt_smallest_factor_to_not_divides : (n : Elem Nat) -> (i : Elem Nat) -> Proof (and (Lt 1 n) (Lt 1 i) (Lt i (smallest_factor n))) -> Proof (not (divides n i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLprim_ex. $lprim$ applied to $8$ and $2$ and $nil$ applied to $Nat$ is equal to $cons$ applied to $Nat$ and $2$ and $cons$ applied to $Nat$ and $3$ and $cons$ applied to $Nat$ and $5$ and $cons$ applied to $Nat$ and $7$ and $nil$ applied to $Nat$.\nassistant\n", "label": "postulate lprim_ex : Eq (lprim 8 2 (nil Nat)) (cons Nat 2 (cons Nat 3 (cons Nat 5 (cons Nat 7 (nil Nat)))))", "predict": "postulate lprim_ex : (8, 2, Nil Nat) ≡ (cons Nat 2) ∙ (cons Nat 3) ∙ (cons Nat 5) ∙ (cons Nat 7) ∙ (Nil Nat)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLe_Psi_exp4. Pour tous les nombres naturels $n$, si $1 < n$, alors $Psi (n)\\leq pred (n)(2 ^ (2 n - 3))$.\nassistant\n", "label": "le_Psi_exp4 : n : Nat -> __ : Lt (nd 1) n -> Leq (Psi n) (times (pred n) (pow (nd 2) (minus (times (nd 2) n) (nd 3)))) .", "predict": "le_Psi_exp4 : n : Elem Nat -> Proof (if (Lt (nd 1) n) (Leq (Psi n) (pred n) (pow (nd 2) (minus (times (nd 2) n) (nd 3))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that $b m - a p = 1$. Then $m b - p a = 1$.\nassistant\n", "label": "axiom let_clause_15611 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : m * b - p * a = 1", "predict": "axiom let_clause_15611 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (eq_mn : m * n = p * c) (a : Nat) (clearme0 : ex Nat (b => Eq (gcd p m) (and (Eq (a * p - b * m) (gcd p m)) (Eq (b * m - a * p) (gcd p m)))) (b : Nat) (x1 : Eq (gcd p m) (or (Eq (a * p - b * m) (gcd p m)) (Eq (b * m - a * p) (gcd p m)))) (x2 : Eq (gcd p m) (b * m - a * p)) (x3 : Eq (b * m - a * p) 1) : m * b - p * a = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1569. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$. Då är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.\nassistant\n", "label": "Axiom let_clause_1569 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), n * c - m * d = 1 .", "predict": "Axiom let_clause_1569 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall x : ex, (Eq (n * c - m * d) 1 \\/ Eq (m * d - n * c) 1 -> Eq (n * c - m * d) 1 -> Eq (n - m * d + c) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "let_clause_15621 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_15621 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (Lt (nd 0) n) (if (Lt (nd 0) m) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (ex : Elem Nat) (nd => forall Nat (d => if (or (Eq (nd (minus (times c n) (times d m))) (nd 1)) (Eq (nd (minus (times d m) (times c n))) (nd 1))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_i_2n. Let $n , i \\in N$. Assume that $1 < n$. Assume that $n < i$. Then if $i \\leq 2 n$, then $\\log_ i {(2 n)}= 1$.\nassistant\n", "label": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> (_ : Lt 1 n) -> (__1 : Lt n i) -> (__2 : Leq i (times 2 n)) -> Eq (log i (times 2 n)) 1", "predict": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> and (Lt 1 n) (Lt n i) -> Leq i (times 2 n) -> Eq (log i (times 2 n)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLt_SO_to_le_B_exp. Pour tous les nombres naturels $n$, si $1 < n$, alors $B (2 n)\\leq 2 ^ pred (2 n)$.\nassistant\n", "label": "Axiom lt_SO_to_le_B_exp : forall n : nat, forall x__ : (1 < n), Leq (B (2 * n)) (pow 2 (pred (2 * n))) .", "predict": "Axiom lt_SO_to_le_B_exp : forall n : nat, (1 < n -> B (2 * n) <= pow 2 (pred (2 * n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1600. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.\nassistant\n", "label": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall x : ex (Nat -> Prop), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> (Eq (c * n - d * m) 1 -> gcd m n = n - d * m / c)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDiv_mod_spec_inv_rect_Type2. Soit $x1 , x2 , x3 , x4 \\in N$. Soit $Hterm$ un élément de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$. Alors pour toutes les fonctions $P$ des éléments $_z1452$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des éléments de $Type2$, pour toutes les fonctions $_H1$ des éléments $x_827$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_826$ de $Eq$ de $x1$ et de $x3 x2 + x4$ et des éléments $_z1453$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_827 , x_826)$ à des éléments de $P$ de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_827 , x_826)$, $P$ tient pour $Hterm$.\nassistant\n", "label": "div_mod_spec_inv_rect_Type2 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1452 : div_mod_spec x1 x2 x3 x4 -> Type2) -> _H1 : (x_827 : Lt x4 x2 -> x_826 : Eq x1 (plus (times x3 x2) x4) -> _z1453 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826) -> P (div_mod_spec_intro x1 x2 x3 x4 x_827 x_826)) -> P Hterm .", "predict": "div_mod_spec_inv_rect_Type2 : x1 : Elem Nat -> x2 : Elem Nat -> x3 : Elem Nat -> x4 : Elem Nat -> Hterm : Elem (div_mod_spec x1 x2 x3 x4) -> Proof (forall (P : Elem (div_mod_spec x1 x2 x3 x4) -> Elem Type2) -> forall (H1 : Elem (Lt x4 x2) -> Elem (Eq x1 (x3 * x2 + x4)) -> Elem (Eq Hterm (div_mod_spec_intro x1 x2 x3 x4))) -> Proof (forall (z1452 : Elem (div_mod_spec x1 x2 x3 x4)) -> P z1452) -> P Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10331. Låt $n \\in N$. Anta att $5 < n$. Låt $m \\in N$. Anta att $6 \\leq m$. Anta att $(m + 1)^ 2 \\leq 2 ^ m$. Låt $a \\in N$. Då om $6 \\leq a$, så om $2 (a + 1)+ 1 \\leq 2 ^ a$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (5 < n) -> m : Elem Nat -> Proof (6 <= m) -> Proof (pow (plus m 1) 2 <= pow m (nd 2)) -> a : Elem Nat -> Proof (6 <= a) -> Proof (nd 2 * (plus a (nd 1)) + nd 1 <= pow a (nd 2)) -> Proof (forall Nat (x => and (Eq x2515 x x2515 / x2516) (Eq (mod x2515 x2516) x2515))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_to_log_O. Let $n , m \\in N$. Assume that $0$ is less than $m$. Then if $m$ is less than $n$, then the logarithm of $n$ and $m$ is equal to $0$.\nassistant\n", "label": "postulate lt_to_log_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt m n) -> Eq (log n m) 0", "predict": "postulate lt_to_log_O : (n : Nat) -> (m : Nat) -> 0 < m -> if (m < n) (Eq (log n m) 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a \\in N$. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b \\in N$. Då om $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$, så om $b$ är mindre än eller lika med $n$, så om $f$ applicerat på $b$ är lika med $j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (forall (f : Elem (Nat -> Nat)) -> forall (i0 : Elem Nat) -> forall (inj : Elem (Leq i0 n)) -> forall (injf : Elem (injn f n)) -> Eq a b -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nFilter_lstar_r. Låt $B$ vara en mängd. Låt $_R$ vara ett element av $relation$ av $B$. Då för alla naturliga tal $__$, för alla element $__1$ och $__2$ av $B$, för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_sort$, för alla funktioner $return$ från element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_type$ av $z$, för alla element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$, håller $return_type$ för $z$.\nassistant\n", "label": "axiom filter_lstar_r (B : Set) (_R : relation B) (x__ : Nat) (__1 __2 : B) (return_sort : Sort) (return_type : (z : lstar_r B _R __ __1 __2) -> return_sort) (return : (z : lstar_r B _R __ __1 __2) -> return_type z) (z : lstar_r B _R __ __1 __2) : return_type z", "predict": "axiom filter_lstar_r (B : Set) (R : Relation B) : ∀ n : Nat, ∀ x : B, ∀ y : B, ∀ t : Sort, ∀ f : lstar_r B R n → x → y → t, ∀ g : lstar_r B R n → x → y → y → t, ∀ z : lstar_r B R n, t := f z x y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_15601. Soit $n , m \\in N$. Supposons que $0 < m$ et $0 = n$. Alors si $0$ est divisible par $m$, alors pour tous les nombres naturels $q$, si $m = 0 q$, alors $n = 0$.\nassistant\n", "label": "axiom let_clause_15601 (n m : Nat) (posn : 0 < m) (eqn0 : 0 = n) (_clearme : divisible 0 m) (q : Nat) (eqm : m = 0 * q) : n = 0", "predict": "axiom let_clause_15601 (n m : Nat) (x : 0 < m ∧ n = 0) : 0 % m = 0 → ∀ q : Nat, (m = 0 * q → n = 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDop_rect_CProp0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Alors pour toutes les fonctions $Q_$ des éléments $_x_967$ de $Dop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Dop$ des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $_nil$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ à des éléments de $Q_$ de $mk_Dop$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ et $_null$ et $_distr$, pour tous les éléments $x_967$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_967$.\nassistant\n", "label": "Dop_rect_CProp0 : A : Set -> _nil : A -> Q_ : (_x_967 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_967 : Dop A _nil -> Q_ x_967 .", "predict": "dop_rect_CProp0 : (A : Elem) -> (nil : Elem A) -> Proof (forall (Q_ : Elem (Dop A) -> Elem nil -> Prop) -> forall (H_mk_Dop : Elem (ACop A) -> Elem nil -> Proof (forall (prod : Elem A -> Elem A -> Elem A) -> forall (null : Elem A -> Eq) -> forall (distr : Elem A -> Elem A -> Elem A -> Eq) -> Proof (forall (x_967 : Elem Dop A) -> Q_ (mk_Dop A nil) (x_967)))) -> Proof (forall (x_967 : Elem Dop A) -> Q_ x_967)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_S_S. Låt $n , m \\in N$. Anta att $n$ är mindre än eller lika med $m$. Då är summan av $n$ och $1$ mindre än eller lika med summan av $m$ och $1$.\nassistant\n", "label": "postulate le_S_S : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq (plus n 1) (plus m 1)", "predict": "postulate le_S_S : (n : Nat) -> (m : Nat) -> Leq n m -> Leq (plus n 1) (plus m 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nEq_times_plus_to_congruent. Soit $n , m , p , r \\in N$. Supposons que $0 < p$. Alors si $n = r p + m$, alors $congruent$ tient pour $n$ et $m$ et $p$.\nassistant\n", "label": "Axiom eq_times_plus_to_congruent : forall n : nat, forall m : nat, forall p : nat, forall r : nat, forall x__ : (0 < p), forall __1 : (n = r * p + m), congruent n m p .", "predict": "Axiom eq_times_plus_to_congruent : forall n : nat, forall m : nat, forall p : nat, forall r : nat, (0 < p -> n = r * p + m -> congruent n m p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLe_exp1. Låt $n , m , a \\in N$. Då om $0 < a$ och $n \\leq m$, så $n ^ a \\leq m ^ a$.\nassistant\n", "label": "axiom le_exp1 (n m a : Nat) (x__ : 0 < a) (__1 : n ≤ m) : pow n a ≤ pow m a", "predict": "axiom le_exp1 (n m a : Nat) (x : 0 < a ∧ n ≤ m) : pow n a ≤ pow m a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Alors si $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$, alors si $b$ est inférieur ou ágal à $n$, alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.\nassistant\n", "label": "Axiom let_clause_1063 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = j .", "predict": "Axiom let_clause_1063 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n /\\ f a = i -> a <= n /\\ f a = i) -> forall b : nat, (b <= n /\\ f b = j -> b <= n /\\ f b = j) -> forall i0 : nat, forall injn : Leq i0 n /\\ Leq (f i0) n, forall injf : permf /\\ f, (a = b -> f a = j)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15625. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "let_clause_15625 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15625 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (and (Elem (nd 0) (ex (Nat (nd 0)) (forall Nat (d => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))))) -> d : Elem Nat -> Proof (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> Proof (Eq (minus (times m d) (times n c)) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_rect_Type4. Let $Q_$ be a function from natural numbers $_x_369$ to elements of $Type4$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_370$ and elements $_x_372$ of $Q_$ of $x_370$ to elements of $Q_$ of $x_370 + 1$. Let $x_369 \\in N$. Then $Q_$ holds for $x_369$.\nassistant\n", "label": "Axiom nat_rect_Type4 : forall Q_ : ((_x_369 : nat) -> Type4), forall _H_O : Q_ 0, forall _H_S : ((x_370 : nat) -> (_x_372 : Q_ x_370) -> Q_ (x_370 + 1)), forall x_369 : nat, Q_ x_369 .", "predict": "Axiom nat_rect_Type4 : forall Q_ : nat -> Type4, H_O : Q_ 0, H_S : forall x_370 : nat, forall x_372 : Q_ x_370, Q_ (x_370 + 1), x_369 : nat, Q_ x_369 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBigop_0. Let $n$ be a natural number. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the sum of $i$ and $1$ and $f$ applied to $0$.\nassistant\n", "label": "postulate bigop_0 : (n : Nat) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> Eq (bigop (plus n 1) (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f i)) (op B nil op (bigop n (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f (plus i 1))) (f 0))", "predict": "postulate bigop_0 : (n : Nat) -> all Set (\\ B -> all B (\\ nil -> all (Aop B) (\\ op -> all (Nat -> B) (\\ f -> Eq (bigop (plus n 1) (true -> B nil op (B nil op) (f -> f i)) B nil op (plus (f i) 1) (f 0)) (op (B nil op) (plus (op (B nil op)) (bigop n (true -> B nil op (B nil op) (f -> f i)) B nil op (plus (f i) 1) (f 0))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15311. For all natural numbers $n$ and $m$, if $0 < m$ and $n$ is divisible by $m$, then for all natural numbers $d$ and $p$, if $m = n (p + 1)$, then $m = n + n p$.\nassistant\n", "label": "Axiom let_clause_15311 : forall n : nat, forall m : nat, forall posm : (0 < m), forall _clearme : divisible n m, forall d : nat, forall p : nat, forall eqm : (m = n * (p + 1)), m = n + n * p .", "predict": "Axiom let_clause_15311 : forall n : nat, forall m : nat, (0 < m /\\ n mod m = 0 -> forall d : nat, forall p : nat, (m = n * (p + 1) -> m = n + n * p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDivides_mod_to_divides. Soit $p , m , n \\in N$. Alors si $0$ est inférieur à $n$, alors si $p$ est divisible par $mod$ appliqué à $m$ et $n$, alors si $p$ est divisible par $n$, alors $p$ est divisible par $m$.\nassistant\n", "label": "axiom divides_mod_to_divides (p m n : Nat) (x__ : 0 < n) (__1 : divisible p (mod m n)) (__2 : divisible p n) : divisible p m", "predict": "axiom divides_mod_to_divides (p m n : Nat) (x : 0 < n) : divides (mod m n) p → divides n p → divides m p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if $b m - a p = 1$, then $m b - p a = 1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : Eq (gcd p m) 1) -> (z : Divisible p (times m n)) -> (c : Nat) -> (w : Eq (times m n) (times p c)) -> (a : Nat) -> (ex : Element (forall Nat (b => disj (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) (Nat)) -> (b : Nat) -> (q : Eq (gcd p m) (plus (minus (times b m) (times a p)) (minus (times a p) (times b m)))) -> (r : Eq (gcd p m) (minus (times b m) (times a p))) -> (s : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNot_divides_S_fact. Låt $n , i \\in N$. Anta att $1 < i$. Då om $i \\leq n$, så är $i$ inte delbart med $n ! + 1$.\nassistant\n", "label": "axiom not_divides_S_fact (n i : Nat) (x__ : 1 < i) (__1 : i ≤ n) : ¬ divisible i (factorial n + 1)", "predict": "axiom not_divides_S_fact (n i : Nat) (x : 1 < i) : i ≤ n → ¬ (divides (n + 1) i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_15692. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att $c n - d m = 1$ eller $d m - c n = 1$. Då om $d m - c n = 1$, så $m d - n c = 1$.\nassistant\n", "label": "axiom let_clause_15692 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15692 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (w : ex : Nat → Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1) : Eq (d * m - c * n) 1 → Eq (m * d - n * c) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Alors si $p$ est divisible par $m \\times n$, alors pour tous les nombres naturels $c$, si $m n = p c$, alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b = 1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> and (Lt 0 p) (Eq 1 (gcd p m)) -> if (divides p (times m n)) (all Nat (\\ c -> if (Eq (times m n) (times p c)) (all Nat (\\ a -> all (ex : Set Nat) (\\ _clearme0 -> all Nat (\\ b -> if (or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (if (Eq (gcd p m) (minus (times a p) (times b m))) (if (Eq (minus (times a p) (times b m)) 1) (Eq (minus (times p a) (times m b)) 1)))))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Then if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (and (Leq b n) (Eq (f b) j)) (if (Leq b n) (Eq (f b) j))) -> Proof (forall (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (forall (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (forall (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (forall (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (forall (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i))) (forall (if (and (Eq a b) (Eq (f a) i)) (Eq (f a) i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $5$ är mindre än $n$. Låt $m$ vara ett naturligt tal. Anta att $6$ är mindre än eller lika med $m$. Anta att potensen av summan av $m$ och $1$ och $2$ är mindre än eller lika med potensen av $2$ och $m$. Låt $a$ vara ett naturligt tal. Då om $6$ är mindre än eller lika med $a$, så om summan av produkten av $2$ och summan av $a$ och $1$ och $1$ är mindre än eller lika med potensen av $2$ och $a$, så för alla naturliga tal $x2515$ och $x2516$, är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (lt4n : 5 < n) (m : Nat) (le4m : 6 ≤ m) (Hind : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (lea : 6 ≤ a) (Hinda : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n m a x2515 x2516 : Nat) (x : 5 < n ∧ 6 ≤ m ∧ pow (m + 1) 2 ≤ pow 2 m ∧ 6 ≤ a ∧ 2 * (a + 1) + 1 ≤ pow 2 a) : x2515 = x2516 * x2515 / x2516 + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nCongruent_exp_pred_SO. Pour tous les nombres naturels $p$ et $a$, si $p$ est premier, alors si $p$ n'est pas divisible par $a$, alors $congruent$ tient pour la puissance de $a$ et de $pred$ appliqué à $p$ et $1$ et $p$.\nassistant\n", "label": "Axiom congruent_exp_pred_SO : forall p : nat, forall a : nat, forall x__ : prime p, forall __1 : (~ divisible p a), congruent (pow a (pred p)) 1 p .", "predict": "Axiom congruent_exp_pred_SO : forall p : nat, forall a : nat, (prime p -> ~ (divisible p a) -> congruent (pow a (pred p)) 1 p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMinus_minus_associative. För alla naturliga tal $x$ och $y$ och $z$, om $z \\leq y$ och $y \\leq x$, så $x - (y - z)= (x - y)+ z$.\nassistant\n", "label": "minus_minus_associative : x : Nat -> y : Nat -> z : Nat -> __ : Leq z y -> __1 : Leq y x -> Eq (minus x (minus y z)) (plus (minus x y) z) .", "predict": "minus_minus_associative : x : Elem Nat -> y : Elem Nat -> z : Elem Nat -> Proof (if (and (Leq z y) (Leq y x)) (Eq (minus x (minus y z)) (plus (minus x y) z))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_Type2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1518$ of $Aop$ of $x1$ and $x2$ to elements of $Type2$. Then for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1519$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1518 : Aop x1 x2 -> Type2) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_Type2 : x1 : Elem Set -> x2 : Elem x1 -> Hterm : Elem (Aop x1 x2) -> P : (z1518 : Elem (Aop x1 x2)) -> Proof (forall (H1 : (op : Elem (Func (x1) (x1)) -> Proof (Eq x1 (op x2 a a))) -> nill : (a : Elem x1) -> Proof (Eq (op x2 a) a) -> nilr : (a : Elem x1) -> Proof (Eq (op a x2) a) -> assoc : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Proof (Eq (op (op a b) c) (op a (op b c))) -> Proof (Eq (Hterm (mk_Aop x1 x2) (op nill nilr assoc)) (P (mk_Aop x1 x2) (op nill nilr assoc)))) -> Proof (forall (z1519 : Elem (Eq (Hterm (mk_Aop x1 x2) (op nill nilr assoc))) (mk_Aop x1 x2) (op nill) (nilr) (assoc)) (P (z1519))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15625. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Alors pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> all ex (forall Nat (d => or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> all Nat (d => if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1548$ of $Aop$ of $x1$ and $x2$ to propositions. Then for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1549$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1548 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1549 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_CProp2 : (x1 : Elem Set) -> (x2 : Elem x1) -> (Hterm : Elem (Aop x1) x2) -> (P : (op : Elem (Aop x1) x2) -> Prop) -> Proof (forall (H1 : (op : Elem x1 -> Elem x1) -> (nill : Elem (x1 -> Eq (op x2) a)) -> (nilr : Elem (x1 -> Eq (op a) x2)) -> (assoc : Elem (x1 -> x1 -> x1) -> Eq (op (op a) b) (op a (op b c))) -> Proof (forall (z1548 : Elem (Aop x1) x2) -> P z1548)) (mk_Aop x1 x2 op nill nilr assoc)) -> Proof (P Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nBigop_Sfalse. Soit $k \\in N$. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Alors pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si contradiction est égal à $p (k)$, alors $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "Axiom bigop_Sfalse : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall x__ : (p k = false), bigop (k + 1) (fun i => p i) B nil op (fun i => f i) = bigop k (fun i => p i) B nil op (fun i => f i) .", "predict": "Axiom bigop_Sfalse : forall k : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (p k = contradiction -> bigop (k, fun i => p i, B, nil, op, fun i => f i) = bigop (k + 1, fun i => p i, B, nil, op, fun i => f i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDivides_times. Låt $n$ och $m$ och $p$ och $q$ vara naturliga tal. Då om $n$ är delbart med $p$, så om $m$ är delbart med $q$, så är $n \\times m$ delbart med $p \\times q$.\nassistant\n", "label": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible m q) -> divisible (times n m) (times p q)", "predict": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> divides n p -> divides m q -> divides (times n m) (times p q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_CProp3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1542$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1543$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_CProp3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1542 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1543 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom aop_inv_rect_CProp3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : forall z1542 : Aop x1 x2 -> Prop, forall H1 : forall op : x1 -> x1 -> x1, forall nill : forall a : x1 -> Eq (op x2 a) a, forall nilr : forall a : x1 -> Eq (op a x2) a, forall assoc : forall a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c), P (mk_Aop x1 x2 op nill nilr assoc) = Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDiv_mod_spec_rect_CProp4_body. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_837$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_839$ av $Lt$ av $_r$ och $_m$ och element $x_838$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_839$ och $x_838$. Låt $x_837$ vara ett element av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$. Då håller $Q_$ för $x_837$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp4_body (_n _m _q _r : Nat) (Q_ : (_x_837 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_839 : _r < _m) -> (x_838 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) (x_837 : div_mod_spec _n _m _q _r) : Q_ x_837", "predict": "axiom div_mod_spec_rect_CProp4_body (n m q r : Nat) (Q_ : div_mod_spec n m q r → Prop) (H_div_mod_spec_intro : r < m ∧ n = q * m + r) : Q_ (div_mod_spec_intro n m q r) (H_div_mod_spec_intro.1) (H_div_mod_spec_intro.2) := ∀ x_837 : div_mod_spec n m q r, Q_ x_837"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nRange_rect_CProp4_body. För alla mängder $_A$, för alla funktioner $Q_$ från element $_x_929$ av $range$ av $_A$ till påståenden, för alla funktioner $_H_mk_range$ från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range$ applicerat på $_A$ och $_enum$ och $_upto$ och $_filter$, för alla element $x_929$ av $range$ av $_A$, håller $Q_$ för $x_929$.\nassistant\n", "label": "Axiom range_rect_CProp4_body : forall _A : Set, forall Q_ : ((_x_929 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_929 : range _A, Q_ x_929 .", "predict": "Axiom range_rect_CProp4_body : forall A : Type, forall Q : A -> Prop, forall H : enum nat -> A * nat -> Prop, forall filter : nat -> bool, forall x_929 : range A, Q (H (filter x_929)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLt_minus_to_plus. Låt $a , b , c \\in N$. Anta att skillnaden mellan $a$ och $b$ är mindre än $c$. Då är $a$ mindre än summan av $c$ och $b$.\nassistant\n", "label": "postulate lt_minus_to_plus : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Lt (minus a b) c) -> Lt a (plus c b)", "predict": "postulate lt_minus_to_plus : (a : Nat) -> (b : Nat) -> (c : Nat) -> Lt (minus a b) c -> Lt a (plus c b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1575. Soit $m , n , a , b \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors pour tous les nombres naturels $x1029$, $x1029$ est égal au produit de $x1029$ et de la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.\nassistant\n", "label": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) .", "predict": "let_clause_1575 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (0 < n) -> Proof (0 < m) -> Proof (Gcd n m = 1) -> c : Elem Nat -> Proof (clearme : Elem (ex : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times c n) (times d m)) 1))) -> Proof (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times c n) (times d m)) 1))) -> Proof (forall Nat (x1029 => x1029 = (times x1029 (minus (times n c) (times m d)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nF_invert_permut. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soient $n$ et $m$ des nombres naturels. Alors si $m$ est inférieur ou ágal à $n$, alors pour tous les éléments $__1$ de $permut$ de $f$ et de $n$, $f$ appliqué à $invert_permut$ appliqué à $n$ et $f$ et $m$ est égal à $m$.\nassistant\n", "label": "axiom f_invert_permut (f : (x__ : Nat) -> Nat) (n m : Nat) (x__ : m ≤ n) (__1 : permut f n) : f (invert_permut n f m) = m", "predict": "axiom f_invert_permut (f : Nat → Nat) (n m : Nat) (x : m ≤ n) : ∀ p : permut f n, f (invert_permut n) f m = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16004. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0 < n$ and $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16004 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16004 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall ex : nat, forall f : nat -> disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1) /\\ forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 /\\ Eq (m * d - n * c) (gcd m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_aux_to_exp. Let $p$ and $n$ and $m$ and $q$ and $r$ be natural numbers. Then if $0 < m$ and $p_ord_aux (p , n , m)= mk_Prod (Nat , Nat , q , r)$, then $n = m ^ q r$.\nassistant\n", "label": "postulate p_ord_aux_to_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 0 m) -> (__1 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> Eq n (times (pow m q) r)", "predict": "postulate p_ord_aux_to_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> if (and (Lt 0 m) (Eq (p_ord_aux (p , n , m)) (mk_Prod (Nat , Nat) q r))) (Eq n (pow m q r))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_Type3. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_949$ of $Dop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_949$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_949$.\nassistant\n", "label": "postulate Dop_rect_Type3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_949 : Dop A _nil) -> Type3) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_949 : Dop A _nil) -> Q_ x_949", "predict": "postulate dop_rect_Type3 : (A : Set) -> all A (\\ _nil -> all (Dop A) (\\ x_949 -> all (Q_ x_949) (\\ mk_Dop -> all (ACop A) (\\ sum -> all (prod A (A _1)) (\\ a -> all (Eq (prod a _null)) (\\ _distr -> all (Eq (distr a b c)) (\\ x_949 -> Q_ x_949))))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_div. For all natural numbers $n$, if $0$ is less than $n$, then $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to the quotient of $m$ and $n$.\nassistant\n", "label": "monotonic_div : n : Nat -> __ : Lt 0 n -> monotonic Nat Leq (m : Nat => div m n) .", "predict": "monotonic_div : (n : Elem Nat) -> Proof (Lt 0 n) -> Proof (and (monotonic Nat Leq) (forall Nat (m => monotonic Proof (Eq (quot m n) (div m n))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16171. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Då om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (a : Nat) -> (c : Nat) -> Eq (times m n) p c -> Eq (times a p) (plus (times b m) (gcd p m)) -> Eq (times b m) (minus (times a p) (gcd p m)) -> Eq (minus (times b m) (times a p)) (gcd p m) -> Eq (minus (times b m) (times a p)) (gcd p m) -> if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) (gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_times. Let $n , m , p , q \\in N$. Assume that $n$ is divisible by $p$. Assume that $m$ is divisible by $q$. Then $n \\times m$ is divisible by $p \\times q$.\nassistant\n", "label": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible m q) -> divisible (times n m) (times p q)", "predict": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> divides n p -> divides m q -> divides (times n m) (times p q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16003. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Assume that $d m - c n = 1$. Then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ Gcd n m = 1 -> forall c : nat, forall _clearme : ex (Nat -> Prop), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (m * d - n * c) (Gcd m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nEq_minus_S_pred. Låt $n , m \\in N$. Då $n - m + 1 = pred (n - m)$.\nassistant\n", "label": "Axiom eq_minus_S_pred : forall n : nat, forall m : nat, n - (m + 1) = pred (n - m) .", "predict": "Axiom eq_minus_S_pred : forall n : nat, forall m : nat, n - m + 1 = pred (n - m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLt_n_nth_prime_n. Pour tous les nombres naturels $n$, $n < nth_prime (n)$.\nassistant\n", "label": "lt_n_nth_prime_n : n : Nat -> Lt n (nth_prime n) .", "predict": "Lt_n_nth_prime_n : Proof (forall Nat (n => Lt n (nth_prime n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_times_times. Let $a$ and $b$ and $c$ be natural numbers. Assume that $0$ is less than $c$. Assume that $0$ is less than $b$. Then the quotient of $a$ and $b$ is equal to the quotient of the product of $a$ and $c$ and the product of $b$ and $c$.\nassistant\n", "label": "div_times_times : a : Nat -> b : Nat -> c : Nat -> __ : Lt 0 c -> __1 : Lt 0 b -> Eq (div a b) (div (times a c) (times b c)) .", "predict": "div_times_times : (a : Elem Nat) -> (b : Elem Nat) -> (c : Elem Nat) -> Proof (Lt Nat 0 c) -> Proof (Lt Nat 0 b) -> Eq (Quo Nat a b) (Quo Nat (times Nat a c) (times Nat b c)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b \\in N$. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $b$ är lika med $j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$. Då för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (x1 : a ≤ n ∧ f a = i) (x2 : a ≤ n) (x3 : f a = i) (b : Nat) (x4 : b ≤ n ∧ f b = j) (x5 : b ≤ n) (x6 : f b = j) (g : Nat → Nat × Leq n → Leq (f i0) n) : ∀ injf : Permut f n, (a = b → f a = i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTo_min. For all natural numbers $i$ and $n$ and $m$, if $i \\leq n$ and $i \\leq m$, then $i \\leq min (n , m)$.\nassistant\n", "label": "axiom to_min (i n m : Nat) (x__ : i ≤ n) (__1 : i ≤ m) : i ≤ min n m", "predict": "axiom to_min (i n m : Nat) (x : i ≤ n ∧ i ≤ m) : i ≤ min n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_plus_to_minus_r. Soit $a , b , c \\in N$. Supposons que la somme de $a$ et de $b$ est inférieure ou ágale à $c$. Alors $a$ est inférieur ou ágal à la différence de $c$ et de $b$.\nassistant\n", "label": "Axiom le_plus_to_minus_r : forall a : nat, forall b : nat, forall c : nat, forall x__ : Leq (a + b) c, Leq a (c - b) .", "predict": "Axiom le_plus_to_minus_r : forall a : nat, forall b : nat, forall c : nat, (a + b <= c -> a <= c - b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp2. Let $p , n , m \\in N$. Then if $1 < p$ and $0 < n$, then $m \\log_ p {n}\\leq \\log_ p {(n ^ m)}$.\nassistant\n", "label": "axiom log_exp2 (p n m : Nat) (x__ : 1 < p) (__1 : 0 < n) : m * log p n ≤ log p (pow n m)", "predict": "axiom log_exp2 (p n m : Nat) (x : 1 < p ∧ 0 < n) : m * log p n ≤ log p (pow n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "axiom let_clause_1617 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : gcd p m = p * a - m * b", "predict": "axiom let_clause_1617 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (w : m * n = p * c) (a : Nat) (ex : Nat → ex) (b : Nat) (x1 : y = a * p - b * m) (x2 : y = b * m - a * p) (x3 : y = a * p - b * m) (x4 : a * p - b * m = 1) : p * a - m * b = y"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1617. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$. Alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$, alors le diviseur commun plus grand de $p$ et de $m$ est égal à la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$.\nassistant\n", "label": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))", "predict": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n) == 0) -> (c : Nat) -> (w : m * n == p * c) -> (a : Nat) -> (clearme0 : ex (Nat -> Eq (minus (times a p) (times b m)) (gcd p m) || (Eq (minus (times b m) (times a p)) (gcd p m))) -> Eq (minus (times a p) (times b m)) 1) -> (b : Nat) -> (x : Eq (minus (times a p) (times b m)) (gcd p m) || Eq (minus (times b m) (times a p)) (gcd p m)) -> Eq (gcd p m) (minus (times p a) (times m b))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nNat_inv_rect_Type2. Låt $Hterm \\in N$. Låt $P$ vara en funktion från naturliga tal $_z671$ till element av $Type2$. Då för alla funktioner $_H1$ från element $_z672$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$, för alla funktioner $_H2$ från naturliga tal $x_382$ och funktioner $_x_384$ från element $_z672$ av $Eq$ av $Hterm$ och $x_382$ till element av $P$ av $x_382$ och element $_z672$ av $Eq$ av $Hterm$ och summan av $x_382$ och $1$ till element av $P$ av summan av $x_382$ och $1$, håller $P$ för $Hterm$.\nassistant\n", "label": "Axiom nat_inv_rect_Type2 : forall Hterm : nat, forall P : ((_z671 : nat) -> Type2), forall _H1 : ((_z672 : Hterm = 0) -> P 0), forall _H2 : ((x_382 : nat) -> (_x_384 : (_z672 : Hterm = x_382) -> P x_382) -> (_z672 : Hterm = x_382 + 1) -> P (x_382 + 1)), P Hterm .", "predict": "Axiom nat_inv_rect_Type2 : forall Hterm : nat, forall P : forall z671 : nat, Type2 -> Prop, (forall H1 : Eq Hterm 0 -> Type2, forall x382 : nat, forall x384 : Eq Hterm x382 -> Type2, P 0 /\\ forall x : nat, P (x382 + 1) -> P Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_length_to_mem_all. Let $n$ be a natural number. Let $l$ be a list of natural numbers. Assume that $length$ applied to $Nat$ and $l$ is equal to $n$. Let $__1$ be an element of $unique$ of $Nat$ and $l$. Let $__2$ be a function from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$. Then for all natural numbers $i$, if $i$ is less than $n$, then $mem$ holds for $Nat$ and $i$ and $l$.\nassistant\n", "label": "eq_length_to_mem_all : n : Nat -> l : list Nat -> __ : Eq (length Nat l) n -> __1 : unique Nat l -> __2 : (x : Nat -> __2 : mem Nat x l -> Lt x n) -> i : Nat -> __3 : Lt i n -> mem Nat i l .", "predict": "eq_length_to_mem_all : n : Elem Nat -> l : Elem List Nat -> Proof (Eq (length Nat l) n) -> Proof (forall Nat (i => if (Lt i n) (mem Nat i l))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_plus_div. Soient $m$ et $n$ et $q$ des nombres naturels. Alors si $0 < q$, alors $m \\div q + n \\div q \\leq (m + n)\\div q$.\nassistant\n", "label": "Axiom le_plus_div : forall m : nat, forall n : nat, forall q : nat, forall x__ : (0 < q), Leq (m / q + n / q) ((m + n) / q) .", "predict": "Axiom le_plus_div : forall m : nat, forall n : nat, forall q : nat, (0 < q -> m / q + n / q <= (m + n) / q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_S. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $R$ of $b1$ and $b$. Let $l \\in N$. Then for all elements $b2$ of $B$, for all elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$, $lstar$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "lstar_S : B : Set -> R : relation B -> b1 : B -> b : B -> __ : R b1 b -> l : Nat -> b2 : B -> __1 : lstar B R l b b2 -> lstar B R (plus l (nd 1)) b1 b2 .", "predict": "lstar_S : (B : Elem Set) -> (R : Elem (Relation B)) -> (b1 : Elem B) -> (b : Elem B) -> (__) : Elem (R b1 b) -> (l : Elem Nat) -> Proof (forall (b2 : Elem B) -> forall (___1 : Elem (lstar B) (R l b b2)) -> lstar B R (plus l 1) b1 b2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPermut_S_mod. Let $n \\in N$. Then $permut$ holds for $S_mod (n + 1)$ and $n$.\nassistant\n", "label": "permut_S_mod : n : Nat -> permut (S_mod (plus n (nd 1))) n .", "predict": "permut_S_mod : (n : Elem Nat) -> Proof (permut (S_mod (plus n 1)) n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15321. Let $n , m \\in N$. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Assume that $0$ is divisible by $m$. Let $q \\in N$. Assume that $m$ is equal to the product of $0$ and $q$. Then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_15321 (n m : Nat) (posn : 0 < m) (eqn0 : 0 = n) (_clearme : divisible 0 m) (q : Nat) (eqm : m = 0 * q) : m = 0", "predict": "axiom let_clause_15321 (n m q : Nat) (x : 0 < m) (y : 0 = n) (z : 0 % m = 0) : m = 0 * q → m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp4. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Then for all functions $P$ from elements $_z1734$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1735$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp4 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1734 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1735 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "dop_inv_rect_CProp4 : (x1 : Elem Set) -> (x2 : Elem x1) -> (Hterm : Elem (Dop x1 x2)) -> Proof (forall (P : Elem (Dop x1 x2) -> Prop) -> forall (H1 : Elem (ACop x1 x2)) -> forall (prod : Elem x1 -> Elem x1 -> Elem x1) -> forall (null : Elem (x1 -> Eq (prod (x2) x2))) -> forall (distr : Elem (x1 -> x1 -> x1 -> Eq (prod (x1) (aop__o__op (x1) (x2) (H1) (prod (x1) (x2))) (aop__o__op (x1) (x2) (H1) (prod (x1) (x2)))))) -> forall (z1735 : Eq (Hterm) (mk_Dop (x1) (x2) (H1) (prod) (null) (distr))) -> Proof (P (mk_Dop (x1) (x2) (H1) (prod) (null) (distr))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_15691. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $c n - d m = 1$, alors $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_15691 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15691 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : 1 = gcd n m) : ∀ c : Nat, ∀ _clearme : ex, ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1) → Eq (n * c - m * d) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_CProp2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1548$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op (x2 , a)$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op (a , x2)$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ and elements $_z1549$ of $Eq$ of $Hterm$ and $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$ to elements of $P$ of $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_CProp2 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1548 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1549 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom aop_inv_rect_CProp2 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : forall z1548 : Aop x1 x2 -> Prop, forall op : x1 -> x1 -> x1, forall _nill : forall a : x1 -> a, forall _nilr : forall a : x1 -> Eq (op x2 a) a, forall _assoc : forall a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c), forall z1549 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc), P (mk_Aop x1 x2 op _nill _nilr _assoc) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1595. Let $p , n , m \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is both equal to the greatest common divisor of $p$ and $n$ and equal to the greatest common divisor of $p$ and $m$. Then if the greatest common divisor of $p$ and the product of $n$ and $m$ is less than $1$ and $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $m$ is equal to the greatest common divisor of $p$ and $n$.\nassistant\n", "label": "axiom let_clause_1595 (p n m : Nat) (posn : 0 < n) (posm : 0 < m) (primepn : gcd p n = 1) (primepm : gcd p m = 1) (lt1gcd : 1 < gcd p (n * m)) (H : divisible (smallest_factor (gcd p (n * m))) m) : gcd p n = gcd p m", "predict": "axiom let_clause_1595 (p n m : Nat) (x : 0 < n ∧ 0 < m ∧ 1 = gcd p n ∧ 1 = gcd p m) : gcd p (n * m) < 1 ∧ divisible (smallest_factor (gcd p (n * m))) m → gcd p m = gcd p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nP_ord_to_not_eq_O. Soient $n$ et $p$ et $q$ et $r$ des nombres naturels. Alors si $1 < n$ et $p_ord (n , nth_prime (p))= mk_Prod (Nat , Nat , q , r)$, alors $r$ n'est pas égal à $0$.\nassistant\n", "label": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, forall x__ : (1 < n), forall __1 : (p_ord n (nth_prime p) = mk_Prod nat nat q r), ~ (r = 0) .", "predict": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, (1 < n /\\ p_ord (n , nth_prime (p)) = mk_Prod (Nat , Nat , q , r) -> r <> 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nChecker_spec. Soit $tl$ une liste de nombres naturels. Soit $a \\in N$. Soit $l$ une liste de nombres naturels. Supposons que $checker$ appliqué à $l$ est égal à $true$. Supposons que $l$ est égal à $cons$ appliqué à $Nat$ et $a$ et $tl$. Soit $p \\in N$. Alors pour tous les éléments $__2$ de $mem$ de $Nat$ et de $p$ et de $tl$, $ex$ tient pour $Nat$ et la fonction qui envoie $pp$ à la conjonction de la conjonction de $mem$ appliqué à $Nat$ et $pp$ et $l$ et de $Lt$ appliqué à $pp$ et $p$ et de $Leq$ appliqué à $p$ et le produit de $2$ et de $pp$.\nassistant\n", "label": "axiom checker_spec (tl : list Nat) (a : Nat) (l : list Nat) (x__ : checker l = true) (__1 : l = cons Nat a tl) (p : Nat) (__2 : mem Nat p tl) : ex Nat (λ pp => mem Nat pp l ∧ pp < p ∧ p ≤ 2 * pp)", "predict": "axiom checker_spec (tl : List Nat) (a : Nat) (l : List Nat) (x : checker l = true) (y : l = cons Nat a tl) (p : Nat) : ∀ x : mem Nat p tl, ex Nat (λ pp, and (and (mem Nat pp) (l = cons Nat a tl)) (Lt pp p) (Leq p (2 * pp)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a = 1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : Eq (gcd p m) 1) -> (z : Divisible p (times m n)) -> (c : Nat) -> (d : Eq (times m n) (times p c)) -> (a : Nat) -> (clearme0 : Elem ex (Nat -> Eq (gcd p m) (plus (minus (times a p) (times b m)) (gcd p m)) (plus (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> if (or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (if (Eq (gcd p m) (minus (times b m) (times a p))) (if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) 1)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nEq_transpose. Soient $i$ et $j$ et $k$ et $n$ des nombres naturels. Supposons que $j$ n'est pas égal à $i$. Supposons que $i$ n'est pas égal à $k$. Supposons que $j$ n'est pas égal à $k$. Alors $transpose$ appliqué à $i$ et $j$ et $n$ est égal à $transpose$ appliqué à $i$ et $k$ et $transpose$ appliqué à $k$ et $j$ et $transpose$ appliqué à $i$ et $k$ et $n$.\nassistant\n", "label": "Axiom eq_transpose : forall i : nat, forall j : nat, forall k : nat, forall n : nat, forall x__ : (~ (j = i)), forall __1 : (~ (i = k)), forall __2 : (~ (j = k)), transpose i j n = transpose i k (transpose k j (transpose i k n)) .", "predict": "Axiom eq_transpose : forall i : nat, forall j : nat, forall k : nat, forall n : nat, (j <> i -> i <> k -> j <> k -> transpose i j n = transpose i k (transpose k j (transpose i k n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n \\in N$. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a$ be a natural number. Assume that $6$ is less than or equal to $a$. Then if the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> Lt 5 n -> (m : Nat) -> Leq 6 m -> Leq (pow (plus m 1) 2) (pow 2 m) -> (a : Nat) -> Leq 6 a -> (Lt (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> all Nat (\\ x2515 -> all Nat (\\ x2516 -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_S. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $l \\in N$. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $lstar_r$ of $B$ and $R$ and $l$ and $b1$ and $b$. Let $b2$ be an element of $B$. Let $__1$ be an element of $R$ of $b$ and $b2$. Then $lstar_r$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "Axiom lstar_r_S : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b : B, forall x__ : lstar_r B R l b1 b, forall b2 : B, forall __1 : R b b2, lstar_r B R (l + 1) b1 b2 .", "predict": "Axiom lstar_r_S : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b : B, forall x : lstar_r B R l b1 b, forall b2 : B, forall x1 : R b b2, lstar_r B R (l + 1) b1 b2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1561. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c \\in N$. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Då om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med $1$, så är skillnaden mellan produkten av $p$ och $a$ och produkten av $m$ och $b$ lika med $1$.\nassistant\n", "label": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), p * a - m * b = 1 .", "predict": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ gcd p m = 1 /\\ p mod (m * n) = 0 -> forall c : nat, (m * n = p * c -> forall a : nat, forall _clearme0 : ex (Nat -> forall b : nat, Eq (p * a - m * b) (gcd p m) \\/ Eq (m * b - p * a) (gcd p m)) -> Eq (p * a - m * b) (gcd p m) -> Eq (p - m * b) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEqb_true_to_eq. For all natural numbers $n$ and $m$, if $eqb (n , m)= true$, then $n = m$.\nassistant\n", "label": "Axiom eqb_true_to_eq : forall n : nat, forall m : nat, forall x__ : (eqb n m = true), n = m .", "predict": "Axiom eqb_true_to_eq : forall n : nat, forall m : nat, (eqb n m = true -> n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMin_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $t$ et $m$ des nombres naturels. Alors si $m$ est inférieur à $t$, alors si $f$ appliqué à $m$ est égal à $true$, alors pour tous les nombres naturels $k$ et $b$, si $b$ est inférieur ou ágal à $m$, alors pour toutes les fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f$ appliqué à $i$ et de contradiction, si $t$ est égal à la somme de $k$ et de $b$, alors $min$ appliqué à $k$ et $b$ et $f$ est égal à $m$.\nassistant\n", "label": "postulate min_exists : (f : (_ : Nat) -> bool) -> (t : Nat) -> (m : Nat) -> (_ : Lt m t) -> (__1 : Eq (f m) true) -> (k : Nat) -> (b : Nat) -> (__2 : Leq b m) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> (__4 : Eq t (plus k b)) -> Eq (min k b f) m", "predict": "postulate min_exists : (f : Nat -> Bool) -> t : Nat -> m : Nat -> (Lt m t) -> (Eq (f m) True) -> all Nat (\\ k -> all Nat (\\ b -> (Leq b m) -> all Nat (\\ i -> all Leq (\\ j -> all Lt (\\ x -> Eq (f x) (contradiction))) -> Eq (t) (plus k b)) -> Eq (min k b) m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16001. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Då om $0 < m$, så om $1$ är lika med det största gemensama delaret av $n$ och $m$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $c n - d m = 1$, så är $n c - m d$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (x : 0 < n) -> (y : 0 < m) -> Eq (max_div (nd a) (nd b)) 1 -> all Nat (\\ c -> all (ex : Elem (Nat)) (\\ d -> Eq (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times n c) (times m d)) (max_div m n))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16005. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "axiom let_clause_16005 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16005 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (x : clearme : ex Nat (λ d, or (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1))) (d : Nat) (x : c * n - d * m = 1 ∨ d * m - c * n = 1) : d * m - c * n = 1 → m * d - n * c = gcd m n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n -> 0 < m -> 1 = gcd n m -> forall c : nat, forall _clearme : ex, (Nat -> disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) -> forall d : nat, (c * n - d * m = 1 \\/ d * m - c * n = 1 -> if (d * m - c * n = 1) (m * d - n * c = 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax_spec_ind. Let $_n \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions. Let $_H_found_max_spec$ be a function from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f (m)$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$. Let $_H_not_found_max_spec$ be a function from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec (_n , _f , x_976)$. Let $x_971$ be a natural number. Let $x_972$ be an element of $max_spec$ of $_n$ and $_f$ and $x_971$. Then $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "axiom max_spec_ind (_n : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) (_H_found_max_spec : (m : Nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) (_H_not_found_max_spec : (x_976 : (i : Nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)) (x_971 : Nat) (x_972 : max_spec _n _f x_971) : Q_ x_971 x_972", "predict": "axiom max_spec_ind (n : Nat) (f : Nat → Bool) (Q : Nat → max_spec n f → Nat → Prop) (H_found_max_spec : ∀ m : Nat, ∀ x : Lt m n, Eq (f m) true → ∀ i : Lt m n, Lt i m → Lt i n → Eq (f i) true → absurd → Q m (found_max_spec n f m x)) (H_not_found_max_spec : ∀ x : Nat → ∀ i : Lt i n, Eq (f i) true → absurd → Q 0 (not_found_max_spec n f x)) (x_971 : Nat) (x_972 : max_spec n f x_971) : Q x_971 x_972"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLstar_r_inv_ind. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $relation$ av $x1$. Då för alla naturliga tal $x3$, för alla element $x4$ och $x5$ av $x1$, för alla element $_Hterm$ av $lstar_r$ av $x1$ och $x2$ och $x3$ och $x4$ och $x5$, för alla funktioner $P$ från naturliga tal $_z2386$ och element $_z2385$ av $x1$ och element $_z2384$ av $x1$ till påståenden, för alla funktioner $_H1$ från element $b$ av $x1$ och element $_z2389$ av $Eq$ av $x3$ och $0$ och element $_z2388$ av $Eq$ av $x4$ och $b$ och element $_z2387$ av $Eq$ av $x5$ och $b$ till element av $P$ av $0$ och $b$ och $b$, för alla funktioner $_H2$ från naturliga tal $l$ och element $b1$ av $x1$ och element $b$ av $x1$ och element $_x_1340$ av $lstar_r$ av $x1$ och $x2$ och $l$ och $b1$ och $b$ och element $b2$ av $x1$ och element $_x_1339$ av $x2$ av $b$ och $b2$ och funktioner $_x_1342$ från element $_z2389$ av $Eq$ av $x3$ och $l$ och element $_z2388$ av $Eq$ av $x4$ och $b1$ och element $_z2387$ av $Eq$ av $x5$ och $b$ till element av $P$ av $l$ och $b1$ och $b$ och element $_z2389$ av $Eq$ av $x3$ och summan av $l$ och $1$ och element $_z2388$ av $Eq$ av $x4$ och $b1$ och element $_z2387$ av $Eq$ av $x5$ och $b2$ till element av $P$ av summan av $l$ och $1$ och $b1$ och $b2$, håller $P$ för $x3$ och $x4$ och $x5$.\nassistant\n", "label": "axiom lstar_r_inv_ind (x1 : Set) (x2 : relation x1) (x3 : Nat) (x4 x5 : x1) (_Hterm : lstar_r x1 x2 x3 x4 x5) (P : (_z2386 : Nat) -> (_z2385 : x1) -> (_z2384 : x1) -> Prop) (_H1 : (b : x1) -> (_z2389 : x3 = 0) -> (_z2388 : x4 = b) -> (_z2387 : x5 = b) -> P 0 b b) (_H2 : (l : Nat) -> (b1 : x1) -> (b : x1) -> (_x_1340 : lstar_r x1 x2 l b1 b) -> (b2 : x1) -> (_x_1339 : x2 b b2) -> (_x_1342 : (_z2389 : x3 = l) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b) -> P l b1 b) -> (_z2389 : x3 = l + 1) -> (_z2388 : x4 = b1) -> (_z2387 : x5 = b2) -> P (l + 1) b1 b2) : P x3 x4 x5", "predict": "axiom lstar_r_inv_ind (x1 : Set) (x2 : x1 → Relation) : ∀ x3 : Nat, ∀ x4 : x1, ∀ x5 : x1, ∀ Hterm : x1 → x2 → Nat → x1 → x1 → lstar_r x1 x2 x3 x4 x5 → ∀ P : Nat → x1 → x1 → Prop, ∀ b : x1, ∀ x : Eq x3 0 → ∀ y : Eq x4 b → ∀ z : Eq x5 b → P 0 b b ∧ ∀ l : Nat, ∀ b1 : x1, ∀ b : x1, ∀ x : lstar_r x1 x2 l b1 b, ∀ y : Eq x3 l, ∀ z : Eq x4 b1, ∀ w : Eq x5 b, P l b1 b ∧ P (l + 1) b1 b2 → P (l + 1) (b1 + b) (b2 + b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_73. Let $n , m , p \\in N$. Then if $0 < p$, then for all natural numbers $x134$ and $x135$ and $x136$, $x134 + (x135 + x136)= x135 + (x134 + x136)$.\nassistant\n", "label": "let_clause_73 : n : Nat -> m : Nat -> p : Nat -> posp : Lt 0 p -> x134 : Nat -> x135 : Nat -> x136 : Nat -> Eq (plus x134 (plus x135 x136)) (plus x135 (plus x134 x136)) .", "predict": "let_clause_73 : n : Elem Nat -> m : Elem Nat -> p : Elem Nat -> Proof (if (Lt (nd 0) p) (forall Nat (x134 => forall Nat (x135 => forall Nat (x136 => Eq (plus x134 (plus x135 x136)) (plus x135 (plus x134 x136)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMonotonic_lt_times_l. Let $c$ be a natural number. Assume that $0 < c$. Then $monotonic$ holds for $Nat$ and $Lt$ and the function that maps $t$ to $t \\times c$.\nassistant\n", "label": "postulate monotonic_lt_times_l : (c : Nat) -> (_ : Lt 0 c) -> monotonic Nat Lt (\\ t : Nat -> times t c)", "predict": "postulate monotonic_lt_times_l : (c : Nat) -> 0 < c -> monotonic Nat Lt (fun t -> t * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDivides_times_gcd_aux. Soit $p , m , n , d , c \\in N$. Supposons que $0 < c$. Supposons que $0 < n$. Supposons que $n \\leq m$. Alors si $n \\leq p$, alors si $d$ est divisible par $c \\times m$, alors si $d$ est divisible par $c \\times n$, alors $d$ est divisible par $c \\times gcd_aux (p , m , n)$.\nassistant\n", "label": "axiom divides_times_gcd_aux (p m n d c : Nat) (x__ : 0 < c) (__1 : 0 < n) (__2 : n ≤ m) (__3 : n ≤ p) (__4 : divisible d (c * m)) (__5 : divisible d (c * n)) : divisible d (c * gcd_aux p m n)", "predict": "axiom divides_times_gcd_aux (p m n d c : Nat) (x : 0 < c) (y : 0 < n) (z : n ≤ m) (a : n ≤ p) (b : d % (c * m) = 0) (c : d % (c * n) = 0) : d % (c * gcd_aux p m n) = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nACop_rect_Type5_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_893$ av $ACop$ av $A$ och $_nil$ till element av $Type5$. Då för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op$ applicerat på $A$ och $_nil$ och $aop$ och $a$ och $b$ och $op$ applicerat på $A$ och $_nil$ och $aop$ och $b$ och $a$ till element av $Q_$ av $mk_ACop$ applicerat på $A$ och $_nil$ och $aop$ och $_comm$, för alla element $x_893$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_893$.\nassistant\n", "label": "axiom ACop_rect_Type5_body (A : Set) (_nil : A) (Q_ : (_x_893 : ACop A _nil) -> Type5) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_893 : ACop A _nil) : Q_ x_893", "predict": "axiom cop_rect_Type5_body (A : Type) (nil : A) (Q : ∀ x : cop A nil, Type5) : ∀ H : ∀ a : Aop A nil, ∀ comm : A → A → Eq (op A nil aop) (op A nil aop a comm), ∀ x : cop A nil, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15625. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall ex : nat, forall f : nat -> Prop, forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_div_times_m. Pour tous les nombres naturels $a$ et $i$ et $m$, si $0$ est inférieur à $i$, alors si $0$ est inférieur à $m$, alors le quotient du produit de $a$ et du quotient de $m$ et de $i$ et de $m$ est inférieur ou ágal au quotient de $a$ et de $i$.\nassistant\n", "label": "postulate le_div_times_m : (a : Nat) -> (i : Nat) -> (m : Nat) -> (_ : Lt 0 i) -> (__1 : Lt 0 m) -> Leq (div (times a (div m i)) m) (div a i)", "predict": "postulate le_div_times_m : (a : Nat) -> (i : Nat) -> (m : Nat) -> 0 < i -> 0 < m -> leq (div (times a (div m i)) m) (div a i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLePsi_r2. For all natural numbers $n$, the exponentiation of $n$ and $prim$ applied to $n$ is less than or equal to the product of $Psi$ applied to $n$ and $Psi$ applied to $n$.\nassistant\n", "label": "lePsi_r2 : n : Nat -> Leq (pow n (prim n)) (times (Psi n) (Psi n)) .", "predict": "lePsi_r2 : n : Elem Nat -> Proof (Leq (pow n (prim)) (times (Psi n) (Psi n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_CProp3_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_879$ of $Aop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Aop$ be a function from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$. Then for all elements $x_879$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_879$.\nassistant\n", "label": "Axiom Aop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_879 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_879 : Aop A _nil, Q_ x_879 .", "predict": "Axiom aop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : Aop A -> _nil -> Prop, forall mk_Aop : (A -> A) -> (A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> Prop, forall op : A -> A -> A, forall _nill : A -> Eq (op _nil) (mk_Aop A _nil op _nill), forall _nilr : A -> Eq (op (mk_Aop A _nil op _nill) _nil) (mk_Aop A _nil op _nill), forall _assoc : A -> A -> A -> Eq (op (op (mk_Aop A _nil op _nill) _assoc) (mk_Aop A _nil op _nill)) (op (mk_Aop A _nil op _nill) (op _assoc _nil)), forall x_879 : Aop A, Q_ x_879 _nil ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDop_rect_Type0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_955$ de $Dop$ de $A$ et de $_nil$ à des ensembles. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$. Soit $x_955$ un élément de $Dop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_955$.\nassistant\n", "label": "Dop_rect_Type0 : A : Set -> _nil : A -> Q_ : (_x_955 : Dop A _nil -> Set) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_955 : Dop A _nil -> Q_ x_955 .", "predict": "dop_rect_Type0 : A : Elem -> Q_ : (x : Elem -> A) -> Nil : Elem -> Set -> Func -> Func -> Func -> Func -> Func -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Alors pour tous les nombres naturels $b$, si $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$, alors si $b$ est inférieur ou ágal à $n$, alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.\nassistant\n", "label": "Axiom let_clause_1063 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = j .", "predict": "Axiom let_clause_1063 : forall f : nat -> nat, forall n : nat, forall permf : Permutation f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> a : nat -> a <= n -> (f a = i -> f a = i) -> forall b : nat, (b <= n -> (f b = j -> b <= n -> (f b = j -> forall i0 : nat, forall injf : Permutation (f i0) n, (a = b -> f a = j)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1033. Soit $n$ un nombre naturel. Supposons que $1 < n$. Supposons que $2 \\times n$ est premier. Alors si $1 < 2 n$, alors pour toutes les fonctions $H1$ des nombres naturels $m$ et des éléments de $divisible$ de $m$ et de $2 \\times n$ et des éléments $__1$ de $Lt$ de $1$ et de $m$ à des éléments de $Eq$ de $m$ et de $2 \\times n$, pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (n : Nat) -> (ltn : Lt 1 n) -> (_clearme : prime (times 2 n)) -> (H : Lt 1 (times 2 n)) -> (H1 : (m : Nat) -> (_ : divisible m (times 2 n)) -> (__1 : Lt 1 m) -> Eq m (times 2 n)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (n : Nat) -> (H : 1 < n) -> (G : prime (times 2 n)) -> if (Lt 1 (times 2 n)) (forall Nat -> forall (m : divisible m (times 2 n)) -> forall (x : Lt 1 m) -> Eq m (times 2 n)) -> forall Nat -> forall Nat -> Eq (minus (plus (div x2515 x2516) (mod x2515 x2516)) x2515) x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMatch_nat. Pour tous les éléments $return_sort$ de $Sort$, pour toutes les fonctions $return_type$ des nombres naturels $z$ à des éléments de $return_sort$, pour tous les éléments $case_O$ de $return_type$ de $0$, pour toutes les fonctions $case_S$ des nombres naturels à des éléments de $return_type$ de la somme de $__$ et de $1$, pour tous les nombres naturels $z$, $return_type$ tient pour $z$.\nassistant\n", "label": "postulate match_nat : (return_sort : Sort) -> (return_type : (z : Nat) -> return_sort) -> (case_O : return_type 0) -> (case_S : (_ : Nat) -> return_type (plus __ 1)) -> (z : Nat) -> return_type z", "predict": "postulate match_nat : (return_sort : Sort) -> all return_type (Nat -> return_sort) -> all return_type (0 -> case_O) -> all return_type (Nat -> case_S (plus ... 1)) -> all Nat return_type"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15691. Soit $m , n , a , b \\in N$. Alors si $0 < n$, alors si $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$, alors si $c n - d m = 1$, alors $n c - m d = 1$.\nassistant\n", "label": "let_clause_15691 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_15691 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (and (Lt (nd 0) n) (Lt (nd 0) m)) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (ex : Elem Nat) (if (and (Eq (nd 1) (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) (forall Nat (d => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) (Eq (minus (times n c) (times m d)) (nd 1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_O_log. Let $p , n \\in N$. Then if $1$ is less than $n$, then if $p$ is less than or equal to $n$, then $0$ is less than the logarithm of $p$ and $n$.\nassistant\n", "label": "Axiom lt_O_log : forall p : nat, forall n : nat, forall x__ : (1 < n), forall __1 : Leq p n, 0 < log p n .", "predict": "Axiom lt_O_log : forall p : nat, forall n : nat, (1 < n -> p <= n -> 0 < log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLstar_r_ind_body. Låt $B$ vara en mängd. Då för alla element $_R$ av $relation$ av $B$, för alla funktioner $Q_$ från naturliga tal $x_1337$ och element $x_1336$ av $B$ och element $x_1335$ av $B$ och element $_x_1338$ av $lstar_r$ av $B$ och $_R$ och $x_1337$ och $x_1336$ och $x_1335$ till påståenden, för alla funktioner $_H_lstar_r_O$ från element $b$ av $B$ till element av $Q_$ av $0$ och $b$ och $b$ och $lstar_r_O$ applicerat på $B$ och $_R$ och $b$, för alla funktioner $_H_lstar_r_S$ från naturliga tal $l$ och element $b1$ av $B$ och element $b$ av $B$ och element $x_1340$ av $lstar_r$ av $B$ och $_R$ och $l$ och $b1$ och $b$ och element $b2$ av $B$ och element $x_1339$ av $_R$ av $b$ och $b2$ och element $_x_1342$ av $Q_$ av $l$ och $b1$ och $b$ och $x_1340$ till element av $Q_$ av summan av $l$ och $1$ och $b1$ och $b2$ och $lstar_r_S$ applicerat på $B$ och $_R$ och $l$ och $b1$ och $b$ och $x_1340$ och $b2$ och $x_1339$, för alla naturliga tal $x_1337$, för alla element $x_1336$ och $x_1335$ av $B$, för alla element $x_1338$ av $lstar_r$ av $B$ och $_R$ och $x_1337$ och $x_1336$ och $x_1335$, håller $Q_$ för $x_1337$ och $x_1336$ och $x_1335$ och $x_1338$.\nassistant\n", "label": "lstar_r_ind_body : B : Set -> _R : relation B -> Q_ : (x_1337 : Nat -> x_1336 : B -> x_1335 : B -> _x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Prop) -> _H_lstar_r_O : (b : B -> Q_ 0 b b (lstar_r_O B _R b)) -> _H_lstar_r_S : (l : Nat -> b1 : B -> b : B -> x_1340 : lstar_r B _R l b1 b -> b2 : B -> x_1339 : _R b b2 -> _x_1342 : Q_ l b1 b x_1340 -> Q_ (plus l (nd 1)) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)) -> x_1337 : Nat -> x_1336 : B -> x_1335 : B -> x_1338 : lstar_r B _R x_1337 x_1336 x_1335 -> Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "lstar_r_ind_body : (B : Elem Set) -> Proof (forall (R : Elem (Relation B)) -> forall (Q_ : (x_1337 : Elem Nat) -> (x_1336 : Elem B) -> (x_1335 : Elem B) -> (x_1338 : Elem (LStar R B)) -> R -> x_1337 -> x_1336 -> x_1335 -> Proof (forall (b : Elem B) -> Proof (forall (l : Elem Nat) -> (b_1 : Elem B) -> (x_1340 : Elem (LStar R B)) -> R -> b -> Proof (forall (b_2 : Elem B) -> Proof (forall (x_1339 : Elem (R b)) -> R b_2 -> Proof (forall (x_1342 : Elem (Q_ l b_1 b)) -> Proof (forall (x_1340 : Elem (LStar R B)) -> Proof (forall (b_2 : Elem B) -> Proof (forall (x_1339 : Elem (R b)) -> Proof (forall (x_1342 : Elem (Q_ (plus l (nd 1)) b_1 b)) -> Proof (forall (x_1340 : Elem (LStar R B)) -> Proof (forall (b_2 : Elem B) -> Proof (forall (x_1339 : Elem (R b)) -> Proof (forall (x_1342 : Elem (Q_ (plus l (nd 1)) b_1 b)) -> Proof (forall (x_1340 : Elem (LStar R B)) -> Proof (forall (b_2 : Elem B) -> Proof (forall (x_1339 : Elem (R b)) -> Proof (forall (x_1342 : Elem (Q_ (plus l (nd 1)) b_1 b)) -> Proof (forall (x_1340 : Elem (LStar R B)) -> Proof (forall (b_2 : Elem B) -> Proof (forall (x_1339 : Elem (R b)) -> Proof (forall (x_1342 : Elem (Q_ (plus l (nd 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLog_SO. Låt $n \\in N$. Anta att $1$ är mindre än $n$. Då är logaritmen av $n$ och $1$ lika med $0$.\nassistant\n", "label": "Axiom log_SO : forall n : nat, forall x__ : (1 < n), log n 1 = 0 .", "predict": "Axiom log_SO : forall n : nat, (1 < n -> log n 1 = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMonotonic_iter. Låt $g$ vara en funktion från naturliga tal till naturliga tal. Låt $a$ och $b$ och $i$ vara naturliga tal. Då för alla element $__$ av $monotonic$ av $Nat$ och $Leq$ och $g$, om $a$ är mindre än eller lika med $b$, så är $iter$ applicerat på $Nat$ och $g$ och $i$ och $a$ mindre än eller lika med $iter$ applicerat på $Nat$ och $g$ och $i$ och $b$.\nassistant\n", "label": "monotonic_iter : g : (__ : Nat -> Nat) -> a : Nat -> b : Nat -> i : Nat -> __ : monotonic Nat Leq g -> __1 : Leq a b -> Leq (iter Nat g i a) (iter Nat g i b) .", "predict": "monotonic_iter : (g : Elem (Nat -> Nat)) -> Proof (forall Nat (a => forall Nat (b => forall Nat (i => if (Leq a b) (Leq (iter Nat g i a) (iter Nat g i b))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_le_minus_r. Let $p , q , n \\in N$. Then if $q \\leq p$, then $n - p \\leq n - q$.\nassistant\n", "label": "monotonic_le_minus_r : p : Nat -> q : Nat -> n : Nat -> __ : Leq q p -> Leq (minus n p) (minus n q) .", "predict": "monotonic_le_minus_r : (p : Elem Nat) -> (q : Elem Nat) -> (n : Elem Nat) -> Proof (Leq q p) -> Proof (Leq (minus n p) (minus n q)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nInjn_Sn_n. Pour toutes les fonctions $f$ des nombres naturels à des nombres naturels, pour tous les nombres naturels $n$, pour tous les éléments $__$ de $injn$ de $f$ et de la somme de $n$ et de $1$, $injn$ tient pour $f$ et $n$.\nassistant\n", "label": "postulate injn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : injn f (plus n 1)) -> injn f n", "predict": "postulate injn_Sn_n : (f : Nat -> Nat) -> all Nat (\\ n -> all (injn f n) (\\ x -> injn f n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_16002. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$.\nassistant\n", "label": "Axiom let_clause_16002 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16002 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall _clearme : ex (Nat -> bool), _clearme (d => Eq (1 + Eq (1 - (c * n - d * m)) (1 - (d * m - c * n))) -> forall d : nat, (Eq (1 - (c * n - d * m)) 1 \\/ Eq (1 - (d * m - c * n)) 1 -> Eq (gcd m n) (m * d - n * c))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_16005. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "axiom let_clause_16005 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16005 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : 1 = gcd n m) (c : Nat) : ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1 ∧ Eq (d * m - c * n) 1) → gcd m n = m * d - n * c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16171. Let $p$ and $m$ and $n$ be natural numbers. Then if $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$, then if $p$ is divisible by $m \\times n$, then for all natural numbers $c$, if $m n = p c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "axiom let_clause_16171 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : gcd p m = m * b - p * a", "predict": "axiom let_clause_16171 (p m n : Nat) (x : 0 < p ∧ gcd p m = 1) (y : p % m * n = 0) : ∀ c : Nat, (m * n = p * c → ∀ a : Nat, ∀ _clearme0 : ex : Nat, ∀ b : Nat, (gcd p m = a * p - b * m ∨ gcd p m = b * m - a * p ∧ gcd p m = b * m - a * p → (b * m - a * p = 1 → m * b - p * a = gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_inv_rect_Type1. Let $x1 , x2 , x3 , x4 \\in N$. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Then for all functions $P$ from elements $_z1458$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type1$, for all functions $_H1$ from elements $x_831$ of $Lt$ of $x4$ and $x2$ and elements $x_830$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1459$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_831$ and $x_830$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_831$ and $x_830$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1458 : div_mod_spec x1 x2 x3 x4) -> Type1) -> (_H1 : (x_831 : Lt x4 x2) -> (x_830 : Eq x1 (plus (times x3 x2) x4)) -> (_z1459 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P Hterm", "predict": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> div_mod_spec x1 x2 x3 x4 -> all (forall (P : div_mod_spec x1 x2 x3 x4 -> Type1) -> all (forall (x_831 : Lt x4 x2) -> all (forall (x_830 : Eq x1 (plus (times x3 x2) x4)) -> all (forall (z1459 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))) -> P Hterm)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nGcd_n_n. Låt $n$ vara ett naturligt tal. Då är det största gemensama delaret av $n$ och $n$ lika med $n$.\nassistant\n", "label": "postulate gcd_n_n : (n : Nat) -> Eq (gcd n n) n", "predict": "postulate gcd_n_n : (n : Nat) -> gcd n n == n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1553. Let $n , n0 \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$. Let $a \\in N$. Then if $n0 = 2 a$ or $n0 = 2 a + 1$ and $n0 = 2 a + 1$, then $n0 = a + (a + 1)$.\nassistant\n", "label": "axiom let_clause_1553 (n n0 : Nat) (_clearme : ex Nat (λ a => n0 = 2 * a ∨ n0 = 2 * a + 1)) (a : Nat) (_clearme0 : n0 = 2 * a ∨ n0 = 2 * a + 1) (Hn : n0 = 2 * a + 1) : n0 = a + (a + 1)", "predict": "axiom let_clause_1553 (n n0 : Nat) (x : ex : Nat) (clearme : x = Eq n0 (2 * _) ∨ Eq n0 (2 * _ + 1)) (a : Nat) : n0 = 2 * a ∨ n0 = 2 * a + 1 → n0 = a + (a + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nGcd_aux. Soient $_p$ et $_m$ et $_n$ des nombres naturels. Alors $Nat$.\nassistant\n", "label": "Axiom gcd_aux : forall _p : nat, forall _m : nat, forall _n : nat, nat .", "predict": "Axiom gcd_aux : forall p : nat, forall m : nat, forall n : nat, Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c \\in N$. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the greatest common divisor of $p$ and $m$ is equal to the difference of the product of $p$ and $a$ and the product of $m$ and $b$.\nassistant\n", "label": "let_clause_1617 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (gcd p m) (minus (times p a) (times m b)) .", "predict": "let_clause_1617 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (Lt 0 p) -> Proof (Eq (Gcd p m) 1) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> $_clearme0 : Elem (ex (Nat -> Disj (Eq (minus (times a p) (times b m)) (Gcd p m)) (Eq (minus (times b m) (times a p)) (Gcd p m)))) -> b : Elem Nat -> Proof (Eq (minus (times a p) (times b m)) (or (Eq (Gcd p m) (minus (times a p) (times b m))) (Eq (Gcd p m) (minus (times b m) (times a p)))) -> Proof (if (Eq (minus (times a p) (times b m)) (Gcd p m)) (if (Eq (minus (times a p) (times b m)) 1) (Eq (Gcd p m) (minus (times p a) (times m b)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_fact_to_le. Let $p$ and $n$ be natural numbers. Assume that $p$ is prime. Then if $p$ is divisible by $n !$, then $p \\leq n$.\nassistant\n", "label": "postulate divides_fact_to_le : (p : Nat) -> (n : Nat) -> (_ : prime p) -> (__1 : divisible p (factorial n)) -> Leq p n", "predict": "postulate divides_fact_to_le : (p : Nat) -> prime p -> if (divisible p (factorial n)) (Leq p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10471. Låt $n1$ och $n2$ vara naturliga tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $_clearme0$ vara ett element av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$", "label": "let_clause_10471 : n1 : Nat -> n2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : ACop B nil -> f1 : (__ : Nat -> B) -> f2 : (__ : Nat -> B) -> _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) -> h : (__ : Nat -> Nat) -> _clearme0 : ex (prod Set Set Nat (__ : Nat => Nat)) (k : (__ : Nat -> Nat) => and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq (p1 i) true) (__1 : Eq (p1 i) true => Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> k : (__ : Nat -> Nat) -> _clearme1 : and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq", "predict": " applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $sub_ki$ applicerat på $k$ och $i$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_ki$ applicerat på $k$ och $i$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMonotonic_le_times_r. For all natural numbers $n$, $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to $n \\times m$.\nassistant\n", "label": "postulate monotonic_le_times_r : (n : Nat) -> monotonic Nat Leq (\\ m : Nat -> times n m)", "predict": "postulate monotonic_le_times_r : (n : Nat) -> monotonic Nat Leq (fun m -> n * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_m_exp_nm. Let $n , m \\in N$. Assume that $1 < n$. Then $m < n ^ m$.\nassistant\n", "label": "Axiom lt_m_exp_nm : forall n : nat, forall m : nat, forall x__ : (1 < n), m < pow n m .", "predict": "Axiom lt_m_exp_nm : forall n : nat, forall m : nat, (1 < n -> m < pow n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nTimes_times. För alla naturliga tal $x$ och $y$ och $z$, är produkten av $x$ och produkten av $y$ och $z$ lika med produkten av $y$ och produkten av $x$ och $z$.\nassistant\n", "label": "axiom times_times (x y z : Nat) : x * (y * z) = y * (x * z)", "predict": "axiom times_times (x y z : Nat) : x * (y * z) = y * (x * z)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nMax_cases. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n \\in N$. Alors $f$ appliqué à $n$ est égal à $true$ et $max$ appliqué à la somme de $n$ et de $1$ et $f$ est égal à $n$ ou $f$ appliqué à $n$ est égal à contradiction et $max$ appliqué à la somme de $n$ et de $1$ et $f$ est égal à $max$ appliqué à $n$ et $f$.\nassistant\n", "label": "axiom max_cases (f : (x__ : Nat) -> bool) (n : Nat) : f n = true ∧ max (n + 1) f = n ∨ (f n = false ∧ max (n + 1) f = max n f)", "predict": "axiom max_cases (f : Nat → Bool) (n : Nat) : f n = true ∧ max (n + 1) f = n ∨ (f n = contradiction ∧ max (n + 1) f = max n f)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDiv_mod_spec_rect_CProp5_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_841$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_843$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_842$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_843$ et $x_842$, pour tous les éléments $x_841$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_841$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp5_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_841 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_843 : _r < _m) -> (x_842 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)), forall x_841 : div_mod_spec _n _m _q _r, Q_ x_841 .", "predict": "Axiom div_mod_spec_rect_CProp5_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall Q : div_mod_spec n m q r -> Prop, forall H_div_mod_spec_intro : forall r : nat, forall m : nat, forall x_842 : Eq n (q * m + r), forall x_843 : Lt r m, forall x_841 : div_mod_spec n m q r, Q (div_mod_spec_intro n m q r x_841 x_842 x_843) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_to_mod_O. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $n$. Then if $n$ is divisible by $m$, then $mod$ applied to $m$ and $n$ is equal to $0$.\nassistant\n", "label": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : divisible n m, mod m n = 0 .", "predict": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, (0 < n -> (n mod m = 0) -> m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nMin_spec_inv_ind. Soit $x1 , x2 \\in N$. Soit $x3$ une fonction des nombres naturels à des valeurs booléennes. Soit $x4 \\in N$. Soit $_Hterm$ un élément de $min_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$. Alors pour toutes les fonctions $P$ des nombres naturels $_z1890$ à des propositions, pour toutes les fonctions $_H1$ des nombres naturels $m$ et des éléments $_x_1080$ de $Leq$ de $x2$ et de $m$ et des éléments $_x_1079$ de $Lt$ de $m$ et de la somme de $x1$ et de $x2$ et des éléments $_x_1078$ de $Eq$ de $x3$ appliqué à $m$ et de $true$ et des fonctions $_x_1077$ des nombres naturels $i$ et des éléments de $Leq$ de $x2$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $x3$ appliqué à $i$ et de contradiction et des éléments $_z1891$ de $Eq$ de $x4$ et de $m$ à des éléments de $P$ de $m$, pour toutes les fonctions $_H2$ des fonctions $_x_1081$ des nombres naturels $i$ et des éléments de $Leq$ de $x2$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de la somme de $x1$ et de $x2$ à des éléments de $Eq$ de $x3$ appliqué à $i$ et de contradiction et des éléments $_z1891$ de $Eq$ de $x4$ et de la somme de $x1$ et de $x2$ à des éléments de $P$ de la somme de $x1$ et de $x2$, $P$ tient pour $x4$.\nassistant\n", "label": "min_spec_inv_ind : x1 : Nat -> x2 : Nat -> x3 : (__ : Nat -> bool) -> x4 : Nat -> _Hterm : min_spec x1 x2 x3 x4 -> P : (_z1890 : Nat -> Prop) -> _H1 : (m : Nat -> _x_1080 : Leq x2 m -> _x_1079 : Lt m (plus x1 x2) -> _x_1078 : Eq (x3 m) true -> _x_1077 : (i : Nat -> __ : Leq x2 i -> __1 : Lt i m -> Eq (x3 i) false) -> _z1891 : Eq x4 m -> P m) -> _H2 : (_x_1081 : (i : Nat -> __ : Leq x2 i -> __1 : Lt i (plus x1 x2) -> Eq (x3 i) false) -> _z1891 : Eq x4 (plus x1 x2) -> P (plus x1 x2)) -> P x4 .", "predict": "min_spec_inv_ind : (x1 : Elem Nat) -> (x2 : Elem Nat) -> (x3 : Func Nat Bool) -> (x4 : Elem Nat) -> (Hterm : Elem (min_spec x1 x2 x3 x4)) -> Proof (forall (P : Func Nat (Proof (forall (m : Elem Nat) -> forall (x1080 : Elem (Leq x2 m)) -> forall (x1079 : Elem (Lt m x2)) -> forall (x1078 : Elem (Eq (plus x1 x2) m)) -> forall (x1077 : Elem Nat) -> forall (x1081 : Elem (Leq x2 x1081)) -> forall (x1 : Elem (Lt x1081 m)) -> forall (x1078 : Elem (Eq x3 x1081)) -> Proof (and (Proof (Proof (Proof (Proof (and (Proof (Proof (and (Proof (and (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof (and (Proof (Proof ("}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_length_to_mem. Let $n$ be a natural number. Let $l$ be a list of natural numbers. Then if $length (Nat , l)= n + 1$, then for all elements $__1$ of $unique$ of $Nat$ and $l$, for all functions $__2$ from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Leq$ of $x$ and $n$, $mem$ holds for $Nat$ and $n$ and $l$.\nassistant\n", "label": "postulate eq_length_to_mem : (n : Nat) -> (l : list Nat) -> (_ : Eq (length Nat l) (plus n 1)) -> (__1 : unique Nat l) -> (__2 : (x : Nat) -> (__2 : mem Nat x l) -> Leq x n) -> mem Nat n l", "predict": "postulate eq_length_to_mem : (n : Nat) -> (l : List Nat) -> Eq (length Nat l) (plus n 1) -> all Nat (unique l) (all Nat (mem l) (Leq _ n)) -> mem Nat n l"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nFact_pi_p. Låt $n$ vara ett naturligt tal. Då är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $bigop$ applicerat på logaritmen av $p$ och $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $p$ och kvoten av $n$ och potensen av $p$ och summan av $i$ och $1$ lika med $n !$.\nassistant\n", "label": "Axiom fact_pi_p : forall n : nat, factorial n = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p n) (fun i => true) nat 1 times (fun i => pow p (n / pow p (i + 1)))) .", "predict": "Axiom fact_pi_p : forall n : nat, bigop (plus n 1) (fun p => primeb p (Nat 1)) (times (fun p => bigop (log p n) (fun i => if (true) (pow p (n / pow p (i + 1)))))) = n ! ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nMod_times. Låt $n$ och $m$ och $p$ vara naturliga tal. Anta att $0 < p$. Då $mod (n m , p)= mod (mod (n , p)mod (m , p), p)$.\nassistant\n", "label": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), mod (n * m) p = mod (mod n p * mod m p) p .", "predict": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, (p > 0 -> mod (n * m) p = mod (mod n p * mod m p) p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLe_div. Låt $n$ och $m$ vara naturliga tal. Då om $0 < n$, så $m \\div n \\leq m$.\nassistant\n", "label": "axiom le_div (n m : Nat) (x__ : 0 < n) : m / n ≤ m", "predict": "axiom le_div (n m : Nat) (x : 0 < n) : m / n ≤ m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNot_bertrand_to_le_B. Låt $n$ vara ett naturligt tal. Anta att potensen av $2$ och $7$ är mindre än eller lika med $n$. Då för alla element $__1$ av $not_bertrand$ av $n$, är $B$ applicerat på produkten av $2$ och $n$ mindre än eller lika med produkten av potensen av $2$ och produkten av $2$ och kvoten av produkten av $2$ och $n$ och $3$ och potensen av produkten av $2$ och $n$ och $pred$ applicerat på kvoten av kvadratroten av produkten av $2$ och $n$ och $2$.\nassistant\n", "label": "axiom not_bertrand_to_le_B (n : Nat) (x__ : pow 2 7 ≤ n) (__1 : not_bertrand n) : B (2 * n) ≤ pow 2 (2 * (2 * n / 3)) * pow (2 * n) (pred (sqrt (2 * n) / 2))", "predict": "axiom not_bertrand_to_le_B (n : Nat) (x : pow 2 7 ≤ n) : ∀ __1 : not_bertrand n, B (2 * n) ≤ pow 2 (2 * n) * 3 * pow (2 * n) (pred (sqrt (pow 2 n) / 2))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nP_ord_to_exp1. Soit $p , n , q , r \\in N$. Supposons que $1 < p$. Supposons que $0 < n$. Alors si $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$, alors $p$ n'est pas divisible par $r$ et $n = p ^ q r$.\nassistant\n", "label": "axiom p_ord_to_exp1 (p n q r : Nat) (x__ : 1 < p) (__1 : 0 < n) (__2 : p_ord n p = mk_Prod Nat Nat q r) : ¬ divisible p r ∧ n = pow p q * r", "predict": "axiom p_ord_to_exp1 (p n q r : Nat) (x : 1 < p) (y : 0 < n) : p_ord (n, p) = mk_Prod Nat Nat q r → ¬ (divisible p r) ∧ n = pow p q * r"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_ord_rem. Soient $n$ et $m$ des nombres naturels. Alors si $n$ est premier et $0 < m$, alors si $n$ est divisible par $m$, alors $ord_rem (m , n)< m$.\nassistant\n", "label": "axiom lt_ord_rem (n m : Nat) (x__ : prime n) (__1 : 0 < m) (__2 : divisible n m) : ord_rem m n < m", "predict": "axiom lt_ord_rem (n m : Nat) : prime n ∧ 0 < m ∧ n % m = 0 → ord_rem m n < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLt_O_ord_rem. Soient $p$ et $n$ des nombres naturels. Supposons que $1 < p$. Supposons que $0 < n$. Alors $0 < ord_rem (n , p)$.\nassistant\n", "label": "postulate lt_O_ord_rem : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Lt 0 (ord_rem n p)", "predict": "postulate lt_O_ord_rem : (p : Nat) -> (n : Nat) -> Lt 1 p -> Lt 0 n -> Lt 0 (ord_rem n p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Alors pour tous les nombres naturels $b$, si $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$, alors si $b$ est inférieur ou ágal à $n$, alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.\nassistant\n", "label": "Axiom let_clause_1063 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = j .", "predict": "Axiom let_clause_1063 : forall f : nat -> nat, forall n : nat, forall permf : Permutation f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n /\\ f a = i -> a <= n /\\ f a = i -> forall b : nat, (b <= n /\\ f b = j -> b <= n -> f b = j -> forall i0 : nat, forall injn : Leq f i0 n -> Leq j (f i0) n -> a = b -> f a = j)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nPi_p_primeb_dividesb. Soit $n$ un nombre naturel. Supposons que $0$ est inférieur à $n$. Alors $n$ est égal à $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $p$ à $andb$ appliqué à $primeb$ appliqué à $p$ et $dividesb$ appliqué à $p$ et $n$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à la puissance de $p$ et de $ord$ appliqué à $n$ et $p$.\nassistant\n", "label": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))", "predict": "postulate pi_p_primeb_dividesb : (n : Nat) -> 0 < n -> Eq n (bigop (plus n 1) (lambda p -> andb (primeb p) (dividesb p n))) (times (pow p (ord n)) Nat 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBigop_sum. Let $k1 , k2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k1$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to the sum of $k1$ and $k2$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $bool$ and $p1$ applied to the difference of $i$ and $k2$ and $p2$ applied to $i$ and $leb$ applied to $k2$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $B$ and $f$ applied to the difference of $i$ and $k2$ and $g$ applied to $i$ and $leb$ applied to $k2$ and $i$.\nassistant\n", "label": "bigop_sum : k1 : Nat -> k2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> g : (__ : Nat -> B) -> Eq (op B nil op (bigop k1 (i : Nat => p1 i) B nil (op B nil op) (i : Nat => f i)) (bigop k2 (i : Nat => p2 i) B nil (op B nil op) (i : Nat => g i))) (bigop (plus k1 k2) (i : Nat => match_bool Set (__ : bool => bool) (p1 (minus i k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (i : Nat => match_bool Set (__ : bool => B) (f (minus i k2)) (g i) (leb k2 i))) .", "predict": "bigop_sum : (k1 : Elem Nat) -> (k2 : Elem Nat) -> Proof (forall Nat (p1 => Proof (forall Nat (p2 => Proof (forall Set (B => Proof (forall Elem (nil => Proof (forall Elem (op => Proof (forall Function (f => Proof (forall Function (g => Eq (op (B (nil)) (op (B (nil)) (bigop (k1) (fun (i => p1 (i)) (B (nil))) (op (B (nil)) (bigop (k2) (fun (i => p2 (i)) (B (nil))) (op (B (nil)) (fun (i => match_bool (Set (nd 0)) (nd 1) (p1 (minus (i) (k2)))) (nd 0) (nd 0)) (op (B (nil)) (fun (i => match_bool (Set (nd 0)) (nd 1) (p2 (i)))) (nd 0) (nd 0)) (op (B (nil)) (fun (i => match_bool (Set (nd 0)) (nd 1) (f (minus (i) (k2)))) (nd 0) (nd 0)) (bigop (k2) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) (nd 0) (nd 0)) ("}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDividesb_true_to_divides. Låt $n , m \\in N$. Anta att $dividesb (n , m)= true$. Då är $n$ delbart med $m$.\nassistant\n", "label": "dividesb_true_to_divides : n : Nat -> m : Nat -> __ : Eq (dividesb n m) true -> divisible n m .", "predict": "dividesb_true_to_divides : (n : Elem Nat) -> (m : Elem Nat) -> Proof (dividesb n m) -> Proof (divides n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nSigma_p_dividesb1. Låt $m , n , p , k \\in N$. Då om $0 < n$ och $p$ är primt, så om $p$ inte är delbart med $n$ och $m \\leq k$, så är $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $dividesb$ applicerat på potensen av $p$ och summan av $i$ och $1$ och produkten av potensen av $p$ och $m$ och $n$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $1$ lika med $m$.\nassistant\n", "label": "axiom sigma_p_dividesb1 (m n p k : Nat) (x__ : 0 < n) (__1 : prime p) (__2 : ¬ divisible p n) (__3 : m ≤ k) : m = bigop k (λ i => dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (λ i => 1)", "predict": "axiom sigma_p_dividesb1 (m n p k : Nat) (x : 0 < n ∧ p.prime ∧ ¬ p.divides n ∧ m ≤ k) : bigop k (λ i, if (p.divides (pow p (i + 1))) (dividesb (pow p (i + 1)) (pow p m * n)) Nat 0) (plus (λ i, 1)) = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nACop_inv_rect_Type1. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1590$ de $ACop$ de $x1$ et de $x2$ à des éléments de $Type1$. Soit $_H1$ une fonction des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1591$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "axiom ACop_inv_rect_Type1 (x1 : Set) (x2 : x1) (Hterm : ACop x1 x2) (P : (_z1590 : ACop x1 x2) -> Type1) (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1591 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) : P Hterm", "predict": "axiom cop_inv_rect_Type1 (x1 : Set) (x2 : x1) (Hterm : Cop x1 x2) (P : ∀ z1590 : Cop x1 x2, Type1) (H1 : ∀ aop : Aop x1 x2, ∀ comm : ∀ a : x1, ∀ b : x1, Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) → ∀ z1591 : Eq Hterm (mk Cop x1 x2 aop comm), P (mk Cop x1 x2 aop comm)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nEnum_body. För alla mängder $A$, för alla element $_xxx$ av $range$ av $A$, för alla naturliga tal $_x_942$, $A$.\nassistant\n", "label": "postulate enum_body : (A : Set) -> (_xxx : range A) -> (_x_942 : Nat) -> A", "predict": "postulate enum_body : (A : Set) -> all (range A) (\\ x -> all Nat (\\ x_942 -> A))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTech_log. Let $p , n \\in N$. Assume that $1 < p$. Assume that $0 < n$. Then $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the exponentiation of $p$ and $x$ and $n$ is equal to $\\log_ p {n}$.\nassistant\n", "label": "Axiom tech_log : forall p : nat, forall n : nat, forall x__ : (1 < p), forall __1 : (0 < n), log p n = max (n + 1) (fun x => leb (pow p x) n) .", "predict": "Axiom tech_log : forall p : nat, forall n : nat, (1 < p /\\ 0 < n -> max (n + 1) (fun x => leb (pow p x) n) = log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nFmax_false. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$, si $max (n , f)= m$ et contradiction est égal à $f (m)$, alors $m = 0$.\nassistant\n", "label": "axiom fmax_false (f : (x__ : Nat) -> bool) (n m : Nat) (x__ : max n f = m) (__1 : f m = false) : m = 0", "predict": "axiom fmax_false (f : Nat → Bool) : ∀ n : Nat, ∀ m : Nat, (max n (f n) = m ∧ contradiction = f m) → m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15622. Let $m , n , a , b \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$. Then $m d - n c = 1$.\nassistant\n", "label": "let_clause_15622 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15622 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (and (Ex (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Nat (nd 0))) -> d : Elem Nat -> Proof (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (and (Eq (minus (times d m) (times c n)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> Proof (Eq (minus (times m d) (times n c)) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1012. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , i \\in N$. Då för alla funktioner $Hind$ från naturliga tal $b$ till element av $prod$ av $Prop$ och $Prop$ och $Eq$ applicerat på $f$ applicerat på $let_m2$ applicerat på $f$ och $n$ och $i$ och $b$ och kontradiktion och funktionen som avbildar $__$ som $Eq (let_m2 (f , n , i , b), i + b)$, för alla naturliga tal $b$, om $f (b)= true$, så om kontradiktion är lika med $f (b)$, så är $true$ lika med kontradiktion.\nassistant\n", "label": "postulate let_clause_1012 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (i : Nat) -> (Hind : (b : Nat) -> prod Prop Prop (Eq (f (let_m2 f n i b)) false) (\\ _ : Eq (f (let_m2 f n i b)) false -> Eq (let_m2 f n i b) (plus i b))) -> (b : Nat) -> (fb : Eq (f b) true) -> (eqm : Eq (f b) false) -> Eq false true", "predict": "postulate let_clause_1012 : (f : Nat -> Prop) -> n : Nat -> i : Nat -> Hind Nat (prod (Prop , Prop) , Eq f (let_m2 f n i)) -> all Nat (\\ b -> if (and (if (Eq (let_m2 (f , n , i , b)) (plus i b)) (if (Eq (f b) true) (if (Eq (contradiction) (f b)) (Eq true (contradiction))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_16171. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Anta att $b m - a p = 1$. Då är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a .", "predict": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, (0 < p -> 1 = gcd p m -> p mod (m * n) = 0 -> forall c : nat, m * n = p * c -> forall a : nat, forall ex : Prop, (forall b : nat, (gcd p m = a * p - b * m \\/ gcd p m = b * m - a * p) -> (gcd p m = b * m - a * p) -> 1 = b * m - a * p -> m * b - p * a = gcd p m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_plus_minus_m_m. Soient $n$ et $m$ des nombres naturels. Alors $n \\leq n - m + m$.\nassistant\n", "label": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m", "predict": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_exp1. Let $p$ and $n$ and $q$ and $r$ be natural numbers. Assume that $0 < p$ and $p$ is not divisible by $r$. Then if $n = p ^ q r$, then $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$.\nassistant\n", "label": "postulate p_ord_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 0 p) -> (__1 : not (divisible p r)) -> (__2 : Eq n (times (pow p q) r)) -> Eq (p_ord n p) (mk_Prod Nat Nat q r)", "predict": "postulate p_ord_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> and (Lt 0 p) (not (divisible p r)) -> Eq n (pow p q * r) -> p_ord (n , p) = mk_Prod (Nat , Nat , q , r)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15601. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Assume that $0$ is divisible by $m$. Let $q$ be a natural number. Assume that $m$ is equal to the product of $0$ and $q$. Then $n$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_15601 (n m : Nat) (posn : 0 < m) (eqn0 : 0 = n) (_clearme : divisible 0 m) (q : Nat) (eqm : m = 0 * q) : n = 0", "predict": "axiom let_clause_15601 (n m q : Nat) (x : 0 < m) (y : 0 = n) (z : 0 % m = 0) (w : m = 0 * q) : n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.\nassistant\n", "label": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i", "predict": "postulate let_clause_1068 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> (i : Nat) -> (j : Nat) -> Leq n i -> Leq n j -> a : Nat -> Leq n a -> Eq i (f a) -> Leq n a -> Eq i (f a) -> b : Nat -> Leq n b -> Eq j (f b) -> Leq n b -> Eq j (f b) -> Eq b j -> all (Nat -> Eq i (f a)) (Leq n i) -> all (Nat -> Eq j (f b)) (Leq n j) -> all (Leq n a) -> all (Leq n b) -> Eq a b -> Eq i (f a)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDop_rect_Type4_body. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_945$ de $Dop$ de $A$ et de $_nil$ à des éléments de $Type4$, pour toutes les fonctions $_H_mk_Dop$ des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$, pour tous les éléments $x_945$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_945$.\nassistant\n", "label": "Axiom Dop_rect_Type4_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_945 : Dop A _nil) -> Type4), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_945 : Dop A _nil, Q_ x_945 .", "predict": "Axiom dop_rect_Type4_body : forall A : Type, forall _nil : A, forall Q_ : forall x_945 : Dop A _nil, forall _H_mk_Dop : forall sum : ACop A _nil, forall prod : A -> _1 : A -> A, forall _null : forall a : A, Eq (prod a _nil) _nil, forall _distr : forall a : A, forall b : A, forall c : A, Eq (prod (a, aop__o__op (A, _nil, sum, b, c)) (aop__o__op (A, _nil, sum, prod (a, b), prod (a, c)))) (Q_ (mk_Dop (A, _nil, sum, prod, _null, _distr))) -> forall x_945 : Dop A _nil, Q_ x_945 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nRange_rect_Type0_body. Soit $_A$ un ensemble. Soit $Q_$ une fonction des éléments $_x_927$ de $range$ de $_A$ à des ensembles. Soit $_H_mk_range$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range$ appliqué à $_A$ et $_enum$ et $_upto$ et $_filter$. Alors pour tous les éléments $x_927$ de $range$ de $_A$, $Q_$ tient pour $x_927$.\nassistant\n", "label": "postulate range_rect_Type0_body : (_A : Set) -> (Q_ : (_x_927 : range _A) -> Set) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_927 : range _A) -> Q_ x_927", "predict": "postulate range_rect_Type0_body : (A : Set) -> (Q : range A -> Set) -> (H : mk_range A (enum _) (upto _) (filter _)) -> all (range A) Q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1561. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Då om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$, så om $a p - b m = 1$, så $p a - m b = 1$.\nassistant\n", "label": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), p * a - m * b = 1 .", "predict": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, (0 < p -> 1 = gcd p m -> p % m * n -> forall c : nat, m * n = p * c -> forall a : nat, forall _clearme0 : ex (Nat -> (b : nat -> Eq (gcd p m) (a * p - b * m) /\\ Eq (gcd p m) (b * m - a * p))) -> forall b : nat, (gcd p m = a * p - b * m \\/ gcd p m = b * m - a * p -> Eq (gcd p m) (a * p - b * m) -> Eq (p * a - m * b) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nRange_inv_rect_Type1. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Alors pour toutes les fonctions $P$ des éléments $_z1656$ de $range$ de $x1$ à des éléments de $Type1$, pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1657$ de $Eq$ de $Hterm$ et de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$ à des éléments de $P$ de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$, $P$ tient pour $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_Type1 (x1 : Set) (Hterm : range x1) (P : (_z1656 : range x1) -> Type1) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1657 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_Type1 (x1 : Type) (Hterm : x1) : ∀ P : ∀ z1656 : range x1 → Type1, ∀ H1 : ∀ n : Nat, enum n → x1 × Nat → bool, ∀ z1657 : Eq Hterm (mk_range x1 (enum n) (upto m) (filter p)) → P (mk_range x1 (enum n) (upto m) (filter p)) Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLeb_true_to_le. Låt $n , m \\in N$. Anta att $leb (n , m)= true$. Då $n \\leq m$.\nassistant\n", "label": "Axiom leb_true_to_le : forall n : nat, forall m : nat, forall x__ : (leb n m = true), Leq n m .", "predict": "Axiom leb_true_to_le : forall n : nat, forall m : nat, (leb n m = true -> n <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_ind_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "axiom Dop_ind_body (A : Set) (_nil : A) (Q_ : (_x_943 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_943 : Dop A _nil) : Q_ x_943", "predict": "axiom dop_ind_body (A : Set) (nil : A) (Q_ : Dop A nil → Prop) : ∀ H : ACop A nil → ∀ prod : A → A → A → ∀ null : A → Eq (prod (nil, null)) nil → ∀ distr : A → A → A → Eq (prod (distr (nil, _, _), (nil, _, _))) → Q_ (mk_Dop A nil H prod null distr) → ∀ x : Dop A nil, Q_ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLength_unique_le. For all natural numbers $n$, for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, $length (Nat , l)\\leq n$.\nassistant\n", "label": "postulate length_unique_le : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> Leq (length Nat l) n", "predict": "postulate length_unique_le : (n : Nat) -> (l : List Nat) -> all (unique Nat) l -> all (mem Nat) n l -> all (Lt Nat) n (length Nat l)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLe_max_f_max_g. Låt $f$ och $g$ vara funktioner från naturliga tal till sanningsvärden. Låt $n$ vara ett naturligt tal. Låt $__$ vara en funktion från naturliga tal $i$ och element av $Lt$ av $i$ och $n$ och element $__1$ av $Eq$ av $f (i)$ och $true$ till element av $Eq$ av $g (i)$ och $true$. Då $max (n , f)\\leq max (n , g)$.\nassistant\n", "label": "le_max_f_max_g : f : (__ : Nat -> bool) -> g : (__ : Nat -> bool) -> n : Nat -> __ : (i : Nat -> __ : Lt i n -> __1 : Eq (f i) true -> Eq (g i) true) -> Leq (max n f) (max n g) .", "predict": "le_max_f_max_g : (f : Elem (Nat -> Bool)) -> (g : Elem (Nat -> Bool)) -> Proof (forall Nat (n => Proof (forall (i : Nat) -> Proof (forall (x : Eq (f i) (nd 1)) -> Eq (g i) (nd 1))) => Leq (max n f) (max n g))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Assume that $b$ is less than or equal to $n$. Then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (Leq i n /\\ Leq j n -> forall a : nat, (Leq a n /\\ (f a = i) /\\ Leq a n /\\ (f a = i)) -> forall b : nat, (Leq b n /\\ (f b = j) /\\ Leq b n -> (f b = j -> forall i0 : nat, forall injf : Leq i0 n, forall f_inj : Leq (f i0) (n), a = b -> f a = i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nMax_spec_to_max. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Då för alla element $__$ av $max_spec$ av $n$ och $f$ och $m$, är $max$ applicerat på $n$ och $f$ lika med $m$.\nassistant\n", "label": "Axiom max_spec_to_max : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall x__ : max_spec n f m, max n f = m .", "predict": "Axiom max_spec_to_max : forall f : nat -> Prop, forall n m : nat, forall x : max (n, f) m, max n (f x) = m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nEq_fact_B. Soit $n$ un nombre naturel. Supposons que $1 < n$. Alors $(2 n)! = n ! ^ 2 B (2 n)$.\nassistant\n", "label": "axiom eq_fact_B (n : Nat) (x__ : 1 < n) : factorial (2 * n) = pow (factorial n) 2 * B (2 * n)", "predict": "axiom eq_fact_B (n : Nat) (x : 1 < n) : (2 * n).factorial = pow (n.factorial) 2 * B (2 * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nBigop_commute. Soient $n$ et $m$ des nombres naturels. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Alors pour toutes les fonctions $p22$ des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes, pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $ACop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, si $0 < n$ et $0 < m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb (p11 (i), p12 (i , j))$ et de $andb (p21 (j), p22 (i , j))$, $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$.\nassistant\n", "label": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))", "predict": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : Nat -> Bool) -> (p12 : Nat -> Nat -> Bool) -> (p21 : Nat -> Bool) -> (p22 : Nat -> Nat -> Bool) -> Eq (bigop m (fun j -> p21 j) B nil (aop__o__op B nil op (fun j -> bigop n (fun i -> p22 i j) B nil (aop__o__op B nil op (fun i -> f i j)))) (bigop n (fun i -> p11 i) B nil (aop__o__op B nil op (fun i -> bigop m (fun j -> p12 (i, j)) B nil (aop__o__op B nil op (fun j -> f i j)))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nACop_rect_CProp0_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_913$ de $ACop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$. Soit $x_913$ un élément de $ACop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_913$.\nassistant\n", "label": "Axiom ACop_rect_CProp0_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_913 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_913 : ACop A _nil, Q_ x_913 .", "predict": "Axiom ACop_rect_CProp0_body : forall A : Type, forall _nil : A, forall Q_ : forall x : ACop A _nil, Prop, forall H_mk_ACop : forall aop : Aop A _nil, forall comm : forall a : A, forall b : A, Eq (op A _nil aop a) (op A _nil aop b) /\\ Eq (op A _nil aop b) (op A _nil aop a) -> Q_ (mk_ACop A _nil aop comm), forall x_913 : ACop A _nil, Q_ x_913 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDiv_mod_spec_rect_CProp5. Låt $_n , _m , _q , _r \\in N$. Då för alla funktioner $Q_$ från element $_x_841$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden, för alla funktioner $_H_div_mod_spec_intro$ från element $x_843$ av $Lt$ av $_r$ och $_m$ och element $x_842$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_843 , x_842)$, för alla element $x_841$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_841$.\nassistant\n", "label": "div_mod_spec_rect_CProp5 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_841 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_843 : Lt _r _m -> x_842 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> x_841 : div_mod_spec _n _m _q _r -> Q_ x_841 .", "predict": "div_mod_spec_rect_CProp5 : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Proof (forall (Q_ : Elem (div_mod_spec n m q r) -> Prop) -> forall (H_div_mod_spec_intro : Elem (Lt r m) -> Elem (Eq n (q * m + r))) -> forall (x_841 : Elem (div_mod_spec n m q r)) -> Q_ (div_mod_spec_intro n m q r (Lt r m) (Eq n (q * m + r))) x_841) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15625. Pour tous les nombres naturels $m$ et $n$ et $a$ et $b$, si $0 < n$, alors si $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$, alors si $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "let_clause_15625 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15625 : (m : Elem Nat) -> (n : Elem Nat) -> (a : Elem Nat) -> (b : Elem Nat) -> Proof (if (if (Lt (nd 0) n) (if (Lt (nd 0) m) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (x : Elem ex) (if (and (Eq (nd 1) (or (Eq (nd 1) (minus (times c n) (times d m))) (Eq (nd 1) (minus (times d m) (times c n))))) (if (Eq (nd 1) (minus (times d m) (times c n))) (Eq (minus (times m d) (times n c)) (nd 1))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nS_pred. Låt $n$ vara ett naturligt tal. Anta att $0 < n$. Då $pred (n)+ 1 = n$.\nassistant\n", "label": "axiom S_pred (n : Nat) (x__ : 0 < n) : pred n + 1 = n", "predict": "axiom s_pred (n : Nat) (x : 0 < n) : pred n + 1 = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_16004. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "axiom let_clause_16004 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16004 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (clearme : ex Nat → Nat → Prop) (d : Nat) : c * n - d * m = 1 ∨ d * m - c * n = 1 → (d * m - c * n = 1 → gcd m n = m * d - n * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_Sn_m. Let $m , n \\in N$. Assume that $m$ is less than or equal to $n$. Then the difference of the sum of $n$ and $1$ and $m$ is equal to the sum of the difference of $n$ and $m$ and $1$.\nassistant\n", "label": "minus_Sn_m : m : Nat -> n : Nat -> __ : Leq m n -> Eq (minus (plus n (nd 1)) m) (plus (minus n m) (nd 1)) .", "predict": "minus_Sn_m : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Leq m n) -> Proof (Eq (minus (plus n 1) m) (plus (minus n m) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLprim. Låt $__$ och $__1$ vara naturliga tal. Låt $__2$ vara en lista av naturliga tal. Då håller $list$ för $Nat$.\nassistant\n", "label": "axiom lprim (x__ __1 : Nat) (__2 : list Nat) : list Nat", "predict": "axiom lprim (x y : Nat) (l : List Nat) : Type := List Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBijn_fg. Let $f$ and $g$ be functions from natural numbers to natural numbers. Let $n \\in N$. Let $__$ be an element of $bijn$ of $f$ and $n$. Let $__1$ be an element of $bijn$ of $g$ and $n$. Then $bijn$ holds for the function that maps $p$ to $f$ applied to $g$ applied to $p$ and $n$.\nassistant\n", "label": "postulate bijn_fg : (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f n) -> (__1 : bijn g n) -> bijn (\\ p : Nat -> f (g p)) n", "predict": "postulate bijn_fg : (f : Nat -> Nat) -> (g : Nat -> Nat) -> Nat -> Bijection (f n) -> Bijection (g n) -> Bijection (λ p -> f (g p) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLt_O_theta. Låt $n$ vara ett naturligt tal. Då $0 < theta (n)$.\nassistant\n", "label": "lt_O_theta : n : Nat -> Lt 0 (theta n) .", "predict": "Lt_O_theta : n : Elem Nat -> Proof (0 < (theta n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1575. Let $m , n , a , b \\in N$. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.\nassistant\n", "label": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) .", "predict": "let_clause_1575 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (Lt (nd 0) n) (if (Lt (nd 0) m) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (ex : Elem Nat) => forall (d => if (or (Eq (nd 1) (minus (times c n) (times d m))) (Eq (nd 1) (minus (times d m) (times c n)))) (forall Nat (d => if (or (Eq (nd 1) (minus (times c n) (times d m))) (Eq (nd 1) (minus (times d m) (times c n))))))))) (forall Nat (x1029 => Eq x1029 (minus (times n c) (times m d)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_pi. Soit $n \\in N$. Alors pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, pour toutes les fonctions $g1$ et $g2$ des nombres naturels à des nombres naturels, pour toutes les fonctions $__$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n$ et des éléments $__1$ de $Eq$ de $p (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$ est inférieur ou ágal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$.\nassistant\n", "label": "axiom le_pi (n : Nat) (p : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p i = true) -> g1 i ≤ g2 i) : bigop n (λ i => p i) Nat 1 times (λ i => g1 i) ≤ bigop n (λ i => p i) Nat 1 times (λ i => g2 i)", "predict": "axiom le_pi (n : Nat) : ∀ p : Nat → Prop, ∀ g1 : Nat → Nat, ∀ g2 : Nat → Nat, ∀ i : Nat, ∀ Lt : i ≤ n, ∀ Eq : p i = true, ∀ Leq : g1 i ≤ g2 i, bigop n (λ i, p i) Nat 1 (×) (λ i, g2 i) ≤ bigop n (λ i, p i) Nat 1 (×) (λ i, g1 i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nBc1. Pour tous les nombres naturels $n$ et $k$, si $k < n$, alors $bc (n + 1 , k + 1)= bc (n , k)+ bc (n , k + 1)$.\nassistant\n", "label": "bc1 : n : Nat -> k : Nat -> __ : Lt k n -> Eq (bc (plus n (nd 1)) (plus k (nd 1))) (plus (bc n k) (bc n (plus k (nd 1)))) .", "predict": "bc1 : (n : Elem Nat) -> (k : Elem Nat) -> Proof (Lt k n) -> Proof (Eq (bc (plus n 1) (plus k 1)) (plus (bc n k) (bc n (plus k 1)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1746$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1747$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1746 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1747 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "dop_inv_rect_CProp2 : (x1 : Elem) -> Proof (forall (x2 : Elem (x1)) -> forall (Hterm : Elem (Dop (x1) (x2))) -> forall (P : (z1746 : Elem (Dop (x1) (x2))) -> Prop) -> forall (H1 : (sum : Elem (ACop (x1) (x2))) -> (prod : (z : Elem (x1)) -> Elem (x1)) -> (a : Elem (x1)) -> Eq (prod a (x2)) (Eq (prod a (x2))) -> (distr : (a : Elem (x1)) -> (b : Elem (x1)) -> (c : Elem (x1)) -> Eq (prod (a (aop__o__op (x1) (x2) sum)) b c) (Eq (prod a (aop__o__op (x1) (x2) sum)) (prod a b) (prod a c))) -> P (Hterm (mk_Dop (x1) (x2) sum prod _null distr))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "let_clause_15623 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15623 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (forall Nat (d => or (and (Eq (minus (times c n) (times d m)) (nd 1)) (and (Eq (minus (times d m) (times c n)) (nd 1))))) -> Proof (forall Nat (d => if (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (and (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times m d) (times n c)) (nd 1)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nMax_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$, si $m < n$, alors si $f (m)= true$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des éléments $__2$ de $Lt$ de $m$ et de $i$ et des éléments $__3$ de $Lt$ de $i$ et de $n$ à des éléments de $Eq$ de $f (i)$ et de contradiction, $max (n , f)= m$.\nassistant\n", "label": "max_exists : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> __ : Lt m n -> __1 : Eq (f m) true -> __2 : (i : Nat -> __2 : Lt m i -> __3 : Lt i n -> Eq (f i) false) -> Eq (max n f) m .", "predict": "max_exists : (f : Elem (Nat -> Bool)) -> Proof (forall Nat (n => forall Nat (m => (Lt m n => (Lt m n => (Eq (f m) true) => forall (Lt (nd 2) (n => forall (Lt (nd 3) (n => (Eq (f (nd 3)) (nd 2)) => (Eq (max n (f (nd 2))) m))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1562. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$. Då är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.\nassistant\n", "label": "postulate let_clause_1562 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1", "predict": "postulate let_clause_1562 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> (c : Nat) -> ex Nat (\\ d -> or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> Eq (minus (times n c) (times m d)) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nBigop_prod. Soit $k1 , k2 \\in N$. Soit $p1$ une fonction des nombres naturels à des valeurs booléennes. Soit $p2$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $Aop$ de $B$ et de $nil$. Soit $f$ une fonction des nombres naturels et des nombres naturels $__1$ à des éléments de $B$. Alors $bigop$ appliqué à $k1$ et la fonction qui envoie $x$ à $p1$ appliqué à $x$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $x$ à $bigop$ appliqué à $k2$ et la fonction qui envoie $i$ à $p2$ appliqué à $x$ et $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $x$ et $i$ est égal à $bigop$ appliqué à le produit de $k1$ et de $k2$ et la fonction qui envoie $i$ à $andb$ appliqué à $p1$ appliqué à le quotient de $i$ et de $k2$ et $p2$ appliqué à le quotient de $i$ et de $k2$ et $mod$ appliqué à $i$ et $k2$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à le quotient de $i$ et de $k2$ et $mod$ appliqué à $i$ et $k2$.\nassistant\n", "label": "bigop_prod : k1 : Nat -> k2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> __1 : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> __1 : Nat -> B) -> Eq (bigop k1 (x : Nat => p1 x) B nil (op B nil op) (x : Nat => bigop k2 (i : Nat => p2 x i) B nil (op B nil op) (i : Nat => f x i))) (bigop (times k1 k2) (i : Nat => andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (i : Nat => f (div i k2) (mod i k2))) .", "predict": "bigop_prod : (k1 : Elem Nat) -> (k2 : Elem Nat) -> (p1 : Nat -> Bool) -> (p2 : (x : Elem Nat) -> (y : Elem Nat) -> Bool) -> (B : Set) -> (nil : Elem B) -> (op : Elem (Aop B nil)) -> (f : (x : Elem Nat) -> (y : Elem Nat) -> Elem B) -> Proof (bigop k1 (fun x => p1 x) B nil op (B nil op) (fun x => bigop k2 (fun i => p2 x i) B nil op (B nil op) (fun i => f (div i k2) (mod i k2)) = bigop (times k1 k2) (fun i => andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil op (B nil op) (fun i => f (div i k2) (mod i k2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_15591. Låt $n , m \\in N$. Anta att $0 < m$. Anta att $0 = n$. Då om $0$ är delbart med $m$, så för alla naturliga tal $q$, om $m = 0 q$, så $m = n$.\nassistant\n", "label": "postulate let_clause_15591 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m n", "predict": "postulate let_clause_15591 : (n : Nat) -> (m : Nat) -> 0 < m -> 0 == n -> if (divides 0 m) (all Nat (\\ q -> if (Eq m (times q 0)) (Eq m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLt_min_to_false. För alla funktioner $f$ från naturliga tal till sanningsvärden, för alla naturliga tal $n$ och $m$ och $b$, om $b \\leq m$, så om $m < min (n , b , f)$, så är kontradiktion lika med $f (m)$.\nassistant\n", "label": "axiom lt_min_to_false (f : (x__ : Nat) -> bool) (n m b : Nat) (x__ : b ≤ m) (__1 : m < min n b f) : f m = false", "predict": "axiom lt_min_to_false (f : Nat → Bool) (n m b : Nat) (x : b ≤ m) (y : m < min n b (f m)) : contradiction = f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLstar_dx. Soit $B$ un ensemble. Soit $R$ un élément de $relation$ de $B$. Soit $l \\in N$. Soient $b1$ et $b$ des éléments de $B$. Soit $__$ un élément de $lstar$ de $B$ et de $R$ et de $l$ et de $b1$ et de $b$. Alors pour tous les éléments $b2$ de $B$, pour tous les éléments $__1$ de $R$ de $b$ et de $b2$, $lstar$ tient pour $B$ et $R$ et $l + 1$ et $b1$ et $b2$.\nassistant\n", "label": "lstar_dx : B : Set -> R : relation B -> l : Nat -> b1 : B -> b : B -> __ : lstar B R l b1 b -> b2 : B -> __1 : R b b2 -> lstar B R (plus l (nd 1)) b1 b2 .", "predict": "lstar_dx : (B : Elem Set) -> (R : Elem (Relation B)) -> (l : Elem Nat) -> (b1 : Elem B) -> (b : Elem B) -> Elem (LStar B R l b1 b) -> Proof (forall (b2 : Elem B) -> forall (___1 : Elem (R b b2)) -> LStar B R (plus l 1) b1 b2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $permf$ of $permut$ of $f$ and $n$, for all natural numbers $i$ and $j$, if $i \\leq n$ and $j \\leq n$, then for all natural numbers $a$, if $a \\leq n$ and $f (a)= i$ and $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$ and $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (i <= n /\\ j <= n -> forall a : nat, (a <= n /\\ f a = i /\\ a <= n -> (f a = i -> forall b : nat, (b <= n /\\ f b = j /\\ b <= n -> (f b = j -> forall i0 : nat, forall x : Leq i0 n, forall y : Leq (f i0) n, (a = b -> f a = i))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15691. Let $m , n , a , b \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_15691 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15691 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : gcd n m = 1) (c : Nat) (x : ex : Nat → Prop) : ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1 ∧ Eq (c * n - d * m) 1) → Eq (n * c - m * d) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFound_min_spec. Let $n$ and $b$ be natural numbers. Let $f$ be a function from natural numbers to booleans. Let $m$ be a natural number. Assume that $b$ is less than or equal to $m$. Then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "Axiom found_min_spec : forall n : nat, forall b : nat, forall f : ((x__ : nat) -> bool), forall m : nat, forall x__ : Leq b m, forall __1 : (m < n + b), forall __2 : (f m = true), forall __3 : ((i : nat) -> (__3 : Leq b i) -> (__4 : i < m) -> f i = false), min_spec n b f m .", "predict": "Axiom found_min_spec : forall n : nat, forall b : nat, forall f : nat -> bool, forall m : nat, (b <= m -> (m < n + b -> f m = true -> forall g : nat -> Leq b (g) -> Lt g m -> Eq (f g) absurdity) -> min_spec n b f m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z677$ to elements of $Type1$. Let $_H1$ be a function from elements $_z678$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Let $_H2$ be a function from natural numbers $x_386$ and functions $_x_388$ from elements $_z678$ of $Eq$ of $Hterm$ and $x_386$ to elements of $P$ of $x_386$ and elements $_z678$ of $Eq$ of $Hterm$ and the sum of $x_386$ and $1$ to elements of $P$ of the sum of $x_386$ and $1$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : Nat → Type1) (H1 : Eq Hterm 0 → P 0) (H2 : ∀ x : Nat, ∀ h : Eq Hterm x, P x → P (x + 1)) : ∀ x : Nat, P x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nTrue_to_le_min. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$ et $b$, si $b \\leq m$ et $f (m)= true$, alors $min (n , b , f)\\leq m$.\nassistant\n", "label": "Axiom true_to_le_min : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall b : nat, forall x__ : Leq b m, forall __1 : (f m = true), Leq (min n b f) m .", "predict": "Axiom true_to_le_min : forall f : nat -> bool, forall n : nat, forall m : nat, forall b : nat, (b <= m /\\ f m = true -> min n b f <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nP_ord_O_to_not_divides. Soient $n$ et $i$ et $r$ des nombres naturels. Alors si $0$ est inférieur à $n$, alors si $p_ord$ appliqué à $n$ et $nth_prime$ appliqué à $i$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $0$ et $r$, alors $nth_prime$ appliqué à $i$ n'est pas divisible par $n$.\nassistant\n", "label": "axiom p_ord_O_to_not_divides (n i r : Nat) (x__ : 0 < n) (__1 : p_ord n (nth_prime i) = mk_Prod Nat Nat 0 r) : ¬ divisible (nth_prime i) n", "predict": "axiom p_ord_O_to_not_divides (n i r : Nat) : 0 < n → p_ord n (nth_prime i) = mk_Prod Nat Nat 0 r → ¬ (divisible (nth_prime i) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nFound_max_spec. Soit $n \\in N$. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $m$ un nombre naturel. Supposons que $m < n$. Supposons que $f (m)= true$. Alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des éléments $__2$ de $Lt$ de $m$ et de $i$ et des éléments $__3$ de $Lt$ de $i$ et de $n$ à des éléments de $Eq$ de $f (i)$ et de contradiction, $max_spec$ tient pour $n$ et $f$ et $m$.\nassistant\n", "label": "found_max_spec : n : Nat -> f : (__ : Nat -> bool) -> m : Nat -> __ : Lt m n -> __1 : Eq (f m) true -> __2 : (i : Nat -> __2 : Lt m i -> __3 : Lt i n -> Eq (f i) false) -> max_spec n f m .", "predict": "found_max_spec : (n : Elem Nat) -> (f : Proof (forall Nat (x => Proof (bool x))) -> (m : Elem Nat) -> Proof (and (Lt m n) (f m = true))) -> Proof (forall (x : Proof (forall Nat (i => forall (y : Proof (in Lt m i)) => forall (z : Proof (in Lt i n)) => Proof (Eq (f i) contradiction))) => max_spec n f m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBertrand. Let $n \\in N$. Then if $0 < n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "bertrand : n : Nat -> __ : Lt 0 n -> bertrand n .", "predict": "bertrand : (n : Elem Nat) -> Proof (if (Lt (nd 0) n) (Holds bertrand n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_Psi_exp1. För alla naturliga tal $n$, $Psi (2 ^ n)\\leq 2 ^ (2 (2 ^ n)- n + 2)$.\nassistant\n", "label": "Axiom le_Psi_exp1 : forall n : nat, Leq (Psi (pow 2 n)) (pow 2 (2 * pow 2 n - (n + 2))) .", "predict": "Axiom le_Psi_exp1 : forall n : nat, Psi (pow 2 n) <= pow 2 (2 * pow 2 n - n + 2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15611. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale à $1$. Alors la différence du produit de $m$ et de $b$ et du produit de $p$ et de $a$ est égale à $1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n) == 0) -> (c : Nat) -> (t : m * n == p * c) -> (a : Nat) -> (clearme0 : Elem (ex (Nat , (b => Eq (gcd p m) (if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (Eq (minus (times b m) (times a p)) 1))) b)) -> (b : Nat) -> (H : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H1 : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H2 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1033. Soit $n \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1$ un nombre naturel. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$ et des fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n1$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$. Soit $H1$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$. Soit $H2$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$. Supposons que $p2 (n1)= true$ et $p1 (n1)= true$. Soit $x2515 , x2516 \\in N$. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (n1 : Nat) (Hind : (x__ : (i : Nat) -> (x__ : i < n1) -> (__1 : p1 i = true) -> p2 i = true) -> (__1 : (i : Nat) -> (__1 : i < n1) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) -> bigop n1 (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n1 (λ i => p2 i) Nat 0 plus (λ i => g2 i)) (H1 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> p2 i = true) (H2 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> g1 i ≤ g2 i) (Hp2 : p2 n1 = true) (Hp1 : p1 n1 = true) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (p1 p2 : Nat → Prop) (g1 g2 : Nat → Nat) (n1 : Nat) (Hind : ∀ i : Nat, ∀ x : Lt i n1, Eq p1 i true → Eq p2 i true → Leq (g1 i) (g2 i)) (H1 : ∀ i : Nat, ∀ x : Lt i (n1 + 1), Eq p1 i true → Eq p2 i true) (H2 : ∀ i : Nat, ∀ x : Lt i (n1 + 1), Eq p1 i true → Leq (g1 i) (g2 i)) (x2515 x2516 : Nat) : p2 n1 ∧ p1 n1 → x2515 = x2516 (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a$ vara ett naturligt tal. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Anta att $b \\leq n$ och $f (b)= j$. Anta att $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Låt $injf$ vara ett element av $injn$ av $f$ och $n$. Anta att $a = b$. Då $f (a)= j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> Proof (and (Leq i n) (Leq j n)) -> a : Elem Nat -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (Leq a n) -> Proof (Eq (f a) i) -> b : Elem Nat -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (Leq b n) -> Proof (Eq (f b) j) -> Proof (and (Leq (f a) n) (Eq (f a) (f b))) -> injf : Elem (f -> Leq n -> Leq (f n) n) -> Proof (Eq (f a) (f b)) -> Proof (Eq (f a) j) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15321. Let $n , m \\in N$. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Then if $0$ is divisible by $m$, then for all natural numbers $q$, if $m$ is equal to the product of $0$ and $q$, then $m$ is equal to $0$.\nassistant\n", "label": "Axiom let_clause_15321 : forall n : nat, forall m : nat, forall posn : (0 < m), forall eqn0 : (0 = n), forall _clearme : divisible 0 m, forall q : nat, forall eqm : (m = 0 * q), m = 0 .", "predict": "Axiom let_clause_15321 : forall n : nat, forall m : nat, (0 < m /\\ 0 = n -> (0 mod m -> forall q : nat, (m = 0 * q -> m = 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nBinomial_law. Låt $a , b , n \\in N$. Då är potensen av summan av $a$ och $b$ och $n$ lika med $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $k$ som $true$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $k$ som produkten av produkten av $bc$ applicerat på $n$ och $k$ och potensen av $a$ och skillnaden mellan $n$ och $k$ och potensen av $b$ och $k$.\nassistant\n", "label": "postulate binomial_law : (a : Nat) -> (b : Nat) -> (n : Nat) -> Eq (pow (plus a b) n) (bigop (plus n 1) (\\ k : Nat -> true) Nat 0 plus (\\ k : Nat -> times (times (bc n k) (pow a (minus n k))) (pow b k)))", "predict": "postulate binomial_law : (a : Nat) -> (b : Nat) -> (n : Nat) -> Eq (pow (plus a b) n) (bigop (plus n 1) (λ k -> if (and (Eq k 0) (Nat 0)) (plus (times (pow b c) n) (pow a (minus n k))) (pow b k)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDividesb_true_to_divides. Soit $n , m \\in N$. Alors si $dividesb (n , m)= true$, alors $n$ est divisible par $m$.\nassistant\n", "label": "axiom dividesb_true_to_divides (n m : Nat) (x__ : dividesb n m = true) : divisible n m", "predict": "axiom dividesb_true_to_divides (n m : Nat) : dividesb n m = true → n % m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nTimes_n_Sm. Soit $n , m \\in N$. Alors la somme de $n$ et du produit de $n$ et de $m$ est égale au produit de $n$ et de la somme de $m$ et de $1$.\nassistant\n", "label": "Axiom times_n_Sm : forall n : nat, forall m : nat, n + n * m = n * (m + 1) .", "predict": "Axiom times_n_Sm : forall n : nat, forall m : nat, n + n * m = n * (m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Eq 1 (gcd n m)) -> (c : Nat) -> (clearme : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> or (Eq 1 (minus (times c n) (times d m))) (Eq 1 (minus (times d m) (times c n))) -> if (Eq 1 (minus (times c n) (times d m))) (Eq (gcd m n) (minus (times n c) (times m d)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all natural numbers $n1$, for all functions $Hind$ from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g2$ applied to $i$, for all functions $Hle$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$, if $p (n1)= true$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))) -> (Hle : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> (Hcase : Eq (p n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> all (p : Nat -> Bool) -> all (g1 g2 : Nat -> Nat) -> all (n1 : Nat) -> all (Hind : (i : Nat) -> Lt i n1 -> Eq (p i) true -> true -> Leq (g1 i) (g2 i)) -> all (Hle : (i : Nat) -> Lt i (plus n1 1) -> Eq (p i) true -> Leq (g1 i) (g2 i)) -> if (Eq (p n1) true) (all (x2515 x2516 : Nat) -> Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2516)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_CProp4. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_903$ of $ACop$ of $A$ and $_nil$ to propositions. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$. Then for all elements $x_903$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_903$.\nassistant\n", "label": "axiom ACop_rect_CProp4 (A : Set) (_nil : A) (Q_ : (_x_903 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_903 : ACop A _nil) : Q_ x_903", "predict": "axiom cop_rect_CProp4 (A : Type) (nil : A) (Q_ : ∀ x : ACop A nil, Prop) (H_mk_ACop : ∀ aop : Aop A nil, ∀ comm : ∀ a : A, ∀ b : A, Eq (op A nil aop a) (op A nil aop b), Eq (op A nil aop b) (op A nil aop a), Q_ (mk_ACop A nil aop comm)) : ∀ x : ACop A nil, Q_ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_ind. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_915$ of $range$ of $_A$ to propositions. Let $_H_mk_range$ be a function from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$. Then for all elements $x_915$ of $range$ of $_A$, $Q_$ holds for $x_915$.\nassistant\n", "label": "Axiom range_ind : forall _A : Set, forall Q_ : ((_x_915 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_915 : range _A, Q_ x_915 .", "predict": "Axiom range_ind : forall A : Set, forall Q : A -> Prop, forall H : forall enum : nat -> A, forall upto : nat, forall filter : nat -> bool -> Q (mk_range A enum upto filter) -> forall x : range A, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i$ är mindre än eller lika med $n$. Då om $j$ är mindre än eller lika med $n$, så för alla naturliga tal $a$, om $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$, så om $a$ är mindre än eller lika med $n$, så om $f$ applicerat på $a$ är lika med $i$, så för alla naturliga tal $b$, om $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$, så om $b$ är mindre än eller lika med $n$, så om $f$ applicerat på $b$ är lika med $j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> Proof (if (and (Leq i n) (Leq j n)) (forall Nat (a => if (and (Leq a n) (Eq (f a) i)) (if (and (Leq a n) (Eq (f a) i)) (forall Nat (b => if (and (Leq b n) (Eq (f b) j)) (if (and (Leq b n) (Eq (f b) j)) (forall (f : Elem (Nat -> Nat)) (i0 : Elem Nat) (inj : Elem (Leq i0 n)) (Proof (Eq (f i0) n)) (forall (injf : Elem (injn f n)) (Eq (a) (b)) => (Eq (f a) i))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_maxr. Let $i , n , m \\in N$. Assume that $max$ applied to $n$ and $m$ is less than or equal to $i$. Then $m$ is less than or equal to $i$.\nassistant\n", "label": "Axiom le_maxr : forall i : nat, forall n : nat, forall m : nat, forall x__ : Leq (max n m) i, Leq m i .", "predict": "Axiom le_maxr : forall i : nat, forall n : nat, forall m : nat, (Leq (max n m) i -> Leq m i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15624. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.\nassistant\n", "label": "Axiom let_clause_15624 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15624 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall x : ex, forall f : Nat -> Prop, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (d * m - m * c) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nGcd_1_to_divides_times_to_divides. Låt $p , n , m \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $n$. Då om $p$ är delbart med $n \\times m$, så är $p$ delbart med $m$.\nassistant\n", "label": "axiom gcd_1_to_divides_times_to_divides (p n m : Nat) (x__ : 0 < p) (__1 : gcd p n = 1) (__2 : divisible p (n * m)) : divisible p m", "predict": "axiom gcd_1_to_divides_times_to_divides (p n m : Nat) (x : 0 < p ∧ 1 = gcd p n) : p div (n * m) → p div m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nBinomial_law. Låt $a , b , n \\in N$. Då är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $k$ som $true$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $k$ som produkten av produkten av $bc$ applicerat på $n$ och $k$ och potensen av $a$ och skillnaden mellan $n$ och $k$ och potensen av $b$ och $k$ lika med $(a + b)^ n$.\nassistant\n", "label": "postulate binomial_law : (a : Nat) -> (b : Nat) -> (n : Nat) -> Eq (pow (plus a b) n) (bigop (plus n 1) (\\ k : Nat -> true) Nat 0 plus (\\ k : Nat -> times (times (bc n k) (pow a (minus n k))) (pow b k)))", "predict": "postulate binomial_law : (a : Nat) -> (b : Nat) -> (n : Nat) -> Eq (bigop (plus n 1) (true Nat 0) (plus (times (pow b c) n) (times (pow a (minus n k)) (pow b k))) (pow (plus a b) n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_le_times_to_lt_S_to_div. Let $a , c , b \\in N$. Assume that $0 < b$. Assume that $b c \\leq a$. Then if $a < b (c + 1)$, then $a \\div b = c$.\nassistant\n", "label": "lt_to_le_times_to_lt_S_to_div : a : Nat -> c : Nat -> b : Nat -> __ : Lt 0 b -> __1 : Leq (times b c) a -> __2 : Lt a (times b (plus c (nd 1))) -> Eq (div a b) c .", "predict": "Lt_to_le_times_to_lt_S_to_div : a : Elem Nat -> c : Elem Nat -> b : Elem Nat -> Proof (if (Lt a (times b (plus c (nd 1)))) (Eq (div a b) c)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $2 ^ 8 \\leq n$. Låt $m$ vara ett naturligt tal. Anta att $3 \\leq m$. Anta att $\\log_ 2 {m}+ 2 \\leq m$. Låt $x2515$ och $x2516$ vara naturliga tal. Då $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> len : Leq (pow (nd 2) (nd 8)) n -> m : Nat -> lt2m : Leq (nd 3) m -> Hind : Leq (plus (log (nd 2) m) (nd 2)) m -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (Leq (pow (nd 2) (nd 8)) n) -> m : Elem Nat -> Proof (Leq (nd 3) m) -> Proof (Leq (plus (log (nd 2) m) (nd 2)) m) -> x2515 : Elem Nat -> x2516 : Elem Nat -> Proof (Eq x2515 x2516 (plus (div x2515 x2516) (mod x2515 x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1047. Let $k , n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n \\leq k$. Let $j$ be a natural number. Assume that $n \\leq j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p (i)$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j + 1$ to elements of $Eq$ of $p (i)$ and absurdity. Let $x2571 , x2572 \\in N$. Then $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.\nassistant\n", "label": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 .", "predict": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (n <= k -> forall j : nat, (n <= j -> forall Hind : (nat -> Leq n) -> (nat -> Lt i) -> B -> nil -> op -> (nat -> B) -> B, forall Hfalse : (nat -> Leq n) -> (nat -> Lt i) -> B -> nil -> op -> (nat -> B) -> B, forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod (x2571, x2572))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_to_le1. Let $n$ and $m$ and $p$ be natural numbers. Then if $0 < p$ and $n ^ p \\leq m ^ p$, then $n \\leq m$.\nassistant\n", "label": "Axiom le_exp_to_le1 : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), forall __1 : Leq (pow n p) (pow m p), Leq n m .", "predict": "Axiom le_exp_to_le1 : forall n : nat, forall m : nat, forall p : nat, (0 < p /\\ pow n p <= pow m p -> n <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrime_to_divides_M. For all natural numbers $m$ and $p$, if $p$ is prime and $m + 1 < p$, then if $p \\leq 2 m + 1$, then $p$ is divisible by $M (m)$.\nassistant\n", "label": "Axiom prime_to_divides_M : forall m : nat, forall p : nat, forall x__ : prime p, forall __1 : (m + 1 < p), forall __2 : Leq p (2 * m + 1), divisible p (M m) .", "predict": "Axiom prime_to_divides_M : forall m : nat, forall p : nat, (prime p /\\ m + 1 < p -> p <= 2 * m + 1 -> p % M m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nMatch_le. Låt $_n$ vara ett naturligt tal. Låt $return_sort$ vara ett element av $Sort$. Låt $return_type$ vara en funktion från naturliga tal och element $z$ av $Leq$ av $_n$ och $__$ till element av $return_sort$. Låt $case_le_n$ vara ett element av $return_type$ av $_n$ och $le_n$ applicerat på $_n$. Låt $case_le_S$ vara en funktion från naturliga tal $m$ och element av $Leq$ av $_n$ och $m$ till element av $return_type$ av summan av $m$ och $1$ och $le_S$ applicerat på $_n$ och $m$ och $__$. Låt $__$ vara ett naturligt tal. Då om $_n$ är mindre än eller lika med $__$, så håller $return_type$ för $__$ och $z$.\nassistant\n", "label": "axiom match_le (_n : Nat) (return_sort : Sort) (return_type : (x__ : Nat) -> (z : _n ≤ __) -> return_sort) (case_le_n : return_type _n (le_n _n)) (case_le_S : (m : Nat) -> (x__ : _n ≤ m) -> return_type (m + 1) (le_S _n m __)) (x__ : Nat) (z : _n ≤ __) : return_type __ z", "predict": "axiom match_le (n : Nat) (return_sort : Sort) (return_type : Nat → Leq n → return_sort) (case_le_n : return_type n (le n)) (case_le_S : Nat → Leq n → Nat → return_type (n + 1) (le_S n)) (x : n ≤ x) : return_type x (Leq n x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15611. Låt $p , m , n \\in N$. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c$ vara ett naturligt tal. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Då för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $b$ och produkten av $p$ och $a$ lika med $1$.\nassistant\n", "label": "Axiom let_clause_15611 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), m * b - p * a = 1 .", "predict": "Axiom let_clause_15611 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ gcd p m = 1 /\\ p mod (m * n) = 0 -> forall c : nat, (m * n = p * c -> forall a : nat, forall x : ex (Nat -> Prop), forall b : nat, (Eq (p * a - m * b) (gcd p m) \\/ Eq (m * b - p * a) (gcd p m) -> Eq (m * b - p * a) 1 -> Eq (m - p * a + p * b) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_1_max_prime. Let $n$ be a natural number. Assume that $1$ is less than $n$. Then $1$ is less than $max$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $andb$ applied to $primeb$ applied to $i$ and $dividesb$ applied to $i$ and $n$.\nassistant\n", "label": "lt_1_max_prime : n : Nat -> __ : Lt (nd 1) n -> Lt (nd 1) (max (plus n (nd 1)) (i : Nat => andb (primeb i) (dividesb i n))) .", "predict": "Lt_1_max_prime : n : Elem Nat -> Proof (1 < n) -> Proof (1 < (max (plus n 1) (lambda i => andb (primeb i) (dividesb i n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_CProp1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z707$ to propositions. Let $_H1$ be a function from elements $_z708$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Then for all functions $_H2$ from natural numbers $x_410$ and functions $_x_412$ from elements $_z708$ of $Eq$ of $Hterm$ and $x_410$ to elements of $P$ of $x_410$ and elements $_z708$ of $Eq$ of $Hterm$ and $x_410 + 1$ to elements of $P$ of $x_410 + 1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_CProp1 (Hterm : Nat) (P : (_z707 : Nat) -> Prop) (_H1 : (_z708 : Hterm = 0) -> P 0) (_H2 : (x_410 : Nat) -> (_x_412 : (_z708 : Hterm = x_410) -> P x_410) -> (_z708 : Hterm = x_410 + 1) -> P (x_410 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_CProp1 (Hterm : Nat) (P : Nat → Prop) (H1 : Eq Hterm 0 → P 0) : ∀ x : Nat → ∀ (e : Eq Hterm x) → P x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_15692. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.\nassistant\n", "label": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> c : Nat -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLstar_inv_ind. Soit $x1$ un ensemble. Soit $x2$ un élément de $relation$ de $x1$. Soit $x3 \\in N$. Soient $x4$ et $x5$ des éléments de $x1$. Soit $_Hterm$ un élément de $lstar$ de $x1$ et de $x2$ et de $x3$ et de $x4$ et de $x5$. Soit $P$ une fonction des nombres naturels $_z2089$ et des éléments $_z2088$ de $x1$ et des éléments $_z2087$ de $x1$ à des propositions. Soit $_H1$ une fonction des éléments $b$ de $x1$ et des éléments $_z2092$ de $Eq$ de $x3$ et de $0$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b$ à des éléments de $P$ de $0$ et de $b$ et de $b$. Alors pour toutes les fonctions $_H2$ des éléments $b1$ de $x1$ et des éléments $b$ de $x1$ et des éléments $_x_1236$ de $x2$ de $b1$ et de $b$ et des nombres naturels $l$ et des éléments $b2$ de $x1$ et des éléments $_x_1235$ de $lstar$ de $x1$ et de $x2$ et de $l$ et de $b$ et de $b2$ et des fonctions $_x_1238$ des éléments $_z2092$ de $Eq$ de $x3$ et de $l$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b2$ à des éléments de $P$ de $l$ et de $b$ et de $b2$ et des éléments $_z2092$ de $Eq$ de $x3$ et de la somme de $l$ et de $1$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b1$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b2$ à des éléments de $P$ de la somme de $l$ et de $1$ et de $b1$ et de $b2$, $P$ tient pour $x3$ et $x4$ et $x5$.\nassistant\n", "label": "lstar_inv_ind : x1 : Set -> x2 : relation x1 -> x3 : Nat -> x4 : x1 -> x5 : x1 -> _Hterm : lstar x1 x2 x3 x4 x5 -> P : (_z2089 : Nat -> _z2088 : x1 -> _z2087 : x1 -> Prop) -> _H1 : (b : x1 -> _z2092 : Eq x3 0 -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b -> P 0 b b) -> _H2 : (b1 : x1 -> b : x1 -> _x_1236 : x2 b1 b -> l : Nat -> b2 : x1 -> _x_1235 : lstar x1 x2 l b b2 -> _x_1238 : (_z2092 : Eq x3 l -> _z2091 : Eq x4 b -> _z2090 : Eq x5 b2 -> P l b b2) -> _z2092 : Eq x3 (plus l (nd 1)) -> _z2091 : Eq x4 b1 -> _z2090 : Eq x5 b2 -> P (plus l (nd 1)) b1 b2) -> P x3 x4 x5 .", "predict": "lstar_inv_ind : x1 : Elem -> x2 : Elem -> x3 : Nat -> x4 : Elem -> x5 : Elem -> _Hterm : Elem -> lstar -> x1 -> x2 -> x3 -> x4 -> x5 -> P : (z2089 : Nat) -> x1 -> (z2088 : Elem) -> x1 -> Prop -> H1 : b : Elem -> x1 -> Eq -> x3 -> 0 -> Eq -> x4 -> b -> Eq -> x5 -> b -> Prop -> (b : Elem) -> Proof -> H2 : b1 : Elem -> x1 -> b : x1 -> x2 : Elem -> b1 -> b -> l : Nat -> b2 : Elem -> x1 -> lstar -> x1 -> x2 -> l -> b -> b2 -> _x_1236 : Elem -> Eq -> x3 -> l -> _x_1235 : Eq -> lstar -> x1 -> x2 -> l -> b -> b2 -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof -> Proof"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nF3_ind_aux. Soient $A1$ et $A2$ et $A3$ des ensembles. Soit $f$ une fonction des éléments de $A1$ et des éléments $__1$ de $A2$ et des éléments $__2$ de $A3$ à des nombres naturels. Soit $P$ un élément de $relation3$ de $A1$ et de $A2$ et de $A3$. Soit $__$ une fonction des nombres naturels $n$ et des fonctions des éléments $a1$ de $A1$ et des éléments $a2$ de $A2$ et des éléments $a3$ de $A3$ et des éléments de $Lt$ de $f (a1 , a2 , a3)$ et de $n$ à des éléments de $P$ de $a1$ et de $a2$ et de $a3$ et des éléments $a1$ de $A1$ et des éléments $a2$ de $A2$ et des éléments $a3$ de $A3$ et des éléments $__1$ de $Eq$ de $f (a1 , a2 , a3)$ et de $n$ à des éléments de $P$ de $a1$ et de $a2$ et de $a3$. Soit $n \\in N$. Soit $a1$ un élément de $A1$. Soit $a2$ un élément de $A2$. Soit $a3$ un élément de $A3$. Supposons que $f (a1 , a2 , a3)= n$. Alors $P$ tient pour $a1$ et $a2$ et $a3$.\nassistant\n", "label": "f3_ind_aux : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> n : Nat -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3 .", "predict": "f3_ind_aux : (A1 : Elem) -> (A2 : Elem) -> (A3 : Elem) -> (f : Elem -> Elem A2 -> Elem A3 -> Nat) -> (P : Elem (Relation3 A1 A2 A3)) -> (f : Elem -> Elem -> Elem -> Nat -> Elem P) -> (n : Elem Nat) -> (a1 : Elem A1) -> (a2 : Elem A2) -> (a3 : Elem A3) -> Proof (Eq (f a1 a2 a3) n) -> Proof (P a1 a2 a3) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1704. Låt $m \\in N$. Anta att $0$ är mindre än $m$. Låt $a$ och $x1029$ vara naturliga tal. Då är $x1029$ lika med $aop__o__op$ applicerat på $Nat$ och $0$ och $plusAC$ och $x1029$ och $0$.\nassistant\n", "label": "let_clause_1704 : m : Nat -> posm : Lt 0 m -> a : Nat -> x1029 : Nat -> Eq x1029 (aop__o__op Nat 0 plusAC x1029 0) .", "predict": "let_clause_1704 : m : Elem Nat -> Proof (Lt Nat 0 m) -> a : Elem Nat -> x1029 : Elem Nat -> Proof (Eq x1029 (App (App (Op \"aop__o__op\") (nd 0)) (nd 0)) (nd (plusAC a x1029 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nNot_eq_to_le_to_lt. Soit $n , m \\in N$. Supposons que $n$ n'est pas égal à $m$. Alors si $n \\leq m$, alors $n < m$.\nassistant\n", "label": "axiom not_eq_to_le_to_lt (n m : Nat) (x__ : ¬ (n = m)) (__1 : n ≤ m) : n < m", "predict": "axiom not_eq_to_le_to_lt (n m : Nat) (x : n ≠ m) : n ≤ m → n < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, $relation$ holds for $B$.\nassistant\n", "label": "Axiom lstar : forall B : Set, forall _R : relation B, forall x__ : nat, relation B .", "predict": "Axiom lstar : forall B : Set, forall _R : relation B, forall __ : nat, relation B ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_div_S_S_div. Låt $n$ och $m$ vara naturliga tal. Anta att $0 < m$. Då $(n + 1)\\div m \\leq n \\div m + 1$.\nassistant\n", "label": "Axiom le_div_S_S_div : forall n : nat, forall m : nat, forall x__ : (0 < m), Leq ((n + 1) / m) (n / m + 1) .", "predict": "Axiom le_div_S_S_div : forall n : nat, forall m : nat, (0 < m -> (n + 1) / m <= n / m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_16171. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that $b m - a p = 1$. Then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Eq 1 (gcd p m)) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> x : Elem ex (Nat) -> Proof (forall Nat (b => Eq (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> b : Elem Nat -> Proof (or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) -> Proof (Eq (gcd p m) (minus (times b m) (times a p))) -> Proof (Eq (minus (times m b) (times p a)) (gcd p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax. Let $_n \\in N$. Then for all functions $_f$ from natural numbers to booleans, $Nat$.\nassistant\n", "label": "axiom max (_n : Nat) (_f : (x__ : Nat) -> bool) : Nat", "predict": "axiom max (n : Nat) : ∀ f : Nat → Bool, ..."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_1544 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n)) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n)) .", "predict": "let_clause_1544 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Lt (nd 0) (nd n) -> Leq n m -> Leq n q -> Proof (ex (Nat (nd 1)) -> ex (Nat (nd 2)) -> Eq (minus (times a (nd n)) (times b (nd m))) (gcd_aux q m n) -> Eq (minus (times b (nd m)) (times a (nd n))) (gcd_aux q m n))) -> Proof (m : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Leq n m) -> Proof (Leq n (plus q (nd 1))) -> Proof (not (divisible n m)) -> Proof (a : Elem Nat) -> Proof (ex (Nat (nd 1)) -> Proof (b : Elem Nat) -> or (and (Eq (minus (times a (nd (mod m n))) (times b n)) (gcd_aux q n (nd (mod m n)))) (and (Eq (minus (times b n)) (times a (nd (mod m n)))) (gcd_aux q n (nd (mod m n))))) -> Proof (b : Elem Nat) -> Proof (or (and (Eq (minus (times a (nd (mod m n))) (times b n)) (gcd_aux q n (nd (mod m n)))) (and (Eq (minus (times b n)) (times a (nd (mod m n)))) (gcd_aux q n (nd (mod m n))))) -> Proof (and (Eq (minus (times a (nd (mod m n))) (times n b)) (gcd_aux q n (nd (mod m n))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_inv_rect_CProp1. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1554$ of $Aop$ of $x1$ and $x2$ to propositions. Let $_H1$ be a function from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1555$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Aop_inv_rect_CProp1 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1554 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1555 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm", "predict": "axiom aop_inv_rect_CProp1 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : ∀ z1554 : Aop x1 x2, Prop) (H1 : ∀ op : x1 → x1, ∀ x1 : x1, Eq (op x2) (x1) ∧ Eq (op x2) x2 ∧ Eq (op (op x x1)) (op x x1)) : P (mk_Aop x1 x2 op _nill _nilr _assoc) Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMinus_minus. Låt $n$ och $m$ och $p$ vara naturliga tal. Anta att $p$ är mindre än eller lika med $m$. Då om $m$ är mindre än eller lika med $n$, så är summan av $p$ och skillnaden mellan $n$ och $m$ lika med skillnaden mellan $n$ och skillnaden mellan $m$ och $p$.\nassistant\n", "label": "postulate minus_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq p m) -> (__1 : Leq m n) -> Eq (plus p (minus n m)) (minus n (minus m p))", "predict": "postulate minus_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> Leq p m -> Leq m n -> Eq (plus p (minus n m)) (minus n (minus m p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nCongruent_times. For all natural numbers $n$ and $m$ and $n1$ and $m1$ and $p$, if $0$ is less than $p$, then for all elements $__1$ of $congruent$ of $n$ and $n1$ and $p$, for all elements $__2$ of $congruent$ of $m$ and $m1$ and $p$, $congruent$ holds for the product of $n$ and $m$ and the product of $n1$ and $m1$ and $p$.\nassistant\n", "label": "congruent_times : n : Nat -> m : Nat -> n1 : Nat -> m1 : Nat -> p : Nat -> __ : Lt 0 p -> __1 : congruent n n1 p -> __2 : congruent m m1 p -> congruent (times n m) (times n1 m1) p .", "predict": "congruent_times : (n : Elem Nat) -> (m : Elem Nat) -> (n1 : Elem Nat) -> (m1 : Elem Nat) -> (p : Elem Nat) -> Proof (Lt 0 p) -> Proof (forall (x : Elem (congruent n n1 p)) (forall (y : Elem (congruent m m1 p)) (Proof (congruent (times n m) (times n1 m1) p)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1585. Låt $n , m \\in N$. Anta att $0 < n$. Då om $m$ är delbart med $n$, så för alla naturliga tal $d$, om $0 = m$, så om $n = m d$, så $0 = n$.\nassistant\n", "label": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n", "predict": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> 0 < n -> if (divides m n) (all Nat (\\ d -> if (Eq 0 m) (Eq n (times d n))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nPrimeb_true_to_prime. Soit $n$ un nombre naturel. Alors si $primeb (n)= true$, alors $n$ est premier.\nassistant\n", "label": "Axiom primeb_true_to_prime : forall n : nat, forall x__ : (primeb n = true), prime n .", "predict": "Axiom primeb_true_to_prime : forall n : nat, (primeb n = true -> prime n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10334. Låt $n$ vara ett naturligt tal. Då om $0 < n$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10334 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10334 : n : Elem Nat -> Proof (if (Lt (nd 0) n) (forall (x2515 : Elem Nat) (forall (x2516 : Elem Nat) (Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2515))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nPrime_smallest_factor_n. Soit $n$ un nombre naturel. Alors si $1 < n$, alors $smallest_factor (n)$ est premier.\nassistant\n", "label": "axiom prime_smallest_factor_n (n : Nat) (x__ : 1 < n) : prime (smallest_factor n)", "predict": "axiom prime_smallest_factor_n (n : Nat) : n > 1 → prime (smallest_factor n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMod_times_mod. Let $n , m , p \\in N$. Then if $0 < p$ and $0 < m$, then $mod (n , p)= mod (mod (n , m p), p)$.\nassistant\n", "label": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)", "predict": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> and (Lt 0 p) (Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nAop_rect_Type5_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_865$ av $Aop$ av $A$ och $_nil$ till element av $Type5$. Låt $_H_mk_Aop$ vara en funktion från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $_nil$ och $a$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $_nil$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $op$ applicerat på $b$ och $c$ och $op$ applicerat på $op$ applicerat på $a$ och $b$ och $c$ till element av $Q_$ av $mk_Aop$ applicerat på $A$ och $_nil$ och $op$ och $_nill$ och $_nilr$ och $_assoc$. Låt $x_865$ vara ett element av $Aop$ av $A$ och $_nil$. Då håller $Q_$ för $x_865$.\nassistant\n", "label": "Aop_rect_Type5_body : A : Set -> _nil : A -> Q_ : (_x_865 : Aop A _nil -> Type5) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_865 : Aop A _nil -> Q_ x_865 .", "predict": "Aop_rect_Type5_body : (A : Elem Set) -> (nil : Elem A) -> Proof (forall (x : Aop A) -> Proof (Q_ x nil)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n \\in N$. Assume that $2 ^ 7 \\leq n$. Let $p \\in N$. Assume that $\\sqrt{ (2 n)}+ 1 \\leq p$. Assume that $p < 2 n + 1$. Assume that $leb (2 , k (2 n , p))= true$. Then if $2 n < p ^ 2$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (len : pow 2 7 ≤ n) (p : Nat) (lep : sqrt (2 * n) + 1 ≤ p) (ltp : p < 2 * n + 1) (Hc : leb 2 (k (2 * n) p) = true) (H2n : 2 * n < pow p 2) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (x : pow 2 7 ≤ n) (p : Nat) (y : sqrt (2 * n) + 1 ≤ p) (z : p < 2 * n + 1) (w : leb 2 (k (2 * n) p) = true) (q : 2 * n < pow p 2) : ∀ x2515 : Nat, ∀ x2516 : Nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_15624. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15624 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15624 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall _clearme : ex : Nat -> (forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1) -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_10471. Låt $n1$ och $n2$ vara naturliga tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $_clearme0$ vara ett element av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och", "label": "Axiom let_clause_10471 : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), forall h : ((x__ : nat) -> nat), forall _clearme0 : ex (prod Set Set nat (fun x__ => nat)) (fun k => prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) /\\ sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)), forall k : ((x__ : nat) -> nat), forall _clearme1 : (prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod", "predict": " $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $sub_kh$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_kh$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Anta att $Eq$ håller för $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $true$ och $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nNat_rect_Type2. Låt $Q_$ vara en funktion från naturliga tal $_x_381$ till element av $Type2$. Då för alla element $_H_O$ av $Q_$ av $0$, för alla funktioner $_H_S$ från naturliga tal $x_382$ och element $_x_384$ av $Q_$ av $x_382$ till element av $Q_$ av summan av $x_382$ och $1$, för alla naturliga tal $x_381$, håller $Q_$ för $x_381$.\nassistant\n", "label": "postulate nat_rect_Type2 : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381", "predict": "postulate nat_rect_Type2 : (Q : Nat -> Type2) -> Q 0 -> (x : Nat) -> (f : x -> Q (plus x 1)) -> all Nat (\\ x -> Q x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Då om $a$ är mindre än eller lika med $n$, så om $f$ applicerat på $a$ är lika med $i$, så för alla naturliga tal $b$, om $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$, så om $b$ är mindre än eller lika med $n$, så om $f$ applicerat på $b$ är lika med $j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (x' : a ≤ n ∧ f a = i) : ∀ b : Nat, (b ≤ n ∧ f b = j) → b ≤ n ∧ f b = j → ∀ g : Nat → Nat × Leq i n → Leq (f g i n) (∀ injf : Nat × Leq n, injf = (a, n) → f a = j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_minus_m_m. Let $n , m \\in N$. Then $n \\leq n - m + m$.\nassistant\n", "label": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m", "predict": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_10471. Låt $n1$ och $n2$ vara naturliga tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range (B , f1 , n1 , p1)$ och $mk_range (B , f2 , n2 , p2)$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $_clearme0$ vara ett element av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicer", "label": "Axiom let_clause_10471 : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), forall h : ((x__ : nat) -> nat), forall _clearme0 : ex (prod Set Set nat (fun x__ => nat)) (fun k => prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) /\\ sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)), forall k : ((x__ : nat) -> nat), forall _clearme1 : (prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_h", "predict": "at på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $i$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $k$ applicerat på $i$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $x$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $y$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $z$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $a$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $b$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $c$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $d$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $e$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $f$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $g$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $h$ vara en variabel som kan ta värdet av typen naturliga tal. Låt $i$ vara en variabel som kan ta värdet av typ"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nF_false_to_le_max. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $p$ vara naturliga tal. Låt $__$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $i$ som konjunktionen av $Lt$ applicerat på $i$ och $n$ och $Eq$ applicerat på $f$ applicerat på $i$ och $true$. Då för alla funktioner $__1$ från naturliga tal $m$ och element $__1$ av $Lt$ av $p$ och $m$ till element av $Eq$ av $f (m)$ och kontradiktion, $max (n , f)\\leq p$.\nassistant\n", "label": "axiom f_false_to_le_max (f : (x__ : Nat) -> bool) (n p : Nat) (x__ : ex Nat (λ i => i < n ∧ f i = true)) (__1 : (m : Nat) -> (__1 : p < m) -> f m = false) : max n f ≤ p", "predict": "axiom f_false_to_le_max (f : Nat → Prop) (n p : Nat) (x : Nat → And (Lt x n) (Eq (f x) true)) : ∀ m : Nat, ∀ x : Lt p m, Eq (f m) contradiction → max n (f m) ≤ p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_ord_log. Låt $n , p \\in N$. Då om $0 < n$ och $1 < p$, så $ord (n , p)\\leq \\log_ p {n}$.\nassistant\n", "label": "postulate le_ord_log : (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 1 p) -> Leq (ord n p) (log p n)", "predict": "postulate le_ord_log : (n : Nat) -> (p : Nat) -> and (Lt 0 n) (Lt 1 p) -> leq (ord n p) (log p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nRange_inv_rect_CProp0. Pour tous les ensembles $x1$, pour tous les éléments $Hterm$ de $range$ de $x1$, pour toutes les fonctions $P$ des éléments $_z1692$ de $range$ de $x1$ à des propositions, pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1693$ de $Eq$ de $Hterm$ et de $mk_range (x1 , _enum , _upto , _filter)$ à des éléments de $P$ de $mk_range (x1 , _enum , _upto , _filter)$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom range_inv_rect_CProp0 : forall x1 : Set, forall Hterm : range x1, forall P : ((_z1692 : range x1) -> Prop), forall _H1 : ((_enum : (x__ : nat) -> x1) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> (_z1693 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)), P Hterm .", "predict": "Axiom range_inv_rect_CProp0 : forall x1 : Ensemble, forall Hterm : range x1, forall P : forall z1692 : range x1 -> Prop, forall H1 : forall n : nat -> x1 -> nat -> Prop, forall z1693 : Eq (Hterm) (mk_range x1 (enum n) (upto m) (filter p)), P (Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1033. Let $n$ be a natural number. Assume that the exponentiation of $2$ and $7$ is less than or equal to $n$. Let $p \\in N$. Assume that the sum of the square root of the product of $2$ and $n$ and $1$ is less than or equal to $p$. Assume that $p$ is less than the sum of the product of $2$ and $n$ and $1$. Assume that $leb$ applied to $2$ and $k$ applied to the product of $2$ and $n$ and $p$ is equal to $true$. Then if the product of $2$ and $n$ is less than the exponentiation of $p$ and $2$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> len : Leq (pow (nd 2) (nd 7)) n -> p : Nat -> lep : Leq (plus (sqrt (times (nd 2) n)) (nd 1)) p -> ltp : Lt p (plus (times (nd 2) n) (nd 1)) -> Hc : Eq (leb (nd 2) (k (times (nd 2) n) p)) true -> H2n : Lt (times (nd 2) n) (pow p (nd 2)) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> Proof (Leq (pow (nd 2) (nd 7)) n) -> Proof (forall Nat (p => Leq (plus (sqrt (times (nd 2) n)) (nd 1)) p) /\\ Leq p (plus (times (nd 2) n) (nd 1))) -> Proof (Eq (leb (nd 2) (k (times (nd 2) n) p)) (nd 1)) -> Proof (if (Leq (times (nd 2) n) (pow p (nd 2))) (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nList_divides_true. Soit $l$ une liste de nombres naturels. Soit $n \\in N$. Alors si $list_divides$ appliqué à $l$ et $n$ est égal à $true$, alors $ex$ tient pour $Nat$ et la fonction qui envoie $p$ à la conjonction de $mem$ appliqué à $Nat$ et $p$ et $l$ et de $divisible$ appliqué à $p$ et $n$.\nassistant\n", "label": "axiom list_divides_true (l : list Nat) (n : Nat) (x__ : list_divides l n = true) : ex Nat (λ p => mem Nat p l ∧ divisible p n)", "predict": "axiom list_divides_true (l : List Nat) (n : Nat) : list_divides l n = true → ex : Nat → ∀ p : Nat, (mem p Nat ∧ p ∈ l ∧ divisible p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Anta att $b \\leq n$ och $f (b)= j$ och $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Låt $injf$ vara ett element av $injn$ av $f$ och $n$. Anta att $a = b$. Då $f (a)= i$.\nassistant\n", "label": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i", "predict": "postulate let_clause_1068 : (f : Nat -> Nat) -> n : Nat -> permf : permut f n -> (i : Nat) -> (j : Nat) -> (x : Leq n i) -> (y : Leq n j) -> (z : Eq a b) -> Eq (f a) i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_mod_spec_rect_Type0. Låt $_n , _m , _q , _r \\in N$. Då för alla funktioner $Q_$ från element $_x_833$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till mängder, för alla funktioner $_H_div_mod_spec_intro$ från element $x_835$ av $Lt$ av $_r$ och $_m$ och element $x_834$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_835 , x_834)$, för alla element $x_833$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_833$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) -> (_H_div_mod_spec_intro : (x_835 : Lt _r _m) -> (x_834 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) -> (x_833 : div_mod_spec _n _m _q _r) -> Q_ x_833", "predict": "postulate div_mod_spec_rect_Type0 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> all Nat (\\ x -> all (Lt r m) -> all (Eq n (q * m + r)) -> all (Q (div_mod_spec_intro n m q r)) x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDiv_mod_spec_rect_CProp5_body. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_841$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_843$ av $Lt$ av $_r$ och $_m$ och element $x_842$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_843$ och $x_842$. Låt $x_841$ vara ett element av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$. Då håller $Q_$ för $x_841$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp5_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_841 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_843 : _r < _m) -> (x_842 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)), forall x_841 : div_mod_spec _n _m _q _r, Q_ x_841 .", "predict": "Axiom div_mod_spec_rect_CProp5_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, (Q : div_mod_spec n m q r -> Prop) -> (H_div_mod_spec_intro : Lt r m /\\ Eq n (q * m + r)) -> div_mod_spec n m q r -> Q (div_mod_spec_intro n m q r) (Lt r m /\\ Eq n (q * m + r)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1561. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Alors si $p$ est divisible par le produit de $m$ et de $n$, alors pour tous les nombres naturels $c$, si le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$, alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$, alors la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$ est égale à $1$.\nassistant\n", "label": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), p * a - m * b = 1 .", "predict": "Axiom let_clause_1561 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ Gcd p m = 1 -> (p %| m * n -> forall c : nat, (m * n = p * c -> forall a : nat, forall _clearme0 : ex -> Gnat -> Prop, forall b : nat, (Eq (p * a - m * b) (Gcd p m) \\/ Eq (m * b - p * a) (Gcd p m) -> Eq (p * a - m * b) (Gcd p m) \\/ Eq (m * b - p * a) (Gcd p m)) -> Eq (p * a - m * b) 1 -> Eq (p * a - m * b + m * b - p * a) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Then if $n < m$, then if $m \\leq p$, then $n < p$.\nassistant\n", "label": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p .", "predict": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, (n < m -> m <= p -> n < p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_minl. Soient $i$ et $n$ et $m$ des nombres naturels. Supposons que $i \\leq min (n , m)$. Alors $i \\leq n$.\nassistant\n", "label": "postulate le_minl : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i (min n m)) -> Leq i n", "predict": "postulate le_minl : (i : Nat) -> (n : Nat) -> (m : Nat) -> Leq i (min n m) -> Leq i n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPrime_to_primeb_true. Let $n \\in N$. Assume that $n$ is prime. Then $primeb (n)= true$.\nassistant\n", "label": "postulate prime_to_primeb_true : (n : Nat) -> (_ : prime n) -> Eq (primeb n) true", "predict": "postulate prime_to_primeb_true : (n : Nat) -> prime n -> true (primeb n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$. Då om $a \\leq n$, så om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : Permut f n, forall i : nat, forall j : nat, (Leq i n /\\ Leq j n -> forall a : nat, (Leq a n /\\ f a = i -> Leq a n /\\ f a = i -> forall b : nat, (Leq b n /\\ f b = j -> Leq b n /\\ f b = j -> forall i0 : nat, forall x : Leq i0 n, forall y : Leq f i0 n, forall injf : f i0 -> y, a = b -> f a = i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1600. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Då för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $c n - d m = 1$, så är $n c - m d$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall _clearme : ex (Nat -> Prop), forall f : Nat -> Prop, forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> (Eq (c * n - d * m) 1 -> Eq (n * c - m * d) (gcd m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1012. Let $f$ be a function from natural numbers to booleans. Let $n , i \\in N$. Let $Hind$ be a function from natural numbers $b$ to elements of $prod$ of $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m2$ applied to $f$ and $n$ and $i$ and $b$ and absurdity and the function that maps $__$ to $Eq (let_m2 (f , n , i , b), i + b)$. Let $b$ be a natural number. Assume that $f (b)= true$. Assume that absurdity is equal to $f (b)$. Then $true$ is equal to absurdity.\nassistant\n", "label": "let_clause_1012 : f : (__ : Nat -> bool) -> n : Nat -> i : Nat -> Hind : (b : Nat -> prod Prop Prop (Eq (f (let_m2 f n i b)) false) (__ : Eq (f (let_m2 f n i b)) false => Eq (let_m2 f n i b) (plus i b))) -> b : Nat -> fb : Eq (f b) true -> eqm : Eq (f b) false -> Eq false true .", "predict": "let_clause_1012 : f : Elem (Nat -> Bool) -> n : Elem Nat -> i : Elem Nat -> Hind : Elem (b : Elem Nat -> Prop * Prop * Eq (f (let_m2 (f, n, i, b))) (i + b) * absurdity * (x => Eq (let_m2 (f, n, i, b), x))) -> b : Elem Nat -> Proof (f b = true) -> Proof (absurdity = f b) -> Proof (true = absurdity) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1034. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $0 < p$. Soient $x2515$ et $x2516$ des nombres naturels. Alors $x2515 = mod (x2515 , x2516)+ x2516 (x2515 \\div x2516)$.\nassistant\n", "label": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (p : Nat) -> (posp : Lt 0 p) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (div x2515 x2516)))", "predict": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (p : Nat) -> (x2515 : Nat) -> (x2516 : Nat) -> 0 < p -> Eq x2515 (mod x2515 x2516 + x2516 * (x2515 / x2516))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDivides_gcd_aux_mn. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < n$ och $n \\leq m$. Anta att $n \\leq p$. Då är $gcd_aux (p , m , n)$ både delbart med $m$ och delbart med $n$.\nassistant\n", "label": "axiom divides_gcd_aux_mn (p m n : Nat) (x__ : 0 < n) (__1 : n ≤ m) (__2 : n ≤ p) : divisible (gcd_aux p m n) m ∧ divisible (gcd_aux p m n) n", "predict": "axiom divides_gcd_aux_mn (p m n : Nat) (x : 0 < n ∧ n ≤ m ∧ n ≤ p) : divides (gcd_aux p m n) m ∧ divides (gcd_aux p m n) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_CProp1_body. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_855 , x_854)$. Then for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp1_body (_n _m _q _r : Nat) (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_855 : _r < _m) -> (x_854 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) (x_853 : div_mod_spec _n _m _q _r) : Q_ x_853", "predict": "axiom div_mod_spec_rect_CProp1_body (n m q r : Nat) (Q : div_mod_spec n m q r → Prop) (H_div_mod_spec_intro : Lt r m ∧ Eq n (q * m + r)) : ∀ x : div_mod_spec n m q r, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16002. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> (c : Nat) -> ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (d : Nat) -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Då om $n$ inte är delbart med $m$, så för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så om $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Leq n m) -> Proof (Leq n (plus q (nd 1))) -> Proof (if (not (divides n m)) (forall Nat (a => forall (clearme : Elem (ex Nat)) => forall (b : Elem (disj (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) => forall Nat (b => if (or (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) (Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDiv_mod_spec_rect_Type4. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_813$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des éléments de $Type4$. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_815$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_814$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_815 , x_814)$. Soit $x_813$ un élément de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$. Alors $Q_$ tient pour $x_813$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type4 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) -> (_H_div_mod_spec_intro : (x_815 : Lt _r _m) -> (x_814 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> (x_813 : div_mod_spec _n _m _q _r) -> Q_ x_813", "predict": "postulate div_mod_spec_rect_Type4 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> Q_ : x_813 : div_mod_spec n m q r -> Type4 -> H_div_mod_spec_intro : Lt r m -> Eq n (q * m + r) -> Q_ (div_mod_spec_intro n m q r x_815 x_814)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1595. Let $p$ and $n$ and $m$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $p$ and $n$, then if $1$ is equal to the greatest common divisor of $p$ and $m$, then if the greatest common divisor of $p$ and the product of $n$ and $m$ is less than $1$, then if $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $m$ is equal to the greatest common divisor of $p$ and $n$.\nassistant\n", "label": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, forall posn : (0 < n), forall posm : (0 < m), forall primepn : (gcd p n = 1), forall primepm : (gcd p m = 1), forall lt1gcd : (1 < gcd p (n * m)), forall H : divisible (smallest_factor (gcd p (n * m))) m, gcd p n = gcd p m .", "predict": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, (0 < n -> 0 < m -> 1 = gcd p n -> 1 = gcd p m -> gcd p (n * m) < 1 -> (smallest_factor (gcd p (n * m)) mod m = 0 -> gcd p m = gcd p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDivides_to_gcd_aux. För alla naturliga tal $p$ och $m$ och $n$, om $0 < p$, så om $0 < n$, så om $n$ är delbart med $m$, så $gcd_aux (p , m , n)= n$.\nassistant\n", "label": "postulate divides_to_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 n) -> (__2 : divisible n m) -> Eq (gcd_aux p m n) n", "predict": "postulate divides_to_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> 0 < p -> 0 < n -> if (divides n m) (Eq (gcd_aux (p , m , n)) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nQuotient. Soient $n$ et $m$ et $q$ des nombres naturels. Supposons que $m = n q$. Alors $n$ est divisible par $m$.\nassistant\n", "label": "axiom quotient (n m q : Nat) (x__ : m = n * q) : divisible n m", "predict": "axiom divisible (n m q : Nat) (x : m = n * q) : divisible n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type4_body. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$. Then for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_815 , x_814)$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type4_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_813 : div_mod_spec _n _m _q _r) -> Type4), forall _H_div_mod_spec_intro : ((x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)), forall x_813 : div_mod_spec _n _m _q _r, Q_ x_813 .", "predict": "Axiom div_mod_spec_rect_Type4_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, (Q_ : div_mod_spec n m q r -> Type4) -> forall H_div_mod_spec_intro : forall r' : Lt r m, forall n' : Eq n (q * m + r), Q_ (div_mod_spec_intro n m q r r' n') ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nF_ind_aux. Soit $A$ un ensemble. Alors pour toutes les fonctions $f$ des éléments de $A$ à des nombres naturels, pour tous les éléments $P$ de $predicate$ de $A$, pour toutes les fonctions $__$ des nombres naturels $n$ et des fonctions des éléments $a$ de $A$ et des éléments de $Lt$ de $f$ appliqué à $a$ et de $n$ à des éléments de $P$ de $a$ et des éléments $a$ de $A$ et des éléments $__1$ de $Eq$ de $f$ appliqué à $a$ et de $n$ à des éléments de $P$ de $a$, pour tous les nombres naturels $n$, pour tous les éléments $a$ de $A$, si $f$ appliqué à $a$ est égal à $n$, alors $P$ tient pour $a$.\nassistant\n", "label": "axiom f_ind_aux (A : Set) (f : (x__ : A) -> Nat) (P : predicate A) (x__ : (n : Nat) -> (x__ : (a : A) -> (x__ : f a < n) -> P a) -> (a : A) -> (__1 : f a = n) -> P a) (n : Nat) (a : A) (__1 : f a = n) : P a", "predict": "axiom f_ind_aux (A : Set _) (f : A → Nat) (P : ∀ a : A, predicate a) : ∀ n : Nat, ∀ a : A, (f a = n → P a)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_pred_n. Soit $n \\in N$. Alors $pred$ appliqué à $n$ est inférieur ou ágal à $n$.\nassistant\n", "label": "Axiom le_pred_n : forall n : nat, Leq (pred n) n .", "predict": "Axiom le_pred_n : forall n : nat, pred n <= n ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_mod_spec_rect_CProp0. För alla naturliga tal $_n$ och $_m$ och $_q$ och $_r$, för alla funktioner $Q_$ från element $_x_857$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden, för alla funktioner $_H_div_mod_spec_intro$ från element $x_859$ av $Lt$ av $_r$ och $_m$ och element $x_858$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_859 , x_858)$, för alla element $x_857$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_857$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_857 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_859 : Lt _r _m) -> (x_858 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> (x_857 : div_mod_spec _n _m _q _r) -> Q_ x_857", "predict": "postulate div_mod_spec_rect_CProp0 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> all Nat (\\ x -> all (Lt r m) -> all (Eq n (q * m + r)) -> all (Q (div_mod_spec_intro n m q r x))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nAssoc_body. Soit $A$ un ensemble. Soit $nil$ un élément de $A$. Soit $xxx$ un élément de $Aop$ de $A$ et de $nil$. Alors pour tous les éléments $a$ et $b$ et $c$ de $A$, $op (A , nil , xxx , a , op (A , nil , xxx , b , c))= op (A , nil , xxx , op (A , nil , xxx , a , b), c)$.\nassistant\n", "label": "axiom assoc_body (A : Set) (nil : A) (xxx : Aop A nil) (a b c : A) : op A nil xxx a (op A nil xxx b c) = op A nil xxx (op A nil xxx a b) c", "predict": "axiom assoc_body (A : Type) (nil : A) (xxx : Aop A nil) : ∀ a b c : A, op A nil xxx a (op A nil xxx b) c = op A nil xxx (op A nil xxx a b) c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin_spec_inv_ind. Let $x1 , x2 \\in N$. Let $x3$ be a function from natural numbers to booleans. Then for all natural numbers $x4$, for all elements $_Hterm$ of $min_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from natural numbers $_z1890$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_1080$ of $Leq$ of $x2$ and $m$ and elements $_x_1079$ of $Lt$ of $m$ and $x1 + x2$ and elements $_x_1078$ of $Eq$ of $x3 (m)$ and $true$ and functions $_x_1077$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $x3 (i)$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_1081$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1 + x2$ to elements of $Eq$ of $x3 (i)$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $x1 + x2$ to elements of $P$ of $x1 + x2$, $P$ holds for $x4$.\nassistant\n", "label": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : ((x__ : nat) -> bool), forall x4 : nat, forall _Hterm : min_spec x1 x2 x3 x4, forall P : ((_z1890 : nat) -> Prop), forall _H1 : ((m : nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : m < x1 + x2) -> (_x_1078 : x3 m = true) -> (_x_1077 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < m) -> x3 i = false) -> (_z1891 : x4 = m) -> P m), forall _H2 : ((_x_1081 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < x1 + x2) -> x3 i = false) -> (_z1891 : x4 = x1 + x2) -> P (x1 + x2)), P x4 .", "predict": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : nat -> Prop, forall x4 : nat, forall Hterm : min_spec x1 x2 x3, forall P : nat -> Prop, forall _H1 : forall m : nat, forall x : Leq x2 m, forall x : Lt m, x1 + x2 = Eq x3 m /\\ true /\\ forall i : nat, (Leq x2 i /\\ Lt i m -> Eq x3 i) /\\ absurdity /\\ Eq x4 m -> P m, forall _H2 : forall i : nat, (Leq x2 i /\\ Lt i (x1 + x2) -> Eq x3 i) /\\ absurdity /\\ Eq x4 (x1 + x2) -> P (x1 + x2), P x4 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDop_inv_rect_Type1. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $Dop$ de $x1$ et de $x2$. Alors pour toutes les fonctions $P$ des éléments $_z1722$ de $Dop$ de $x1$ et de $x2$ à des éléments de $Type1$, pour toutes les fonctions $_H1$ des éléments $sum$ de $ACop$ de $x1$ et de $x2$ et des fonctions $prod$ des éléments de $x1$ et des éléments $__1$ de $x1$ à des éléments de $x1$ et des fonctions $_null$ des éléments $a$ de $x1$ à des éléments de $Eq$ de $prod (a , x2)$ et de $x2$ et des fonctions $_distr$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ et des éléments $c$ de $x1$ à des éléments de $Eq$ de $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ et de $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ et des éléments $_z1723$ de $Eq$ de $Hterm$ et de $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ à des éléments de $P$ de $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom Dop_inv_rect_Type1 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : ((_z1722 : Dop x1 x2) -> Type1), forall _H1 : ((sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1723 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)), P Hterm .", "predict": "Axiom dop_inv_rect_Type1 : forall x1 : Ensemble, forall x2 : x1 -> Prop, forall Hterm : Dop x1 x2 -> Prop, forall P : forall z1722 : Dop x1 x2 -> Type1, forall H1 : forall sum : ACop x1 x2 -> Prop, forall prod : forall a : x1 -> x1 -> x1, forall null : forall a : x1 -> Eq (prod a x2) x2, forall distr : forall a : x1 -> b : x1 -> c : x1 -> Eq (prod (a, aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c)), forall z1723 : Eq Hterm (mk_Dop x1 x2 sum prod null distr) -> Prop, P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1686. Let $n$ and $m$ be natural numbers. Let $Hind$ be a function from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$. Let $a \\in N$. Assume that $m = 2 a$ or $m = 2 a + 1$. Assume that $m = 2 a + 1$. Assume that $1 < 2 a + 1$. Assume that $0 < a$. Then $pred (m)= a + a$.\nassistant\n", "label": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> Eq (pred m) (plus a a)", "predict": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> Hind : (p : Nat) -> Lt p m -> Lt (1, p) -> Eq (Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> a : Nat -> or (or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> and (Eq m (plus (times 2 a) 1)) (Lt 1 (plus (times 2 a) 1)) (Lt 0 a) -> Eq (pred m) (plus a a)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDivides_times_gcd_aux. Låt $p$ och $m$ och $n$ och $d$ och $c$ vara naturliga tal. Anta att $0 < c$. Då om $0 < n$, så om $n \\leq m$, så om $n \\leq p$, så om $d$ är delbart med $c \\times m$, så om $d$ är delbart med $c \\times n$, så är $d$ delbart med $c \\times gcd_aux (p , m , n)$.\nassistant\n", "label": "postulate divides_times_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (d : Nat) -> (c : Nat) -> (_ : Lt 0 c) -> (__1 : Lt 0 n) -> (__2 : Leq n m) -> (__3 : Leq n p) -> (__4 : divisible d (times c m)) -> (__5 : divisible d (times c n)) -> divisible d (times c (gcd_aux p m n))", "predict": "postulate divides_times_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (d : Nat) -> (c : Nat) -> c > 0 -> if (if (if (if (divides d (times c m)) (if (divides d (times c n))) (divides d (times c (gcd_aux p m n))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10471. Let $n1$ and $n2$ be natural numbers. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Let $f1$ and $f2$ be functions from natural numbers to elements of $B$. Let $_clearme$ be an element of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Then for all functions $h$ from natural numbers to natural numbers, for all elements $_clearme0$ of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, for all functions $k$ from natural numbers to natural numbers, if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_h", "label": "let_clause_10471 : n1 : Nat -> n2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : ACop B nil -> f1 : (__ : Nat -> B) -> f2 : (__ : Nat -> B) -> _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) -> h : (__ : Nat -> Nat) -> _clearme0 : ex (prod Set Set Nat (__ : Nat => Nat)) (k : (__ : Nat -> Nat) => and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq (p1 i) true) (__1 : Eq (p1 i) true => Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> k : (__ : Nat -> Nat) -> _clearme1 : and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq (p1 i) true) (__1 : Eq (p1 i) true => Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n", "predict": "k$ applied to $h$ and $k$, and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, and $ex$ holds for $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $i$ to $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $i$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, then $B$ is not empty."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nACop_rect_CProp3_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_907$ de $ACop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$. Alors pour tous les éléments $x_907$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_907$.\nassistant\n", "label": "postulate ACop_rect_CProp3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_907 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_907 : ACop A _nil) -> Q_ x_907", "predict": "postulate acop_rect_CProp3_body : (A : Set) -> _nil : A -> (x : ACop A) -> Prop -> (aop : Aop A) -> _nil -> (comm : (a : A) -> (b : A) -> Eq (op A _nil aop a) (op A _nil aop b)) -> Eq (op A _nil aop x _comm) (op A _nil aop (mk_ACop A _nil aop comm))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nMin_spec_to_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $b$ och $m$ vara naturliga tal. Då för alla element $__$ av $min_spec$ av $n$ och $b$ och $f$ och $m$, $min (n , b , f)= m$.\nassistant\n", "label": "axiom min_spec_to_min (f : (x__ : Nat) -> bool) (n b m : Nat) (x__ : min_spec n b f m) : min n b f = m", "predict": "axiom min_spec_to_min (f : Nat → Bool) (n b m : Nat) : ∀ x : min_spec n b f m, min n b (f m) = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_sigma_p. For all natural numbers $n$, for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, for all elements $__2$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the disjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and $true$ and $Lt$ applied to $g1$ applied to $i$ and $g2$ applied to $i$ and the conjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and absurdity and $Eq$ applied to $p2$ applied to $i$ and $true$ and $Lt$ applied to $0$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "axiom lt_sigma_p (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) (__2 : ex Nat (λ i => i < n ∧ (p1 i = true ∧ g1 i < g2 i ∨ (p1 i = false ∧ p2 i = true ∧ 0 < g2 i)))) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) < bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)", "predict": "axiom lt_sigma_p (n : Nat) (p1 p2 : Nat → Bool) (g1 g2 : Nat → Nat) (f : ∀ i : Nat, Lt i n → Eq (p1 i) true → Eq (p2 i) true → Lt (g1 i) (g2 i)) (x : Nat) (ex : Eq x Nat) (f' : ∀ i : Nat, Lt i n → Eq (p1 i) true → Lt (g1 i) (g2 i) → And (And (Eq (p1 i) absurdity) (Eq (p2 i) true)) (Lt 0 (g2 i))) : bigop n (λ i, p1 i) Nat 0 Nat (plus (λ i, g1 i)) < bigop n (λ i, p2 i) Nat 0 Nat (plus (λ i, g2 i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nCongruent_ab_lt. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Då håller $ex$ för $Nat$ och funktionen som avbildar $x$ som konjunktionen av konjunktionen av $congruent$ applicerat på $x$ och $a$ och $m$ och $congruent$ applicerat på $x$ och $b$ och $n$ och $Lt$ applicerat på $x$ och produkten av $m$ och $n$.\nassistant\n", "label": "axiom congruent_ab_lt (m n a b : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : gcd n m = 1) : ex Nat (λ x => congruent x a m ∧ congruent x b n ∧ x < m * n)", "predict": "axiom congruent_ab_lt (m n a b : Nat) (x : 0 < n ∧ 0 < m ∧ gcd n m = 1) : ex Nat ∧ (x → congruent x a m ∧ congruent x b n ∧ Lt x (m * n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nPrime_smallest_factor_n. Låt $n \\in N$. Då om $1$ är mindre än $n$, så är $smallest_factor$ applicerat på $n$ primt.\nassistant\n", "label": "Axiom prime_smallest_factor_n : forall n : nat, forall x__ : (1 < n), prime (smallest_factor n) .", "predict": "Axiom prime_smallest_factor_n : forall n : nat, (1 < n -> prime (smallest_factor n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nACop_rect_CProp1. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_911$ de $ACop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$. Alors pour tous les éléments $x_911$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_911$.\nassistant\n", "label": "ACop_rect_CProp1 : A : Set -> _nil : A -> Q_ : (_x_911 : ACop A _nil -> Prop) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_911 : ACop A _nil -> Q_ x_911 .", "predict": "ACop_rect_CProp1 : (A : Elem) -> (x : Elem A) -> (Q : (x : Elem (ACop A)) -> (x : Elem A) -> Prop) -> (H : (aop : Elem Aop A) -> (x : Elem A) -> (comm : (a : Elem A) -> (b : Elem A) -> Elem (Eq (op A x aop a b) (op A x aop b a))) -> Prop) -> Proof (forall (x : Elem (ACop A) A) -> Q x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15625. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m -> (Gcd n m = 1 -> forall c : nat, forall _clearme : ex, forall d : Nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> (Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_16171. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : 1 == gcd p m) -> (z : p % m * n) -> (c : Nat) -> (eq : m * n == p * c) -> (a : Nat) -> (clearme0 : ex : Nat -> Eq (gcd p m) (plus (minus (times a p) (times b m)) (gcd p m)) (plus (minus (times b m) (times a p))) (gcd p m)) -> (b : Nat) -> (or : (Eq (gcd p m) (minus (times b m) (times a p))) (Eq (gcd p m) (minus (times a p) (times b m)))) -> (if : Eq (gcd p m) (minus (times b m) (times a p))) -> (if : if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) (gcd p m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_ind. Soit $_n$ un nombre naturel. Soit $Q_$ une fonction des nombres naturels $x_417$ et des éléments $_x_418$ de $Leq$ de $_n$ et de $x_417$ à des propositions. Soit $_H_le_n$ un élément de $Q_$ de $_n$ et de $le_n$ appliqué à $_n$. Soit $_H_le_S$ une fonction des nombres naturels $m$ et des éléments $x_419$ de $Leq$ de $_n$ et de $m$ et des éléments $_x_421$ de $Q_$ de $m$ et de $x_419$ à des éléments de $Q_$ de la somme de $m$ et de $1$ et de $le_S$ appliqué à $_n$ et $m$ et $x_419$. Soit $x_417$ un nombre naturel. Alors si $_n$ est inférieur ou ágal à $x_417$, alors $Q_$ tient pour $x_417$ et $x_418$.\nassistant\n", "label": "postulate le_ind : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418", "predict": "postulate le_ind : (n : Nat) -> Q n (le n) -> (H_le_n : Q n (le n)) -> (H_le_S : (m : Nat) -> (x_419 : Leq n m) -> Q m x_419 -> Q (plus m 1) (le_S n m x_419)) -> (x_417 : Nat) -> if (Leq n x_417) (Q x_417 x_418)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_16171. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c \\in N$. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Då för alla element $_clearme0$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$, för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $m$ och $b$ och produkten av $p$ och $a$.\nassistant\n", "label": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a .", "predict": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ gcd p m = 1 /\\ p % (m * n) -> forall c : nat, (m * n = p * c -> forall a : nat, forall _clearme0 : ex, (Eq (p * a - m * _clearme0) (gcd p m) \\/ Eq (m * _clearme0 - p * a) (gcd p m)) -> Eq (m * _clearme0 - p * a) 1 -> Eq (gcd p m) (m * _clearme0 - p * a))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTo_min. For all natural numbers $i$ and $n$ and $m$, if $i \\leq n$, then if $i \\leq m$, then $i \\leq min (n , m)$.\nassistant\n", "label": "to_min : i : Nat -> n : Nat -> m : Nat -> __ : Leq i n -> __1 : Leq i m -> Leq i (min n m) .", "predict": "to_min : (i : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (Leq i n) (if (Leq i m) (Leq i (min n m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nFalse_to_lt_max. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Anta att $0$ är mindre än $n$. Då om $f$ applicerat på $n$ är lika med kontradiktion, så om $max$ applicerat på $m$ och $f$ är mindre än eller lika med $n$, så är $max$ applicerat på $m$ och $f$ mindre än $n$.\nassistant\n", "label": "axiom false_to_lt_max (f : (x__ : Nat) -> bool) (n m : Nat) (x__ : 0 < n) (__1 : f n = false) (__2 : max m f ≤ n) : max m f < n", "predict": "axiom false_to_lt_max (f : Nat → Prop) (n m : Nat) (x : 0 < n) : f n = contradiction → max m (f ≤ n) < n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLt_to_le_times_to_lt_S_to_div. Soit $a , c , b \\in N$. Alors si $0 < b$ et $b c \\leq a$, alors si $a < b (c + 1)$, alors $a \\div b = c$.\nassistant\n", "label": "lt_to_le_times_to_lt_S_to_div : a : Nat -> c : Nat -> b : Nat -> __ : Lt 0 b -> __1 : Leq (times b c) a -> __2 : Lt a (times b (plus c (nd 1))) -> Eq (div a b) c .", "predict": "Lt_to_le_times_to_lt_S_to_div : a : Elem Nat -> c : Elem Nat -> b : Elem Nat -> Proof (if (and (Lt (nd 0) b) (Leq (times b c) a)) (if (Lt a (times b (plus c (nd 1)))) (Eq (div a b) c))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBigop_Strue. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to $true$, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $f$ applied to $k$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "axiom bigop_Strue (k : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (x__ : p k = true) : bigop (k + 1) (λ i => p i) B nil op (λ i => f i) = op (f k) (bigop k (λ i => p i) B nil op (λ i => f i))", "predict": "axiom bigop_strue (k : Nat) (p : Nat → Bool) (B : Set Nat) (nil : B) (op : ∀ x y : B, B) (f : Nat → B) : p k = true → bigop (k + 1) (λ i, p i B nil op (λ i, f i)) = op (f k) (bigop k (λ i, p i B nil op (λ i, f i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_Type5_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_865$ of $Aop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op (_nil , a)$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op (a , _nil)$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ to elements of $Q_$ of $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, for all elements $x_865$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_865$.\nassistant\n", "label": "Axiom Aop_rect_Type5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_865 : Aop A _nil) -> Type5), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_865 : Aop A _nil, Q_ x_865 .", "predict": "Axiom aop_rect_Type5_body : forall A : Set, forall nil : A, forall Q_ : forall x_865 : Aop A -> Type5, forall H_mk_Aop : forall op : A -> A -> A, forall nill : forall a : A -> Eq (op nil a) a, forall nilr : forall a : A -> Eq (op a nil) a, forall assoc : forall a : A -> forall b : A -> forall c : A -> Eq (op a (op b c)) (op (a (b c))) -> Q_ (H_mk_Aop A nil op nill nilr assoc) -> forall x_865 : Aop A, Q_ x_865 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_16171. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Gcd 1 (p, m) = m) -> Proof (p % (m * n) = 0) -> c : Elem Nat -> Proof (m * n = p * c) -> a : Elem Nat -> Proof (ex (Nat) -> Proof (Eq (Gcd (p, m)) (plus (minus (times a p) (times b m)) (Gcd (p, m)))) (minus (times b m) (times a p))) -> b : Elem Nat -> Proof (Eq (Gcd (p, m)) (if (or (Eq (minus (times b m) (times a p)) (nd 1)) (Eq (minus (times a p) (times b m))) (nd 1))) (Eq (minus (times b m) (times a p)) (Gcd (p, m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_Type3. Let $_n , _m , _q , _r \\in N$. Then for all functions $Q_$ from elements $_x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type3$, for all functions $_H_div_mod_spec_intro$ from elements $x_823$ of $Lt$ of $_r$ and $_m$ and elements $x_822$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_823 , x_822)$, for all elements $x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_821$.\nassistant\n", "label": "div_mod_spec_rect_Type3 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_821 : div_mod_spec _n _m _q _r -> Type3) -> _H_div_mod_spec_intro : (x_823 : Lt _r _m -> x_822 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) -> x_821 : div_mod_spec _n _m _q _r -> Q_ x_821 .", "predict": "div_mod_spec_rect_Type3 : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Proof (forall (Q_ : Elem (div_mod_spec n m q r) -> Elem Type3) -> forall (x_823 : Elem (Lt r m) -> x_822 : Elem (Eq n (q * m + r)) -> Proof (Q_ (div_mod_spec_intro n m q r x_823 x_822))) -> forall (x_821 : Elem (div_mod_spec n m q r)) -> Proof (Q_ x_821)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_0. Let $n$ be a natural number. Let $B$ be a set. Then for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the sum of $i$ and $1$ and $f$ applied to $0$.\nassistant\n", "label": "Axiom bigop_0 : forall n : nat, forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> B), bigop (n + 1) (fun i => true) B nil (op B nil op) (fun i => f i) = op B nil op (bigop n (fun i => true) B nil (op B nil op) (fun i => f (i + 1))) (f 0) .", "predict": "Axiom bigop_0 : forall n : nat, forall B : Set, forall nil : B, forall op : Aop -> B -> B, forall f : nat -> B, op (bigop (n + 1) (fun i => true) B nil (op B nil) (op (B, nil) op) (fun i => f i)) = op B nil (op (bigop n (fun i => true) B nil (op B nil) (op (B, nil) op) (fun i => f (i + 1))) (f 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_Psi_exp. Låt $n \\in N$. Då $Psi (2 n)\\leq 2 ^ pred (2 n)Psi (n)$.\nassistant\n", "label": "postulate le_Psi_exp : (n : Nat) -> Leq (Psi (times 2 n)) (times (pow 2 (pred (times 2 n))) (Psi n))", "predict": "postulate le_Psi_exp : (n : Nat) -> Psi (times 2 n) <= pow 2 (pred (times 2 n)) * Psi n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nComm. För alla mängder $A$, för alla element $nil$ av $A$, för alla element $xxx$ av $ACop$ av $A$ och $nil$, för alla element $a$ och $b$ av $A$, $op (A , nil , aop (A , nil , xxx), a , b)= op (A , nil , aop (A , nil , xxx), b , a)$.\nassistant\n", "label": "Axiom comm : forall A : Set, forall nil : A, forall xxx : ACop A nil, forall a : A, forall b : A, op A nil (aop A nil xxx) a b = op A nil (aop A nil xxx) b a .", "predict": "Axiom comm : forall A : Set, forall nil : A, forall ACop : A -> A, forall xxx : ACop nil, forall a : A, forall b : A, op A nil (aop A nil xxx) a b = op A nil (aop A nil xxx) b a ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDiv_mod_spec_inv_rect_CProp1. Låt $x1$ och $x2$ och $x3$ och $x4$ vara naturliga tal. Låt $Hterm$ vara ett element av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$. Låt $P$ vara en funktion från element $_z1488$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till påståenden. Då för alla funktioner $_H1$ från element $x_855$ av $Lt$ av $x4$ och $x2$ och element $x_854$ av $Eq$ av $x1$ och $x3 x2 + x4$ och element $_z1489$ av $Eq$ av $Hterm$ och $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_855 , x_854)$ till element av $P$ av $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_855 , x_854)$, håller $P$ för $Hterm$.\nassistant\n", "label": "div_mod_spec_inv_rect_CProp1 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1488 : div_mod_spec x1 x2 x3 x4 -> Prop) -> _H1 : (x_855 : Lt x4 x2 -> x_854 : Eq x1 (plus (times x3 x2) x4) -> _z1489 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P Hterm .", "predict": "div_mod_spec_inv_rect_CProp1 : x1 : Elem Nat -> x2 : Elem Nat -> x3 : Elem Nat -> x4 : Elem Nat -> Hterm : Elem (div_mod_spec x1 x2 x3 x4) -> P : (x : Elem (div_mod_spec x1 x2 x3 x4)) -> Proof (forall (x : Elem (Lt x4 (times x2 x4))) -> forall (x : Elem (Eq x1 (plus (times x3 x2) x4))) -> forall (x : Elem (Eq Hterm (div_mod_spec_intro (x1 , x2 , x3 , x4 , x , x)))) -> Proof (P (div_mod_spec_intro (x1 , x2 , x3 , x4 , x , x)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15441. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Lt (nd 0) n -> Leq n m -> Leq n q -> Proof (ex (Nat (f (a : Elem Nat) => ex (Nat (f (b : Elem Nat) => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))))) -> Proof (and (Lt n (nd 1)) (Leq n m) (Leq n (plus q (nd 1))) (Neq n (div m))) -> Proof (a : Elem Nat) -> Proof (ex (Nat (f (b : Elem Nat) => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))))) -> Proof (b : Elem Nat) -> Proof (or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> Proof (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Proof (Eq (minus n b) (gcd_aux q n (mod m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_mod_spec_rect_CProp1. Låt $_n , _m , _q , _r \\in N$. Då för alla funktioner $Q_$ från element $_x_853$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden, för alla funktioner $_H_div_mod_spec_intro$ från element $x_855$ av $Lt$ av $_r$ och $_m$ och element $x_854$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_855$ och $x_854$, för alla element $x_853$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_853$.\nassistant\n", "label": "postulate div_mod_spec_rect_CProp1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_855 : Lt _r _m) -> (x_854 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> (x_853 : div_mod_spec _n _m _q _r) -> Q_ x_853", "predict": "postulate div_mod_spec_rect_CProp1 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> all (Q : div_mod_spec n m q r -> Prop) -> all (H_div_mod_spec_intro : Lt r m /\\ Eq n (plus (times q m) r)) -> all (div_mod_spec_intro n m q r) -> all (div_mod_spec n m q r) Q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_10331. Soit $n \\in N$. Supposons que $5 < n$. Soit $m \\in N$. Supposons que $6 \\leq m$. Supposons que $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a$ un nombre naturel. Supposons que $6 \\leq a$. Supposons que $2 (a + 1)+ 1 \\leq 2 ^ a$. Soit $x2515 , x2516 \\in N$. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (5 < n) -> m : Elem Nat -> Proof (6 <= m) -> Proof (pow (plus m 1) 2 <= pow m 2) -> a : Elem Nat -> Proof (6 <= a) -> Proof (pow 2 (plus a 1) + 1 <= pow a 2) -> x2515 : Elem Nat -> x2516 : Elem Nat -> Proof (and (Eq x2515 x2516) (plus (div x2515 x2516) (mod x2515 x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMin_body. Låt $__$ och $__1$ vara naturliga tal. Då för alla funktioner $__2$ från naturliga tal $__2$ till sanningsvärden, $Nat$.\nassistant\n", "label": "min_body : __ : Nat -> __1 : Nat -> __2 : (__2 : Nat -> bool) -> Nat .", "predict": "min_body : ($__ : Elem Nat) -> ($__1 : Elem Nat) -> Proof (forall (f : Elem (Func (nd 1) (nd 1) (nd 0))) (Eq (f __) (f __1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nMax_cases. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ vara ett naturligt tal. Då är $f$ applicerat på $n$ lika med $true$ och $max$ applicerat på summan av $n$ och $1$ och $f$ är lika med $n$ eller $f$ applicerat på $n$ är lika med kontradiktion och $max$ applicerat på summan av $n$ och $1$ och $f$ är lika med $max$ applicerat på $n$ och $f$.\nassistant\n", "label": "Axiom max_cases : forall f : ((x__ : nat) -> bool), forall n : nat, f n = true /\\ max (n + 1) f = n \\/ (f n = false /\\ max (n + 1) f = max n f) .", "predict": "Axiom max_cases : forall f : nat -> Prop, forall n : nat, (f n = true /\\ max (n + 1) = f n \\/ f n = n \\/ f n = max n f) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_log. Soit $p , n , m \\in N$. Supposons que $1 < p$ et $n \\leq m$. Alors $\\log_ p {n}\\leq \\log_ p {m}$.\nassistant\n", "label": "postulate le_log : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Leq n m) -> Leq (log p n) (log p m)", "predict": "postulate le_log : (p : Nat) -> (n : Nat) -> (m : Nat) -> and (Lt 1 p) (Leq n m) -> Leq (log p n) (log p m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMonotonic_le_minus_l. Låt $p$ och $q$ och $n$ vara naturliga tal. Anta att $q$ är mindre än eller lika med $p$. Då är skillnaden mellan $q$ och $n$ mindre än eller lika med skillnaden mellan $p$ och $n$.\nassistant\n", "label": "postulate monotonic_le_minus_l : (p : Nat) -> (q : Nat) -> (n : Nat) -> (_ : Leq q p) -> Leq (minus q n) (minus p n)", "predict": "postulate monotonic_le_minus_l : (p : Nat) -> (q : Nat) -> (n : Nat) -> Leq q p -> Leq (minus q n) (minus p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_16001. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $c n - d m = 1$, alors $n c - m d$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "axiom let_clause_16001 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : gcd m n = n * c - m * d", "predict": "axiom let_clause_16001 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : 1 = gcd n m) (c : Nat) (clearme : ex Nat (d => Eq (1 - c * n + d * m) 1 ∧ Eq (1 - d * m + c * n) 1)) (d : Nat) : c * n - d * m = 1 ∨ d * m - c * n = 1 ∧ c * n - d * m = 1 → gcd m n = n * c - m * d"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDivides_gcd_aux_mn. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Anta att $n \\leq m$. Då om $n \\leq p$, så är $gcd_aux (p , m , n)$ delbart med $m$ och $gcd_aux (p , m , n)$ är delbart med $n$.\nassistant\n", "label": "divides_gcd_aux_mn : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n p -> and (divisible (gcd_aux p m n) m) (divisible (gcd_aux p m n) n) .", "predict": "divides_gcd_aux_mn : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (and (div (gcd_aux p m n) m) (div (gcd_aux p m n) n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDiv_mod_spec_rect_CProp0_body. Soit $_n , _m , _q , _r \\in N$. Soit $Q_$ une fonction des éléments $_x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_859$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_858$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_859$ et $x_858$. Soit $x_857$ un élément de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$. Alors $Q_$ tient pour $x_857$.\nassistant\n", "label": "div_mod_spec_rect_CProp0_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_857 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_859 : Lt _r _m -> x_858 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> x_857 : div_mod_spec _n _m _q _r -> Q_ x_857 .", "predict": "div_mod_spec_rect_CProp0_body : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Q : (x : Elem (div_mod_spec n m)) -> (x : Elem Nat) -> (x : Eq n (plus (times q m) r)) -> Prop -> Proof (Lt r m) -> Proof (Eq n (plus (times q m) r)) -> Proof (Q (div_mod_spec_intro n m q r)) -> Proof (forall (x : Elem (div_mod_spec n m)) (Q x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1607. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$.\nassistant\n", "label": "let_clause_1607 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_1607 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (0 < n) -> Proof (0 < m) -> Proof (GreatestCommonDivisor n m = 1) -> c : Elem Nat -> Proof (clearme : Elem (ex : Elem (Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times d m) (times c n)) 1)))) -> d : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (GreatestCommonDivisor m n) (minus (times m d) (times n c)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15601. Soit $n , m \\in N$. Supposons que $0 < m$. Supposons que $0 = n$. Supposons que $0$ est divisible par $m$. Soit $q \\in N$. Supposons que $m = 0 q$. Alors $n = 0$.\nassistant\n", "label": "let_clause_15601 : n : Nat -> m : Nat -> posn : Lt 0 m -> eqn0 : Eq 0 n -> _clearme : divisible 0 m -> q : Nat -> eqm : Eq m (times 0 q) -> Eq n 0 .", "predict": "let_clause_15601 : n : Elem Nat -> m : Elem Nat -> Proof (if (and (Lt (nd 0) m) (Eq n (nd 0)) (Divisible (nd 0) m)) (q : Elem Nat -> Proof (if (Eq m (times (nd 0) q)) (Eq n (nd 0)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp0. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_859$ of $Lt$ of $_r$ and $_m$ and elements $x_858$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_859$ and $x_858$. Let $x_857$ be an element of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$. Then $Q_$ holds for $x_857$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp0 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_857 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_859 : _r < _m) -> (x_858 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)), forall x_857 : div_mod_spec _n _m _q _r, Q_ x_857 .", "predict": "Axiom div_mod_spec_rect_CProp0 : forall n : nat, forall m : nat, forall q : nat, forall r : nat, (Q : div_mod_spec n m q r -> Prop) -> H_div_mod_spec_intro : Lt r m /\\ Eq n (q * m + r) -> x_857 : div_mod_spec n m q r -> Q x_857 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInvert_permut_body. Let $__$ be a natural number. Let $__1$ be a function from natural numbers $__1$ to natural numbers. Let $__2$ be a natural number. Then $Nat$.\nassistant\n", "label": "Axiom invert_permut_body : forall x__ : nat, forall __1 : ((__1 : nat) -> nat), forall __2 : nat, nat .", "predict": "Axiom invert_permut_body : forall $n : nat, forall $f : nat -> nat, forall $m : nat, Nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15624. Soit $m , n , a , b \\in N$. Alors si $0 < n$, alors si $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$, alors si $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "postulate let_clause_15624 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate clause_15624 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> if (and (if (Lt 0 n) (if (Lt 0 m) (Eq 1 (gcd n m)))) (forall Nat (c => forall (x : ex) => forall Nat (d => if (or (Eq 1 (minus (times c n) (times d m))) (Eq 1 (minus (times d m) (times c n)))) (Eq 1 (minus (times m d) (times n c))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nPermut_fg. Soient $f$ et $g$ des fonctions des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $__$ un élément de $permut$ de $f$ et de $n$. Alors pour tous les éléments $__1$ de $permut$ de $g$ et de $n$, $permut$ tient pour la fonction qui envoie $m$ à $f$ appliqué à $g$ appliqué à $m$ et $n$.\nassistant\n", "label": "Axiom permut_fg : forall f : ((x__ : nat) -> nat), forall g : ((x__ : nat) -> nat), forall n : nat, forall x__ : permut f n, forall __1 : permut g n, permut (fun m => f (g m)) n .", "predict": "Axiom permut_fg : forall f : nat -> nat, forall g : nat -> nat, forall n : nat, forall x : permut f n, forall y : permut g n, permut (fun m => f (g m) n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_plus_n. Soit $n , m \\in N$. Alors $m \\leq n + m$.\nassistant\n", "label": "postulate le_plus_n : (n : Nat) -> (m : Nat) -> Leq m (plus n m)", "predict": "postulate le_plus_n : (n : Nat) -> (m : Nat) -> leq m (plus n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mell", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": "an produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $x \\in Lt$ av $0$ och $n$. Anta att $x$ inte är mindre än $n$. Anta att $x$ inte är större än $n$. Anta att $x$ inte är lika med $n$. Anta att $x$ inte är lika med $0$. Anta att $x$ inte är lika med $n - 1$. Låt $y \\in Lt$ av $0$ och $n$. Anta att $y$ inte är mindre än $n$. Anta att $y$ inte är större än $n$. Anta att $y$ inte är lika med $n$. Anta att $y$ inte är lika med $0$. Anta att $y$ inte är lika med $n - 1$. Anta att $y$ inte är lika med $x$. Anta att $y$ inte är lika med $x + 1$. Anta att $y$ inte är lika med $x - 1$. Anta att $y$ inte är lika med $x + n$. Anta att $y$ inte är lika med $x - n$. Anta att $y$ inte är lika med $x + n - 1$. Anta att $y$ inte är lika med $x - n + 1$. Anta att $y$ inte är lika med $x + n + 1$. Anta att $y$ inte är lika med $x - n - 1$. Anta att $y$ inte är lika med $x + n - n$. Anta att $y$ inte är lika med $x - n + n$. Anta att $y$ inte är lika med $x + n + n$. Anta att $y$ inte är lika med $x - n - n$. Anta att $y$ inte är lika med $x + n + n - 1$. Anta att $y$ inte är lika med $x -"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_Psi2. Let $n \\in N$. Then if $1$ is less than $n$, then the exponentiation of $2$ and the quotient of $n$ and $2$ is less than or equal to $Psi$ applied to $n$.\nassistant\n", "label": "Axiom le_exp_Psi2 : forall n : nat, forall x__ : (1 < n), Leq (pow 2 (n / 2)) (Psi n) .", "predict": "Axiom le_exp_Psi2 : forall n : nat, (1 < n -> pow 2 (n / 2) <= Psi n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nACop_inv_rect_Type3. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1578$ de $ACop$ de $x1$ et de $x2$ à des éléments de $Type3$. Soit $_H1$ une fonction des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1579$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "postulate ACop_inv_rect_Type3 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1578 : ACop x1 x2) -> Type3) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1579 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm", "predict": "postulate ACop_inv_rect_Type3 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> P : (z1578 : ACop x1 x2) -> Eq (op x1 x2 (aop z1578) (a z1578) (b z1578)) (op x1 x2 (aop z1578) (b z1578) (a z1578)) -> Eq Hterm (mk_ACop x1 x2 (aop z1578) (comm z1578)) -> Eq (P (mk_ACop x1 x2 (aop z1578) (comm z1578))) Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Then if $a \\leq n$ and $f (a)= i$ and $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$ and $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x' : a ≤ n ∧ f a = i ∧ a ≤ n) : ∀ b : Nat, (b ≤ n ∧ f b = j ∧ b ≤ n → ∀ (i0 : Nat) → ∀ (x : Leq i0 n) → ∀ (y : Leq (f i0) n) → a = b → f a = i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nP_ord_exp. Låt $n , m , i \\in N$. Anta att $0 < m$ och $mod (n , m)$ inte är lika med $0$. Låt $p$ vara ett naturligt tal. Anta att $i \\leq p$. Då $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.\nassistant\n", "label": "p_ord_exp : n : Nat -> m : Nat -> i : Nat -> __ : Lt 0 m -> __1 : not (Eq (mod n m) 0) -> p : Nat -> __2 : Leq i p -> Eq (p_ord_aux p (times (pow m i) n) m) (mk_Prod Nat Nat i n) .", "predict": "p_ord_exp : (n : Elem Nat) -> (m : Elem Nat) -> (i : Elem Nat) -> Proof (and (Lt (nd 0) m) (Neq (mod n m) (nd 0))) -> Proof (forall Nat (p => Leq i p)) -> Proof (Eq (p_ord_aux p (pow m i) m) (mk_Prod (Nat) (Nat) i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1033. Soit $n$ un nombre naturel. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1 \\in N$. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$ et des fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n1$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$. Soit $H1$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$. Soit $H2$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$. Supposons que $p2 (n1)= true$. Supposons que $p1 (n1)= true$. Alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> g1 : (__ : Nat -> Nat) -> g2 : (__ : Nat -> Nat) -> n1 : Nat -> Hind : (__ : (i : Nat -> __ : Lt i n1 -> __1 : Eq (p1 i) true -> Eq (p2 i) true) -> __1 : (i : Nat -> __1 : Lt i n1 -> __2 : Eq (p1 i) true -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (i : Nat => p1 i) Nat 0 plus (i : Nat => g1 i)) (bigop n1 (i : Nat => p2 i) Nat 0 plus (i : Nat => g2 i))) -> H1 : (i : Nat -> __ : Lt i (plus n1 (nd 1)) -> __1 : Eq (p1 i) true -> Eq (p2 i) true) -> H2 : (i : Nat -> __ : Lt i (plus n1 (nd 1)) -> __1 : Eq (p1 i) true -> Leq (g1 i) (g2 i)) -> Hp2 : Eq (p2 n1) true -> Hp1 : Eq (p1 n1) true -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> p1 : Elem (Nat -> Bool) -> p2 : Elem (Nat -> Bool) -> g1 : Elem (Nat -> Nat) -> g2 : Elem (Nat -> Nat) -> n1 : Elem Nat -> Hind : Elem (forall i : Elem Nat -> forall x : Elem (Lt i n1) -> Eq (p1 i) true -> Eq (p2 i) true -> Leq (g1 i) (g2 i) -> Leq (bigop n1 (lambda i => (p1 i)) Nat 0 plus (lambda i => (g1 i))) -> Leq (bigop n1 (lambda i => (p2 i)) Nat 0 plus (lambda i => (g2 i)))) -> H1 : Elem (forall i : Elem Nat -> forall x : Elem (Lt i (plus n1 1)) -> Eq (p1 i) true -> Eq (p2 i) true) -> H2 : Elem (forall i : Elem Nat -> forall x : Elem (Lt i (plus n1 1)) -> Leq (g1 i) (g2 i)) -> (p2 n1 = true) -> (p1 n1 = true) -> Proof (forall x2515 : Elem Nat -> forall x2516 : Elem Nat -> Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2515) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type3. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_921$ of $range$ of $_A$ to elements of $Type3$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_921$ of $range$ of $_A$, $Q_$ holds for $x_921$.\nassistant\n", "label": "postulate range_rect_Type3 : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921", "predict": "postulate range_rect_Type3 : (A : Set) -> all (Q : range A -> Set3) -> all (H : (mk_range : enum Nat -> A -> Nat) -> upto -> filter Nat -> mk_range A (enum Nat) upto (filter Nat)) -> all (range A) (Q _)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFound_min_spec. For all natural numbers $n$ and $b$, for all functions $f$ from natural numbers to booleans, for all natural numbers $m$, if $b$ is less than or equal to $m$, then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "found_min_spec : n : Nat -> b : Nat -> f : (__ : Nat -> bool) -> m : Nat -> __ : Leq b m -> __1 : Lt m (plus n b) -> __2 : Eq (f m) true -> __3 : (i : Nat -> __3 : Leq b i -> __4 : Lt i m -> Eq (f i) false) -> min_spec n b f m .", "predict": "found_min_spec : n : Elem Nat -> b : Elem Nat -> f : Proof (forall Nat (m => Bool (Leq b m))) -> Proof (forall Nat (m => Bool (Lt (plus n b) m))) -> Proof (forall Nat (m => Bool (Eq (f m) true))) -> Proof (forall Nat (i => forall Elem (Leq b i) => forall Elem (Lt i m) => forall Elem (Eq (f i) (Eq (f m) true)) => absurdity)) -> Proof (forall Nat (n => forall Nat (b => forall Proof (forall Nat (m => Bool (Leq b m))) => forall Proof (forall Nat (m => Bool (Lt (plus n b) m))) => forall Proof (forall Nat (m => Bool (Eq (f m) true))) => min_spec n b f m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_aux_body. Låt $_p$ och $_m$ och $_n$ vara naturliga tal. Då $Nat$.\nassistant\n", "label": "postulate div_aux_body : (_p : Nat) -> (_m : Nat) -> (_n : Nat) -> Nat", "predict": "postulate div_aux_body : (p : Nat) -> (m : Nat) -> (n : Nat) -> Type"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_div_S_div. Pour tous les nombres naturels $n$ et $m$, si $0 < m$ et $m ^ 2 \\leq n$, alors $n \\div (m + 1)< n \\div m$.\nassistant\n", "label": "axiom lt_div_S_div (n m : Nat) (x__ : 0 < m) (__1 : pow m 2 ≤ n) : n / (m + 1) < n / m", "predict": "axiom lt_div_S_div (n m : Nat) : 0 < m ∧ pow m 2 ≤ n → n / (m + 1) < n / m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1617. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "let_clause_1617 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (gcd p m) (minus (times p a) (times m b)) .", "predict": "let_clause_1617 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Eq (1) (gcd p m)) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> let $_clearme0 : Proof (ex (Nat) (b => Disj (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> b : Elem Nat -> Proof (Eq (gcd p m) (if (or (Eq (minus (times a p) (times b m)) (1)) (Eq (minus (times b m) (times a p)) (gcd p m))) (Eq (minus (times p a) (times m b)) (gcd p m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1561. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Alors pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b = 1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> and (Lt 0 p) (Eq 1 (gcd p m)) -> Divides p (times m n) -> c : Nat -> Eq (times m n) (times p c) -> a : Nat -> Eq (times m n) (times a p) -> ex : Elem (forall Nat (b => or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (and (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (minus (times b m) (times a p)) 1))) -> Eq (minus (times p a) (times m b)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nFound_max_spec. Låt $n \\in N$. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $m$ vara ett naturligt tal. Då om $m < n$ och $f (m)= true$, så för alla funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, håller $max_spec$ för $n$ och $f$ och $m$.\nassistant\n", "label": "axiom found_max_spec (n : Nat) (f : (x__ : Nat) -> bool) (m : Nat) (x__ : m < n) (__1 : f m = true) (__2 : (i : Nat) -> (__2 : m < i) -> (__3 : i < n) -> f i = false) : max_spec n f m", "predict": "axiom found_max_spec (n : Nat) (f : Nat → Prop) (m : Nat) (x : m < n ∧ f m) : ∀ g : Nat → Nat → Lt m g → Lt g n → Eq (f g) → contradiction → max_spec n f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nACop_inv_rect_Type0. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1596$ de $ACop$ de $x1$ et de $x2$ à des ensembles. Soit $_H1$ une fonction des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1597$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom ACop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1596 : ACop x1 x2) -> Set), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1597 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm .", "predict": "Axiom cop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : forall z1596 : ACop x1 x2 -> Set, forall aop : Aop x1 x2, forall comm : forall a : x1, forall b : x1, Eq (op x1 x2 aop a) (op x1 x2 aop b) /\\ Eq (op x1 x2 aop b) (op x1 x2 aop a), forall z1597 : Eq Hterm (mk_ACop x1 x2 aop comm) -> P (mk_ACop x1 x2 aop comm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDiv_mod_spec_inv_rect_CProp0. Låt $x1 , x2 , x3 , x4 \\in N$. Då för alla element $Hterm$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$, för alla funktioner $P$ från element $_z1494$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till påståenden, för alla funktioner $_H1$ från element $x_859$ av $Lt$ av $x4$ och $x2$ och element $x_858$ av $Eq$ av $x1$ och $x3 x2 + x4$ och element $_z1495$ av $Eq$ av $Hterm$ och $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_859 , x_858)$ till element av $P$ av $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_859 , x_858)$, håller $P$ för $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_rect_CProp0 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1494 : div_mod_spec x1 x2 x3 x4) -> Prop), forall _H1 : ((x_859 : x4 < x2) -> (x_858 : x1 = x3 * x2 + x4) -> (_z1495 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_859 x_858) -> P (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858)), P Hterm .", "predict": "Axiom div_mod_spec_inv_rect_CProp0 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : div_mod_spec x1 x2 x3 x4 -> Prop, forall _H1 : Lt x4 x2 /\\ Eq x1 (x3 * x2 + x4), forall _z1495 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 _H1), P (div_mod_spec_intro x1 x2 x3 x4 _H1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nQuotient. För alla naturliga tal $n$ och $m$ och $q$, om $m$ är lika med produkten av $n$ och $q$, så är $n$ delbart med $m$.\nassistant\n", "label": "postulate quotient : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Eq m (times n q)) -> divisible n m", "predict": "postulate quotient : (n : Nat) -> (m : Nat) -> (q : Nat) -> Eq m (times n q) -> Divisible n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nMin_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $t$ et $m$ des nombres naturels. Supposons que $m < t$ et $f (m)= true$. Soit $k , b \\in N$. Supposons que $b \\leq m$. Alors pour toutes les fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f (i)$ et de contradiction, si $t = k + b$, alors $min (k , b , f)= m$.\nassistant\n", "label": "axiom min_exists (f : (x__ : Nat) -> bool) (t m : Nat) (x__ : m < t) (__1 : f m = true) (k b : Nat) (__2 : b ≤ m) (__3 : (i : Nat) -> (__3 : b ≤ i) -> (__4 : i < m) -> f i = false) (__4 : t = k + b) : min k b f = m", "predict": "axiom min_exists (f : Nat → Bool) (t m : Nat) (x : m < t ∧ f m = true) (k b : Nat) (y : b ≤ m) : ∀ g : Nat → Nat → Leq b g ∧ Lt g m → Eq (f g) contradiction, t = k + b → min k b f = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp5. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Then for all functions $_H_div_mod_spec_intro$ from elements $x_843$ of $Lt$ of $_r$ and $_m$ and elements $x_842$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_843 , x_842)$, for all elements $x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_841$.\nassistant\n", "label": "div_mod_spec_rect_CProp5 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_841 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_843 : Lt _r _m -> x_842 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> x_841 : div_mod_spec _n _m _q _r -> Q_ x_841 .", "predict": "div_mod_spec_rect_CProp5 : (n : Elem Nat) -> (m : Elem Nat) -> (q : Elem Nat) -> (r : Elem Nat) -> (Q_ : Proof (forall (x_841 : Elem (div_mod_spec n m q r)) -> Prop)) -> Proof (forall (H_div_mod_spec_intro : Proof (forall (x_843 : Elem (Lt r m)) -> forall (x_842 : Elem (Eq n (q + m))) -> Elem (Q_ (div_mod_spec_intro n m q r x_843 x_842)))) -> forall (x_841 : Elem (div_mod_spec n m q r)) -> Q_ x_841) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIncreasing_to_le. For all functions $f$ from natural numbers to natural numbers, for all elements $__$ of $increasing$ of $f$, for all natural numbers $m$, $ex$ holds for $Nat$ and the function that maps $i$ to $Leq (m , f (i))$.\nassistant\n", "label": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))", "predict": "postulate increasing_to_le : (f : Nat -> Nat) -> all (increasing f) (\\ x -> all Nat (\\ m -> ex (Nat , (\\ i -> Leq m (f i))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nIncreasing_to_le. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $__$ un élément de $increasing$ de $f$. Soit $m$ un nombre naturel. Alors $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à $Leq$ appliqué à $m$ et $f$ appliqué à $i$.\nassistant\n", "label": "Axiom increasing_to_le : forall f : ((x__ : nat) -> nat), forall x__ : increasing f, forall m : nat, ex nat (fun i => Leq m (f i)) .", "predict": "Axiom increasing_to_le : forall f : nat -> nat, forall x : increasing f, forall m : nat, (ex : Nat) -> Leq (m, f (ex)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1545. Let $m$ and $n$ be natural numbers. Assume that $0$ is both equal to the greatest common divisor of $m$ and $n$ and divisible by $n$. Let $q1$ be a natural number. Assume that $n = 0 q1$ and $0$ is divisible by $m$. Let $q2 \\in N$. Then if $m = 0 q2$, then $m = 0$.\nassistant\n", "label": "let_clause_1545 : m : Nat -> n : Nat -> H : Eq (gcd m n) 0 -> _clearme : divisible 0 n -> q1 : Nat -> H1 : Eq n (times 0 q1) -> _clearme0 : divisible 0 m -> q2 : Nat -> H2 : Eq m (times 0 q2) -> Eq m 0 .", "predict": "let_clause_1545 : m : Elem Nat -> n : Elem Nat -> Proof (and (Eq 0 (gcd m n)) (divisible n 0)) -> q1 : Elem Nat -> Proof (and (Eq n (times 0 q1)) (divisible 0 m)) -> q2 : Elem Nat -> Proof (if (Eq m (times 0 q2)) (Eq m 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMax_spec_ind_body. Soit $_n$ un nombre naturel. Soit $_f$ une fonction des nombres naturels à des valeurs booléennes. Soit $Q_$ une fonction des nombres naturels $x_971$ et des éléments $_x_972$ de $max_spec$ de $_n$ et de $_f$ et de $x_971$ à des propositions. Soit $_H_found_max_spec$ une fonction des nombres naturels $m$ et des éléments $x_975$ de $Lt$ de $m$ et de $_n$ et des éléments $x_974$ de $Eq$ de $_f (m)$ et de $true$ et des fonctions $x_973$ des nombres naturels $i$ et des éléments de $Lt$ de $m$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $_n$ à des éléments de $Eq$ de $_f (i)$ et de contradiction à des éléments de $Q_$ de $m$ et de $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$. Alors pour toutes les fonctions $_H_not_found_max_spec$ des fonctions $x_976$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $_n$ à des éléments de $Eq$ de $_f (i)$ et de contradiction à des éléments de $Q_$ de $0$ et de $not_found_max_spec (_n , _f , x_976)$, pour tous les nombres naturels $x_971$, pour tous les éléments $x_972$ de $max_spec$ de $_n$ et de $_f$ et de $x_971$, $Q_$ tient pour $x_971$ et $x_972$.\nassistant\n", "label": "postulate max_spec_ind_body : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972", "predict": "postulate max_spec_ind_body : (n : Nat) -> (f : Nat -> Bool) -> Q : (x : Nat) -> (n : Nat) -> (f : Nat -> Bool) -> Prop -> H_found_max_spec : (m : Nat) -> (x : Lt m n) -> Eq (f m) true -> H_not_found_max_spec : (x : Nat -> Lt x n -> Eq (f x) contradiction) -> Prop -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_exp1. Let $n , m , p \\in N$. Assume that $0$ is less than $p$. Then if $n$ is less than $m$, then the exponentiation of $n$ and $p$ is less than the exponentiation of $m$ and $p$.\nassistant\n", "label": "lt_exp1 : n : Nat -> m : Nat -> p : Nat -> __ : Lt 0 p -> __1 : Lt n m -> Lt (pow n p) (pow m p) .", "predict": "lt_exp1 : (n : Elem Nat) -> (m : Elem Nat) -> (p : Elem Nat) -> Proof (Lt 0 p) -> Proof (Lt n m) -> Proof (Lt (pow n p) (pow m p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNot_not_bertrand_to_bertrand1. Låt $n \\in N$. Anta att det inte är fallet att $not_bertrand$ håller för $n$. Låt $x \\in N$. Anta att $n$ är mindre än eller lika med $x$. Då om $x$ är mindre än eller lika med produkten av $2$ och $n$, så för alla funktioner $__3$ från naturliga tal $p$ och element $__3$ av $Lt$ av $x$ och $p$ och element $__4$ av $Leq$ av $p$ och produkten av $2$ och $n$ till element av $not$ av $prime$ applicerat på $p$, håller $ex$ för $Nat$ och funktionen som avbildar $p$ som konjunktionen av konjunktionen av $Lt$ applicerat på $n$ och $p$ och $Leq$ applicerat på $p$ och $x$ och $prime$ applicerat på $p$.\nassistant\n", "label": "axiom not_not_bertrand_to_bertrand1 (n : Nat) (x__ : ¬ not_bertrand n) (x : Nat) (__1 : n ≤ x) (__2 : x ≤ 2 * n) (__3 : (p : Nat) -> (__3 : x < p) -> (__4 : p ≤ 2 * n) -> ¬ prime p) : ex Nat (λ p => n < p ∧ p ≤ x ∧ prime p)", "predict": "axiom not_not_bertrand_to_bertrand1 (n : Nat) (x : n ≤ x) : x ≤ 2 * n → ∀ f : Nat → Lt x p → Leq p (2 * n) → not (prime p) → ex Nat (λ p, conj (Lt n p) (Leq p x) (prime p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Eq (gcd n m) 1) -> c : Nat -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (gcd m n) (minus (times n c) (times m d))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nPad_bigop_nil. Låt $k$ och $n$ vara naturliga tal. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Då för alla element $nil$ av $B$, för alla element $op$ av $Aop$ av $B$ och $nil$, för alla funktioner $f$ från naturliga tal till element av $B$, om $n$ är mindre än eller lika med $k$, så för alla funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Leq$ av $n$ och $i$ och element $__2$ av $Lt$ av $i$ och $k$ till element av $or$ av $Eq$ applicerat på $p$ applicerat på $i$ och kontradiktion och $Eq$ applicerat på $f$ applicerat på $i$ och $nil$, är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.\nassistant\n", "label": "postulate pad_bigop_nil : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i))", "predict": "postulate pad_bigop_nil : (k : Nat) -> (n : Nat) -> (p : Nat -> Prop) -> Set -> all (B : Set) -> all (op : Aop B) -> all (nil : B) -> all (f : Nat -> B) -> (n <= k) -> all (i : Nat) -> all (x : Leq n i) -> all (y : Lt i k) -> Eq (bigop n (fun i -> p i) B nil (op B nil) op (fun i -> f i)) (bigop k (fun i -> p i) B nil (op B nil) op (fun i -> f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15625. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq (gcd n m) 1 -> all Nat (\\ c -> all (ex : Nat) -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (minus (times m d) (times n c)) 1)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_16005. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_16005 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_16005 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Eq (Gcd n m) (nd 1))) -> c : Elem Nat -> Proof (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times d m) (times c n)) (Gcd m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_73. Låt $n$ och $m$ och $p$ vara naturliga tal. Då om $0 < p$, så för alla naturliga tal $x134$ och $x135$ och $x136$, $x134 + (x135 + x136)= x135 + (x134 + x136)$.\nassistant\n", "label": "Axiom let_clause_73 : forall n : nat, forall m : nat, forall p : nat, forall posp : (0 < p), forall x134 : nat, forall x135 : nat, forall x136 : nat, x134 + (x135 + x136) = x135 + (x134 + x136) .", "predict": "Axiom let_clause_73 : forall n : nat, forall m : nat, forall p : nat, (0 < p -> forall x134 : nat, forall x135 : nat, forall x136 : nat, x134 + (x135 + x136) = x135 + (x134 + x136)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$. Then $m d - n c = 1$.\nassistant\n", "label": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> let me : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> d : Nat -> and (or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times d m) (times c n)) 1)) -> Eq (minus (times m d) (times n c)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLog_div. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1 < p$ and $0 < m$. Assume that $m \\leq n$. Then $\\log_ p {(n \\div m)}\\leq \\log_ p {n}- \\log_ p {m}$.\nassistant\n", "label": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) .", "predict": "log_div : (p : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (and (Gt (nd 1) p) (Gt (nd 0) m) (Leq m n)) -> Proof (Leq (minus (log p n) (log p m)) (log p (div n m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nPermut_n_to_eq_n. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Då för alla element $__$ av $permut$ av $h$ och $n$, för alla funktioner $__1$ från naturliga tal $m$ och element $__1$ av $Lt$ av $m$ och $n$ till element av $Eq$ av $h$ applicerat på $m$ och $m$, är $h$ applicerat på $n$ lika med $n$.\nassistant\n", "label": "axiom permut_n_to_eq_n (h : (x__ : Nat) -> Nat) (n : Nat) (x__ : permut h n) (__1 : (m : Nat) -> (__1 : m < n) -> h m = m) : h n = n", "predict": "axiom permut_n_to_eq_n (h : Nat → Nat) (n : Nat) : ∀ p : perm (h, n), ∀ f : Nat → Nat → Lt m n → Eq (h m) m, h n = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPos_div. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $0$ is less than $n$, then if $mod$ applied to $n$ and $m$ is equal to $0$, then $0$ is less than the quotient of $n$ and $m$.\nassistant\n", "label": "axiom pos_div (n m : Nat) (x__ : 0 < m) (__1 : 0 < n) (__2 : mod n m = 0) : 0 < n / m", "predict": "axiom pos_div (n m : Nat) (x : 0 < m) (y : 0 < n) (z : mod n m = 0) : 0 < n / m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_ind. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233 \\in N$. Let $x_1232$ and $x_1231$ be elements of $B$. Then for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.\nassistant\n", "label": "Axiom lstar_ind : forall B : Set, forall _R : relation B, forall Q_ : ((x_1233 : nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop), forall _H_lstar_O : ((b : B) -> Q_ 0 b b (lstar_O B _R b)), forall _H_lstar_S : ((b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (l + 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)), forall x_1233 : nat, forall x_1232 : B, forall x_1231 : B, forall x_1234 : lstar B _R x_1233 x_1232 x_1231, Q_ x_1233 x_1232 x_1231 x_1234 .", "predict": "Axiom lstar_ind : forall B : Set, forall R : relation B, forall Q : forall x1233 : nat, x1232 : B, x1231 : B, x1234 : lstar B, R x1233 x1232 x1231 x1234 -> forall b : B, Q 0 b b (lstar_O B R b) -> forall b1 : B, b : B, x1236 : R b1 b, l : nat, b2 : B, x1235 : lstar B, R l b2, Q l b b2 x1235 -> Q (l + 1) b1 b2 (lstar_S B R b1 b x1236 l b2 x1235) -> x1233 : nat -> x1232 : B -> x1231 : B -> Q x1233 x1232 x1231 (lstar B R x1233 x1232 x1231) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExp_pi. Let $n , m \\in N$. Let $p$ be a function from natural numbers to booleans. Then for all functions $f$ from natural numbers to natural numbers, the exponentiation of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $m$ is equal to $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $f$ applied to $i$ and $m$.\nassistant\n", "label": "exp_pi : n : Nat -> m : Nat -> p : (__ : Nat -> bool) -> f : (__ : Nat -> Nat) -> Eq (bigop n (i : Nat => p i) Nat (nd 1) times (i : Nat => pow (f i) m)) (pow (bigop n (i : Nat => p i) Nat (nd 1) times (i : Nat => f i)) m) .", "predict": "exp_pi : (n : Elem Nat) -> (m : Elem Nat) -> (p : Proof (forall Nat (i => Bool))) -> Proof (forall Nat (f => Eq (bigop n (lambda i => (p i) Nat 1 times (lambda i => (f i) m))) (bigop n (lambda i => (p i) Nat 1 times (lambda i => (pow (f i) m)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_congruent. Let $n$ and $m$ and $p$ be natural numbers. Assume that $0$ is less than $p$. Then if $m$ is less than or equal to $n$, then if $p$ is divisible by the difference of $n$ and $m$, then $congruent$ holds for $n$ and $m$ and $p$.\nassistant\n", "label": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p", "predict": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> 0 < p -> if (Leq m n) (if (divisible p (minus n m)) (congruent n m p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_dividesb_true1. Let $n$ and $m$ be natural numbers. Assume that $0 < m$. Then if $n$ is divisible by $m$, then $dividesb (n , m)= true$.\nassistant\n", "label": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true", "predict": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> 0 < m -> divides n m -> dividesb n m == true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type4. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z659$ to elements of $Type4$, for all functions $_H1$ from elements $_z660$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_370$ and functions $_x_372$ from elements $_z660$ of $Eq$ of $Hterm$ and $x_370$ to elements of $P$ of $x_370$ and elements $_z660$ of $Eq$ of $Hterm$ and the sum of $x_370$ and $1$ to elements of $P$ of the sum of $x_370$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type4 (Hterm : Nat) (P : (_z659 : Nat) -> Type4) (_H1 : (_z660 : Hterm = 0) -> P 0) (_H2 : (x_370 : Nat) -> (_x_372 : (_z660 : Hterm = x_370) -> P x_370) -> (_z660 : Hterm = x_370 + 1) -> P (x_370 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type4 (Hterm : Nat) (P : ∀ z659 : Nat, Type4) (H1 : ∀ x660 : Eq Hterm 0, P 0) (H2 : ∀ x370 : Nat, ∀ x_372 : Eq Hterm x_370, P x_370 ∧ ∀ x660 : Eq Hterm (x_370 + 1), P (x_370 + 1)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLog_times1. Låt $p , n , m \\in N$. Anta att $1$ är mindre än $p$. Anta att $0$ är mindre än $n$. Då om $0$ är mindre än $m$, så är logaritmen av $p$ och produkten av $n$ och $m$ mindre än eller lika med summan av summan av logaritmen av $p$ och $n$ och logaritmen av $p$ och $m$ och $1$.\nassistant\n", "label": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), forall __2 : (0 < m), Leq (log p (n * m)) (log p n + log p m + 1) .", "predict": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, (1 < p /\\ 0 < n -> 0 < m -> log p (n * m) <= log p n + log p m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nPi_p_primeb4. Soit $n \\in N$. Supposons que $1$ est inférieur à $n$. Alors $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ est égal à $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$.\nassistant\n", "label": "Axiom pi_p_primeb4 : forall n : nat, forall x__ : (1 < n), bigop (2 * n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p (2 * n)) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => bigop (log p (2 * n)) (fun i => true) nat 1 times (fun i => pow p (2 * (n / pow p (i + 1))))) .", "predict": "Axiom pi_p_primeb4 : forall n : nat, (1 < n -> bigop (2 * n + 1 + primeb n) Nat 1 times (bigop (log p (2 * n)) (true : bool) Nat 1 times (pow p (2 * (n / pow p (i + 1)))))) = (bigop (n + 1 + primeb n) Nat 1 times (bigop (log p (2 * n)) (true : bool) Nat 1 times (pow p (2 * (n / pow p (i + 1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_div_div_div_times. Let $n$ and $m$ and $q$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Then $q \\div n \\div m = q \\div (n m)$.\nassistant\n", "label": "Axiom eq_div_div_div_times : forall n : nat, forall m : nat, forall q : nat, forall x__ : (0 < n), forall __1 : (0 < m), q / n / m = q / (n * m) .", "predict": "Axiom eq_div_div_div_times : forall n : nat, forall m : nat, forall q : nat, (0 < n /\\ 0 < m -> q / n / m = q / (n * m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nNatD. $Dop$ håller för $Nat$ och $0$.\nassistant\n", "label": "natD : Dop Nat 0 .", "predict": "dop : Proof (forall Nat (n => Eq (Dop n) 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15622. Soit $m , n , a , b \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$ est égale à $1$.\nassistant\n", "label": "let_clause_15622 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15622 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (0 < n) -> Proof (0 < m) -> Proof (Greatest Common Divisor n m = 1) -> c : Elem Nat -> Proof (clearme : Elem (ex :: Nat) -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times d m) (times c n)) 1))) -> d : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (minus (times m d) (times n c)) 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDiv_mod_spec_rect_Type2_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_825$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des éléments de $Type2$. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_827$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_826$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_827 , x_826)$. Soit $x_825$ un élément de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$. Alors $Q_$ tient pour $x_825$.\nassistant\n", "label": "div_mod_spec_rect_Type2_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_825 : div_mod_spec _n _m _q _r -> Type2) -> _H_div_mod_spec_intro : (x_827 : Lt _r _m -> x_826 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826)) -> x_825 : div_mod_spec _n _m _q _r -> Q_ x_825 .", "predict": "div_mod_spec_rect_Type2_body : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Q_ : (x : Elem (div_mod_spec n m q r)) -> Elem Type2 -> Proof (if (and (Lt r m) (Eq n (plus q (times m r)))) (Q_ (div_mod_spec_intro n m q r (Lt r m) (Eq n (plus q (times m r)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nNot_ord_O_to_divides. Låt $p , m \\in N$. Då om $0 < m$, så om $p$ är primt, så om $ord (m , p)$ inte är lika med $0$, så är $p$ delbart med $m$.\nassistant\n", "label": "Axiom not_ord_O_to_divides : forall p : nat, forall m : nat, forall x__ : (0 < m), forall __1 : prime p, forall __2 : (~ (ord m p = 0)), divisible p m .", "predict": "Axiom not_ord_O_to_divides : forall p : nat, forall m : nat, (0 < m -> p prime -> Ord m p <> 0 -> p % m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTranspose_i_j_j_i. Let $i , j , n \\in N$. Then $transpose$ applied to $i$ and $j$ and $n$ is equal to $transpose$ applied to $j$ and $i$ and $n$.\nassistant\n", "label": "transpose_i_j_j_i : i : Nat -> j : Nat -> n : Nat -> Eq (transpose i j n) (transpose j i n) .", "predict": "transpose_i_j_j_i : (i : Elem Nat) -> (j : Elem Nat) -> (n : Elem Nat) -> Proof (Eq (transpose i j n) (transpose j i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (and (Leq i n) (Leq j n)) (and (Leq a n) (Eq (f a) i) (Leq a n)) (Eq (f a) i)) -> Proof (and (Leq b n) (Eq (f b) j) (Leq b n)) -> Eq a b -> Proof (forall (f : Elem (Nat -> Nat)) -> forall (injf : Elem (injn f n)) -> Eq a b -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_10336. Låt $n , m \\in N$. Låt $Hind$ vara en funktion från naturliga tal $p$ och element av $Lt$ av $p$ och $m$ och element $__1$ av $Lt$ av $1$ och $p$ till element av $Leq$ av $Psi$ applicerat på $p$ och produkten av $pred$ applicerat på $p$ och potensen av $2$ och skillnaden mellan produkten av $2$ och $p$ och $3$. Låt $a \\in N$. Anta att $m$ är lika med produkten av $2$ och $a$ eller $m$ är lika med summan av produkten av $2$ och $a$ och $1$. Anta att $m$ är lika med summan av produkten av $2$ och $a$ och $1$. Anta att $1$ är mindre än summan av produkten av $2$ och $a$ och $1$. Anta att $0$ är mindre än $a$. Låt $x2515 , x2516 \\in N$. Då är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.\nassistant\n", "label": "Axiom let_clause_10336 : forall n : nat, forall m : nat, forall Hind : ((p : nat) -> (x__ : p < m) -> (__1 : 1 < p) -> Leq (Psi p) (pred p * pow 2 (2 * p - 3))), forall a : nat, forall _clearme : (m = 2 * a \\/ m = 2 * a + 1), forall Hm : (m = 2 * a + 1), forall Hlt : (1 < 2 * a + 1), forall Ha : (0 < a), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10336 : forall n : nat, forall m : nat, (forall p : nat, forall x : Lt p m, forall y : Lt 1 p, Hind p x y = Leq (Psi p) (pred p) (pow 2 p) (2 * p - 3)) -> forall a : nat, (m = 2 * a \\/ m = 2 * a + 1) -> m = 2 * a + 1 -> 1 < 2 * a + 1 -> 0 < a -> forall x2515 : nat, forall x2516 : nat, x2515 = (x2516 * (x2515 / x2516) + mod x2515 x2516) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLe_times_to_le. Låt $a , n , m \\in N$. Då om $0 < a$, så om $a n \\leq a m$, så $n \\leq m$.\nassistant\n", "label": "le_times_to_le : a : Nat -> n : Nat -> m : Nat -> __ : Lt 0 a -> __1 : Leq (times a n) (times a m) -> Leq n m .", "predict": "le_times_to_le : a : Elem Nat -> n : Elem Nat -> m : Elem Nat -> Proof (if (and (Lt (nd 0) a) (Leq (times a n) (times a m))) (Leq n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nFound_min_spec. Let $n , b \\in N$. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Assume that $b \\leq m$ and $m < n + b$. Then if $f (m)= true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "axiom found_min_spec (n b : Nat) (f : (x__ : Nat) -> bool) (m : Nat) (x__ : b ≤ m) (__1 : m < n + b) (__2 : f m = true) (__3 : (i : Nat) -> (__3 : b ≤ i) -> (__4 : i < m) -> f i = false) : min_spec n b f m", "predict": "axiom found_min_spec (n b : Nat) (f : Nat → Bool) (m : Nat) (x : b ≤ m ∧ m < n + b) (y : f m = true) : ∀ g : Nat → Nat → Leq b → Nat → Lt → Eq (f) → absurd (min_spec n b f m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDivides_to_congruent. Låt $n , m , p \\in N$. Anta att $0 < p$. Anta att $m \\leq n$. Anta att $p$ är delbart med $n - m$. Då håller $congruent$ för $n$ och $m$ och $p$.\nassistant\n", "label": "divides_to_congruent : n : Nat -> m : Nat -> p : Nat -> __ : Lt 0 p -> __1 : Leq m n -> __2 : divisible p (minus n m) -> congruent n m p .", "predict": "divides_to_congruent : (n : Elem Nat) -> (m : Elem Nat) -> (p : Elem Nat) -> Proof (and (Gt (nd 0) p) (Leq m n) (divides p (minus n m))) -> Proof (and (congruent n m) (congruent p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nTo_max. Låt $i , n , m \\in N$. Anta att $n$ är mindre än eller lika med $i$. Anta att $m$ är mindre än eller lika med $i$. Då är $max$ applicerat på $n$ och $m$ mindre än eller lika med $i$.\nassistant\n", "label": "postulate to_max : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq n i) -> (__1 : Leq m i) -> Leq (max n m) i", "predict": "postulate to_max : (i : Nat) -> (n : Nat) -> (m : Nat) -> and (LtEq n i) (LtEq m i) -> Leq (max n m) i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMatch_max_spec. Soit $_n$ un nombre naturel. Alors pour toutes les fonctions $_f$ des nombres naturels à des valeurs booléennes, pour tous les éléments $return_sort$ de $Sort$, pour toutes les fonctions $return_type$ des nombres naturels et des éléments $z$ de $max_spec$ de $_n$ et de $_f$ et de $__$ à des éléments de $return_sort$, pour toutes les fonctions $case_found_max_spec$ des nombres naturels $m$ et des éléments de $Lt$ de $m$ et de $_n$ et des éléments $__1$ de $Eq$ de $_f$ appliqué à $m$ et de $true$ et des fonctions $__2$ des nombres naturels $i$ et des éléments $__2$ de $Lt$ de $m$ et de $i$ et des éléments $__3$ de $Lt$ de $i$ et de $_n$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de $m$ et de $found_max_spec$ appliqué à $_n$ et $_f$ et $m$ et $__$ et $__1$ et $__2$, pour toutes les fonctions $case_not_found_max_spec$ des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $_n$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de $0$ et de $not_found_max_spec$ appliqué à $_n$ et $_f$ et $__$, pour tous les nombres naturels $__$, pour tous les éléments $z$ de $max_spec$ de $_n$ et de $_f$ et de $__$, $return_type$ tient pour $__$ et $z$.\nassistant\n", "label": "postulate match_max_spec : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : max_spec _n _f __) -> return_sort) -> (case_found_max_spec : (m : Nat) -> (_ : Lt m _n) -> (__1 : Eq (_f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i _n) -> Eq (_f i) false) -> return_type m (found_max_spec _n _f m __ __1 __2)) -> (case_not_found_max_spec : (_ : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> return_type 0 (not_found_max_spec _n _f __)) -> (_ : Nat) -> (z : max_spec _n _f __) -> return_type __ z", "predict": "postulate match_max_spec : (n : Nat) -> all (f : Nat -> Bool) -> all (return_sort : Sort) -> all (return_type : Nat -> Elem return_sort) -> all (z : MaxSpec n f) -> all (case_found_max_spec : Nat -> Lt n m -> Eq (f m) True -> all (case_not_found_max_spec : (i : Nat) -> Lt i n -> Eq (f i) False -> all (x : return_type m) -> Eq (found_max_spec n f m) x) -> all (x : return_type 0) -> Eq (not_found_max_spec n f) x) -> all (x : Elem (max_spec n f) _) -> Eq (return_type x) x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nList_divides_true. För alla listor $l$ av naturliga tal, för alla naturliga tal $n$, om $list_divides (l , n)= true$, så håller $ex$ för $Nat$ och funktionen som avbildar $p$ som konjunktionen av $mem$ applicerat på $Nat$ och $p$ och $l$ och $divisible$ applicerat på $p$ och $n$.\nassistant\n", "label": "postulate list_divides_true : (l : list Nat) -> (n : Nat) -> (_ : Eq (list_divides l n) true) -> ex Nat (\\ p : Nat -> and (mem Nat p l) (divisible p n))", "predict": "postulate list_divides_true : (l : List Nat) -> (n : Nat) -> if (true (list_divides l n)) (exists Nat (\\ ex -> and (mem Nat ex) (and (fmap (mem Nat) l) (divisible (fmap (divisible n) p))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "let_clause_1600 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) .", "predict": "let_clause_1600 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Eq (nd 1) (gcd n m))) -> Proof (forall Nat (c => forall (x : Elem ex : Elem Nat) (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times n c) (times m d)) (gcd m n)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLstar_ind_l_aux. Låt $B$ vara en mängd. Låt $R$ vara en funktion från element av $B$ och element $__1$ av $B$ till påståenden. Låt $b2$ vara ett element av $B$. Låt $P$ vara ett element av $relation2$ av $Nat$ och $B$. Låt $__$ vara ett element av $P$ av $0$ och $b2$. Då för alla funktioner $__1$ från naturliga tal $l$ och element $b1$ av $B$ och element $b$ av $B$ och element $__1$ av $R$ av $b1$ och $b$ och element $__2$ av $lstar$ av $B$ och $R$ och $l$ och $b$ och $b2$ och element $__3$ av $P$ av $l$ och $b$ till element av $P$ av $l + 1$ och $b1$, för alla naturliga tal $l$, för alla element $b1$ och $b$ av $B$, för alla element $__2$ av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b$, om $b = b2$, så håller $P$ för $l$ och $b1$.\nassistant\n", "label": "lstar_ind_l_aux : B : Set -> R : (__ : B -> __1 : B -> Prop) -> b2 : B -> P : relation2 Nat B -> __ : P 0 b2 -> __1 : (l : Nat -> b1 : B -> b : B -> __1 : R b1 b -> __2 : lstar B R l b b2 -> __3 : P l b -> P (plus l (nd 1)) b1) -> l : Nat -> b1 : B -> b : B -> __2 : lstar B R l b1 b -> __3 : Eq b b2 -> P l b1 .", "predict": "lstar_ind_l_aux : (B : Elem Set) -> (R : (b : Elem B) -> __1 : Elem B) -> OnStat B -> (b2 : Elem B) -> (P : Elem (Rel Nat (plus B))) -> ($ : Elem (plus P (b2))) -> Proof (forall (l : Elem Nat) -> forall (b1 : Elem B) -> forall (b : Elem B) -> forall (r : Elem (R b b1)) -> forall (lstar : Elem (lstar B (R l b b2))) -> forall (p : Elem (P l b)) -> Proof (forall (b1 : Elem Nat) -> forall (b : Elem B) -> forall (lstar : Elem (lstar B (R l b b2))) -> forall (p : Elem (P (plus l b1)) -> Proof (if (Eq b b2) (Eq (P l b1) (P l (plus b1 b)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nNot_eq_n_Sn. För alla naturliga tal $n$, är $n$ inte lika med $n + 1$.\nassistant\n", "label": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) .", "predict": "Axiom not_eq_n_Sn : forall n : nat, ~ (n = n + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_to_leb_true. Låt $n , m \\in N$. Anta att $n \\leq m$. Då $leb (n , m)= true$.\nassistant\n", "label": "Axiom le_to_leb_true : forall n : nat, forall m : nat, forall x__ : Leq n m, leb n m = true .", "predict": "Axiom le_to_leb_true : forall n : nat, forall m : nat, (n <= m -> leb n m = true) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFound_max_spec. Let $n$ be a natural number. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Then if $m < n$ and $f (m)= true$, then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max_spec$ holds for $n$ and $f$ and $m$.\nassistant\n", "label": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m", "predict": "postulate found_max_spec : (n : Nat) -> (f : Nat -> Bool) -> m : Nat -> (Lt m n) -> (Eq (f m)) -> all (forall Nat -> forall Lt m _ -> forall Lt _ n -> Eq (f _)) absurdity -> max_spec n f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDop_rect_Type5_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_947$ av $Dop$ av $A$ och $_nil$ till element av $Type5$. Då för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$, för alla element $x_947$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_947$.\nassistant\n", "label": "postulate Dop_rect_Type5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_947 : Dop A _nil) -> Type5) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_947 : Dop A _nil) -> Q_ x_947", "predict": "postulate dop_rect_Type5_body : (A : Set) -> _nil : A -> (Q_ : Dop A _nil -> Type5) -> all (forall (H : ACop A _nil -> Prod (A _) -> A -> Eq (Prod _ nil) -> Eq (Prod _ _))) (forall (x_947 : Dop A _nil) -> Q_ x_947)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10331. Let $n \\in N$. Assume that $0 < n$. Let $x2515 , x2516 \\in N$. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, (0 < n -> forall x2515, x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_15623. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall x : ex, (forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1) -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nMod_times. Låt $n , m , p \\in N$. Då om $0$ är mindre än $p$, så är $mod$ applicerat på produkten av $n$ och $m$ och $p$ lika med $mod$ applicerat på produkten av $mod$ applicerat på $n$ och $p$ och $mod$ applicerat på $m$ och $p$ och $p$.\nassistant\n", "label": "axiom mod_times (n m p : Nat) (x__ : 0 < p) : mod (n * m) p = mod (mod n p * mod m p) p", "predict": "axiom mod_times (n m p : Nat) (x : 0 < p) : mod (n * m) p = mod (mod n p) (mod m p) + p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1012. Let $f$ be a function from natural numbers to booleans. Let $n , i \\in N$. Let $Hind$ be a function from natural numbers $b$ to elements of $prod$ of $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m2$ applied to $f$ and $n$ and $i$ and $b$ and absurdity and the function that maps $__$ to $Eq (let_m2 (f , n , i , b), i + b)$. Let $b \\in N$. Assume that $f (b)= true$. Assume that absurdity is equal to $f (b)$. Then $true$ is equal to absurdity.\nassistant\n", "label": "Axiom let_clause_1012 : forall f : ((x__ : nat) -> bool), forall n : nat, forall i : nat, forall Hind : ((b : nat) -> prod Prop Prop (f (let_m2 f n i b) = false) (fun x__ => let_m2 f n i b = i + b)), forall b : nat, forall fb : (f b = true), forall eqm : (f b = false), false = true .", "predict": "Axiom let_clause_1012 : forall f : nat -> bool, forall n : nat, forall i : nat, forall b : nat, (Eq (f (let_m2 f n i b)) (i + b) /\\ absurdity = f b -> true = absurdity) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_16003. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Då för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.\nassistant\n", "label": "axiom let_clause_16003 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16003 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) : ∀ c : Nat, ∀ _clearme : ex Nat, ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1) → Eq (gcd m n) (m * d - n * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nRange_rect_CProp0_body. Låt $_A$ vara en mängd. Då för alla funktioner $Q_$ från element $_x_939$ av $range$ av $_A$ till påståenden, för alla funktioner $_H_mk_range$ från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range$ applicerat på $_A$ och $_enum$ och $_upto$ och $_filter$, för alla element $x_939$ av $range$ av $_A$, håller $Q_$ för $x_939$.\nassistant\n", "label": "axiom range_rect_CProp0_body (_A : Set) (Q_ : (_x_939 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_939 : range _A) : Q_ x_939", "predict": "axiom range_rect_CProp0_body (A : Type) : ∀ Q : range A → Prop, ∀ H : enum Nat → ∀ upto : Nat, ∀ filter : Nat → Prop, ∀ x : range A, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInjective_exp_r. Let $b$ be a natural number. Assume that $1 < b$. Then $injective$ holds for $Nat$ and $Nat$ and the function that maps $i$ to $b ^ i$.\nassistant\n", "label": "Axiom injective_exp_r : forall b : nat, forall x__ : (1 < b), injective nat nat (fun i => pow b i) .", "predict": "Axiom injective_exp_r : forall b : nat, (1 < b -> injective Nat Nat (fun i => pow b i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nK1. Soit $n , p \\in N$. Supposons que $18 \\leq n$. Supposons que $p \\leq n$. Alors si $2 n \\div 3 < p$, alors $k (2 n , p)= 0$.\nassistant\n", "label": "postulate k1 : (n : Nat) -> (p : Nat) -> (_ : Leq 18 n) -> (__1 : Leq p n) -> (__2 : Lt (div (times 2 n) 3) p) -> Eq (k (times 2 n) p) 0", "predict": "postulate k1 : (n : Nat) -> (p : Nat) -> Leq 18 n -> Leq p n -> Lt (times 2 n) (div 3 p) -> k (2 n , p) 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_times_l. Let $p , n , m \\in N$. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if $1$ is less than $p$, then the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ is less than or equal to the logarithm of $p$ and the product of $n$ and $m$.\nassistant\n", "label": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Lt 1 p) -> Leq (plus (log p n) (log p m)) (log p (times n m))", "predict": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> (0 < n) -> (0 < m) -> (1 < p) -> leq (plus (log p n) (log p m)) (log p (times n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nPrimes_below_to_bertrand. Låt $pm$ vara ett naturligt tal. Låt $l$ vara en lista av naturliga tal. Anta att $pm$ är primt. Låt $__1$ vara ett element av $primes_below$ av $l$ och $pm + 1$. Låt $__2$ vara en funktion från naturliga tal $p$ och element $__2$ av $mem$ av $Nat$ och $p$ och $l$ och element $__3$ av $Lt$ av $2$ och $p$ till element av $ex$ av $Nat$ och funktionen som avbildar $pp$ som konjunktionen av konjunktionen av $mem$ applicerat på $Nat$ och $pp$ och $l$ och $Lt$ applicerat på $pp$ och $p$ och $Leq$ applicerat på $p$ och produkten av $2$ och $pp$. Låt $n$ vara ett naturligt tal. Anta att $0 < n$. Anta att $n < pm$. Då håller $bertrand$ för $n$.\nassistant\n", "label": "Axiom primes_below_to_bertrand : forall pm : nat, forall l : list nat, forall x__ : prime pm, forall __1 : primes_below l (pm + 1), forall __2 : ((p : nat) -> (__2 : mem nat p l) -> (__3 : 2 < p) -> ex nat (fun pp => mem nat pp l /\\ pp < p /\\ Leq p (2 * pp))), forall n : nat, forall __3 : (0 < n), forall __4 : (n < pm), bertrand n .", "predict": "Axiom primes_below_to_bertrand : forall pm : nat, forall l : list nat, (prime pm -> exists __1 : primes_below pm l /\\ pm + 1, exists __2 : forall p : nat, forall __3 : mem p (2 * __2 p), Bertrand n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_ord_log. Soient $n$ et $p$ des nombres naturels. Alors si $0 < n$, alors si $1 < p$, alors $ord (n , p)\\leq \\log_ p {n}$.\nassistant\n", "label": "axiom le_ord_log (n p : Nat) (x__ : 0 < n) (__1 : 1 < p) : ord n p ≤ log p n", "predict": "axiom le_ord_log (n p : Nat) : 0 < n ∧ 1 < p → ord n p ≤ log p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nFilter_lstar_r. Låt $B$ vara en mängd. Låt $_R$ vara ett element av $relation$ av $B$. Låt $__ \\in N$. Låt $__1$ och $__2$ vara element av $B$. Låt $return_sort$ vara ett element av $Sort$. Låt $return_type$ vara en funktion från element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_sort$. Då för alla funktioner $return$ från element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_type$ av $z$, för alla element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$, håller $return_type$ för $z$.\nassistant\n", "label": "postulate filter_lstar_r : (B : Set) -> (_R : relation B) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (return_sort : Sort) -> (return_type : (z : lstar_r B _R __ __1 __2) -> return_sort) -> (return : (z : lstar_r B _R __ __1 __2) -> return_type z) -> (z : lstar_r B _R __ __1 __2) -> return_type z", "predict": "postulate filter_lstar_r : (B : Set) -> (R : Relation B) -> (n : Nat) -> (b1 : B) -> (b2 : B) -> (return_sort : Sort) -> (return_type : (z : lstar_r B R) -> n -> b1 -> b2 -> return_sort) -> all (all (all (all (return : lstar_r B R -> n -> b1 -> b2 -> return_type)))) (return_type)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1562. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$, så om $c n - d m = 1$, så $n c - m d = 1$.\nassistant\n", "label": "let_clause_1562 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_1562 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (0 < n) -> Proof (0 < m) -> Proof (Eq 1 (GCD n m)) -> c : Elem Nat -> Proof (ex (Nat, (d => if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times n c) (times m d)) 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_inv_rect_CProp1. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Then for all functions $P$ from elements $_z1488$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_855$ of $Lt$ of $x4$ and $x2$ and elements $x_854$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1489$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_855$ and $x_854$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_855$ and $x_854$, $P$ holds for $Hterm$.\nassistant\n", "label": "div_mod_spec_inv_rect_CProp1 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1488 : div_mod_spec x1 x2 x3 x4 -> Prop) -> _H1 : (x_855 : Lt x4 x2 -> x_854 : Eq x1 (plus (times x3 x2) x4) -> _z1489 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P Hterm .", "predict": "div_mod_spec_inv_rect_CProp1 : (x1 : Elem Nat) -> (x2 : Elem Nat) -> (x3 : Elem Nat) -> (x4 : Elem Nat) -> Hterm : Elem (div_mod_spec x1 x2 x3 x4) -> Proof (forall (P : Elem (div_mod_spec x1 x2 x3 x4) -> Prop) -> forall (x_855 : Lt x4 x2) -> forall (x_854 : Eq x1 (plus (times x3 x2) x4)) -> forall (x_855 : Lt x4 x2) -> forall (x_854 : Eq x1 (plus (times x3 x2) x4)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> Proof (forall (Hterm : Elem (div_mod_spec x1 x2 x3 x4)) -> P Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDistr. För alla mängder $A$, för alla element $nil$ av $A$, för alla element $xxx$ av $Dop$ av $A$ och $nil$, för alla element $a$ och $b$ och $c$ av $A$, $prod (A , nil , xxx , a , aop__o__op (A , nil , sum (A , nil , xxx), b , c))= aop__o__op (A , nil , sum (A , nil , xxx), prod (A , nil , xxx , a , b), prod (A , nil , xxx , a , c))$.\nassistant\n", "label": "postulate distr : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c)) (aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c))", "predict": "postulate distr : (A : Set) -> nil : A -> Dop A nil -> (a : A) -> (b : A) -> (c : A) -> Eq (prod A nil (Dop A nil (sum A nil xxx)) b c) (aop__o__op A nil (sum A nil xxx) (prod A nil (Dop A nil (sum A nil xxx)) b) (prod A nil (Dop A nil (sum A nil xxx)) c))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_to_lt_to_lt. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $n$ est inférieur ou ágal à $m$. Supposons que $m$ est inférieur à $p$. Alors $n$ est inférieur à $p$.\nassistant\n", "label": "axiom le_to_lt_to_lt (n m p : Nat) (x__ : n ≤ m) (__1 : m < p) : n < p", "predict": "axiom le_to_lt_to_lt (n m p : Nat) (x : n ≤ m) (y : m < p) : n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_to_le_to_eq. Soient $n$ et $m$ des nombres naturels. Supposons que $n$ est inférieur ou ágal à $m$. Alors si $m$ est inférieur ou ágal à $n$, alors $n$ est égal à $m$.\nassistant\n", "label": "axiom le_to_le_to_eq (n m : Nat) (x__ : n ≤ m) (__1 : m ≤ n) : n = m", "predict": "axiom le_to_le_to_eq (n m : Nat) (x : n ≤ m) : m ≤ n → n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLog_i_2n. Let $n$ and $i$ be natural numbers. Then if $1 < n$, then if $n < i$, then if $i \\leq 2 n$, then $\\log_ i {(2 n)}= 1$.\nassistant\n", "label": "Axiom log_i_2n : forall n : nat, forall i : nat, forall x__ : (1 < n), forall __1 : (n < i), forall __2 : Leq i (2 * n), log i (2 * n) = 1 .", "predict": "Axiom log_i_2n : forall n : nat, forall i : nat, (1 < n -> n < i -> i <= 2 * n -> log i (2 * n) = 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_CProp4. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Then for all functions $_H_div_mod_spec_intro$ from elements $x_839$ of $Lt$ of $_r$ and $_m$ and elements $x_838$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_839$ and $x_838$, for all elements $x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_837$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp4 (_n _m _q _r : Nat) (Q_ : (_x_837 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_839 : _r < _m) -> (x_838 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) (x_837 : div_mod_spec _n _m _q _r) : Q_ x_837", "predict": "axiom div_mod_spec_rect_CProp4 (n m q r : Nat) (Q : div_mod_spec n m q r → Prop) : ∀ H : Lt r m → Eq n (q * m + r) → ∀ x : Lt r m, ∀ y : Eq n (q * m + r), Q (div_mod_spec_intro x y) → ∀ x : div_mod_spec n m q r, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_times_div_div_times. Låt $a , n , m \\in N$. Då om $0 < m$, så $a (n \\div m)\\leq a n \\div m$.\nassistant\n", "label": "postulate le_times_div_div_times : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Leq (times a (div n m)) (div (times a n) m)", "predict": "postulate le_times_div_div_times : (a : Nat) -> (n : Nat) -> (m : Nat) -> 0 < m -> le (times a (div n m)) (div (times a n) m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLt_n_fact_n. För alla naturliga tal $n$, om $2 < n$, så $n < n !$.\nassistant\n", "label": "Axiom lt_n_fact_n : forall n : nat, forall x__ : (2 < n), n < factorial n .", "predict": "Axiom lt_n_fact_n : forall n : nat, (2 < n -> n < fact n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_ind. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "Axiom Dop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_943 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_943 : Dop A _nil, Q_ x_943 .", "predict": "Axiom dop_ind : forall A : Set, forall _nil : A, forall Q_ : Dop A _nil -> Prop, forall _H_mk_Dop : ACop A _nil -> Dop A _nil -> Prop, forall _null : A -> Eq (prod _nil _nil), forall _distr : A -> A -> A -> Eq (prod (aop__o__op A _nil sum) (prod a b) (prod a c)), forall _x_943 : Dop A _nil, Q_ _x_943 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1704. Pour tous les nombres naturels $m$, si $0 < m$, alors pour tous les nombres naturels $a$ et $x1029$, $x1029 = aop__o__op (Nat , 0 , plusAC , x1029 , 0)$.\nassistant\n", "label": "Axiom let_clause_1704 : forall m : nat, forall posm : (0 < m), forall a : nat, forall x1029 : nat, x1029 = aop__o__op nat 0 plusAC x1029 0 .", "predict": "Axiom let_clause_1704 : forall m : nat, (0 < m -> forall a : nat, forall x1029 : nat, x1029 = aop__o__op (Nat , 0 , plusAC , x1029 , 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1033. Soit $n , x2515 , x2516 \\in N$. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> x2515 : Elem Nat -> x2516 : Elem Nat -> Proof (if (and (Elem n) (Elem x2515) (Elem x2516)) (Eq (plus (times x2515 (div x2515 x2516)) (mod x2515 x2516)) x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_exp_to_divides. Let $p$ and $n$ and $m$ be natural numbers. Assume that $p$ is prime. Then if $p$ is divisible by $n ^ m$, then $p$ is divisible by $n$.\nassistant\n", "label": "postulate divides_exp_to_divides : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : prime p) -> (__1 : divisible p (pow n m)) -> divisible p n", "predict": "postulate divides_exp_to_divides : (p : Nat) -> prime p -> if (divisible p (pow n m)) (divisible p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLt_max_to_false. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$, si $m < n$ et $max (n , f)< m$, alors contradiction est égal à $f (m)$.\nassistant\n", "label": "postulate lt_max_to_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Lt (max n f) m) -> Eq (f m) false", "predict": "postulate lt_max_to_false : (f : Nat -> Bool) -> all Nat (\\ n -> all Nat (\\ m -> if (and (Lt m n) (Lt (max n (f m)) m)) (Eq (contradiction) (f m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_CProp1_body. Let $Q_$ be a function from natural numbers $_x_409$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_410$ and elements $_x_412$ of $Q_$ of $x_410$ to elements of $Q_$ of the sum of $x_410$ and $1$. Let $x_409$ be a natural number. Then $Q_$ holds for $x_409$.\nassistant\n", "label": "axiom nat_rect_CProp1_body (Q_ : (_x_409 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_410 : Nat) -> (_x_412 : Q_ x_410) -> Q_ (x_410 + 1)) (x_409 : Nat) : Q_ x_409", "predict": "axiom nat_rect_CProp1_body (Q : Nat → Prop) (H_O : Q 0) (H_S : ∀ x : Nat, ∀ y : Q x, Q (x + 1)) (x_409 : Nat) : Q x_409"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExists_max_forall_false. Let $f$ be a function from natural numbers to booleans. Let $n$ be a natural number. Then $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $Eq$ applied to $f$ applied to $i$ and $true$ and $f$ applied to $max$ applied to $n$ and $f$ is equal to $true$ or $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__$ to $Eq$ applied to $f$ applied to $i$ and absurdity and $max$ applied to $n$ and $f$ is equal to $0$.\nassistant\n", "label": "axiom exists_max_forall_false (f : (x__ : Nat) -> bool) (n : Nat) : ex Nat (λ i => i < n ∧ f i = true) ∧ f (max n f) = true ∨ (prod Set Prop Nat (λ i => prod Prop Prop (i < n) (λ x__ => f i = false)) ∧ max n f = 0)", "predict": "axiom exists_max_forall_false (f : Nat → Bool) (n : Nat) : ∃ ex : Nat × (i : Nat) → Conjunction (Lt i n) (Eq (f i) true) ∨ ∀ i : Nat, Prod (Set Prop Nat) (i → Conjunction (Prod Prop Prop (Lt i n)) (Eq (f i) absurdity) (Eq (max n f) 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDop_ind. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_943$ de $Dop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$. Soit $x_943$ un élément de $Dop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_943$.\nassistant\n", "label": "Dop_ind : A : Set -> _nil : A -> Q_ : (_x_943 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_943 : Dop A _nil -> Q_ x_943 .", "predict": "dop_ind : (A : Elem) -> _nil : Elem A -> (x : Elem Dop A -> _nil -> Prop) -> (sum : Elem ACop A -> _nil -> (a : Elem A -> _1 : Elem A -> Elem A) -> (a : Elem A -> Prop -> Eq (prod a _nil) _nil) -> (a : Elem A -> b : Elem A -> c : Elem A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> x : Elem Dop A -> _nil -> (x : Elem Dop A -> Prop) -> Proof (x_943 : x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nOrd_eq. Soit $n , p \\in N$. Alors $ord (n , p)= fst (Nat , Nat , p_ord (n , p))$.\nassistant\n", "label": "axiom ord_eq (n p : Nat) : ord n p = fst Nat Nat (p_ord n p)", "predict": "axiom ord_eq (n p : Nat) : ord n p = Nat.fst (p_ord n p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_discr. Let $a1 , a2 , a3 , a4 \\in N$. Then for all elements $x$ and $y$ of $div_mod_spec$ of $a1$ and $a2$ and $a3$ and $a4$, if $x$ is equal to $y$, then $match_div_mod_spec$ holds for $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $t0$ and $t1$ to $match_div_mod_spec$ applied to $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $u0$ and $u1$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R0$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and $u0$ and the function that maps $e0$ to $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R1$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and the function that maps $x_19$ and $_x_20$ to the function that maps $x0$ and $p0$ to $Eq$ applied to $a1$ and the sum of the product of $a3$ and $a2$ and $a4$ applied to $x_19$ and $_x_20$ and $t1$ and $u0$ and $e0$ and $u1$ and the function that maps $_e1$ to $P$ and the function that maps $_z53$ to $P$ and $y$ and $x$.\nassistant\n", "label": "axiom div_mod_spec_discr (a1 a2 a3 a4 : Nat) (x y : div_mod_spec a1 a2 a3 a4) (_e : x = y) : match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ x__ => univ Type2) (λ t0 => λ t1 => match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ x__ => univ Type2) (λ u0 => λ u1 => prod (Type1 + 1) Type1 (univ Type1) (λ P => prod Type1 Type1 (prod Prop Type1 (R0 (a4 < a2) t0 = u0) (λ e0 => prod Prop Type1 (R1 (a4 < a2) t0 (λ x_19 => λ _x_20 => (λ x0 => λ p0 => a1 = a3 * a2 + a4) x_19 _x_20) t1 u0 e0 = u1) (λ _e1 => P))) (λ _z53 => P))) y) x", "predict": "axiom div_mod_spec_discr (a1 a2 a3 a4 : Nat) : ∀ x y : div_mod_spec a1 a2 × div_mod_spec a3 a4, (x = y → match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ _, univ) Type2 (λ t0 t1, match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ _, univ) Type1 (λ P, prod Type1 Type1) (Lt a4 a2) t0 (λ e0, prod Prop Type1) (Eq R0 (Lt a4 a2)) t0 (λ x_19 _x_20, Eq a1 (a3 * a2 + a4) x_19 _x_20) t1 (λ u0, prod Prop Type1) (Eq R1 (Lt a4 a2)) t0 (λ x0 p0, Eq a1 (a3 * a2 + a4) x0 p0)) y x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nMatch_lstar_r. Låt $B$ vara en mängd. Låt $_R$ vara ett element av $relation$ av $B$. Låt $return_sort$ vara ett element av $Sort$. Låt $return_type$ vara en funktion från naturliga tal och element $__1$ av $B$ och element $__2$ av $B$ och element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_sort$. Låt $case_lstar_r_O$ vara en funktion från element $b$ av $B$ till element av $return_type$ av $0$ och $b$ och $b$ och $lstar_r_O (B , _R , b)$. Låt $case_lstar_r_S$ vara en funktion från naturliga tal $l$ och element $b1$ av $B$ och element $b$ av $B$ och element av $lstar_r$ av $B$ och $_R$ och $l$ och $b1$ och $b$ och element $b2$ av $B$ och element $__1$ av $_R$ av $b$ och $b2$ till element av $return_type$ av $l + 1$ och $b1$ och $b2$ och $lstar_r_S (B , _R , l , b1 , b , __ , b2 , __1)$. Då för alla naturliga tal $__$, för alla element $__1$ och $__2$ av $B$, för alla element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$, håller $return_type$ för $__$ och $__1$ och $__2$ och $z$.\nassistant\n", "label": "axiom match_lstar_r (B : Set) (_R : relation B) (return_sort : Sort) (return_type : (x__ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar_r B _R __ __1 __2) -> return_sort) (case_lstar_r_O : (b : B) -> return_type 0 b b (lstar_r_O B _R b)) (case_lstar_r_S : (l : Nat) -> (b1 : B) -> (b : B) -> (x__ : lstar_r B _R l b1 b) -> (b2 : B) -> (__1 : _R b b2) -> return_type (l + 1) b1 b2 (lstar_r_S B _R l b1 b __ b2 __1)) (x__ : Nat) (__1 __2 : B) (z : lstar_r B _R __ __1 __2) : return_type __ __1 __2 z", "predict": "axiom match_lstar_r (B : Set) (R : Relation B) (return_sort : Sort) (return_type : Nat → B → B → lstar_r B R → R → $ → B → B → return_sort) (case_lstar_r_O : B → return_type 0 B B (lstar_r O (B R) B)) (case_lstar_r_S : Nat → B → B → lstar_r B R → R → Nat → B → B → return_type (Nat.add 1) B B (lstar_r S (B R) Nat (B) B (B) (B))) : ∀ $ : Nat, ∀ b1 : B, ∀ b : B, ∀ z : lstar_r B R, return_type $ b1 b (b2 : B) (b : B) (z)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1575. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$. Låt $x1029$ vara ett naturligt tal. Då är $x1029$ lika med produkten av $x1029$ och skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.\nassistant\n", "label": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) .", "predict": "let_clause_1575 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Gcd n m (nd 1))) -> c : Elem Nat -> Proof (ex Nat (fun d => and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> Proof (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (and (Eq (minus (times c n) (times d m)) (nd 1)))) -> x1029 : Elem Nat -> Proof (Eq x1029 (times x1029 (minus (times n c) (times m d)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nRange_rect_CProp2. Soit $_A$ un ensemble. Soit $Q_$ une fonction des éléments $_x_935$ de $range$ de $_A$ à des propositions. Soit $_H_mk_range$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range$ appliqué à $_A$ et $_enum$ et $_upto$ et $_filter$. Soit $x_935$ un élément de $range$ de $_A$. Alors $Q_$ tient pour $x_935$.\nassistant\n", "label": "Axiom range_rect_CProp2 : forall _A : Set, forall Q_ : ((_x_935 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_935 : range _A, Q_ x_935 .", "predict": "Axiom range_rect_CProp2 : forall A : Type, forall Q : range A -> Prop, forall H : forall enum : nat -> A, forall upto : nat, forall filter : nat -> bool -> A -> Prop, Q (mk_range A enum upto (filter nat)) -> forall x_935 : range A, Q x_935 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMatch_divides. Låt $_n , _m \\in N$. Låt $return_sort$ vara ett element av $Sort$. Låt $return_type$ vara en funktion från element $z$ av $divisible$ av $_n$ och $_m$ till element av $return_sort$. Låt $case_quotient$ vara en funktion från naturliga tal $q$ och element av $Eq$ av $_m$ och produkten av $_n$ och $q$ till element av $return_type$ av $quotient$ applicerat på $_n$ och $_m$ och $q$ och $__$. Då om $_n$ är delbart med $_m$, så håller $return_type$ för $z$.\nassistant\n", "label": "postulate match_divides : (_n : Nat) -> (_m : Nat) -> (return_sort : Sort) -> (return_type : (z : divisible _n _m) -> return_sort) -> (case_quotient : (q : Nat) -> (_ : Eq _m (times _n q)) -> return_type (quotient _n _m q __)) -> (z : divisible _n _m) -> return_type z", "predict": "postulate match_divides : (n : Nat) -> (m : Nat) -> return_sort -> (z : divisible n m) -> return_type z : Eq m (times n (quotient z m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nBigop_commute. Låt $n , m \\in N$. Låt $p11$ vara en funktion från naturliga tal till sanningsvärden. Låt $p12$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $p21$ vara en funktion från naturliga tal till sanningsvärden. Låt $p22$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f$ vara en funktion från naturliga tal och naturliga tal $__1$ till element av $B$. Anta att $0 < n$. Anta att $0 < m$. Låt $__2$ vara en funktion från naturliga tal $i$ och naturliga tal $j$ och element $__2$ av $Lt$ av $i$ och $n$ och element $__3$ av $Lt$ av $j$ och $m$ till element av $Eq$ av $andb (p11 (i), p12 (i , j))$ och $andb (p21 (j), p22 (i , j))$. Då är $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p21$ applicerat på $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p22$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $j$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p11$ applicerat på $i$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p12$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som", "label": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))", "predict": " $f$ applicerat på $i$ och $j$.\n\npostulate bigop_commute : (n : Nat) -> (m : Nat) -> andb (p11 : Nat -> Prop) (p12 : Nat -> Nat -> Prop) (p21 : Nat -> Prop) (p22 : Nat -> Nat -> Prop) -> Eq (bigop m (op -> bigop n (f -> bigop n (p22 -> bigop m (p12 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> bigop n (p11 -> bigop m (p21 -> bigop (f -> big"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nACop_rect_CProp5. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_905$ av $ACop$ av $A$ och $_nil$ till påståenden. Då för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op$ applicerat på $A$ och $_nil$ och $aop$ och $a$ och $b$ och $op$ applicerat på $A$ och $_nil$ och $aop$ och $b$ och $a$ till element av $Q_$ av $mk_ACop$ applicerat på $A$ och $_nil$ och $aop$ och $_comm$, för alla element $x_905$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_905$.\nassistant\n", "label": "Axiom ACop_rect_CProp5 : forall A : Set, forall _nil : A, forall Q_ : ((_x_905 : ACop A _nil) -> Prop), forall _H_mk_ACop : ((aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)), forall x_905 : ACop A _nil, Q_ x_905 .", "predict": "Axiom cop_rect_CProp5 : forall A : Type, forall nil : A, forall Q : forall x : cop A nil -> Prop, forall H_mk_ACop : forall aop : op A nil -> forall a : A, forall b : A, Eq (aop (a, b)) (A nil) -> Prop, forall _comm : forall a : A, forall b : A, Eq (a, b) -> Prop, forall x : cop A nil, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Anta att $n$ inte är delbart med $m$. Låt $a$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b$ vara ett naturligt tal. Anta att $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Då om $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_15441 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : b * n - a * mod m n = gcd_aux q n (mod m n)) : n * b - a * mod m n = gcd_aux q n (mod m n)", "predict": "axiom let_clause_15441 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, Lt 0 n → Leq n m → Leq n q → ex Nat → Nat → Eq (a - b * m) (gcd_aux q m n)) : m ∈ Nat ∧ n ∈ Nat ∧ 0 < n ∧ n ≤ m ∧ n ≤ q + 1 ∧ ¬ (n % m = 0) → ∀ a : Nat, (∃ b : Nat, a mod (m, n) - b * n = gcd_aux q n (mod m n)) ∨ (∃ b : Nat, b * n - a mod (m, n) = gcd_aux q n (mod m n)) → b * n - a mod (m, n) = gcd_aux q n (mod m n) → n * b - a mod (m, n) = gcd_aux q n (mod m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nNat_rect_Type1. Låt $Q_$ vara en funktion från naturliga tal $_x_385$ till element av $Type1$. Låt $_H_O$ vara ett element av $Q_$ av $0$. Låt $_H_S$ vara en funktion från naturliga tal $x_386$ och element $_x_388$ av $Q_$ av $x_386$ till element av $Q_$ av summan av $x_386$ och $1$. Låt $x_385 \\in N$. Då håller $Q_$ för $x_385$.\nassistant\n", "label": "Axiom nat_rect_Type1 : forall Q_ : ((_x_385 : nat) -> Type1), forall _H_O : Q_ 0, forall _H_S : ((x_386 : nat) -> (_x_388 : Q_ x_386) -> Q_ (x_386 + 1)), forall x_385 : nat, Q_ x_385 .", "predict": "Axiom nat_rect_Type1 : forall Q : nat -> Type1 -> Q 0 -> (forall x : nat, forall x' : Q x, Q (x + 1)) -> forall x_385 : nat, Q x_385 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1033. Låt $p , n , q , r \\in N$. Anta att $0$ är mindre än $p$. Anta att $p$ inte är delbart med $r$. Anta att $n$ är lika med produkten av potensen av $p$ och $q$ och $r$. Låt $q0$ och $q1$ vara naturliga tal. Då om summan av $q1$ och $1$ är mindre än eller lika med potensen av $p$ och summan av $q1$ och $1$, så för alla naturliga tal $x2515$ och $x2516$, är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.\nassistant\n", "label": "axiom let_clause_1033 (p n q r : Nat) (posp : 0 < p) (ndivpr : ¬ divisible p r) (Hn : n = pow p q * r) (q0 q1 : Nat) (Hind : q1 + 1 ≤ pow p (q1 + 1)) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (p n q r : Nat) (x : 0 < p) (y : p % r ≠ 0) (z : n = p ^ q * r) (q0 q1 : Nat) : q1 + 1 ≤ pow p (q1 + 1) → ∀ x2515 x2516 : Nat, x2515 = (x2516 * (x2515 / x2516) + mod x2515 x2516)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nExp_pi. Låt $n , m \\in N$. Då för alla funktioner $p$ från naturliga tal till sanningsvärden, för alla funktioner $f$ från naturliga tal till naturliga tal, är potensen av $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $m$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $f$ applicerat på $i$ och $m$.\nassistant\n", "label": "Axiom exp_pi : forall n : nat, forall m : nat, forall p : ((x__ : nat) -> bool), forall f : ((x__ : nat) -> nat), bigop n (fun i => p i) nat 1 times (fun i => pow (f i) m) = pow (bigop n (fun i => p i) nat 1 times (fun i => f i)) m .", "predict": "Axiom exp_pi : forall n : nat, forall m : nat, forall p : nat -> bool, forall f : nat -> nat, (bigop n (fun i => p i) Nat 1 times (fun i => f i) m) = (bigop n (fun i => p i) Nat 1 times (fun i => pow (f i) m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$. Alors si $a p - b m = 1$, alors $p a - m b = 1$.\nassistant\n", "label": "let_clause_1561 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (minus (times p a) (times m b)) (nd 1) .", "predict": "let_clause_1561 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (and (Lt (nd 0) p) (Eq (nd 1) (gcd p m))) -> Proof (divides p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> Proof (ex (Nat) (x => Eq (gcd p m) (plus (minus (times a p) (times b m)) (gcd p m))) (x => Eq (gcd p m) (minus (times b m) (times a p)))) -> b : Elem Nat -> Proof (or (and (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (and (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (times p a) (plus (times m b) (times (nd 1) (gcd p m)))))) -> Proof (if (Eq (minus (times a p) (times b m)) (nd 1)) (Eq (minus (times p a) (times m b)) (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15625. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att $c n - d m = 1$ eller $d m - c n = 1$. Anta att $d m - c n = 1$. Då $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall x : ex (Nat -> Prop), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1600. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$. Då är $n c - m d$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "let_clause_1600 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) .", "predict": "let_clause_1600 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (ex Nat (fun d => and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> Proof (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (and (Eq (minus (times c n) (times d m)) (nd 1))) (nd 1)) -> Proof (Eq (minus (times n c) (times m d)) (Gcd m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nGcd_times_SO_to_gcd_SO. Låt $m$ och $n$ och $p$ vara naturliga tal. Då om $0$ är mindre än $n$, så om $0$ är mindre än $p$, så om det största gemensama delaret av $m$ och produkten av $n$ och $p$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med $1$.\nassistant\n", "label": "postulate gcd_times_SO_to_gcd_SO : (m : Nat) -> (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 p) -> (__2 : Eq (gcd m (times n p)) 1) -> Eq (gcd m n) 1", "predict": "postulate gcd_times_SO_to_gcd_SO : (m : Nat) -> (n : Nat) -> (p : Nat) -> (0 < n) -> (0 < p) -> (gcd m (times n p) == 1) -> gcd m n == 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nTrue_to_le_max. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$, si $m < n$, alors si $f (m)= true$, alors $m \\leq max (n , f)$.\nassistant\n", "label": "Axiom true_to_le_max : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall x__ : (m < n), forall __1 : (f m = true), Leq m (max n f) .", "predict": "Axiom true_to_le_max : forall f : nat -> bool, forall n : nat, forall m : nat, (m < n -> f m = true -> m <= max n f) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_16001. Låt $m , n , a , b \\in N$. Då om $0$ är mindre än $n$, så om $0$ är mindre än $m$, så om det största gemensama delaret av $n$ och $m$ är lika med $1$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.\nassistant\n", "label": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n -> 0 < m -> (gcd n m = 1 -> forall c : nat, forall _clearme : ex (Nat -> forall d : nat, (Eq (n * c - m * d) 1 \\/ Eq (m * d - n * c) 1) -> Eq (gcd m n) (n - m * d + m * c))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMax_spec_ind_body. Låt $_n \\in N$. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Låt $Q_$ vara en funktion från naturliga tal $x_971$ och element $_x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$ till påståenden. Låt $_H_found_max_spec$ vara en funktion från naturliga tal $m$ och element $x_975$ av $Lt$ av $m$ och $_n$ och element $x_974$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $m$ och $found_max_spec$ applicerat på $_n$ och $_f$ och $m$ och $x_975$ och $x_974$ och $x_973$. Låt $_H_not_found_max_spec$ vara en funktion från funktioner $x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $0$ och $not_found_max_spec$ applicerat på $_n$ och $_f$ och $x_976$. Då för alla naturliga tal $x_971$, för alla element $x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$, håller $Q_$ för $x_971$ och $x_972$.\nassistant\n", "label": "postulate max_spec_ind_body : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972", "predict": "postulate max_spec_ind_body : (n : Nat) -> (f : Nat -> Prop) -> all Nat (\\ x -> all (max_spec n f x) (Q x))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_minr. Soit $i , n , m \\in N$. Alors si $i \\leq min (n , m)$, alors $i \\leq m$.\nassistant\n", "label": "postulate le_minr : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i (min n m)) -> Leq i m", "predict": "postulate le_minr : (i : Nat) -> (n : Nat) -> (m : Nat) -> Eq (min n m) i -> le i m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMatch_range. Soit $_A$ un ensemble. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des éléments $z$ de $range$ de $_A$ à des éléments de $return_sort$. Alors pour toutes les fonctions $case_mk_range$ des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $return_type$ de $mk_range (_A , _enum , _upto , _filter)$, pour tous les éléments $z$ de $range$ de $_A$, $return_type$ tient pour $z$.\nassistant\n", "label": "postulate match_range : (_A : Set) -> (return_sort : Sort) -> (return_type : (z : range _A) -> return_sort) -> (case_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> return_type (mk_range _A _enum _upto _filter)) -> (z : range _A) -> return_type z", "predict": "postulate match_range : (A : Set) -> return_sort : Sort -> (return_type : range A -> return_sort) -> all (case_mk_range (enum : Nat -> A) (upto : Nat) (filter : Nat -> Bool) (mk_range : A -> Enum Nat -> Nat -> Filter Nat Bool -> Range A)) (\\ z -> return_type z)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x0 : a ≤ n ∧ f a = i ∧ a ≤ n) (x1 : f a = i) (b : Nat) (x2 : b ≤ n ∧ f b = j ∧ b ≤ n) : f b = j → ∀ g : Nat → i0 → Leq i0 n → Leq (f i0) n, ∀ injf : Permut f n, ∀ a : Nat, (a = b → f a = j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_S_S_to_le. Låt $n$ och $m$ vara naturliga tal. Då om summan av $n$ och $1$ är mindre än eller lika med summan av $m$ och $1$, så är $n$ mindre än eller lika med $m$.\nassistant\n", "label": "Axiom le_S_S_to_le : forall n : nat, forall m : nat, forall x__ : Leq (n + 1) (m + 1), Leq n m .", "predict": "Axiom le_S_S_to_le : forall n : nat, forall m : nat, (n + 1 <= m + 1 -> n <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_B_Psi4. Pour tous les nombres naturels $n$, si $0$ est inférieur à $n$, alors le produit de $2$ et de $B$ appliqué à le produit de $4$ et de $n$ est inférieur ou ágal à $Psi$ appliqué à le produit de $4$ et de $n$.\nassistant\n", "label": "axiom le_B_Psi4 (n : Nat) (x__ : 0 < n) : 2 * B (4 * n) ≤ Psi (4 * n)", "predict": "axiom le_B_Psi4 (n : Nat) (x : 0 < n) : 2 * B (4 * n) ≤ Psi (4 * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$ and $n \\leq m$. Then if $n \\leq q + 1$ and $n$ is not divisible by $m$, then for all natural numbers $a$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : (p : Elem Nat) -> (q : Elem Nat) -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt : 0 -> n) -> Proof (Leq : n -> m) -> Proof (Leq : n -> q) -> Proof (ex : Nat -> Proof (Eq : (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) -> Proof (Eq : (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) -> Proof (forall Nat (a => forall (ex : Nat) => Proof (forall Nat (b => if (or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n)))))) -> Proof (Eq (minus (times n b) (times a (mod m n))) (gcd_aux q m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNat_rect_CProp1. Pour toutes les fonctions $Q_$ des nombres naturels $_x_409$ à des propositions, pour tous les éléments $_H_O$ de $Q_$ de $0$, pour toutes les fonctions $_H_S$ des nombres naturels $x_410$ et des éléments $_x_412$ de $Q_$ de $x_410$ à des éléments de $Q_$ de la somme de $x_410$ et de $1$, pour tous les nombres naturels $x_409$, $Q_$ tient pour $x_409$.\nassistant\n", "label": "nat_rect_CProp1 : Q_ : (_x_409 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_410 : Nat -> _x_412 : Q_ x_410 -> Q_ (plus x_410 (nd 1))) -> x_409 : Nat -> Q_ x_409 .", "predict": "nat_rect_CProp1 : (Q : Elem Nat -> Prop) -> Proof (forall (H_O : Q 0) -> forall (H_S : Elem Nat -> Elem Nat -> Proof (forall (x_410 : Nat) -> forall (x_412 : Q x_410) -> Q (plus x_410 1))) -> forall (x_409 : Nat) -> Proof (Q x_409)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax'. Let $__ \\in N$. Then for all functions $__1$ from natural numbers $__1$ to booleans, for all natural numbers $__2$, $Nat$.\nassistant\n", "label": "axiom max' (x__ : Nat) (__1 : (__1 : Nat) -> bool) (__2 : Nat) : Nat", "predict": "axiom max' (x : Nat) : ∀ f : Nat → Bool, ∀ n : Nat, f n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDivides_to_not_ord_O. Soit $p , m \\in N$. Alors si $0 < m$ et $p$ est premier, alors si $p$ est divisible par $m$, alors $ord (m , p)$ n'est pas égal à $0$.\nassistant\n", "label": "Axiom divides_to_not_ord_O : forall p : nat, forall m : nat, forall x__ : (0 < m), forall __1 : prime p, forall __2 : divisible p m, ~ (ord m p = 0) .", "predict": "Axiom divides_to_not_ord_O : forall p : nat, forall m : nat, (0 < m /\\ prime p -> (divisible p m -> neq (ord m p) 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Då om $n$ inte är delbart med $m$, så för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så om $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "Axiom let_clause_15441 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (b * n - a * mod m n = gcd_aux q n (mod m n)), n * b - a * mod m n = gcd_aux q n (mod m n) .", "predict": "Axiom let_clause_15441 : forall p : nat, forall q : nat, forall Hind : forall m : nat, forall n : nat, (0 <= n /\\ n <= q + 1 /\\ ~ (n mod m = 0)) -> forall a : nat, forall _clearme : ex Nat, forall b : Lt 0 n /\\ Leq n m /\\ Leq n q, (Eq (b * m - a * n) (gcd_aux q m n)) -> forall b : nat, (Eq (b * n - a mod (m, n)) (gcd_aux q n (mod m n))) -> Eq (n * b - a mod (m, n)) (gcd_aux q n (mod m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1078. Let $a , b , q , r , q1 , r1 \\in N$. Let $_clearme$ be an element of $div_mod_spec$ of $a$ and $b$ and $q$ and $r$. Assume that $r$ is less than $b$. Assume that $a$ is equal to the sum of the product of $q$ and $b$ and $r$. Let $_clearme0$ be an element of $div_mod_spec$ of $a$ and $b$ and $q1$ and $r1$. Assume that $r1$ is less than $b$. Assume that $a$ is equal to the sum of the product of $q1$ and $b$ and $r1$. Then if $q$ is less than or equal to $q1$, then if $q$ is less than $q1$, then $a$ is equal to the sum of $r$ and the product of $b$ and $q$.\nassistant\n", "label": "let_clause_1078 : a : Nat -> b : Nat -> q : Nat -> r : Nat -> q1 : Nat -> r1 : Nat -> _clearme : div_mod_spec a b q r -> ltrb : Lt r b -> spec : Eq a (plus (times q b) r) -> _clearme0 : div_mod_spec a b q1 r1 -> ltr1b : Lt r1 b -> spec1 : Eq a (plus (times q1 b) r1) -> leqq1 : Leq q q1 -> ltqq1 : Lt q q1 -> Eq a (plus r (times b q)) .", "predict": "let_clause_1078 : a : Elem Nat -> b : Elem Nat -> q : Elem Nat -> r : Elem Nat -> q1 : Elem Nat -> r1 : Elem Nat -> Proof (div_mod_spec a b q r) -> Proof (Lt r b) -> Proof (Eq a (plus (times q b) r)) -> Proof (div_mod_spec a b q1 r1) -> Proof (Lt r1 b) -> Proof (Eq a (plus (times q1 b) r1)) -> Proof (Leq q q1) -> Proof (Lt q q1) -> Proof (Eq a (plus r (times b q))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLstar_ind_r. Låt $B$ vara en mängd. Låt $R$ vara ett element av $relation$ av $B$. Låt $b1$ vara ett element av $B$. Låt $P$ vara ett element av $relation2$ av $Nat$ och $B$. Låt $__$ vara ett element av $P$ av $0$ och $b1$. Då för alla funktioner $__1$ från naturliga tal $l$ och element $b$ av $B$ och element $b2$ av $B$ och element $__1$ av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b$ och element $__2$ av $R$ av $b$ och $b2$ och element $__3$ av $P$ av $l$ och $b$ till element av $P$ av $l + 1$ och $b2$, för alla naturliga tal $l$, för alla element $b2$ av $B$, för alla element $__2$ av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b2$, håller $P$ för $l$ och $b2$.\nassistant\n", "label": "postulate lstar_ind_r : (B : Set) -> (R : relation B) -> (b1 : B) -> (P : relation2 Nat B) -> (_ : P 0 b1) -> (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (plus l 1) b2) -> (l : Nat) -> (b2 : B) -> (__2 : lstar B R l b1 b2) -> P l b2", "predict": "postulate lstar_ind_r : (B : Set) -> (R : Relation B) -> (b1 : B) -> (P : Relation2 Nat (Set B)) -> Eq (P 0 b1) (b1) -> all Nat (\\ l -> all B (\\ b2 -> all (LStar B R l b1 b) (P l b2 -> P (plus l 1) b2)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nCongruent_ab_lt. Soit $m , n , a , b \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Alors $ex$ tient pour $Nat$ et la fonction qui envoie $x$ à la conjonction de la conjonction de $congruent$ appliqué à $x$ et $a$ et $m$ et de $congruent$ appliqué à $x$ et $b$ et $n$ et de $Lt$ appliqué à $x$ et le produit de $m$ et de $n$.\nassistant\n", "label": "axiom congruent_ab_lt (m n a b : Nat) (x__ : 0 < n) (__1 : 0 < m) (__2 : gcd n m = 1) : ex Nat (λ x => congruent x a m ∧ congruent x b n ∧ x < m * n)", "predict": "axiom congruent_ab_lt (m n a b : Nat) (x : 0 < n ∧ 0 < m ∧ gcd n m = 1) : ex ∈ Nat ∧ (∀ x, congruent x a m ∧ congruent x b n ∧ Lt x (m * n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Anta att $f (a)= i$. Låt $b$ vara ett naturligt tal. Anta att $b \\leq n$ och $f (b)= j$. Då om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> i : Nat -> j : Nat -> (a : Nat) -> and (Leq a n) (Eq (f a) i) -> and (Leq a n) (Eq (f a) i) -> b : Nat -> and (Leq b n) (Eq (f b) j) -> and (Leq b n) (Eq (f b) j) -> all (fun : (i0 : Nat) -> all (Leq i0 n) -> all (Leq (f i0) n) -> injf : (injn : Permut f n) -> Eq a b -> Eq (f a) j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nFound_min_spec. Låt $n$ och $b$ vara naturliga tal. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $m$ vara ett naturligt tal. Anta att $b$ är mindre än eller lika med $m$. Då om $m$ är mindre än summan av $n$ och $b$, så om $f$ applicerat på $m$ är lika med $true$, så för alla funktioner $__3$ från naturliga tal $i$ och element $__3$ av $Leq$ av $b$ och $i$ och element $__4$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $f$ applicerat på $i$ och kontradiktion, håller $min_spec$ för $n$ och $b$ och $f$ och $m$.\nassistant\n", "label": "found_min_spec : n : Nat -> b : Nat -> f : (__ : Nat -> bool) -> m : Nat -> __ : Leq b m -> __1 : Lt m (plus n b) -> __2 : Eq (f m) true -> __3 : (i : Nat -> __3 : Leq b i -> __4 : Lt i m -> Eq (f i) false) -> min_spec n b f m .", "predict": "found_min_spec : (n : Elem Nat) -> (b : Elem Nat) -> Proof (Leq b m) -> Proof (and (Lt m (plus n b)) (Eq (f m) true)) -> Proof (forall (x : Elem Nat) -> forall (y : Elem Leq b y) -> forall (z : Elem Lt m z) -> Eq (f z) (Eq (f x) (Contradiction))) -> Proof (and (min_spec n b) (f m) m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nPermut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Då för alla naturliga tal $k$ och $n$, om $k \\leq n$, så för alla element $__1$ av $permut$ av $h$ och $n$, för alla funktioner $__2$ från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h (m)$ och $m$, för alla naturliga tal $j$, om $k \\leq j$, så om $j \\leq n$, så $k \\leq h (j)$.\nassistant\n", "label": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)", "predict": "postulate permut_n_to_le : (h : Nat -> Nat) -> all Nat (\\ k -> all Nat (\\ n -> if (Leq k n) (all (permut h n) (\\ x -> all (Lt k x) (Eq (h (select (Lt (x) k))) x)))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_elim2. Let $R$ be a function from natural numbers and natural numbers $__1$ to propositions. Let $__$ be a function from natural numbers $n$ to elements of $R$ of $0$ and $n$. Let $__1$ be a function from natural numbers $n$ to elements of $R$ of $n + 1$ and $0$. Let $__2$ be a function from natural numbers $n$ and natural numbers $m$ and elements $__2$ of $R$ of $n$ and $m$ to elements of $R$ of $n + 1$ and $m + 1$. Let $n$ and $m$ be natural numbers. Then $R$ holds for $n$ and $m$.\nassistant\n", "label": "postulate nat_elim2 : (R : (_ : Nat) -> (__1 : Nat) -> Prop) -> (_ : (n : Nat) -> R 0 n) -> (__1 : (n : Nat) -> R (plus n 1) 0) -> (__2 : (n : Nat) -> (m : Nat) -> (__2 : R n m) -> R (plus n 1) (plus m 1)) -> (n : Nat) -> (m : Nat) -> R n m", "predict": "postulate nat_elim2 : (R : Nat -> Nat -> Prop) -> ($\\_$ : Nat -> Elem (R 0) (R n)) -> ($\\_$ : Nat -> Elem (R (plus n 1)) 0) -> ($\\_$ : Nat -> Nat -> Elem (R n m) -> Elem (R (plus n 1) (plus m 1))) -> Nat -> Nat -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDivides_to_gcd_aux. Soit $p , m , n \\in N$. Alors si $0 < p$, alors si $0 < n$, alors si $n$ est divisible par $m$, alors $gcd_aux (p , m , n)= n$.\nassistant\n", "label": "postulate divides_to_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 n) -> (__2 : divisible n m) -> Eq (gcd_aux p m n) n", "predict": "postulate divides_to_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> if (and (Lt 0 p) (Lt 0 n)) (if (divisible n m) (Eq (gcd_aux p m n) n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nPad_bigop_nil. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $Aop$ av $B$ och $nil$. Låt $f$ vara en funktion från naturliga tal till element av $B$. Då om $n \\leq k$, så för alla funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Leq$ av $n$ och $i$ och element $__2$ av $Lt$ av $i$ och $k$ till element av $or$ av $Eq$ applicerat på $p$ applicerat på $i$ och kontradiktion och $Eq (f (i), nil)$, är $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.\nassistant\n", "label": "Axiom pad_bigop_nil : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> B), forall x__ : Leq n k, forall __1 : ((i : nat) -> (__1 : Leq n i) -> (__2 : i < k) -> p i = false \\/ f i = nil), bigop n (fun i => p i) B nil (op B nil op) (fun i => f i) = bigop k (fun i => p i) B nil (op B nil op) (fun i => f i) .", "predict": "Axiom pad_bigop_nil : forall k : nat, forall n : nat, forall p : nat -> Prop, forall B : Set, forall nil : B, forall op : B -> nil -> Aop, forall f : nat -> B, (n <= k -> forall __1 : nat -> Prop, forall __2 : nat -> Prop, forall i : nat, (Leq n i /\\ Lt i k -> Eq (bigop k (fun i => p i) B nil op (fun i => f i)) (bigop n (fun i => p i) B nil op (fun i => f i)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDiv_mod_spec_to_eq. Soient $a$ et $b$ et $q$ et $r$ et $q1$ et $r1$ des nombres naturels. Soit $__$ un élément de $div_mod_spec$ de $a$ et de $b$ et de $q$ et de $r$. Alors pour tous les éléments $__1$ de $div_mod_spec$ de $a$ et de $b$ et de $q1$ et de $r1$, $q$ est égal à $q1$.\nassistant\n", "label": "Axiom div_mod_spec_to_eq : forall a : nat, forall b : nat, forall q : nat, forall r : nat, forall q1 : nat, forall r1 : nat, forall x__ : div_mod_spec a b q r, forall __1 : div_mod_spec a b q1 r1, q = q1 .", "predict": "Axiom div_mod_spec_to_eq : forall a : nat, forall b : nat, forall q : nat, forall r : nat, forall q1 : nat, forall r1 : nat, forall __ : div_mod_spec a b q r, forall __1 : div_mod_spec a b q1 r1, q = q1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDivides_ind. Låt $_n$ och $_m$ vara naturliga tal. Då för alla funktioner $Q_$ från element $_x_1192$ av $divisible$ av $_n$ och $_m$ till påståenden, för alla funktioner $_H_quotient$ från naturliga tal $q$ och element $x_1193$ av $Eq$ av $_m$ och produkten av $_n$ och $q$ till element av $Q_$ av $quotient$ applicerat på $_n$ och $_m$ och $q$ och $x_1193$, om $_n$ är delbart med $_m$, så håller $Q_$ för $x_1192$.\nassistant\n", "label": "divides_ind : _n : Nat -> _m : Nat -> Q_ : (_x_1192 : divisible _n _m -> Prop) -> _H_quotient : (q : Nat -> x_1193 : Eq _m (times _n q) -> Q_ (quotient _n _m q x_1193)) -> x_1192 : divisible _n _m -> Q_ x_1192 .", "predict": "divides_ind : (n : Elem Nat) -> (m : Elem Nat) -> Proof (forall (Q : Elem (divisible n m) -> Prop) -> forall (H_quotient : Elem (nat -> Eq m (times n q)) -> Elem Q (quotient n m q) (x_1193)) -> Proof (n / m) -> Proof (Q x_1192)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrimes_below_lop. Let $n \\in N$. Then $primes_below$ holds for $list_of_primes (n)$ and $n + 2$.\nassistant\n", "label": "Axiom primes_below_lop : forall n : nat, primes_below (list_of_primes n) (n + 2) .", "predict": "Axiom primes_below_lop : forall n : nat, (primes_below (list_of_primes n) n /\\ primes_below (list_of_primes (n + 2)) (n + 2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPi_p_primeb. Let $n \\in N$. Then if $0$ is less than $n$, then $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and $ord$ applied to $n$ and $p$.\nassistant\n", "label": "Axiom pi_p_primeb : forall n : nat, forall x__ : (0 < n), n = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => pow p (ord n p)) .", "predict": "Axiom pi_p_primeb : forall n : nat, (0 < n -> n = bigop (n + 1) (fun p => primeb p Nat 1 times (fun p => pow p (ord n)) n p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$. Supposons que $a p - b m = 1$. Alors $p a - m b = 1$.\nassistant\n", "label": "axiom let_clause_1561 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : p * a - m * b = 1", "predict": "axiom let_clause_1561 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (t : m * n = p * c) (a : Nat) (x0 : ex : Nat → gcd p m = a * p - b * m ∨ gcd p m = b * m - a * p) (x1 : x0 a) (x2 : gcd p m = a * p - b * m) (x3 : a * p - b * m = 1) : p * a - m * b = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1551. Soient $m$ et $n$ des nombres naturels. Alors si $0$ est égal à $n$, alors pour tous les nombres naturels $x347$, $n$ est égal au produit de $x347$ et de $n$.\nassistant\n", "label": "let_clause_1551 : m : Nat -> n : Nat -> eqn0 : Eq 0 n -> x347 : Nat -> Eq n (times x347 n) .", "predict": "let_clause_1551 : m : Elem Nat -> n : Elem Nat -> Proof (if (Eq (nd 0) n) (forall Nat (x347 => Eq n (times x347 n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBigop_Sfalse. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to absurdity, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "axiom bigop_Sfalse (k : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (x__ : p k = false) : bigop (k + 1) (λ i => p i) B nil op (λ i => f i) = bigop k (λ i => p i) B nil op (λ i => f i)", "predict": "axiom bigop_Sfalse (k : Nat) (p : Nat → Bool) (B : Set Nat) (nil : B) (op : B → Nat → B) (f : Nat → B) : p k = absurdity → bigop (k + 1) (λ i, p i B nil op (λ i, f i)) = bigop k (λ i, p i B nil op (λ i, f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nSame_bigop. Let $k \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ and $g$ be functions from natural numbers to elements of $B$. Let $__$ be an element of $sameF_upto$ of $k$ and $bool$ and $p1$ and $p2$. Let $__1$ be an element of $sameF_p$ of $k$ and $p1$ and $B$ and $f$ and $g$. Then $bigop$ applied to $k$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "same_bigop : k : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> g : (__ : Nat -> B) -> __ : sameF_upto k bool p1 p2 -> __1 : sameF_p k p1 B f g -> Eq (bigop k (i : Nat => p1 i) B nil op (i : Nat => f i)) (bigop k (i : Nat => p2 i) B nil op (i : Nat => g i)) .", "predict": "same_bigop : (k : Elem Nat) -> (p1 : Elem (Nat -> Bool)) -> (p2 : Elem (Nat -> Bool)) -> (B : Elem Set) -> (nil : Elem B) -> (op : Elem (B -> B -> B)) -> (f : Elem (Nat -> B)) -> (g : Elem (Nat -> B)) -> Proof (sameF_upto k bool p1 p2) -> Proof (sameF_p k p1 B f g) -> Proof (Eq (bigop k (lambda i => p2 i) B nil op (lambda i => g i)) (bigop k (lambda i => p1 i) B nil op (lambda i => f i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_O_f. Let $f$ be a function from natural numbers to booleans. Let $b \\in N$. Then $min (0 , b , f)= b$.\nassistant\n", "label": "axiom min_O_f (f : (x__ : Nat) -> bool) (b : Nat) : min 0 b f = b", "predict": "axiom min_O_f (f : Nat → Bool) (b : Nat) : min 0 b f = b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1033. Let $p , n \\in N$. Assume that $1 < p$. Let $m$ and $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (lt1p : Lt 1 p) -> (m : Nat) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> 1 < p -> Eq (plus (times (div x2515 x2516) x2515) (mod x2515 x2516)) x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMin_to_min_spec. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$ och $b$ och $m$, om $min$ applicerat på $n$ och $b$ och $f$ är lika med $m$, så håller $min_spec$ för $n$ och $b$ och $f$ och $m$.\nassistant\n", "label": "min_to_min_spec : f : (__ : Nat -> bool) -> n : Nat -> b : Nat -> m : Nat -> __ : Eq (min n b f) m -> min_spec n b f m .", "predict": "min_to_min_spec : (f : Elem (Nat -> Bool)) -> Proof (forall Nat (n => forall Nat (b => forall Nat (m => if (Eq (min n b) m) (min_spec n b f m))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nRange_inv_rect_CProp4. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Soit $P$ une fonction des éléments $_z1668$ de $range$ de $x1$ à des propositions. Soit $_H1$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1669$ de $Eq$ de $Hterm$ et de $mk_range (x1 , _enum , _upto , _filter)$ à des éléments de $P$ de $mk_range (x1 , _enum , _upto , _filter)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_CProp4 (x1 : Set) (Hterm : range x1) (P : (_z1668 : range x1) -> Prop) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1669 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_CProp4 (x1 : Type) (Hterm : x1) (P : ∀ z1668 : x1, Prop) (H1 : ∀ enum : Nat → x1, ∀ upto : Nat, ∀ filter : Nat → Bool, ∀ z1669 : Eq Hterm (mk_range x1 enum upto (filter z1669)), P (mk_range x1 enum upto (filter z1669))) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLePsi_prim. Låt $n \\in N$. Då är produkten av $Psi (n)$ och $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $p$ mindre än eller lika med $n ^ prim (n)$.\nassistant\n", "label": "postulate lePsi_prim : (n : Nat) -> Leq (pow n (prim n)) (times (Psi n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> p)))", "predict": "postulate lePsi_prim : (n : Nat) -> Eq (times (Psi n) (bigop (plus n 1))) (times (primeb n) (Nat 1) (times (times n (prim n)) (primeb n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_exists. Let $f$ be a function from natural numbers to booleans. Let $t , m \\in N$. Assume that $m < t$. Assume that $f (m)= true$. Let $k , b \\in N$. Assume that $b \\leq m$. Then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, if $t = k + b$, then $min (k , b , f)= m$.\nassistant\n", "label": "axiom min_exists (f : (x__ : Nat) -> bool) (t m : Nat) (x__ : m < t) (__1 : f m = true) (k b : Nat) (__2 : b ≤ m) (__3 : (i : Nat) -> (__3 : b ≤ i) -> (__4 : i < m) -> f i = false) (__4 : t = k + b) : min k b f = m", "predict": "axiom min_exists (f : Nat → Bool) (t m : Nat) (x : m < t) (y : f m = true) (k b : Nat) (z : b ≤ m) : ∀ i : Nat, ∀ x : Leq b i, ∀ y : Lt i m, ∀ z : Eq (f i) absurdity, (t = k + b) → min k b f = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_n_Sm_elim. Soient $n$ et $m$ des nombres naturels. Supposons que $n$ est inférieur ou ágal à la somme de $m$ et de $1$. Alors pour toutes les propositions $P$, pour toutes les fonctions $__1$ des éléments $__1$ de $Leq$ de la somme de $n$ et de $1$ et de la somme de $m$ et de $1$ à des éléments de $P$, pour toutes les fonctions $__2$ des éléments $__2$ de $Eq$ de $n$ et de la somme de $m$ et de $1$ à des éléments de $P$, $P$.\nassistant\n", "label": "Axiom le_n_Sm_elim : forall n : nat, forall m : nat, forall x__ : Leq n (m + 1), forall P : Prop, forall __1 : ((__1 : Leq (n + 1) (m + 1)) -> P), forall __2 : ((__2 : n = m + 1) -> P), P .", "predict": "Axiom le_n_Sm_elim : forall n : nat, forall m : nat, (n <= m + 1 -> forall P : Prop, forall __1 : Leq (n + 1) (m + 1) -> P, forall __2 : Eq n (m + 1) -> P) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_15692. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.\nassistant\n", "label": "Axiom let_clause_15692 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15692 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall x : ex (Nat -> Prop), forall d : nat, (1 = (Eq (n * c - m * d) 1 \\/ Eq (m * d - n * c) 1) -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nRange_rect_CProp3. Pour tous les ensembles $_A$, pour toutes les fonctions $Q_$ des éléments $_x_933$ de $range$ de $_A$ à des propositions, pour toutes les fonctions $_H_mk_range$ des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range$ appliqué à $_A$ et $_enum$ et $_upto$ et $_filter$, pour tous les éléments $x_933$ de $range$ de $_A$, $Q_$ tient pour $x_933$.\nassistant\n", "label": "postulate range_rect_CProp3 : (_A : Set) -> (Q_ : (_x_933 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_933 : range _A) -> Q_ x_933", "predict": "postulate range_rect_CProp3 : (A : Set) -> (Q : (x : A -> Range A) -> Prop) -> (H : (enum : Nat -> A) -> upto : Nat -> (filter : Nat -> Prop) -> mk_range A enum upto -> Prop) -> all (Range A) Q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nCongruent_ab_lt. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Alors si $0 < n$ et $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors $ex$ tient pour $Nat$ et la fonction qui envoie $x$ à la conjonction de la conjonction de $congruent$ appliqué à $x$ et $a$ et $m$ et de $congruent$ appliqué à $x$ et $b$ et $n$ et de $Lt$ appliqué à $x$ et le produit de $m$ et de $n$.\nassistant\n", "label": "postulate congruent_ab_lt : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Eq (gcd n m) 1) -> ex Nat (\\ x : Nat -> and (and (congruent x a m) (congruent x b n)) (Lt x (times m n)))", "predict": "postulate congruent_ab_lt : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (and (Lt 0 n) (Lt 0 m)) -> Eq (gcd n m) 1 -> Nat -> and (and (congruent x a m) (congruent x b n)) (Lt x (times m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_16171. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Då för alla naturliga tal $c$, om $m n = p c$, så för alla naturliga tal $a$, för alla element $_clearme0$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$, för alla naturliga tal $b$, om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (and (Lt (nd 0) p) (Eq (nd 1) (gcd p m))) -> Proof (and (divides p (times m n)) (forall Nat (c => if (Eq (times m n) (times p c)) (forall Nat (a => forall (ex : Elem (Set Nat)) (b => if (or (Eq (gcd (nd 1) (times p (minus b (times m))) (gcd p m)) (times a p - (times b m))) (Eq (minus (times b m) (times a p)) (gcd (nd 1) (times p (minus b (times m))) (gcd p m))))))))) -> Proof (forall Nat (b => if (and (Eq (gcd (nd 1) (times p (minus b (times m))) (gcd p m)) (Eq (gcd (nd 1) (times p (minus b (times m))) (times b m - (times a p)))))) (Eq (minus (times m b) (times p a)) (gcd (nd 1) (times p (minus b (times m))) (gcd p m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Då om $n$ inte är delbart med $m$, så för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så om skillnaden mellan produkten av $a$ och $mod", "label": "Axiom let_clause_1544 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (a * mod m n - b * n = gcd_aux q n (mod m n)), a * mod m n - n * b = gcd_aux q n (mod m n) .", "predict": "$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ inte är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ inte är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ inte är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ inte är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så $n$ är delbart med $m$.\nAxiom let_clause_1544 : forall p : nat, forall q : nat, (Hind : forall m : nat, forall n : nat, (Lt : 0 < n /\\ Leq : n <= m /\\ Leq : n <= q + 1 -> ~ (Div : n | m) -> forall a : nat, forall _clearme : ex Nat, forall b : Nat, (Eq : disj (Eq : skill (a * n) (b * m) - gcd_aux : q * m * n) (gcd_aux : q * n * mod : m * n)) -> Eq : (skill (a * mod : m * n) (b * n) - gcd_aux : q * n * mod : m * n) \\/ Eq : (skill (b * n) (a * mod : m * n) - gcd_aux : q * n * mod : m * n) -> ~ (Eq : (skill (a * mod : m * n) (b * n) - gcd_aux : q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nPermut_mod. Soit $p , a \\in N$. Supposons que $p$ est premier. Alors si $p$ n'est pas divisible par $a$, alors $permut$ tient pour la fonction qui envoie $n$ à $mod (a n , p)$ et $pred (p)$.\nassistant\n", "label": "postulate permut_mod : (p : Nat) -> (a : Nat) -> (_ : prime p) -> (__1 : not (divisible p a)) -> permut (\\ n : Nat -> mod (times a n) p) (pred p)", "predict": "postulate permut_mod : (p : Nat) -> (a : Nat) -> Prime p -> Not (divisible p a) -> Function Nat Nat (λ n -> mod (times a n) p) (pred p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nAop_rect_Type3. Låt $A$ vara en mängd. Då för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_867$ av $Aop$ av $A$ och $_nil$ till element av $Type3$, för alla funktioner $_H_mk_Aop$ från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op (_nil , a)$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op (a , _nil)$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op (a , op (b , c))$ och $op (op (a , b), c)$ till element av $Q_$ av $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, för alla element $x_867$ av $Aop$ av $A$ och $_nil$, håller $Q_$ för $x_867$.\nassistant\n", "label": "postulate Aop_rect_Type3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_867 : Aop A _nil) -> Type3) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_867 : Aop A _nil) -> Q_ x_867", "predict": "postulate aop_rect_Type3 : (A : Set) -> all (Nil : A) -> all (Q_ : (x : Aop A) -> Nil -> Type3) -> all (H_mk_Aop : (op : A -> _) -> 1 -> A) -> all (nill : (a : A) -> Eq (op Nil a) a) -> all (nilr : (a : A) -> Eq (op a Nil) a) -> all (assoc : (a : A) -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> all (x : Aop A) -> all (Nil : A) -> Q_ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDivides_to_p_ord. Pour tous les nombres naturels $p$ et $a$ et $b$ et $c$ et $d$ et $n$ et $m$, si $0$ est inférieur à $n$, alors si $0$ est inférieur à $m$, alors si $p$ est premier, alors si $n$ est divisible par $m$, alors si $p_ord$ appliqué à $n$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $a$ et $b$, alors si $p_ord$ appliqué à $m$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $c$ et $d$, alors $b$ est divisible par $d$ et $a$ est inférieur ou ágal à $c$.\nassistant\n", "label": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> (__4 : Eq (p_ord n p) (mk_Prod Nat Nat a b)) -> (__5 : Eq (p_ord m p) (mk_Prod Nat Nat c d)) -> and (divisible b d) (Leq a c)", "predict": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (n : Lt 0 n) -> (m : Lt 0 m) -> (p : Prime p) -> (n : Divisible n m) -> (p_ord : n -> p -> mk_Prod Nat Nat a b) -> (m : Divisible m p) -> (p_ord : m -> p -> mk_Prod Nat Nat c d) -> Eq b d -> Leq a c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x1 : a ≤ n ∧ f a = i ∧ a ≤ n) (x2 : f a = i) (b : Nat) (x3 : b ≤ n ∧ f b = j ∧ b ≤ n) (x4 : f b = j) : ∀ g : Nat → Nat × Leq (i) n → Leq (f (g i) n), ∀ injf : Permut f n, ∀ injn : Nat × Leq (f (injf i) n), a = b → f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nP_ord_exp1. Soient $p$ et $n$ et $q$ et $r$ des nombres naturels. Supposons que $0 < p$. Alors si $p$ n'est pas divisible par $r$, alors si $n = p ^ q r$, alors $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$.\nassistant\n", "label": "p_ord_exp1 : p : Nat -> n : Nat -> q : Nat -> r : Nat -> __ : Lt 0 p -> __1 : not (divisible p r) -> __2 : Eq n (times (pow p q) r) -> Eq (p_ord n p) (mk_Prod Nat Nat q r) .", "predict": "p_ord_exp1 : (p : Elem Nat) -> (n : Elem Nat) -> (q : Elem Nat) -> (r : Elem Nat) -> Proof (Lt Nat 0 p) -> Proof (if (and (Neq (div (p) r) (nd 0)) (Eq n (pow p q r))) (Eq (p_ord (n , p)) (mk_Prod (Nat) (Nat) q r))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_divides_ord_rem. Let $m$ and $p$ be natural numbers. Assume that $0$ is less than $m$. Assume that $1$ is less than $p$. Then $p$ is not divisible by $ord_rem$ applied to $m$ and $p$.\nassistant\n", "label": "postulate not_divides_ord_rem : (m : Nat) -> (p : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 1 p) -> not (divisible p (ord_rem m p))", "predict": "postulate not_divides_ord_rem : (m : Nat) -> (p : Nat) -> and (Lt 0 m) (Lt 1 p) -> not (divisible p (ord_rem m p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16171. Låt $p , m , n \\in N$. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c$ vara ett naturligt tal. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Då för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$, så om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $m$ och $b$ och produkten av $p$ och $a$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (a : Nat) -> Eq (gcd p m) 1 -> Lt 0 p -> Eq (p * c) (m * n) -> Eq (m * n) (p * c) -> let (c : Nat) -> Eq (gcd p m) (if (or (Eq (p * a - m * b) (gcd p m)) (Eq (m * b - p * a) (gcd p m))) (Eq (m * b - p * a) 1)) (if (and (Eq (m * b - p * a) (gcd p m)) (Eq (m * b - p * a) 1)) (Eq (gcd p m) (minus (times m b) (times p a)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nExp_ord. Soit $p , n \\in N$. Alors si $1 < p$, alors si $0 < n$, alors $n = p ^ ord (n , p)ord_rem (n , p)$.\nassistant\n", "label": "exp_ord : p : Nat -> n : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 n -> Eq n (times (pow p (ord n p)) (ord_rem n p)) .", "predict": "exp_ord : (p : Elem Nat) -> (n : Elem Nat) -> Proof (if (Gt (nd 1) p) (if (Gt (nd 0) n) (Eq n (pow p (ord n p)) (ord_rem n p))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nEq_div_div_div_div. Låt $n$ och $m$ och $q$ vara naturliga tal. Anta att $0 < n$ och $0 < m$. Då $q \\div n \\div m = q \\div m \\div n$.\nassistant\n", "label": "postulate eq_div_div_div_div : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> Eq (div (div q n) m) (div (div q m) n)", "predict": "postulate eq_div_div_div_div : (n : Nat) -> (m : Nat) -> (q : Nat) -> 0 < n && 0 < m -> Eq (q / n / m) (q / m / n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1012. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , i \\in N$. Låt $Hind$ vara en funktion från naturliga tal $b$ till element av $prod$ av $Prop$ och $Prop$ och $Eq$ applicerat på $f$ applicerat på $let_m2$ applicerat på $f$ och $n$ och $i$ och $b$ och kontradiktion och funktionen som avbildar $__$ som $Eq (let_m2 (f , n , i , b), i + b)$. Låt $b \\in N$. Anta att $f (b)= true$. Då om kontradiktion är lika med $f (b)$, så är $true$ lika med kontradiktion.\nassistant\n", "label": "Axiom let_clause_1012 : forall f : ((x__ : nat) -> bool), forall n : nat, forall i : nat, forall Hind : ((b : nat) -> prod Prop Prop (f (let_m2 f n i b) = false) (fun x__ => let_m2 f n i b = i + b)), forall b : nat, forall fb : (f b = true), forall eqm : (f b = false), false = true .", "predict": "Axiom let_clause_1012 : forall f : nat -> Prop, forall n : nat, forall i : nat, forall b : nat, (f b = true -> Eq (let_m2 (f, n, i, b) i + b) (f b)) -> true = (Eq (let_m2 (f, n, i, b) i + b) (f b)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nRange_inv_rect_CProp2. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Soit $P$ une fonction des éléments $_z1680$ de $range$ de $x1$ à des propositions. Alors pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1681$ de $Eq$ de $Hterm$ et de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$ à des éléments de $P$ de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$, $P$ tient pour $Hterm$.\nassistant\n", "label": "range_inv_rect_CProp2 : x1 : Set -> Hterm : range x1 -> P : (_z1680 : range x1 -> Prop) -> _H1 : (_enum : (__ : Nat -> x1) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> _z1681 : Eq Hterm (mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm .", "predict": "range_inv_rect_CProp2 : (x1 : Elem Set) -> (Hterm : Elem (range x1)) -> (P : (z1680 : Elem (range x1)) -> Prop) -> Proof (forall (H1 : (Enum Nat -> Elem x1 * Nat) -> Upto Nat -> Filter Nat (Bool Val)) -> Eq Hterm (mk_range x1 (Enum (upto (Filter (P (mk_range x1 (Enum (upto (Filter)))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_inv_rect_CProp2. Let $Hterm \\in N$. Let $P$ be a function from natural numbers $_z701$ to propositions. Let $_H1$ be a function from elements $_z702$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Let $_H2$ be a function from natural numbers $x_406$ and functions $_x_408$ from elements $_z702$ of $Eq$ of $Hterm$ and $x_406$ to elements of $P$ of $x_406$ and elements $_z702$ of $Eq$ of $Hterm$ and $x_406 + 1$ to elements of $P$ of $x_406 + 1$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_CProp2 : (Hterm : Nat) -> (P : (_z701 : Nat) -> Prop) -> (_H1 : (_z702 : Eq Hterm 0) -> P 0) -> (_H2 : (x_406 : Nat) -> (_x_408 : (_z702 : Eq Hterm x_406) -> P x_406) -> (_z702 : Eq Hterm (plus x_406 1)) -> P (plus x_406 1)) -> P Hterm", "predict": "postulate nat_inv_rect_CProp2 : (Hterm : Nat) -> (P : Nat -> Prop) -> (H1 : Eq Hterm 0 -> P 0) -> (H2 : (x : Nat) -> (f : Eq Hterm x -> P x) -> Eq Hterm (plus x 1) -> P (plus x 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))", "predict": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p /\\ (1 == gcd p m) /\\ (p % (m * n))) -> (c : Nat) -> (x' : m * n == p * c) -> (a : Nat) -> (ex : Nat -> Eq (gcd p m) (if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (x'' : Eq (gcd p m) (if (or (Eq (minus (times p a) (times m b)) (gcd p m)) (Eq (minus (times m b) (times p a)) (gcd p m)))) -> if (Eq (minus (times a p) (times b m)) 1) (Eq (minus (times p a) (times m b)) (gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nPlus_n_Sm. Soient $n$ et $m$ des nombres naturels. Alors la somme de la somme de $n$ et de $m$ et de $1$ est égale à la somme de $n$ et de la somme de $m$ et de $1$.\nassistant\n", "label": "postulate plus_n_Sm : (n : Nat) -> (m : Nat) -> Eq (plus (plus n m) 1) (plus n (plus m 1))", "predict": "postulate plus_n_Sm : (n : Nat) -> (m : Nat) -> Eq (plus (plus n m) 1) (plus n (plus m 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nBigop_I_gen. Soit $a , b \\in N$. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $Aop$ de $B$ et de $nil$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Supposons que $a$ est inférieur ou ágal à $b$. Alors $bigop$ appliqué à la différence de $b$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ est égal à $bigop$ appliqué à $b$ et la fonction qui envoie $i$ à $andb$ appliqué à $leb$ appliqué à $a$ et $i$ et $p$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "postulate bigop_I_gen : (a : Nat) -> (b : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> Eq (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (bigop b (\\ i : Nat -> andb (leb a i) (p i)) B nil (op B nil op) (\\ i : Nat -> f i))", "predict": "postulate bigop_I_gen : (a : Nat) -> (b : Nat) -> Eq a b -> bigop (minus b a) (λ i -> (λ i0 -> p (i0 (plus i a)))) B nil op B nil op (λ i -> f (i (plus i a)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDiv_mod_spec_rect_CProp0_body. Soit $_n , _m , _q , _r \\in N$. Soit $Q_$ une fonction des éléments $_x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_859$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_858$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_859$ et $x_858$. Alors pour tous les éléments $x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_857$.\nassistant\n", "label": "div_mod_spec_rect_CProp0_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_857 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_859 : Lt _r _m -> x_858 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> x_857 : div_mod_spec _n _m _q _r -> Q_ x_857 .", "predict": "div_mod_spec_rect_CProp0_body : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Q : (x : Elem (div_mod_spec n m)) -> (x : Elem Nat) -> (x : Elem Nat) -> Prop -> Proof (forall (x : Elem (div_mod_spec n m)) (Q x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMonotonic_iter. Soit $g$ une fonction des nombres naturels à des nombres naturels. Alors pour tous les nombres naturels $a$ et $b$ et $i$, pour tous les éléments $__$ de $monotonic$ de $Nat$ et de $Leq$ et de $g$, si $a$ est inférieur ou ágal à $b$, alors $iter$ appliqué à $Nat$ et $g$ et $i$ et $a$ est inférieur ou ágal à $iter$ appliqué à $Nat$ et $g$ et $i$ et $b$.\nassistant\n", "label": "postulate monotonic_iter : (g : (_ : Nat) -> Nat) -> (a : Nat) -> (b : Nat) -> (i : Nat) -> (_ : monotonic Nat Leq g) -> (__1 : Leq a b) -> Leq (iter Nat g i a) (iter Nat g i b)", "predict": "postulate monotonic_iter : (g : Nat -> Nat) -> all Nat (\\ a -> all Nat (\\ b -> all Nat (\\ i -> all (monotonic Leq g) (\\ x -> if (Leq a b) (Leq (iter Nat g i a) (iter Nat g i b))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nInjective_times_l. Låt $n \\in N$. Då om $0 < n$, så håller $injective$ för $Nat$ och $Nat$ och funktionen som avbildar $m$ som $m \\times n$.\nassistant\n", "label": "Axiom injective_times_l : forall n : nat, forall x__ : (0 < n), injective nat nat (fun m => m * n) .", "predict": "Axiom injective_times_l : forall n : nat, (0 < n -> injective nat nat (fun m => m * n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNat_rect_Type0_body. Soit $Q_$ une fonction des nombres naturels $_x_389$ à des ensembles. Soit $_H_O$ un élément de $Q_$ de $0$. Soit $_H_S$ une fonction des nombres naturels $x_390$ et des éléments $_x_392$ de $Q_$ de $x_390$ à des éléments de $Q_$ de la somme de $x_390$ et de $1$. Alors pour tous les nombres naturels $x_389$, $Q_$ tient pour $x_389$.\nassistant\n", "label": "nat_rect_Type0_body : Q_ : (_x_389 : Nat -> Set) -> _H_O : Q_ 0 -> _H_S : (x_390 : Nat -> _x_392 : Q_ x_390 -> Q_ (plus x_390 (nd 1))) -> x_389 : Nat -> Q_ x_389 .", "predict": "nat_rect_Type0_body : (Q : Elem Nat -> Set) -> Elem Q 0 -> (x : Elem Nat) -> Elem Q (plus x 1) -> Proof (forall Nat (x => Q x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_transpose. Let $i , j , n \\in N$. Then if $i \\leq n$, then if $j \\leq n$, then $permut$ holds for $transpose (i , j)$ and $n$.\nassistant\n", "label": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> permut (transpose i j) n", "predict": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (i <= n) -> (j <= n) -> permut (transpose (i , j)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMonotonic_pred. $monotonic$ håller för $Nat$ och $Leq$ och $pred$.\nassistant\n", "label": "postulate monotonic_pred : monotonic Nat Leq pred", "predict": "postulate monotonic_pred : monotonic Nat Leq pred"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_951$ of $Dop$ of $A$ and $_nil$ to elements of $Type2$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_951$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_951$.\nassistant\n", "label": "Dop_rect_Type2_body : A : Set -> _nil : A -> Q_ : (_x_951 : Dop A _nil -> Type2) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_951 : Dop A _nil -> Q_ x_951 .", "predict": "dop_rect_Type2_body : (A : Elem Set) -> (nil : Elem A) -> Proof (forall (Q_ : Elem (Dop A) -> Elem A -> Proof (forall (x_951 : Elem Dop) -> Q_ (mk_Dop A nil sum prod null distr) x_951))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1009. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Assume that $0 < n$. Assume that absurdity is equal to $f (n)$. Assume that $max (m , f)\\leq n$. Assume that $max (m , f)= n$. Then if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $m$ and the function that maps $__$ to $Eq$ applied to $f$ applied to $i$ and absurdity and $max (m , f)= 0$, then for all functions $auto$ from natural numbers $i$ and elements of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, if $max (m , f)= 0$, then $0 = n$.\nassistant\n", "label": "Axiom let_clause_1009 : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall posn : (0 < n), forall Hfn : (f n = false), forall Hmax : Leq (max m f) n, forall Hmax0 : (max m f = n), forall _clearme : (prod Set Prop nat (fun i => prod Prop Prop (i < m) (fun x__ => f i = false)) /\\ max m f = 0), forall auto : ((i : nat) -> (x__ : i < m) -> f i = false), forall auto' : (max m f = 0), 0 = n .", "predict": "Axiom let_clause_1009 : forall f : nat -> bool, forall n : nat, (0 < n -> absurdity = f n -> max m f <= n -> max m f = n -> prod Set Prop Nat (fun i => prod Prop Prop (Lt i m) (Eq (f i) absurdity)) -> forall auto : nat -> Lt -> Eq (f) absurdity, (max m f = 0 -> 0 = n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1600. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $c n - d m = 1$, alors $n c - m d$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_1600 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall _clearme : ex (Nat -> bool), _clearme = fun d => Eq (1 + disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) -> forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 /\\ Eq (n * c - m * d) (gcd m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_fact_to_le. For all natural numbers $p$ and $n$, if $p$ is both prime and divisible by $n !$, then $p \\leq n$.\nassistant\n", "label": "Axiom divides_fact_to_le : forall p : nat, forall n : nat, forall x__ : prime p, forall __1 : divisible p (factorial n), Leq p n .", "predict": "Axiom divides_fact_to_le : forall p : nat, forall n : nat, (prime p /\\ p %| n -> p <= n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1034. Soit $n , m , p \\in N$. Supposons que $0$ est inférieur à $p$. Alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515$ est égal à la somme de $mod$ appliqué à $x2515$ et $x2516$ et du produit de $x2516$ et du quotient de $x2515$ et de $x2516$.\nassistant\n", "label": "axiom let_clause_1034 (n m p : Nat) (posp : 0 < p) (x2515 x2516 : Nat) : x2515 = mod x2515 x2516 + x2516 * (x2515 / x2516)", "predict": "axiom let_clause_1034 (n m p : Nat) (x2515 x2516 : Nat) (x2515_lt_p : 0 < p) : x2515 = mod x2515 x2516 + x2516 * quotient x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nExp_to_log_r. Låt $b$ och $n$ och $m$ vara naturliga tal. Anta att $1 < b$ och $n < m$. Anta att $b ^ n \\leq m$. Då $n \\leq \\log_ b {m}$.\nassistant\n", "label": "Axiom exp_to_log_r : forall b : nat, forall n : nat, forall m : nat, forall x__ : (1 < b), forall __1 : (n < m), forall __2 : Leq (pow b n) m, Leq n (log b m) .", "predict": "Axiom exp_to_log_r : forall b : nat, forall n : nat, forall m : nat, (1 < b /\\ n < m /\\ pow b n <= m -> n <= log b m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Then if $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$, then if $a$ is less than or equal to $n$, then if $f$ applied to $a$ is equal to $i$, then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) : a ≤ n ∧ f a = i → a ≤ n → f a = i → ∀ b : Nat, (b ≤ n ∧ f b = j) → b ≤ n → f b = j → ∀ g : Nat → Leq i n → Leq (f i n) → ∀ injf : Permut f n, ∀ injn : Permut f n, (a = b → f a = i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nBertrand_down. Soit $n \\in N$. Supposons que $0$ est inférieur à $n$. Alors si $n$ est inférieur ou ágal à la puissance de $2$ et de $8$, alors $bertrand$ tient pour $n$.\nassistant\n", "label": "axiom bertrand_down (n : Nat) (x__ : 0 < n) (__1 : n ≤ pow 2 8) : bertrand n", "predict": "axiom bertrand_down (n : Nat) (x : 0 < n) : n ≤ pow 2 8 → bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_priml. Let $n$ be a natural number. Assume that $0$ is less than $n$. Then the product of $2$ and $n$ is less than or equal to the product of the sum of the logarithm of $2$ and the product of $2$ and $n$ and $1$ and the sum of $prim$ applied to the product of $2$ and $n$ and $1$.\nassistant\n", "label": "axiom le_priml (n : Nat) (x__ : 0 < n) : 2 * n ≤ (log 2 (2 * n) + 1) * (prim (2 * n) + 1)", "predict": "axiom le_priml (n : Nat) (x : 0 < n) : 2 * n ≤ (log 2 + 2 * n) * (prim (2 * n) + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1607. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_1607 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_1607 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (Lt Nat 0 n) -> Proof (Lt Nat 0 m) -> Proof (Eq Nat (Gcd Nat n m) 1) -> c : Elem Nat -> Proof (forall Nat (d => Eq (or (Eq Nat (minus (times c n) (times d m))) 1) (Eq Nat (minus (times d m) (times c n))) 1))) -> Proof (forall Nat (d => if (or (Eq Nat (minus (times c n) (times d m))) 1) (if (Eq Nat (minus (times d m) (times c n))) (Eq Nat (Gcd Nat m n) (minus (times m d) (times n c))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nF_max_true. Let $f$ be a function from natural numbers to booleans. Let $n \\in N$. Let $__$ be an element of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $Eq$ applied to $f$ applied to $i$ and $true$. Then $f$ applied to $max$ applied to $n$ and $f$ is equal to $true$.\nassistant\n", "label": "postulate f_max_true : (f : (_ : Nat) -> bool) -> (n : Nat) -> (_ : ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) -> Eq (f (max n f)) true", "predict": "postulate f_max_true : (f : Nat -> Bool) -> n : Nat -> postulate x : Ex (Nat, \\ i -> and (Lt i n) (Eq (f i) true)) -> Eq (f (max n (f))) true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_Type1. Let $x1$ be a set. Let $Hterm$ be an element of $range$ of $x1$. Let $P$ be a function from elements $_z1656$ of $range$ of $x1$ to elements of $Type1$. Then for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1657$ of $Eq$ of $Hterm$ and $mk_range (x1 , _enum , _upto , _filter)$ to elements of $P$ of $mk_range (x1 , _enum , _upto , _filter)$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_Type1 (x1 : Set) (Hterm : range x1) (P : (_z1656 : range x1) -> Type1) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1657 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_Type1 (x1 : Set) (Hterm : range x1) (P : ∀ z1656 : range x1, Type1) : ∀ H1 : ∀ n : Nat, x1, ∀ upto : Nat, ∀ filter : Nat → Bool, ∀ z1657 : Eq Hterm (mk_range x1 (enum n) upto (filter n)), P (mk_range x1 (enum n) upto (filter n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$ och $n \\leq m$. Anta att $n \\leq q + 1$ och $n$ inte är delbart med $m$. Låt $a$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b$ vara ett naturligt tal. Då om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ och $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Leq n m) -> Proof (Leq n (plus q (nd 1))) -> Proof (not (divides n m))) -> Proof (a : Elem Nat) -> Proof (clearme : Elem (ex Nat) -> (b : Elem Nat) -> Proof (or (and (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) -> Proof (Eq (minus (times n b) (times a (mod m n))) (gcd_aux q m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_15622. Pour tous les nombres naturels $m$ et $n$ et $a$ et $b$, si $0 < n$ et $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15622 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15622 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ Gcd n m = 1 -> forall c : nat, forall _clearme : ex, (Nat -> Prop), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 /\\ Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1569. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $c n - d m = 1$, så $n c - m d = 1$.\nassistant\n", "label": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1", "predict": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (x : 0 < n) -> (y : 0 < m) -> (z : 1 == gcd n m) -> (c : Nat) -> all Nat (\\ d -> if (or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times n c) (times m d)) 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInjn_Sn_n. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $injn$ of $f$ and $n + 1$, $injn$ holds for $f$ and $n$.\nassistant\n", "label": "postulate injn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : injn f (plus n 1)) -> injn f n", "predict": "postulate injn_Sn_n : (f : Nat -> Nat) -> n : Nat -> all (injn f (plus n 1)) (injn f n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAssoc_body. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $op (A , nil , xxx , a , op (A , nil , xxx , b , c))= op (A , nil , xxx , op (A , nil , xxx , a , b), c)$.\nassistant\n", "label": "axiom assoc_body (A : Set) (nil : A) (xxx : Aop A nil) (a b c : A) : op A nil xxx a (op A nil xxx b c) = op A nil xxx (op A nil xxx a b) c", "predict": "axiom assoc_body (A : Set) (nil : A) (xxx : Aop A) (a b c : A) : op A nil xxx a (op A nil xxx b) c = op A nil xxx (op A nil xxx a b) c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nP_ord_aux_to_not_mod_O. Låt $p$ och $n$ och $m$ och $q$ och $r$ vara naturliga tal. Anta att $1$ är mindre än $m$. Anta att $0$ är mindre än $n$. Då om $n$ är mindre än eller lika med $p$, så om $p_ord_aux$ applicerat på $p$ och $n$ och $m$ är lika med $mk_Prod$ applicerat på $Nat$ och $Nat$ och $q$ och $r$, så är $mod$ applicerat på $r$ och $m$ inte lika med $0$.\nassistant\n", "label": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 m) -> (__1 : Lt 0 n) -> (__2 : Leq n p) -> (__3 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> not (Eq (mod r m) 0)", "predict": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (H1 : 1 < m) -> (H2 : 0 < n) -> (H3 : n <= p) -> Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r) -> Neq (mod r m) 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1617. Låt $p , m , n \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$. Anta att $a p - b m = 1$. Då är $p a - m b$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))", "predict": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> and (Lt 0 p) (Eq 1 (gcd p m)) -> and (div p (times m n)) (Eq (times m n) (times p c)) -> Nat -> Eq (times p a) (minus (times m b) (gcd p m)) -> Eq (times m b) (minus (times p a) (gcd p m)) -> Eq (minus (times p a) (times m b)) 1 -> Eq (times p a) (plus (times m b) (gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFact_to_exp. Let $n$ be a natural number. Then $(2 n)! \\leq 2 ^ pred (2 n)n ! n !$.\nassistant\n", "label": "Axiom fact_to_exp : forall n : nat, Leq (factorial (2 * n)) (pow 2 (pred (2 * n)) * factorial n * factorial n) .", "predict": "Axiom fact_to_exp : forall n : nat, (2 * n) ! <= pow 2 (pred (2 * n)) * n ! * n ! ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDiscr_minus_x_xy. Soient $x$ et $y$ des nombres naturels. Alors si $x$ est égal à la différence de $x$ et de $y$, alors $x$ est égal à $0$ ou $y$ est égal à $0$.\nassistant\n", "label": "axiom discr_minus_x_xy (x y : Nat) (x__ : x = x - y) : x = 0 ∨ y = 0", "predict": "axiom discr_minus_x_xy (x y : Nat) : x = x - y → x = 0 ∨ y = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$ and $n \\leq m$. Assume that $n \\leq q + 1$ and $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "Axiom let_clause_15441 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (b * n - a * mod m n = gcd_aux q n (mod m n)), n * b - a * mod m n = gcd_aux q n (mod m n) .", "predict": "Axiom let_clause_15441 : forall p : nat, forall q : nat, (forall m : nat, forall n : nat, (0 < n /\\ n <= m /\\ n <= q + 1 /\\ ~ (n mod m = 0)) -> forall a : nat, (ex (Nat -> bool) (fun b => Eq (n * b - a * (mod m n)) (gcd_aux q n (mod m n))) \\/ Eq (b * n - a * (mod m n)) (gcd_aux q n (mod m n))) -> Eq (n * b - a * (mod m n)) (gcd_aux q n (mod m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1595. Låt $p$ och $n$ och $m$ vara naturliga tal. Anta att $0$ är mindre än $n$. Då om $0$ är mindre än $m$, så om det största gemensama delaret av $p$ och $n$ är lika med $1$, så om det största gemensama delaret av $p$ och $m$ är lika med $1$, så om $1$ är mindre än det största gemensama delaret av $p$ och produkten av $n$ och $m$, så om $smallest_factor$ applicerat på det största gemensama delaret av $p$ och produkten av $n$ och $m$ är delbart med $m$, så är det största gemensama delaret av $p$ och $n$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)", "predict": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> 0 < n -> 0 < m -> GCD p n == 1 -> GCD p m == 1 -> 1 < (GCD p (n * m)) -> divisible (smallest_factor (GCD p (n * m))) m -> GCD p n == GCD p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nAop_rect_CProp3. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_879$ de $Aop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Aop$ des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, pour tous les éléments $x_879$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_879$.\nassistant\n", "label": "Aop_rect_CProp3 : A : Set -> _nil : A -> Q_ : (_x_879 : Aop A _nil -> Prop) -> _H_mk_Aop : (op : (__ : A -> __1 : A -> A) -> _nill : (a : A -> Eq (op _nil a) a) -> _nilr : (a : A -> Eq (op a _nil) a) -> _assoc : (a : A -> b : A -> c : A -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> x_879 : Aop A _nil -> Q_ x_879 .", "predict": "aop_rect_CProp3 : (A : Elem) -> Proof (forall (x : A) -> forall (Q : (x : Elem A) -> Prop) -> forall (H : (op : Elem A) -> (a : A) -> Eq (a, (op (a, x))) -> Eq (x, a)) -> forall (nill : (a : A) -> Eq (a, (op x (a))) -> Eq (x, a)) -> forall (assoc : (a : A) -> (b : A) -> (c : A) -> Eq (a, (op (b, c))) -> Eq ((op a b), c)) -> Proof (forall (x : Aop A) -> (x : Elem A) -> Q (mk_Aop A x op nill nilr assoc)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_10333. Låt $n$ vara ett naturligt tal. Då om $0 < n$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_10333 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10333 (n : Nat) (x2515 x2516 : Nat) (x2515_neq_0 : 0 < n) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1047. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara en funktion från element av $B$ och element $__1$ av $B$ till element av $B$. Låt $f$ vara en funktion från naturliga tal till element av $B$. Anta att $n \\leq k$. Låt $j$ vara ett naturligt tal. Anta att $n \\leq j$. Låt $Hind$ vara en funktion från funktioner från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och $j$ till element av $Eq$ av $p (i)$ och kontradiktion till element av $Eq$ av $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $bigop$ applicerat på $j$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$. Låt $Hfalse$ vara en funktion från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och $j + 1$ till element av $Eq$ av $p (i)$ och kontradiktion. Då för alla naturliga tal $x2571$ och $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.\nassistant\n", "label": "axiom let_clause_1047 (k n : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (lenk : n ≤ k) (j : Nat) (leup : n ≤ j) (Hind : (x__ : (i : Nat) -> (x__ : n ≤ i) -> (__1 : i < j) -> p i = false) -> bigop n (λ i => p i) B nil op (λ i => f i) = bigop j (λ i => p i) B nil op (λ i => f i)) (Hfalse : (i : Nat) -> (x__ : n ≤ i) -> (__1 : i < j + 1) -> p i = false) (x2571 x2572 : Nat) : x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572", "predict": "axiom let_clause_1047 (k n : Nat) (p : Nat → Prop) (B : Type) (nil : B) (op : B → B → B) (f : Nat → B) (x : n ≤ k) (j : Nat) (xj : n ≤ j) : ∀ Hind : (Nat → Nat → Prop) → (Nat → Prop) → B → B → B → B → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop → Prop →"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1572. Let $m$ and $n$ be natural numbers. Assume that $0 < n$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $m = 0$. Assume that $n = 0$. Then $m = 0$.\nassistant\n", "label": "Axiom let_clause_1572 : forall m : nat, forall n : nat, forall posn : (0 < n), forall H : (gcd m n = 0), forall auto : (m = 0), forall auto' : (n = 0), m = 0 .", "predict": "Axiom let_clause_1572 : forall m : nat, forall n : nat, (0 < n /\\ gcd m n = 0 /\\ m = 0 /\\ n = 0 -> m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nExp_n_1. Soit $n \\in N$. Alors $n = n ^ 1$.\nassistant\n", "label": "Axiom exp_n_1 : forall n : nat, n = pow n 1 .", "predict": "Axiom exp_n_1 : forall n : nat, n = pow n 1 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1033. Låt $n \\in N$. Anta att $2 ^ 7 \\leq n$. Låt $p$ vara ett naturligt tal. Anta att $\\sqrt{ (2 n)}+ 1 \\leq p$ och $p < 2 n + 1$. Anta att $leb (2 , k (2 n , p))= true$ och $2 n < p ^ 2$. Låt $x2515$ och $x2516$ vara naturliga tal. Då $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (len : pow 2 7 ≤ n) (p : Nat) (lep : sqrt (2 * n) + 1 ≤ p) (ltp : p < 2 * n + 1) (Hc : leb 2 (k (2 * n) p) = true) (H2n : 2 * n < pow p 2) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (x : pow 2 7 ≤ n) (p : Nat) (y : sqrt (2 * n) + 1 ≤ p ∧ p < 2 * n + 1) (z : leb 2 (k (2 * n, p))) = true ∧ 2 * n < pow p 2) (x2515, x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAntisymmetric_divides. Let $n$ and $m$ be natural numbers. Assume that $n$ is divisible by $m$. Assume that $m$ is divisible by $n$. Then $n$ is equal to $m$.\nassistant\n", "label": "axiom antisymmetric_divides (n m : Nat) (x__ : divisible n m) (__1 : divisible m n) : n = m", "predict": "axiom antisymmetric_divides (n m : Nat) : n % m = 0 ∧ m % n = 0 → n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_10471. Soit $n1 , n2 \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et de $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$", "label": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i", "predict": " et $true$ et la fonction qui envoie $i$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $k$ appliqué à $i$ et de $sub_kh$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Soit $p$ une fonction des nombres naturels à des booléens. Soit $f$ une fonction des nombres naturels"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nMin_spec_ind_body. Pour tous les nombres naturels $_n$ et $_b$, pour toutes les fonctions $_f$ des nombres naturels à des valeurs booléennes, pour toutes les fonctions $Q_$ des nombres naturels $x_1075$ et des éléments $_x_1076$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $x_1075$ à des propositions, pour toutes les fonctions $_H_found_min_spec$ des nombres naturels $m$ et des éléments $x_1080$ de $Leq$ de $_b$ et de $m$ et des éléments $x_1079$ de $Lt$ de $m$ et de la somme de $_n$ et de $_b$ et des éléments $x_1078$ de $Eq$ de $_f$ appliqué à $m$ et de $true$ et des fonctions $x_1077$ des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $Q_$ de $m$ et de $found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $m$ et $x_1080$ et $x_1079$ et $x_1078$ et $x_1077$, pour toutes les fonctions $_H_not_found_min_spec$ des fonctions $x_1081$ des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de la somme de $_n$ et de $_b$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $Q_$ de la somme de $_n$ et de $_b$ et de $not_found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $x_1081$, pour tous les nombres naturels $x_1075$, pour tous les éléments $x_1076$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $x_1075$, $Q_$ tient pour $x_1075$ et $x_1076$.\nassistant\n", "label": "min_spec_ind_body : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 .", "predict": "min_spec_ind_body : (n : Elem Nat) -> (b : Elem Nat) -> (f : Proof (forall Nat (x => Proof (bool x))) => Proof (forall Nat (x => Proof (Prop x))) => Proof (forall Nat (x => Elem min_spec n b f x)) => Proof (forall Nat (m => Elem (Leq b m)) => Proof (forall Nat (x => Proof (Lt m x)) => Proof (Eq (plus n b) x) => Proof (Eq (f m) true) => Proof (forall Nat (i => Proof (Leq b i)) => Proof (forall Nat (x => Proof (Lt i x)) => Proof (Eq (f i) true) => Proof (forall Nat (x => Proof (Eq (Q x m (found_min_spec n b f m x_1080 x_1079 x_1078 x_1077))))) => Proof (forall Nat (i => Proof (Eq (f i) true)) => Proof (contradiction (Q (plus n b) (found_min_spec n b f m x_1080 x_1079 x_1078 x_1077))))) => Proof (forall Nat (i => Proof (Eq (f i) true)) => Proof (contradiction (Q (plus n b) (not_found_min_spec n b f (Leq b i) (Lt i m) (Eq (f i) true))))) => Proof (forall Nat (x => Proof (Eq (Q x (plus n b) (found_min_spec n b f m x_1080 x_1079 x_1078 x_1077))))) => Proof (forall Nat (x => Proof (Eq (Q x (plus n b) (not_found_min_spec n b f (Leq b i) (Lt i m) (Eq (f i) true))))))) => Proof (forall Nat (x => Proof (Eq (Q x n b f x_1075))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInvert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n , m \\in N$. Assume that $m \\leq n$. Let $__1$ be an element of $injn$ of $f$ and $n$. Then $invert_permut (n , f , f (m))= m$.\nassistant\n", "label": "Axiom invert_permut_f : forall f : ((x__ : nat) -> nat), forall n : nat, forall m : nat, forall x__ : Leq m n, forall __1 : injn f n, invert_permut n f (f m) = m .", "predict": "Axiom invert_permut_f : forall f : nat -> nat, forall n : nat, forall m : nat, (m <= n -> injn f n -> invert_permut (n, f, f m) = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $__$ be a natural number. Then $min_spec (_n , _b , _f , __)$ is a proposition.\nassistant\n", "label": "min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> __ : Nat -> Prop .", "predict": "Axiom : (n : Elem Nat) -> (b : Elem Nat) -> (f : Proof (forall Nat (x => Prop (f x)))) -> Proof (forall Nat (x => Prop (min_spec n b f x))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLt_plus. Låt $n$ och $m$ och $p$ och $q$ vara naturliga tal. Då om $n < m$ och $p < q$, så $n + p < m + q$.\nassistant\n", "label": "Axiom lt_plus : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall x__ : (n < m), forall __1 : (p < q), n + p < m + q .", "predict": "Axiom lt_plus : forall n : nat, forall m : nat, forall p : nat, forall q : nat, (n < m /\\ p < q -> n + p < m + q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nExists_forall_lt. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n \\in N$. Alors $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de $Eq$ appliqué à $f$ appliqué à $i$ et $true$ ou $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n$ et la fonction qui envoie $__$ à $Eq$ appliqué à $f$ appliqué à $i$ et contradiction.\nassistant\n", "label": "axiom exists_forall_lt (f : (x__ : Nat) -> bool) (n : Nat) : ex Nat (λ i => i < n ∧ f i = true) ∨ prod Set Prop Nat (λ i => prod Prop Prop (i < n) (λ x__ => f i = false))", "predict": "axiom exists_forall_lt (f : Nat → Bool) (n : Nat) : ∃ ex : Nat, ∀ i : Nat, (Lt i n ∧ Eq (f i) true ∨ Prod Set Prop Nat (λ i, Prod Prop Prop (Lt i n) (Eq (f i) contradiction)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLstar_O. Soit $B$ un ensemble. Alors pour tous les éléments $R$ de $relation$ de $B$, pour tous les éléments $b$ de $B$, $lstar$ tient pour $B$ et $R$ et $0$ et $b$ et $b$.\nassistant\n", "label": "lstar_O : B : Set -> R : relation B -> b : B -> lstar B R 0 b b .", "predict": "lstar_O : (B : Elem Set) -> Proof (forall (R : Elem (relation B)) (forall (b : Elem B) (lstar B R 0 b b))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nRange_rect_Type3_body. Låt $_A$ vara en mängd. Då för alla funktioner $Q_$ från element $_x_921$ av $range$ av $_A$ till element av $Type3$, för alla funktioner $_H_mk_range$ från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range$ applicerat på $_A$ och $_enum$ och $_upto$ och $_filter$, för alla element $x_921$ av $range$ av $_A$, håller $Q_$ för $x_921$.\nassistant\n", "label": "Axiom range_rect_Type3_body : forall _A : Set, forall Q_ : ((_x_921 : range _A) -> Type3), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_921 : range _A, Q_ x_921 .", "predict": "Axiom range_rect_Type3_body : forall A : Type, forall Q : A -> Type3, forall H : enum nat -> A * nat, forall filter : nat -> Prop, forall x : range A, Q (mk_range A (H (filter)) x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n$ be a natural number. Assume that $5 < n$. Let $m$ be a natural number. Assume that $6 \\leq m$. Assume that $(m + 1)^ 2 \\leq 2 ^ m$. Let $a$ be a natural number. Then if $6 \\leq a$, then if $2 (a + 1)+ 1 \\leq 2 ^ a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> 5 < n -> (m : Nat) -> 6 <= m -> (pow m 2) <= (pow 2 m) -> (a : Nat) -> 6 <= a -> (2 * (plus a 1) + 1) <= (pow a 2) -> all Nat (\\ x -> Eq (plus (div x2515 x2516) (mod x x2515)) x2516)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nComm. Soit $A$ un ensemble. Soit $nil$ un élément de $A$. Soit $xxx$ un élément de $ACop$ de $A$ et de $nil$. Alors pour tous les éléments $a$ et $b$ de $A$, $op$ appliqué à $A$ et $nil$ et $aop$ appliqué à $A$ et $nil$ et $xxx$ et $a$ et $b$ est égal à $op$ appliqué à $A$ et $nil$ et $aop$ appliqué à $A$ et $nil$ et $xxx$ et $b$ et $a$.\nassistant\n", "label": "axiom comm (A : Set) (nil : A) (xxx : ACop A nil) (a b : A) : op A nil (aop A nil xxx) a b = op A nil (aop A nil xxx) b a", "predict": "axiom lemma (A : Type) (nil : A) (xxx : Cop A nil) : ∀ a b : A, op A nil (aop A nil) xxx a b = op A nil (aop A nil) xxx b a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMax_spec_inv_ind. Let $x1 \\in N$. Let $x2$ be a function from natural numbers to booleans. Let $x3$ be a natural number. Let $_Hterm$ be an element of $max_spec$ of $x1$ and $x2$ and $x3$. Then for all functions $P$ from natural numbers $_z1769$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2$ applied to $m$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.\nassistant\n", "label": "max_spec_inv_ind : x1 : Nat -> x2 : (__ : Nat -> bool) -> x3 : Nat -> _Hterm : max_spec x1 x2 x3 -> P : (_z1769 : Nat -> Prop) -> _H1 : (m : Nat -> _x_975 : Lt m x1 -> _x_974 : Eq (x2 m) true -> _x_973 : (i : Nat -> __ : Lt m i -> __1 : Lt i x1 -> Eq (x2 i) false) -> _z1770 : Eq x3 m -> P m) -> _H2 : (_x_976 : (i : Nat -> __ : Lt i x1 -> Eq (x2 i) false) -> _z1770 : Eq x3 0 -> P 0) -> P x3 .", "predict": "max_spec_inv_ind : (x1 : Elem Nat) -> (x2 : Proof (forall Nat (x => Bool))) -> (x3 : Elem Nat) -> Proof (max_spec x1 x2 x3) -> Proof (forall (P : Proof (forall Nat (z => Prop))) -> forall (x : Proof (forall Nat (m => forall (x : Lt m x1) (forall (x : Eq (x2 m) true) (forall (x : Proof (forall Nat (i => forall (x : Lt i m) (forall (x : Lt x (x1)) (Eq (x2 i) absurdity) (Eq x3 m) (P m)))))) -> forall (x : Proof (forall Nat (i => forall (x : Lt i m) (forall (x : Lt x (x1)) (Eq (x2 i) absurdity) (Eq x3 0) (P 0)))) -> P x3))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDecidable_lt. Soient $n$ et $m$ des nombres naturels. Alors $decidable$ tient pour $Lt$ appliqué à $n$ et $m$.\nassistant\n", "label": "decidable_lt : n : Nat -> m : Nat -> decidable (Lt n m) .", "predict": "decidable_lt : (n : Elem Nat) -> (m : Elem Nat) -> Proof (decidable (Lt n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_invert_permut. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $permut$ of $f$ and $n$, $injn$ holds for $invert_permut$ applied to $n$ and $f$ and $n$.\nassistant\n", "label": "axiom injective_invert_permut (f : (x__ : Nat) -> Nat) (n : Nat) (x__ : permut f n) : injn (invert_permut n f) n", "predict": "axiom injective_invert_permut (f : Nat → Nat) (n : Nat) : ∀ p : permut f n, injn (invert_permut n f n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nBijn_transpose_r. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ och $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $__2$ vara ett element av $bijn$ av $f$ och $n$. Då håller $bijn$ för funktionen som avbildar $p$ som $f$ applicerat på $transpose$ applicerat på $i$ och $j$ och $p$ och $n$.\nassistant\n", "label": "bijn_transpose_r : f : (__ : Nat -> Nat) -> n : Nat -> i : Nat -> j : Nat -> __ : Leq i n -> __1 : Leq j n -> __2 : bijn f n -> bijn (p : Nat => f (transpose i j p)) n .", "predict": "bijn_transpose_r : (f : Elem (Nat -> Nat)) -> Proof (forall Nat (n => forall Nat (i => forall Nat (j => and (Leq i n) (Leq j n)))) => forall bijn (f n) => Proof (forall Nat (p => Eq (bijn f n p) (f (transpose i j))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1572. Let $m$ and $n$ be natural numbers. Then if $0 < n$, then if $0$ is equal to the greatest common divisor of $m$ and $n$, then if $m = 0$, then if $n = 0$, then $m = 0$.\nassistant\n", "label": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0", "predict": "axiom let_clause_1572 (m n : Nat) : 0 < n → Eq (gcd m n) 0 → (m = 0 → (n = 0 → m = 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nCongruent_times. Soient $n$ et $m$ et $n1$ et $m1$ et $p$ des nombres naturels. Supposons que $0 < p$. Alors pour tous les éléments $__1$ de $congruent$ de $n$ et de $n1$ et de $p$, pour tous les éléments $__2$ de $congruent$ de $m$ et de $m1$ et de $p$, $congruent$ tient pour $n \\times m$ et $n1 \\times m1$ et $p$.\nassistant\n", "label": "axiom congruent_times (n m n1 m1 p : Nat) (x__ : 0 < p) (__1 : congruent n n1 p) (__2 : congruent m m1 p) : congruent (n * m) (n1 * m1) p", "predict": "axiom congruent_times (n m n1 m1 p : Nat) (x : 0 < p) : ∀ x1 : congruent n n1 p, ∀ x2 : congruent m m1 p, congruent (n * m) (n1 * m1) p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDivides_inv_ind. Soit $x1 , x2 \\in N$. Alors si $x1$ est divisible par $x2$, alors pour toutes les fonctions $P$ des éléments $_z2006$ de $divisible$ de $x1$ et de $x2$ à des propositions, pour toutes les fonctions $_H1$ des nombres naturels $q$ et des éléments $x_1193$ de $Eq$ de $x2$ et du produit de $x1$ et de $q$ et des éléments $_z2007$ de $Eq$ de $Hterm$ et de $quotient$ appliqué à $x1$ et $x2$ et $q$ et $x_1193$ à des éléments de $P$ de $quotient$ appliqué à $x1$ et $x2$ et $q$ et $x_1193$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom divides_inv_ind : forall x1 : nat, forall x2 : nat, forall Hterm : divisible x1 x2, forall P : ((_z2006 : divisible x1 x2) -> Prop), forall _H1 : ((q : nat) -> (x_1193 : x2 = x1 * q) -> (_z2007 : Hterm = quotient x1 x2 q x_1193) -> P (quotient x1 x2 q x_1193)), P Hterm .", "predict": "Axiom divides_inv_ind : forall x1 : nat, forall x2 : nat, (x1 % x2 -> forall P : forall z2006 : divisible x1 x2 -> Prop, forall H1 : forall q : nat, forall x_1193 : Eq x2 (x1 * q) -> Hterm (quotient x1 x2 q) x_1193 -> P (quotient x1 x2 q) (x_1193)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> all Nat (\\ c -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_17041. Soit $m \\in N$. Supposons que $0$ est inférieur à $m$. Soient $a$ et $x1029$ des nombres naturels. Alors $x1029$ est égal à $aop__o__op$ appliqué à $Nat$ et $0$ et $plusAC$ et $x1029$ et $0$.\nassistant\n", "label": "postulate let_clause_17041 : (m : Nat) -> (posm : Lt 0 m) -> (a : Nat) -> (x1029 : Nat) -> Eq x1029 (aop__o__op Nat 0 plusAC x1029 0)", "predict": "postulate let_clause_17041 : (m : Nat) -> 0 < m -> (a : Nat) -> (x1029 : Nat) -> x1029 == (aop__o__op Nat 0 (plusAC x1029 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nOrd_ord_rem. Let $p , q , m \\in N$. Assume that $0$ is less than $m$. Assume that $p$ is prime. Assume that $q$ is prime. Then if $q$ is less than $p$, then $ord$ applied to $ord_rem$ applied to $m$ and $p$ and $q$ is equal to $ord$ applied to $m$ and $q$.\nassistant\n", "label": "ord_ord_rem : p : Nat -> q : Nat -> m : Nat -> __ : Lt 0 m -> __1 : prime p -> __2 : prime q -> __3 : Lt q p -> Eq (ord (ord_rem m p) q) (ord m q) .", "predict": "ord_ord_rem : (p : Elem Nat) -> (q : Elem Nat) -> (m : Elem Nat) -> Proof (Lt 0 m) -> Proof (Prime p) -> Proof (Prime q) -> Proof (Lt q p) -> Proof (Eq (ord (ord_rem m p) q) (ord m q)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_16001. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$. Alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.\nassistant\n", "label": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ GCD n m = 1 -> forall c : nat, forall x : ex, (Eq (diff (times c n) (times d m)) 1 \\/ Eq (diff (times d m) (times c n)) 1 -> Eq (GCD m n) (diff (times n c) (times m d)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16003. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ Gcd n m = 1 -> forall c : nat, forall ex : nat -> ex = (forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1) -> (Eq (d * m - c * n) 1 -> Gcd m n = m * d - n * c)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> i : Nat -> j : Nat -> (a : Nat) -> and (Leq a n) (Eq (f a) i) -> and (Leq a n) (Eq (f a) i) -> all Nat (\\ b -> and (Leq b n) (Eq (f b) j) -> and (Leq b n) (Eq (f b) j) -> all (Nat -> Leq -> Nat) (\\ _ -> all (Permut f n) (\\ _ -> if (Eq a b) (Eq (f a) j)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_sn. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Then for all natural numbers $l$, for all elements $b$ and $b2$ of $B$, for all elements $__$ of $lstar_r$ of $B$ and $R$ and $l$ and $b$ and $b2$, for all elements $b1$ of $B$, for all elements $__1$ of $R$ of $b1$ and $b$, $lstar_r$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "Axiom lstar_r_sn : forall B : Set, forall R : relation B, forall l : nat, forall b : B, forall b2 : B, forall x__ : lstar_r B R l b b2, forall b1 : B, forall __1 : R b1 b, lstar_r B R (l + 1) b1 b2 .", "predict": "Axiom lstar_r_sn : forall B : Set, forall R : relation B, forall l : nat, forall b : B, forall b2 : B, forall lstar_r : lstar R B, forall b1 : B, forall R_b1_b : R b1 b, lstar R (b1 + b2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nMax_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $m$ des nombres naturels. Alors si $m$ est inférieur à $n$, alors si $f$ appliqué à $m$ est égal à $true$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des éléments $__2$ de $Lt$ de $m$ et de $i$ et des éléments $__3$ de $Lt$ de $i$ et de $n$ à des éléments de $Eq$ de $f$ appliqué à $i$ et de contradiction, $max$ appliqué à $n$ et $f$ est égal à $m$.\nassistant\n", "label": "max_exists : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> __ : Lt m n -> __1 : Eq (f m) true -> __2 : (i : Nat -> __2 : Lt m i -> __3 : Lt i n -> Eq (f i) false) -> Eq (max n f) m .", "predict": "max_exists : (f : Elem Nat -> Bool) -> Nat -> Nat -> Proof (if (Lt m n) (if (Eq (f m) true) (forall (x : Elem Nat) (forall (y : Lt m x) (forall (z : Lt x n) (Eq (f x) (nd))) (nd)) (nd)) (nd)) (Eq (max n f) m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Då för alla naturliga tal $a$, om $a \\leq n$ och $f (a)= i$, så om $a \\leq n$, så om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : permut f n -> (i : Nat) -> (j : Nat) -> (a : Nat) -> (x : a <= n) -> (y : f a == i) -> (b : Nat) -> (z : b <= n) -> (w : f b == j) -> (a' : a == b) -> f a == j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16005. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.\nassistant\n", "label": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> (c : Nat) -> (clearme : ex Nat (Eq (minus (times c n) (times d m)) 1) && (Eq (minus (times d m) (times c n)) 1)) -> d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1) -> Eq (Gcd m n) (minus (times m d) (times n c))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nSigma_p_dividesb. Pour tous les nombres naturels $m$ et $n$ et $p$, si $0 < n$, alors si $p$ est premier, alors si $p$ n'est pas divisible par $n$, alors $bigop$ appliqué à $m$ et la fonction qui envoie $i$ à $dividesb$ appliqué à la puissance de $p$ et de la somme de $i$ et de $1$ et le produit de la puissance de $p$ et de $m$ et de $n$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $1$ est égal à $m$.\nassistant\n", "label": "Axiom sigma_p_dividesb : forall m : nat, forall n : nat, forall p : nat, forall x__ : (0 < n), forall __1 : prime p, forall __2 : (~ divisible p n), m = bigop m (fun i => dividesb (pow p (i + 1)) (pow p m * n)) nat 0 plus (fun i => 1) .", "predict": "Axiom sigma_p_dividesb : forall m : nat, forall n : nat, forall p : nat, (0 < n -> p prime -> p mod n <> 0 -> bigop m (fun i => dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (fun i => 1) = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_951$ of $Dop$ of $A$ and $_nil$ to elements of $Type2$. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_951$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_951$.\nassistant\n", "label": "Dop_rect_Type2_body : A : Set -> _nil : A -> Q_ : (_x_951 : Dop A _nil -> Type2) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_951 : Dop A _nil -> Q_ x_951 .", "predict": "dop_rect_Type2_body : (A : Elem Set) -> (_nil : Elem A) -> (Q_ : (x_951 : Elem (Dop A)) -> Elem (Type2)) -> Proof (forall (H_mk_Dop : (sum : Elem (ACop A)) -> _nil -> Proof (forall (prod : (a : Elem A) -> Eq (prod a _nil) _nil) -> forall (distr : (a : Elem A) -> (b : Elem A) -> (c : Elem A) -> Eq (distr a b c) (prod (a (aop__o__op A _nil sum b c)) (prod a b) (prod a c))) -> Proof (forall (x_951 : Elem (Dop A)) -> Q_ x_951))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a \\in N$. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b$ vara ett naturligt tal. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Då om $f$ applicerat på $b$ är lika med $j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $i$.\nassistant\n", "label": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i", "predict": "postulate let_clause_1068 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> i : Nat -> j : Nat -> and (Leq i n) (Leq j n) -> and (Leq a n) (Eq (f a) i) -> and (Leq a n) (Eq (f a) i) -> and (Leq b n) (Eq (f b) j) -> and (Leq b n) (Eq (f b) j) -> Eq (f b) j -> all (fun : (i0 : Nat) -> Leq i0 n -> Leq (f i0) n) -> all (injn : Permut f n) -> Eq a b -> Eq (f a) i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1575. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then for all natural numbers $x1029$, $x1029$ is equal to the product of $x1029$ and the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "axiom let_clause_1575 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) (x1029 : Nat) : x1029 = x1029 * (n * c - m * d)", "predict": "axiom let_clause_1575 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) (c : Nat) (clearme : ex (Nat => if (or (Eq (n - c * m) 1) (Eq (m - c * n) 1)) (all Nat (λ x1029, x1029 = x1029 * (n - c * m))))) : ∀ d : Nat, (Eq (n - c * m) 1 ∨ Eq (m - c * n) 1 → Eq (n - c * m) 1 → ∀ x1029 : Nat, x1029 = x1029 * (n - c * m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15621. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$. Then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.\nassistant\n", "label": "axiom let_clause_15621 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15621 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) (c : Nat) (w : ex Nat (λ d, or (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1))) (d : Nat) (x1 : or (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) (x2 : Eq (c * n - d * m) 1) : Eq (n * c - m * d) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_mod_spec_discr. Låt $a1 , a2 , a3 , a4 \\in N$. Låt $x$ och $y$ vara element av $div_mod_spec$ av $a1$ och $a2$ och $a3$ och $a4$. Anta att $x = y$. Då håller $match_div_mod_spec$ för $a1$ och $a2$ och $a3$ och $a4$ och $Type2 + 1$ och funktionen som avbildar $__$ som $univ (Type2)$ och funktionen som avbildar $t0$ och $t1$ som $match_div_mod_spec$ applicerat på $a1$ och $a2$ och $a3$ och $a4$ och summan av $Type2$ och $1$ och funktionen som avbildar $__$ som $univ$ applicerat på $Type2$ och funktionen som avbildar $u0$ och $u1$ som $prod$ applicerat på summan av $Type1$ och $1$ och $Type1$ och $univ$ applicerat på $Type1$ och funktionen som avbildar $P$ som $prod$ applicerat på $Type1$ och $Type1$ och $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R0$ applicerat på $Lt$ applicerat på $a4$ och $a2$ och $t0$ och $u0$ och funktionen som avbildar $e0$ som $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R1$ applicerat på $Lt$ applicerat på $a4$ och $a2$ och $t0$ och funktionen som avbildar $x_19$ och $_x_20$ som funktionen som avbildar $x0$ och $p0$ som $Eq$ applicerat på $a1$ och summan av produkten av $a3$ och $a2", "label": "postulate div_mod_spec_discr : (a1 : Nat) -> (a2 : Nat) -> (a3 : Nat) -> (a4 : Nat) -> (x : div_mod_spec a1 a2 a3 a4) -> (y : div_mod_spec a1 a2 a3 a4) -> (_e : Eq x y) -> match_div_mod_spec a1 a2 a3 a4 (plus Type2 1) (\\ _ : div_mod_spec a1 a2 a3 a4 -> univ Type2) (\\ t0 : Lt a4 a2 -> \\ t1 : Eq a1 (plus (times a3 a2) a4) -> match_div_mod_spec a1 a2 a3 a4 (plus Type2 1) (\\ _ : div_mod_spec a1 a2 a3 a4 -> univ Type2) (\\ u0 : Lt a4 a2 -> \\ u1 : Eq a1 (plus (times a3 a2) a4) -> prod (plus Type1 1) Type1 (univ Type1) (\\ P : Type1 -> prod Type1 Type1 (prod Prop Type1 (Eq (R0 (Lt a4 a2) t0) u0) (\\ e0 : Eq (R0 (Lt a4 a2) t0) u0 -> prod Prop Type1 (Eq (R1 (Lt a4 a2) t0 (\\ x_19 : Lt a4 a2 -> \\ _x_20 : Eq t0 x_19 -> (\\ x0 : Lt a4 a2 -> \\ p0 : Eq t0 x0 -> Eq a1 (plus (times a3 a2) a4)) x_19 _x_20) t1 u0 e0) u1) (\\ _e1 : Eq (R1 (Lt a4 a2) t0 (\\ x_19 : Lt a4 a2 -> \\ _x_20 : Eq t0 x_19 -> (\\ x0 : Lt a4 a2 -> \\ p0 : Eq t0 x0 -> Eq a1 (plus (times a3 a2) a4)) x_19 _x_20) t1 u0 e0) u1 -> P))) (\\ _z53 : ((e0 : Eq (R0 (Lt a4 a2) t0) u0) -> (_e1 : Eq (R1 (Lt a4 a2)", "predict": "$ och $x0$ och $Eq$ applicerat på $a2$ och summan av produkten av $a4$ och $a3$ och $x0$ och $Eq$ applicerat på $a3$ och summan av produkten av $a1$ och $a4$ och $x0$ och $Eq$ applicerat på $a4$ och summan av produkten av $a2$ och $a3$ och $x0$ och $Eq$ applicerat på $a1$ och summan av produkten av $a3$ och $a2$ och $x0$ och $Eq$ applicerat på $a2$ och summan av produkten av $a4$ och $a3$ och $x0$ och $Eq$ applicerat på $a3$ och summan av produkten av $a1$ och $a4$ och $x0$ och $Eq$ applicerat på $a4$ och summan av produkten av $a2$ och $a3$ och $x0$ och $Eq$ applicerat på $a1$ och summan av produkten av $a3$ och $a2$ och $x0$ och $Eq$ applicerat på $a2$ och summan av produkten av $a4$ och $a3$ och $x0$ och $Eq$ applicerat på $a3$ och summan av produkten av $a1$ och $a4$ och $x0$ och $Eq$ applicerat på $a4$ och summan av produkten av $a2$ och $a3$ och $x0$ och $Eq$ applicerat på $a1$ och summan av produkten av $a3$ och $a2$ och $x0$ och $Eq$ applicerat på $a2$ och summan av produkten av $a4$ och $a3$ och $x0$ och $Eq$ applicerat på $a3$ och summan av produkten av $a1$ och $a4$ och $x0$ och $Eq$ applicerat på $a4$ och summan av produkten av $a2$ och $a3$ och $x0$ och $Eq$ applicerat på $a1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_16003. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att $c n - d m = 1$ eller $d m - c n = 1$. Anta att $d m - c n = 1$. Då är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "let_clause_16003 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_16003 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (GCD n m)) -> c : Elem Nat -> Proof (exists (ex (Nat -> (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))))) -> d : Elem Nat -> Proof (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> Proof (and (Eq (minus (times d m) (times c n)) (nd 1)) (Proof (Eq (minus (times m d) (times n c)) (GCD m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $5 < n$. Låt $m$ vara ett naturligt tal. Anta att $6 \\leq m$. Anta att $(m + 1)^ 2 \\leq 2 ^ m$. Låt $a$ vara ett naturligt tal. Anta att $6 \\leq a$. Anta att $2 (a + 1)+ 1 \\leq 2 ^ a$. Låt $x2515 , x2516 \\in N$. Då $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (5 < n) -> m : Elem Nat -> Proof (6 <= m) -> Proof (pow (plus m 1) (nd 2)) <= pow m (nd 6) -> a : Elem Nat -> Proof (6 <= a) -> Proof (pow 2 (plus (times 2 (plus a (nd 1))) (nd 1))) <= pow a (nd 6) -> x2515, x2516 : Elem Nat -> Proof (Eq x2515 x2516 (plus (div x2515 x2516) (mod x2515 x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b \\in N$. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (and (Leq a n) (Eq (f a) i)) -> b : Elem Nat -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (if (Eq (f b) j) (forall (g : Elem (Nat -> Nat (and i (Leq (nd 0) n)) (Leq (nd 0) n))) (forall (injf : Elem (injn f n)) (if (Eq a b) (Eq (f a) j)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nPrime_to_gcd_1. Soit $n , m \\in N$. Supposons que $n$ est premier et $n$ n'est pas divisible par $m$. Alors $1$ est égal au diviseur commun plus grand de $n$ et de $m$.\nassistant\n", "label": "axiom prime_to_gcd_1 (n m : Nat) (x__ : prime n) (__1 : ¬ divisible n m) : gcd n m = 1", "predict": "axiom prime_to_gcd_1 (n m : Nat) (x : prime n ∧ ¬divides m n) : gcd n m = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1617. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c \\in N$. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$. Då om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $p$ och $a$ och produkten av $m$ och $b$.\nassistant\n", "label": "axiom let_clause_1617 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : gcd p m = p * a - m * b", "predict": "axiom let_clause_1617 (p m n : Nat) (x : 0 < p) (y : gcd p m = 1) (z : p % (m * n) = 0) (c : Nat) (w : m * n = p * c) (a : Nat) (x' : ex : Nat) (f : x' : Nat → Eq (p * a - m * b) (gcd p m) ∨ Eq (m * b - p * a) (gcd p m)) (g : Eq (p * a - m * b) (gcd p m)) : Eq (gcd p m) (p * a - m * b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nAxiome. Soit $_n$ un nombre naturel. Alors nous pouvons dire que $not_bertrand$ tient pour $_n$.\nassistant\n", "label": "axiom not_bertrand (_n : Nat) : Prop", "predict": "axiom bertrand : ∀ n : Nat, not_bertrand n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDop_rect_CProp4_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Då för alla funktioner $Q_$ från element $_x_957$ av $Dop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod (a , _nil)$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod (a , aop__o__op (A , _nil , sum , b , c))$ och $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ till element av $Q_$ av $mk_Dop (A , _nil , sum , prod , _null , _distr)$, för alla element $x_957$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_957$.\nassistant\n", "label": "axiom Dop_rect_CProp4_body (A : Set) (_nil : A) (Q_ : (_x_957 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_957 : Dop A _nil) : Q_ x_957", "predict": "axiom dop_rect_CProp4_body (A : Type) (nil : A) : ∀ Q : Dop A nil → ∀ H : ACop A nil → ∀ prod : A → 1 → A → ∀ a : A → Eq (prod a nil) nil → ∀ b : A → ∀ c : A → Eq (prod a (aop__o__op A nil (sum b c))) (aop__o__op A nil (sum (prod a b) (prod a c))) → Q (mk_Dop A nil (sum b c) prod _null _distr) ∀ x : Dop A nil, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_15441. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0 < n$. Supposons que $n \\leq m$. Supposons que $n \\leq q + 1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b \\in N$. Alors si $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, alors si $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, alors $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_15441 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : b * n - a * mod m n = gcd_aux q n (mod m n)) : n * b - a * mod m n = gcd_aux q n (mod m n)", "predict": "axiom lemma1 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, ∀ x : Lt 0 n ∧ Leq n m ∧ Leq n q ∧ ¬ (divisible n m), ex Nat (λ a, ex Nat (λ b, or (Eq (a * n - b * m) (gcd_aux q m n)) (Eq (b * n - a * n) (gcd_aux q m n)))) → ∀ m : Nat, ∀ n : Nat, (0 < n ∧ n ≤ m ∧ n ≤ q + 1 ∧ ¬ (divisible n m)) → ∀ a : Nat, ∀ b : Nat, (if (or (Eq (a % (m, n) - b * n) (gcd_aux q m n)) (Eq (b * n - a % (m, n)) (gcd_aux q m n))) (Eq (b * n - a % (m, n)) (gcd_aux q m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSub_lt. Let $A$ be a set. Let $e$ be a function from natural numbers to elements of $A$. Let $p$ be a function from natural numbers to booleans. Let $n , m \\in N$. Assume that $n$ is less than or equal to $m$. Then $sub_hk$ holds for the function that maps $x$ to $x$ and the function that maps $x$ to $x$ and $A$ and $mk_range$ applied to $A$ and $e$ and $n$ and $p$ and $mk_range$ applied to $A$ and $e$ and $m$ and $p$.\nassistant\n", "label": "axiom sub_lt (A : Set) (e : (x__ : Nat) -> A) (p : (x__ : Nat) -> bool) (n m : Nat) (x__ : n ≤ m) : sub_hk (λ x => x) (λ x => x) A (mk_range A e n p) (mk_range A e m p)", "predict": "axiom sub_lt (A : Set) (e : Nat → A) (p : Nat → Bool) (n m : Nat) (x : n ≤ m) : ∀ f : Nat → A, sub_hk f f A (mk_range A e n p) (mk_range A e m p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1531. Soient $n$ et $m$ des nombres naturels. Supposons que $0$ est inférieur à $m$. Supposons que $n$ est divisible par $m$. Soit $d$ un nombre naturel. Supposons que $m$ est égal au produit de $n$ et de $0$. Alors $m$ est égal à $0$.\nassistant\n", "label": "let_clause_1531 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> eqm : Eq m (times n 0) -> Eq m 0 .", "predict": "let_clause_1531 : n : Elem Nat -> m : Elem Nat -> Proof (0 < m) -> Proof (n % m) -> d : Elem Nat -> Proof (m = (n * 0)) -> Proof (m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_lt_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Assume that $n \\leq m$. Assume that $m < p$. Then $n < p$.\nassistant\n", "label": "axiom le_to_lt_to_lt (n m p : Nat) (x__ : n ≤ m) (__1 : m < p) : n < p", "predict": "axiom le_to_lt_to_lt (n m p : Nat) (x : n ≤ m) (y : m < p) : n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLe_primr. Låt $n \\in N$. Då om $1 < n$, så $prim (n)\\leq 2 (2 n - 3)\\div \\log_ 2 {n}$.\nassistant\n", "label": "axiom le_primr (n : Nat) (x__ : 1 < n) : prim n ≤ 2 * (2 * n - 3) / log 2 n", "predict": "axiom le_primr (n : Nat) : 1 < n → prim n ≤ 2 * (2 * n - 3) / log n 2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_sigma_l. Let $n , a \\in N$. Then for all functions $p$ from natural numbers to booleans, for all functions $f$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $a$ and $f$ applied to $i$ is equal to the exponentiation of $a$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow a (f i))) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> f i)))", "predict": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> all Nat (\\ i -> all Nat (\\ p -> all Nat (\\ f -> Eq (bigop n (lambda i -> p i) Nat 1 times (lambda i -> pow a (f i))) (pow a (bigop n (lambda i -> p i) Nat 0 plus (lambda i -> (f i))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_16171. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que $b m - a p = 1$. Alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.\nassistant\n", "label": "axiom let_clause_16171 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : gcd p m = m * b - p * a", "predict": "axiom solemna : ∀ p : Nat, ∀ m : Nat, ∀ n : Nat, (0 < p → Eq (gcd p m) 1 → Divisible p (m * n) → ∀ c : Nat, (Eq (m * n) (p * c) → ∀ a : Nat, ∀ x : ex, ∀ b : Nat, (Eq (gcd p m) (a * p - b * m) ∨ Eq (gcd p m) (b * m - a * p)) → (Eq (gcd p m) (b * m - a * p)) → Eq (m * b - p * a) (gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNot_divides_to_dividesb_false. Pour tous les nombres naturels $n$ et $m$, si $0 < n$ et $n$ n'est pas divisible par $m$, alors contradiction est égal à $dividesb (n , m)$.\nassistant\n", "label": "not_divides_to_dividesb_false : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : not (divisible n m) -> Eq (dividesb n m) false .", "predict": "not_divides_to_dividesb_false : (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (and (Lt (nd 0) n) (not (divides n m))) (Eq (contradiction) (dividesb n m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nMonotonic_le_minus_r. Pour tous les nombres naturels $p$ et $q$ et $n$, si $q$ est inférieur ou ágal à $p$, alors la différence de $n$ et de $p$ est inférieure ou ágale à la différence de $n$ et de $q$.\nassistant\n", "label": "Axiom monotonic_le_minus_r : forall p : nat, forall q : nat, forall n : nat, forall x__ : Leq q p, Leq (n - p) (n - q) .", "predict": "Axiom monotonic_le_minus_r : forall p : nat, forall q : nat, forall n : nat, (q <= p -> n - p <= n - q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLt_max_to_false. För alla funktioner $f$ från naturliga tal till sanningsvärden, för alla naturliga tal $n$ och $m$, om $m < n$, så om $max (n , f)< m$, så är kontradiktion lika med $f (m)$.\nassistant\n", "label": "postulate lt_max_to_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Lt (max n f) m) -> Eq (f m) false", "predict": "postulate lt_max_to_false : (f : Nat -> Prop) -> all Nat (\\ n -> all Nat (\\ m -> if (Lt m n) (if (Lt (max n (f m)) m) (Eq (contradiction) (f m))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Alors si $a = b$, alors $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> Proof (and (Leq i n) (Eq (f a) i)) -> Proof (and (Leq a n) (Eq (f a) i)) -> b : Elem Nat -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (and (Leq b n) (Eq (f b) j)) -> __ : Elem (forall (i0 : Elem Nat) -> forall (x : Elem (Leq i0 n)) -> Elem (Leq (f i0) n)) -> injf : Elem (injn f n) -> Proof (if (Eq a b) (Eq (f a) i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15601. Soit $n , m \\in N$. Supposons que $0 < m$ et $0 = n$. Supposons que $0$ est divisible par $m$. Soit $q$ un nombre naturel. Supposons que $m = 0 q$. Alors $n = 0$.\nassistant\n", "label": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq n 0", "predict": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> and (Lt 0 m) (Eq 0 n) -> Div 0 m -> Nat -> Eq n 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLstar_r_inv_ind. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $relation$ av $x1$. Låt $x3 \\in N$. Låt $x4$ och $x5$ vara element av $x1$. Låt $_Hterm$ vara ett element av $lstar_r$ av $x1$ och $x2$ och $x3$ och $x4$ och $x5$. Låt $P$ vara en funktion från naturliga tal $_z2386$ och element $_z2385$ av $x1$ och element $_z2384$ av $x1$ till påståenden. Låt $_H1$ vara en funktion från element $b$ av $x1$ och element $_z2389$ av $Eq$ av $x3$ och $0$ och element $_z2388$ av $Eq$ av $x4$ och $b$ och element $_z2387$ av $Eq$ av $x5$ och $b$ till element av $P$ av $0$ och $b$ och $b$. Då för alla funktioner $_H2$ från naturliga tal $l$ och element $b1$ av $x1$ och element $b$ av $x1$ och element $_x_1340$ av $lstar_r$ av $x1$ och $x2$ och $l$ och $b1$ och $b$ och element $b2$ av $x1$ och element $_x_1339$ av $x2$ av $b$ och $b2$ och funktioner $_x_1342$ från element $_z2389$ av $Eq$ av $x3$ och $l$ och element $_z2388$ av $Eq$ av $x4$ och $b1$ och element $_z2387$ av $Eq$ av $x5$ och $b$ till element av $P$ av $l$ och $b1$ och $b$ och element $_z2389$ av $Eq$ av $x3$ och $l + 1$ och element $_z2388$ av $Eq$ av $x4$ och $b1$ och element $_z2387$ av $Eq$ av $x5$ och $b2$ till element av $P$ av $l + 1$ och $b1$ och $b2$, håller $P$ för $x3$ och $x4$ och $x5$.\nassistant\n", "label": "lstar_r_inv_ind : x1 : Set -> x2 : relation x1 -> x3 : Nat -> x4 : x1 -> x5 : x1 -> _Hterm : lstar_r x1 x2 x3 x4 x5 -> P : (_z2386 : Nat -> _z2385 : x1 -> _z2384 : x1 -> Prop) -> _H1 : (b : x1 -> _z2389 : Eq x3 0 -> _z2388 : Eq x4 b -> _z2387 : Eq x5 b -> P 0 b b) -> _H2 : (l : Nat -> b1 : x1 -> b : x1 -> _x_1340 : lstar_r x1 x2 l b1 b -> b2 : x1 -> _x_1339 : x2 b b2 -> _x_1342 : (_z2389 : Eq x3 l -> _z2388 : Eq x4 b1 -> _z2387 : Eq x5 b -> P l b1 b) -> _z2389 : Eq x3 (plus l (nd 1)) -> _z2388 : Eq x4 b1 -> _z2387 : Eq x5 b2 -> P (plus l (nd 1)) b1 b2) -> P x3 x4 x5 .", "predict": "lstar_r_inv_ind : (x1 : Elem Set) -> (x2 : Elem (Relation x1)) -> (x3 : Elem Nat) -> (x4 : Elem x1) -> (x5 : Elem x1) -> (Hterm : Elem (lstar_r x1 x2 x3 x4 x5)) -> (P : Proof (forall Nat (z2386 => forall Elem x1 (z2385 => forall Elem x1 (z2384 => Proof (P z2386 z2385 z2384)))))) -> (H1 : Proof (forall Elem x1 (forall (Eq x3 0) => forall (Eq x4 b) => Proof (P 0 b b)))) -> Proof (forall (forall Nat (l => forall Elem x1 (b1 => forall Elem x1 (b => forall (lstar_r x1 x2 l b1 b) => forall (forall Nat (l => forall Elem x2 (b2 => forall (Eq x3 (plus l (nd 1))) => forall (Eq x4 (nd 1)) => forall (Eq x5 b2) => Proof (P l b1 b2))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_CProp2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1482$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_851$ of $Lt$ of $x4$ and $x2$ and elements $x_850$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1483$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_CProp2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1482 : div_mod_spec x1 x2 x3 x4) -> Prop) (_H1 : (x_851 : x4 < x2) -> (x_850 : x1 = x3 * x2 + x4) -> (_z1483 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_851 x_850) -> P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_CProp2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : ∀ x : div_mod_spec x1 x2 x3 x4, Prop) (x_851 : Lt x4 x2) (x_850 : Eq x1 x3) : P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLstar_dx. Soit $B$ un ensemble. Soit $R$ un élément de $relation$ de $B$. Soit $l$ un nombre naturel. Soient $b1$ et $b$ des éléments de $B$. Soit $__$ un élément de $lstar$ de $B$ et de $R$ et de $l$ et de $b1$ et de $b$. Soit $b2$ un élément de $B$. Soit $__1$ un élément de $R$ de $b$ et de $b2$. Alors $lstar$ tient pour $B$ et $R$ et la somme de $l$ et de $1$ et $b1$ et $b2$.\nassistant\n", "label": "axiom lstar_dx (B : Set) (R : relation B) (l : Nat) (b1 b : B) (x__ : lstar B R l b1 b) (b2 : B) (__1 : R b b2) : lstar B R (l + 1) b1 b2", "predict": "axiom lstar_dx (B : Set) (R : Relation B) (l : Nat) (b1 b : B) (x : lstar B R l b1 b) (b2 : B) (x1 : R b b2) : lstar B R (l + 1) b1 b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNot_le_Sn_O. För alla naturliga tal $n$, är $n + 1$ inte mindre än eller lika med $0$.\nassistant\n", "label": "axiom not_le_Sn_O (n : Nat) : ¬ (n + 1 ≤ 0)", "predict": "axiom not_le_Sn_O (n : Nat) : n + 1 ≠ 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nFilter_max_spec. Låt $_n \\in N$. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Låt $__$ vara ett naturligt tal. Låt $return_sort$ vara ett element av $Sort$. Låt $return_type$ vara en funktion från element $z$ av $max_spec$ av $_n$ och $_f$ och $__$ till element av $return_sort$. Låt $return$ vara en funktion från element $z$ av $max_spec$ av $_n$ och $_f$ och $__$ till element av $return_type$ av $z$. Låt $z$ vara ett element av $max_spec$ av $_n$ och $_f$ och $__$. Då håller $return_type$ för $z$.\nassistant\n", "label": "Axiom filter_max_spec : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : max_spec _n _f x__) -> return_sort), forall return : ((z : max_spec _n _f x__) -> return_type z), forall z : max_spec _n _f x__, return_type z .", "predict": "Axiom filter_max_spec : forall n : nat, forall f : nat -> Prop, forall m : nat, forall return_sort : Sort, forall return_type : max_spec n f m -> return_sort, forall return : max_spec n f m -> m -> return_type (return z m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLt_length_to_not_mem. Soit $n$ un nombre naturel. Soit $l$ une liste de nombres naturels. Soit $__$ un élément de $unique$ de $Nat$ et de $l$. Soit $__1$ une fonction des nombres naturels $x$ et des éléments $__1$ de $mem$ de $Nat$ et de $x$ et de $l$ à des éléments de $Lt$ de $x$ et de $n$. Supposons que $length$ appliqué à $Nat$ et $l$ est inférieur à $n$. Alors $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de la négation de $mem$ appliqué à $Nat$ et $i$ et $l$.\nassistant\n", "label": "lt_length_to_not_mem : n : Nat -> l : list Nat -> __ : unique Nat l -> __1 : (x : Nat -> __1 : mem Nat x l -> Lt x n) -> __2 : Lt (length Nat l) n -> ex Nat (i : Nat => and (Lt i n) (not (mem Nat i l))) .", "predict": "lt_length_to_not_mem : (n : Elem Nat) -> (l : List Nat) -> (x : Elem Unique) -> Proof (forall Nat (y => if (Lt y n) (mem x y l))) -> Proof (Lt (length Nat l) n) -> Proof (forall Nat (i => and (Lt i n) (neg (mem Nat i l)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLt_O_n_elim. Soit $n \\in N$. Alors si $0$ est inférieur à $n$, alors pour toutes les fonctions $P$ des nombres naturels $__1$ à des propositions, pour toutes les fonctions $__1$ des nombres naturels $m$ à des éléments de $P$ de la somme de $m$ et de $1$, $P$ tient pour $n$.\nassistant\n", "label": "Axiom lt_O_n_elim : forall n : nat, forall x__ : (0 < n), forall P : ((__1 : nat) -> Prop), forall __1 : ((m : nat) -> P (m + 1)), P n .", "predict": "Axiom lt_O_n_elim : forall n : nat, (0 < n -> forall P : nat -> Prop, forall m : nat -> P (m + 1) -> P n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_16171. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Alors si la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale à $1$, alors le diviseur commun plus grand de $p$ et de $m$ est égal à la différence du produit de $m$ et de $b$ et du produit de $p$ et de $a$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (Lt Nat 0 p) -> Proof (Eq Nat (Gcd Nat p m) 1) -> Proof (Div Nat p (times Nat m n)) -> c : Elem Nat -> Proof (Eq Nat (times Nat m n) (times Nat p c)) -> a : Elem Nat -> _clearme0 : Elem (ex (Nat => b => Or (Eq (minus Nat (times Nat a p) (times Nat b m)) (Gcd Nat p m)) (Eq (minus Nat (times Nat b m) (times Nat a p)) (Gcd Nat p m)))) -> b : Elem Nat -> Proof (Or (Eq (minus Nat (times Nat a p) (times Nat b m)) (Gcd Nat p m)) (Eq (minus Nat (times Nat b m) (times Nat a p)) (Gcd Nat p m))) -> Proof (Eq (minus Nat (times Nat b m) (times Nat a p)) (Gcd Nat p m)) -> Proof (if (Eq (minus Nat (times Nat b m) (times Nat a p)) 1) (Eq (Gcd Nat p m) (minus Nat (times Nat m b) (times Nat p a)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_15601. Låt $n$ och $m$ vara naturliga tal. Anta att $0 < m$. Anta att $0 = n$. Anta att $0$ är delbart med $m$. Låt $q \\in N$. Då om $m = 0 q$, så $n = 0$.\nassistant\n", "label": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq n 0", "predict": "postulate let_clause_15601 : (n : Nat) -> (m : Nat) -> 0 < m -> 0 == n -> 0 `div` m -> postulate q : Nat -> if (Eq m (times 0 q)) (Eq n 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nFilter_lstar_r. Soit $B$ un ensemble. Soit $_R$ un élément de $relation$ de $B$. Soit $__ \\in N$. Soient $__1$ et $__2$ des éléments de $B$. Soit $return_sort$ un élément de $Sort$. Alors pour toutes les fonctions $return_type$ des éléments $z$ de $lstar_r$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$ à des éléments de $return_sort$, pour toutes les fonctions $return$ des éléments $z$ de $lstar_r$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$ à des éléments de $return_type$ de $z$, pour tous les éléments $z$ de $lstar_r$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$, $return_type$ tient pour $z$.\nassistant\n", "label": "postulate filter_lstar_r : (B : Set) -> (_R : relation B) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (return_sort : Sort) -> (return_type : (z : lstar_r B _R __ __1 __2) -> return_sort) -> (return : (z : lstar_r B _R __ __1 __2) -> return_type z) -> (z : lstar_r B _R __ __1 __2) -> return_type z", "predict": "postulate filter_lstar_r : (B : Set) -> (_R : Relation B) -> __ : Nat -> (_1 : B) -> (_2 : B) -> return_sort : Sort -> all (all (all (all (return -> all (return_type -> all (z -> Eq (return_type (return z)) (return_type z)))))) (lstar_r B _R __ _1 _2))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nBigop_commute. Låt $n , m \\in N$. Låt $p11$ vara en funktion från naturliga tal till sanningsvärden. Låt $p12$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $p21$ vara en funktion från naturliga tal till sanningsvärden. Låt $p22$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Då för alla element $op$ av $ACop$ av $B$ och $nil$, för alla funktioner $f$ från naturliga tal och naturliga tal $__1$ till element av $B$, om $0$ är mindre än $n$, så om $0$ är mindre än $m$, så för alla funktioner $__2$ från naturliga tal $i$ och naturliga tal $j$ och element $__2$ av $Lt$ av $i$ och $n$ och element $__3$ av $Lt$ av $j$ och $m$ till element av $Eq$ av $andb$ applicerat på $p11$ applicerat på $i$ och $p12$ applicerat på $i$ och $j$ och $andb$ applicerat på $p21$ applicerat på $j$ och $p22$ applicerat på $i$ och $j$, är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p11$ applicerat på $i$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p12$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som $f$ applicerat på $i$ och $j$ lika med $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p21$ applicerat på $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p22$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som", "label": "bigop_commute : n : Nat -> m : Nat -> p11 : (__ : Nat -> bool) -> p12 : (__ : Nat -> __1 : Nat -> bool) -> p21 : (__ : Nat -> bool) -> p22 : (__ : Nat -> __1 : Nat -> bool) -> B : Set -> nil : B -> op : ACop B nil -> f : (__ : Nat -> __1 : Nat -> B) -> __ : Lt 0 n -> __1 : Lt 0 m -> __2 : (i : Nat -> j : Nat -> __2 : Lt i n -> __3 : Lt j m -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (i : Nat => p11 i) B nil (aop__o__op B nil op) (i : Nat => bigop m (j : Nat => p12 i j) B nil (aop__o__op B nil op) (j : Nat => f i j))) (bigop m (j : Nat => p21 j) B nil (aop__o__op B nil op) (j : Nat => bigop n (i : Nat => p22 i j) B nil (aop__o__op B nil op) (i : Nat => f i j))) .", "predict": " avbildar $i$ som $f$ applicerat på $i$ och $j$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$ och $n \\leq m$. Anta att $n \\leq q + 1$ och $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Då för alla naturliga tal $b$, om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ och $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, så $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_1544 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n)) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n)) .", "predict": "let_clause_1544 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (and (Lt (nd 0) n) (Leq n m)) -> Proof (and (Leq n (plus q (nd 1))) (not (divides n m))) -> Proof (forall Nat (a => Proof (and (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n)))) -> Proof (forall Nat (b => if (or (Eq (minus (times (a (mod m n)) (nd n)) (times b (nd n))) (gcd_aux q n (nd m))) (Eq (minus (times (nd n) (nd b)) (times (nd n) (a (mod m n)))) (gcd_aux q n (nd m)))) (Eq (minus (times (nd n) (nd a)) (times (nd n) (nd b))) (gcd_aux q n (nd m)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15311. Låt $n , m \\in N$. Då om $0 < m$ och $n$ är delbart med $m$, så för alla naturliga tal $d$ och $p$, om $m = n (p + 1)$, så $m = n + n p$.\nassistant\n", "label": "let_clause_15311 : n : Nat -> m : Nat -> posm : Lt 0 m -> _clearme : divisible n m -> d : Nat -> p : Nat -> eqm : Eq m (times n (plus p (nd 1))) -> Eq m (plus n (times n p)) .", "predict": "let_clause_15311 : n : Elem Nat -> m : Elem Nat -> Proof (if (and (Lt (nd 0) m) (divides n m)) (forall Nat (d => forall Nat (p => if (Eq m (times n (plus p (nd 1)))) (Eq m (plus n (times n p)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10332. Let $n \\in N$. Assume that $2 ^ 6 \\leq n$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10332 : (n : Nat) -> (le_n : Leq (pow 2 6) n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10332 : (n : Nat) -> Leq (pow 2 6) n -> (x2515 : Nat) -> (x2516 : Nat) -> Eq (plus (times x2515 (div x2515 x2516)) (mod x2515 x2516)) x2515"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_priml. Pour tous les nombres naturels $n$, si $0$ est inférieur à $n$, alors le produit de $2$ et de $n$ est inférieur ou ágal au produit de la somme du logarithme de $2$ et du produit de $2$ et de $n$ et de $1$ et de la somme de $prim$ appliqué à le produit de $2$ et de $n$ et de $1$.\nassistant\n", "label": "Axiom le_priml : forall n : nat, forall x__ : (0 < n), Leq (2 * n) ((log 2 (2 * n) + 1) * (prim (2 * n) + 1)) .", "predict": "Axiom le_priml : forall n : nat, (0 < n -> 2 * n <= pow (2 + 2 * n) (prim (2 * n + 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10331. Let $n$ be a natural number. Then if $5 < n$, then for all natural numbers $m$, if $6 \\leq m$, then if $(m + 1)^ 2 \\leq 2 ^ m$, then for all natural numbers $a$, if $6 \\leq a$, then if $2 (a + 1)+ 1 \\leq 2 ^ a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (if (Lt (nd 5) n) (forall Nat (m => if (Leq (nd 6) m) (if (Leq (plus m (nd 1)) (pow (nd 2) m)) (forall Nat (a => if (Leq (nd 6) a) (if (Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a))))) (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 x2516 (plus (div x2515 x2516) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1562. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_1562 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_1562 (m n : Nat) (a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) : ∀ c : Nat, ∀ _clearme : ex : Nat, ∀ d : Nat, (c * n - d * m = 1 ∨ d * m - c * n = 1) → (c * n - d * m = 1 → n * c - m * d = 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15441. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to the sum of $q$ and $1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Assume that the difference of the product of $b$ and $n$ and the product of $a$ and $", "label": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))", "predict": "mod$ applied to $m$ and $n$ is not equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_mod. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $p$ est divisible par $m$. Supposons que $p$ est divisible par $n$. Alors $p$ est divisible par $mod$ appliqué à $m$ et $n$.\nassistant\n", "label": "divides_mod : p : Nat -> m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : divisible p m -> __2 : divisible p n -> divisible p (mod m n) .", "predict": "divides_mod : (p : Elem Nat) -> (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt Nat 0 n) -> Proof (Divisible Nat p m) -> Proof (Divisible Nat p n) -> Proof (Divisible Nat p (mod Nat m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nMk_Aop. För alla mängder $A$, för alla element $nil$ av $A$, för alla funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$, för alla funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op (nil , a)$ och $a$, för alla funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op (a , nil)$ och $a$, för alla funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op (a , op (b , c))$ och $op (op (a , b), c)$, håller $Aop$ för $A$ och $nil$.\nassistant\n", "label": "postulate mk_Aop : (A : Set) -> (nil : A) -> (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op nil a) a) -> (_nilr : (a : A) -> Eq (op a nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Aop A nil", "predict": "postulate mk_aop : (A : Set) -> Eq (Aop A nil)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1033. Let $p , n , q , r \\in N$. Assume that $0 < p$ and $p$ is not divisible by $r$. Assume that $n = p ^ q r$. Let $q0 , q1 \\in N$. Assume that $q1 + 1 \\leq p ^ (q1 + 1)$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (assumption1 : 0 < p) -> (assumption2 : not (divisible p r)) -> (assumption3 : Eq n (pow p q * r)) -> (q0 : Nat) -> (q1 : Nat) -> (assumption4 : Leq (plus q1 1) (pow p (plus q1 1))) -> all Nat (\\ x2515 -> all Nat (\\ x2516 -> Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2515))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nAop_rect_Type3. Pour tous les ensembles $A$, pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_867$ de $Aop$ de $A$ et de $_nil$ à des éléments de $Type3$, pour toutes les fonctions $_H_mk_Aop$ des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, pour tous les éléments $x_867$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_867$.\nassistant\n", "label": "postulate Aop_rect_Type3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_867 : Aop A _nil) -> Type3) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_867 : Aop A _nil) -> Q_ x_867", "predict": "postulate aop_rect_Type3 : (A : Set) -> A -> (Q_ : (x_867 : Aop A) -> (nil : A) -> Set) -> (op : A -> A -> Eq (op nil) (A)) -> (nill : (a : A) -> Eq (nill a) (Eq)) -> (nilr : (a : A) -> Eq (nilr a) (Eq)) -> (assoc : (a : A) -> (b : A) -> (c : A) -> Eq (assoc a b c) (Eq)) -> (mk_Aop : (A : Set) -> (nil : A) -> (op : A -> A -> Eq (op nil) (A)) -> (nill : (a : A) -> Eq (nill a) (Eq)) -> (nilr : (a : A) -> Eq (nilr a) (Eq)) -> (assoc : (a : A) -> (b : A) -> (c : A) -> Eq (assoc a b c) (Eq)) -> Set) -> all (Aop A) (all (Eq (A, A)) (Q_ x_867 nil))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nTo_min. Pour tous les nombres naturels $i$ et $n$ et $m$, si $i \\leq n$, alors si $i \\leq m$, alors $i \\leq min (n , m)$.\nassistant\n", "label": "axiom to_min (i n m : Nat) (x__ : i ≤ n) (__1 : i ≤ m) : i ≤ min n m", "predict": "axiom to_min (i n m : Nat) : i ≤ n → i ≤ m → i ≤ min n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (x0 : a ≤ n ∧ f a = i) (y0 : a ≤ n) (b : Nat) (x1 : b ≤ n ∧ f b = j) (y1 : b ≤ n) : f b = j → ∀ g : Nat → i0 → Leq i0 n → Leq (f i0) n, ∀ injf : Permut f i0 n, ∀ injn : Permut f n, (a = b → f a = j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLt_to_not_eq. Låt $n$ och $m$ vara naturliga tal. Då om $n < m$, så är $n$ inte lika med $m$.\nassistant\n", "label": "axiom lt_to_not_eq (n m : Nat) (x__ : n < m) : ¬ (n = m)", "predict": "axiom lt_to_not_eq (n m : Nat) : n < m → n ≠ m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1545. Let $m , n \\in N$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $0$ is divisible by $n$. Let $q1$ be a natural number. Assume that $n = 0 q1$. Then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m = 0 q2$, then $m = 0$.\nassistant\n", "label": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0", "predict": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> Eq 0 (gcd m n) -> Div 0 n -> Eq n (times 0 q1) -> Div 0 m -> all Nat (\\ q2 -> Eq m (times 0 q2)) -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Då om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": " $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, är $_clearme$ lika med $a$ eller $_clearme$ lika med $b$.\npostulate clause_1544 : (p : Nat) -> (q : Nat) -> Hind p q (Lt 0 n) (Leq n m) (Leq n q) -> Eq (gcd_aux q m n) (gcd_aux q m n) -> Eq n (plus q 1) -> not (divides m n) -> Eq (Nat) -> Eq (ex Nat) -> Eq (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (or (and (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) (or (Eq (clearme) a) (Eq (clearme) b))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDivides_exp_to_divides. Låt $p , n , m \\in N$. Anta att $p$ är både primt och delbart med $n ^ m$. Då är $p$ delbart med $n$.\nassistant\n", "label": "postulate divides_exp_to_divides : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : prime p) -> (__1 : divisible p (pow n m)) -> divisible p n", "predict": "postulate divides_exp_to_divides : (p : Nat) -> (n : Nat) -> (m : Nat) -> prime p /\\ divides p (pow n m) -> divides p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nBigop_I_gen. Soit $a , b \\in N$. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $Aop$ de $B$ et de $nil$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Alors si $a$ est inférieur ou ágal à $b$, alors $bigop$ appliqué à la différence de $b$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ est égal à $bigop$ appliqué à $b$ et la fonction qui envoie $i$ à $andb$ appliqué à $leb$ appliqué à $a$ et $i$ et $p$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "bigop_I_gen : a : Nat -> b : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> __ : Leq a b -> Eq (bigop (minus b a) (i : Nat => (i0 : Nat => p i0) (plus i a)) B nil (op B nil op) (i : Nat => (i0 : Nat => f i0) (plus i a))) (bigop b (i : Nat => andb (leb a i) (p i)) B nil (op B nil op) (i : Nat => f i)) .", "predict": "bigop_I_gen : (a : Elem Nat) -> (b : Elem Nat) -> (p : Nat -> Bool) -> (B : Set) -> (nil : Elem B) -> (op : Elem (Aop B nil)) -> (f : Nat -> Elem B) -> Proof (if (Leq a b) (Eq (bigop (minus b a) (fun (i : Elem Nat) (fun (i0 : Elem Nat) (p (i0 (plus i a)))) B nil op (B nil op (f (i0 (plus i a)))))) (bigop b (fun (i : Elem Nat) (andb (leb a i) (p i)) B nil op (B nil op (f i))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1559. Låt $n , m \\in N$. Anta att $n$ är delbart med $m$ och $0 = n$. Låt $d$ vara ett naturligt tal. Anta att $m = 0 d$. Då $m = n$.\nassistant\n", "label": "axiom let_clause_1559 (n m : Nat) (divnm : divisible n m) (H : 0 = n) (d : Nat) (auto : m = 0 * d) : m = n", "predict": "axiom let_clause_1559 (n m : Nat) (x : n % m = 0 ∧ n = 0) : ∀ d : Nat, (m = 0 * d → m = n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_log_S. Låt $p , n \\in N$. Då om $1$ är mindre än $p$, så är logaritmen av $p$ och $n$ mindre än eller lika med logaritmen av $p$ och summan av $n$ och $1$.\nassistant\n", "label": "postulate le_log_S : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Leq (log p n) (log p (plus n 1))", "predict": "postulate le_log_S : (p : Nat) -> (n : Nat) -> 1 < p -> log p n <= log p (plus n 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_aux_Strue. Let $n$ and $m$ and $p$ and $q$ and $r$ be natural numbers. Assume that $mod (n , m)= 0$. Then if $p_ord_aux (p , n \\div m , m)= mk_Prod (Nat , Nat , q , r)$, then $p_ord_aux (p + 1 , n , m)= mk_Prod (Nat , Nat , q + 1 , r)$.\nassistant\n", "label": "Axiom p_ord_aux_Strue : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall r : nat, forall x__ : (mod n m = 0), forall __1 : (p_ord_aux p (n / m) m = mk_Prod nat nat q r), p_ord_aux (p + 1) n m = mk_Prod nat nat (q + 1) r .", "predict": "Axiom p_ord_aux_Strue : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall r : nat, (mod n m = 0 -> p_ord_aux p (n / m) m = mk_Prod Nat Nat q r -> p_ord_aux (p + 1) n m = mk_Prod Nat Nat (q + 1) r) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nNot_divides_to_ord_O. Pour tous les nombres naturels $p$ et $m$, si $p$ est premier, alors si $p$ n'est pas divisible par $m$, alors $ord$ appliqué à $m$ et $p$ est égal à $0$.\nassistant\n", "label": "Axiom not_divides_to_ord_O : forall p : nat, forall m : nat, forall x__ : prime p, forall __1 : (~ divisible p m), ord m p = 0 .", "predict": "Axiom not_divides_to_ord_O : forall p : nat, forall m : nat, (prime p -> ~ (p mod m) -> ord m p = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDivides_to_div_mod_spec. Soit $n , m \\in N$. Supposons que $0 < n$. Supposons que $n$ est divisible par $m$. Alors $div_mod_spec$ tient pour $m$ et $n$ et $m \\div n$ et $0$.\nassistant\n", "label": "axiom divides_to_div_mod_spec (n m : Nat) (x__ : 0 < n) (__1 : divisible n m) : div_mod_spec m n (m / n) 0", "predict": "axiom divides_to_div_mod_spec (n m : Nat) (x : 0 < n) (y : n % m = 0) : div_mod_spec m n (m / n) 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_mop. Soit $n$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $R$ de $Dop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, pour tous les éléments $a$ et $_x_969$ et $_x_970$ de $B$, $B$.\nassistant\n", "label": "let_mop : n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> R : Dop B nil -> f : (__ : Nat -> B) -> a : B -> _x_969 : B -> _x_970 : B -> B .", "predict": "let_mop : n : Elem Nat -> p : Elem (Nat -> Bool) -> Proof (forall B : Elem (Set Nat) . forall nil : Elem B . forall R : Elem (Dop B nil) . forall f : Elem (Nat -> B) . forall a : Elem B . forall _x_969 : Elem B . forall _x_970 : Elem B . Proof (B)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nAop_rect_CProp0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_885$ de $Aop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_Aop$ une fonction des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Alors pour tous les éléments $x_885$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_885$.\nassistant\n", "label": "Axiom Aop_rect_CProp0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_885 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_885 : Aop A _nil, Q_ x_885 .", "predict": "Axiom aop_rect_CProp0 : forall A : Type, forall _nil : A, forall Q_ : forall x_885 : Aop A _nil -> Prop, forall H_mk_Aop : forall op : A -> _, forall __1 : A, (forall a : A, Eq (op _nil a) a /\\ Eq (a _nil) a) /\\ forall a : A, forall b : A, forall c : A, Eq (op (a (op b c)) (op (a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc) -> forall x_885 : Aop A _nil, Q_ x_885 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDivides_to_divides_times. Soit $p , q , n \\in N$. Supposons que $p$ est premier. Supposons que $p$ n'est pas divisible par $q$. Supposons que $p$ est divisible par $n$. Alors si $q$ est divisible par $n$, alors $p \\times q$ est divisible par $n$.\nassistant\n", "label": "postulate divides_to_divides_times : (p : Nat) -> (q : Nat) -> (n : Nat) -> (_ : prime p) -> (__1 : not (divisible p q)) -> (__2 : divisible p n) -> (__3 : divisible q n) -> divisible (times p q) n", "predict": "postulate divides_to_divides_times : (p : Nat) -> prime p -> not (divisible q p) -> divisible p n -> divisible q n -> divisible (times p q) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nMatch_range. Soit $_A$ un ensemble. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des éléments $z$ de $range$ de $_A$ à des éléments de $return_sort$. Alors pour toutes les fonctions $case_mk_range$ des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $return_type$ de $mk_range$ appliqué à $_A$ et $_enum$ et $_upto$ et $_filter$, pour tous les éléments $z$ de $range$ de $_A$, $return_type$ tient pour $z$.\nassistant\n", "label": "axiom match_range (_A : Set) (return_sort : Sort) (return_type : (z : range _A) -> return_sort) (case_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> return_type (mk_range _A _enum _upto _filter)) (z : range _A) : return_type z", "predict": "axiom match_range (A : Type) (return_sort : Sort) (return_type : ∀ z : range A, return_sort) : ∀ case_mk_range : ∀ n : Nat, enum n → A, ∀ upto : Nat, ∀ filter : Nat → Bool, mk_range A (case_mk_range n (enum n)) upto (filter n) → ∀ z : range A, return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_16003. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> clearme : ex -> Nat -> or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> all Nat (\\ d -> or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1009. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Anta att $0 < n$ och kontradiktion är lika med $f (n)$. Anta att $max (m , f)\\leq n$ och $max (m , f)= n$. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $m$ och funktionen som avbildar $__$ som $Eq$ applicerat på $f$ applicerat på $i$ och kontradiktion och $max (m , f)= 0$. Då för alla funktioner $auto$ från naturliga tal $i$ och element av $Lt$ av $i$ och $m$ till element av $Eq$ av $f (i)$ och kontradiktion, om $max (m , f)= 0$, så $0 = n$.\nassistant\n", "label": "axiom let_clause_1009 (f : (x__ : Nat) -> bool) (n m : Nat) (posn : 0 < n) (Hfn : f n = false) (Hmax : max m f ≤ n) (Hmax0 : max m f = n) (_clearme : prod Set Prop Nat (λ i => prod Prop Prop (i < m) (λ x__ => f i = false)) ∧ max m f = 0) (auto : (i : Nat) -> (x__ : i < m) -> f i = false) (auto' : max m f = 0) : 0 = n", "predict": "axiom let_clause_1009 (f : Nat → Bool) (n m : Nat) (x : 0 < n ∧ contradiction = f n) (y : max m f ≤ n ∧ max m f = n) (z : prod : Set Nat ∧ Prop ∧ Nat → Nat → Prop) (a : z (i : Nat) (Lt i m) := Eq (f i) contradiction) (b : max m f = 0) : ∀ auto : Nat → Lt Nat m → Eq (f Nat) contradiction, (max m f = 0 → 0 = n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Alors si $i \\leq n$ et $j \\leq n$, alors pour tous les nombres naturels $a$, si $a \\leq n$ et $f (a)= i$ et $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$ et $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) : ∀ a : Nat, (a ≤ n ∧ f a = i ∧ a ≤ n → f a = i → ∀ b : Nat, (b ≤ n ∧ f b = j ∧ b ≤ n → f b = j → ∀ i0 : Nat, ∀ injf : Leq i0 n → ∀ fn : Leq (f i0) n, a = b → f a = j))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod. For all natural numbers $n$ and $m$, $n$ is equal to the sum of the product of the quotient of $n$ and $m$ and $m$ and $mod$ applied to $n$ and $m$.\nassistant\n", "label": "Axiom div_mod : forall n : nat, forall m : nat, n = n / m * m + mod n m .", "predict": "Axiom div_mod : forall n : nat, forall m : nat, n = (quot n m * m) + (mod n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMatch_le. Let $_n$ be a natural number. Let $return_sort$ be an element of $Sort$. Let $return_type$ be a function from natural numbers and elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_sort$. Let $case_le_n$ be an element of $return_type$ of $_n$ and $le_n (_n)$. Let $case_le_S$ be a function from natural numbers $m$ and elements of $Leq$ of $_n$ and $m$ to elements of $return_type$ of $m + 1$ and $le_S (_n , m , __)$. Let $__$ be a natural number. Then if $_n \\leq __$, then $return_type$ holds for $__$ and $z$.\nassistant\n", "label": "Axiom match_le : forall _n : nat, forall return_sort : Sort, forall return_type : ((x__ : nat) -> (z : Leq _n x__) -> return_sort), forall case_le_n : return_type _n (le_n _n), forall case_le_S : ((m : nat) -> (x__ : Leq _n m) -> return_type (m + 1) (le_S _n m x__)), forall x__ : nat, forall z : Leq _n x__, return_type x__ z .", "predict": "Axiom match_le : forall n : nat, forall return_sort : Sort, forall return_type : n -> Leq n -> nat -> return_sort, forall case_le_n : return_type n (Leq n n), forall case_le_S : forall m : nat, Leq n m -> return_type (n + 1) (Leq n m), forall __ : nat, (n <= __ -> return_type __ z) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDivides_to_dividesb_true1. Låt $n$ och $m$ vara naturliga tal. Anta att $0 < m$. Då om $n$ är delbart med $m$, så $dividesb (n , m)= true$.\nassistant\n", "label": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true", "predict": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> 0 < m -> divides n m -> true == dividesb n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1033. Låt $n \\in N$. Då om $1 < n$, så om $2 \\times n$ är primt, så om $1 < 2 n$, så för alla funktioner $H1$ från naturliga tal $m$ och element av $divisible$ av $m$ och $2 \\times n$ och element $__1$ av $Lt$ av $1$ och $m$ till element av $Eq$ av $m$ och $2 \\times n$, för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_1033 : forall n : nat, forall ltn : (1 < n), forall _clearme : prime (2 * n), forall H : (1 < 2 * n), forall H1 : ((m : nat) -> (x__ : divisible m (2 * n)) -> (__1 : 1 < m) -> m = 2 * n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall n : nat, (1 < n -> prime (2 * n) -> 1 < 2 * n -> forall H1 : nat -> divisible (2 * n) -> forall __1 : Lt 1 (nd 2515) -> Eq (nd 2515) (2 * n), forall x2515, forall x2516, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_div_S_S_div. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then the quotient of the sum of $n$ and $1$ and $m$ is less than or equal to the sum of the quotient of $n$ and $m$ and $1$.\nassistant\n", "label": "le_div_S_S_div : n : Nat -> m : Nat -> __ : Lt 0 m -> Leq (div (plus n (nd 1)) m) (plus (div n m) (nd 1)) .", "predict": "le_div_S_S_div : n : Elem Nat -> m : Elem Nat -> Proof (if (Lt (nd 0) m) (Leq (div (plus n (nd 1)) m) (plus (div n m) (nd 1)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_10331. Låt $n \\in N$. Anta att $5 < n$. Låt $m$ vara ett naturligt tal. Anta att $6 \\leq m$. Anta att $(m + 1)^ 2 \\leq 2 ^ m$. Låt $a \\in N$. Då om $6 \\leq a$, så om $2 (a + 1)+ 1 \\leq 2 ^ a$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (lt4n : 5 < n) (m : Nat) (le4m : 6 ≤ m) (Hind : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (lea : 6 ≤ a) (Hinda : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n : Nat) (x : 5 < n) (m : Nat) (y : 6 ≤ m) (z : pow (m + 1) 2 ≤ pow m) (a : Nat) (x : 6 ≤ a) : 2 * (a + 1) + 1 ≤ pow a → ∀ x2515 : Nat, ∀ x2516 : Nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDop_rect_Type3_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_949$ av $Dop$ av $A$ och $_nil$ till element av $Type3$. Låt $_H_mk_Dop$ vara en funktion från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$. Då för alla element $x_949$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_949$.\nassistant\n", "label": "Axiom Dop_rect_Type3_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_949 : Dop A _nil) -> Type3), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_949 : Dop A _nil, Q_ x_949 .", "predict": "Axiom dop_rect_Type3_body : forall A : Type, forall nil : A, forall Q_ : Dop A nil -> Type3, forall mk_Dop : ACop A nil -> A -> Prod (A -> Type) -> Eq (Q_ (mk_Dop A nil)) := forall x_949 : Dop A nil, Q_ x_949 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nExp_plus_times. Låt $n$ och $p$ och $q$ vara naturliga tal. Då är potensen av $n$ och summan av $p$ och $q$ lika med produkten av potensen av $n$ och $p$ och potensen av $n$ och $q$.\nassistant\n", "label": "postulate exp_plus_times : (n : Nat) -> (p : Nat) -> (q : Nat) -> Eq (pow n (plus p q)) (times (pow n p) (pow n q))", "predict": "postulate exp_plus_times : (n : Nat) -> (p : Nat) -> (q : Nat) -> Eq (pow n (plus p q)) (times (pow n p) (pow n q))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nACop_inv_ind. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1566$ de $ACop$ de $x1$ et de $x2$ à des propositions. Alors pour toutes les fonctions $_H1$ des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1567$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom ACop_inv_ind : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1566 : ACop x1 x2) -> Prop), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1567 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm .", "predict": "Axiom cop_inv_ind : forall x1 : Ensemble, forall x2 : x1 -> Prop, forall Hterm : cop x1 x2 -> Prop, forall P : (cop x1 x2 -> Prop) -> Prop, forall H1 : aop x1 x2 -> Prop, forall comm : x1 -> x1 -> Eq, forall z1567 : Eq (Hterm) (mk_ACop x1 x2 H1 comm) -> P (mk_ACop x1 x2 H1 comm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nInvert_permut_body. Låt $__ \\in N$. Då för alla funktioner $__1$ från naturliga tal $__1$ till naturliga tal, för alla naturliga tal $__2$, $Nat$.\nassistant\n", "label": "Axiom invert_permut_body : forall x__ : nat, forall __1 : ((__1 : nat) -> nat), forall __2 : nat, nat .", "predict": "Axiom invert_permut_body : forall __ : nat, forall __1 : nat -> nat, forall __2 : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nP_ord_to_not_eq_O. Låt $n , p , q , r \\in N$. Anta att $1 < n$. Anta att $p_ord (n , nth_prime (p))= mk_Prod (Nat , Nat , q , r)$. Då är $r$ inte lika med $0$.\nassistant\n", "label": "axiom p_ord_to_not_eq_O (n p q r : Nat) (x__ : 1 < n) (__1 : p_ord n (nth_prime p) = mk_Prod Nat Nat q r) : ¬ (r = 0)", "predict": "axiom p_ord_to_not_eq_O (n p q r : Nat) (x : 1 < n) (y : p_ord (n, nth_prime p) = mk_Prod Nat Nat q r) : r ≠ 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nExp_fact_2. Pour tous les nombres naturels $n$, $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ est égal à $n ! ^ 2$.\nassistant\n", "label": "postulate exp_fact_2 : (n : Nat) -> Eq (pow (factorial n) 2) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1)))))))", "predict": "postulate exp_fact_2 : (n : Nat) -> bigop (plus n 1) (primeb >>> Nat 1 times (bigop (log p n) >>> (true >>> Nat 1 times (pow p (times 2 (quotient n (pow p (plus i 1))))))))) == pow n 2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLe_sigma. Låt $n \\in N$. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $g1$ och $g2$ vara funktioner från naturliga tal till naturliga tal. Låt $__$ vara en funktion från naturliga tal $i$ och element av $Lt$ av $i$ och $n$ och element $__1$ av $Eq$ av $p1 (i)$ och $true$ till element av $Eq$ av $p2 (i)$ och $true$. Låt $__1$ vara en funktion från naturliga tal $i$ och element $__1$ av $Lt$ av $i$ och $n$ och element $__2$ av $Eq$ av $p1 (i)$ och $true$ till element av $Leq$ av $g1 (i)$ och $g2 (i)$. Då är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p2$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g2$ applicerat på $i$ mindre än eller lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p1$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g1$ applicerat på $i$.\nassistant\n", "label": "postulate le_sigma : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))", "predict": "postulate le_sigma : (n : Nat) -> (p1 : Nat -> Bool) -> (p2 : Nat -> Bool) -> (g1 : Nat -> Nat) -> (g2 : Nat -> Nat) -> Eq (p2 n) (bigop n (lambda i -> Eq (p1 i) true) (lambda i -> Eq (p1 i) true)) -> Leq (bigop n (lambda i -> Eq (p1 i) true) (lambda i -> g1 i)) (bigop n (lambda i -> p1 i) (lambda i -> g2 i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1012. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , i \\in N$. Låt $Hind$ vara en funktion från naturliga tal $b$ till element av $prod$ av $Prop$ och $Prop$ och $Eq$ applicerat på $f$ applicerat på $let_m2$ applicerat på $f$ och $n$ och $i$ och $b$ och kontradiktion och funktionen som avbildar $__$ som $Eq (let_m2 (f , n , i , b), i + b)$. Låt $b \\in N$. Då om $f (b)= true$, så om kontradiktion är lika med $f (b)$, så är $true$ lika med kontradiktion.\nassistant\n", "label": "postulate let_clause_1012 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (i : Nat) -> (Hind : (b : Nat) -> prod Prop Prop (Eq (f (let_m2 f n i b)) false) (\\ _ : Eq (f (let_m2 f n i b)) false -> Eq (let_m2 f n i b) (plus i b))) -> (b : Nat) -> (fb : Eq (f b) true) -> (eqm : Eq (f b) false) -> Eq false true", "predict": "postulate let_clause_1012 : (f : Nat -> Prop) -> n : Nat -> i : Nat -> Hind : Nat -> Eq (let_m2 f n i) (plus i (snd (Hind))) -> Eq (if (f b) (contradiction)) (f b) -> Eq true (contradiction)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1607. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$. Alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "postulate let_clause_1607 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_1607 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> and (ex : Elem (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> d : Nat -> and (or (Eq (minus (times m d) (times n c)) (gcd m n)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_exp_to_le. Let $b$ and $n$ and $m$ be natural numbers. Assume that $1 < b$. Then if $b ^ n \\leq b ^ m$, then $n \\leq m$.\nassistant\n", "label": "postulate le_exp_to_le : (b : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 b) -> (__1 : Leq (pow b n) (pow b m)) -> Leq n m", "predict": "postulate le_exp_to_le : (b : Nat) -> b > 1 -> (n : Nat) -> (m : Nat) -> Leq (pow b n) (pow b m) -> Leq n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_max_f_max_g. Låt $f$ och $g$ vara funktioner från naturliga tal till sanningsvärden. Låt $n$ vara ett naturligt tal. Låt $__$ vara en funktion från naturliga tal $i$ och element av $Lt$ av $i$ och $n$ och element $__1$ av $Eq$ av $f$ applicerat på $i$ och $true$ till element av $Eq$ av $g$ applicerat på $i$ och $true$. Då är $max$ applicerat på $n$ och $f$ mindre än eller lika med $max$ applicerat på $n$ och $g$.\nassistant\n", "label": "Axiom le_max_f_max_g : forall f : ((x__ : nat) -> bool), forall g : ((x__ : nat) -> bool), forall n : nat, forall x__ : ((i : nat) -> (x__ : i < n) -> (__1 : f i = true) -> g i = true), Leq (max n f) (max n g) .", "predict": "Axiom le_max_f_max_g : forall f : nat -> bool, forall g : nat -> bool, forall n : nat, forall __ : nat -> Lt n -> bool, forall __1 : Eq (f __) true -> Eq (g __) true, max n f <= max n g ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMod_O_to_divides. Let $n , m \\in N$. Assume that $0 < n$. Then if $mod (m , n)= 0$, then $n$ is divisible by $m$.\nassistant\n", "label": "Axiom mod_O_to_divides : forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : (mod m n = 0), divisible n m .", "predict": "Axiom mod_O_to_divides : forall n : nat, (0 < n -> forall m : nat, (mod m n = 0 -> n | m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nEqb_n_n. Låt $n$ vara ett naturligt tal. Då $eqb (n , n)= true$.\nassistant\n", "label": "postulate eqb_n_n : (n : Nat) -> Eq (eqb n n) true", "predict": "postulate eqb_n_n : (n : Nat) -> Eqb n n True"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1585. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < n$. Supposons que $m$ est divisible par $n$. Soit $d \\in N$. Alors si $0 = m$, alors si $n = m d$, alors $0 = n$.\nassistant\n", "label": "let_clause_1585 : n : Nat -> m : Nat -> posn : Lt 0 n -> _clearme : divisible m n -> d : Nat -> auto : Eq 0 m -> auto' : Eq n (times m d) -> Eq 0 n .", "predict": "let_clause_1585 : n : Elem Nat -> m : Elem Nat -> Proof (0 < n) -> Proof (Divisible m n) -> d : Elem Nat -> Proof (if (Eq 0 m) (if (Eq n (times m d)) (Eq 0 n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_m_exp_nm. Soit $n , m \\in N$. Alors si $1$ est inférieur à $n$, alors $m$ est inférieur à la puissance de $n$ et de $m$.\nassistant\n", "label": "axiom lt_m_exp_nm (n m : Nat) (x__ : 1 < n) : m < pow n m", "predict": "axiom lt_m_exp_nm (n m : Nat) : 1 < n → m < pow n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nB_SSSSSO. $B$ applied to $5$ is equal to $30$.\nassistant\n", "label": "postulate B_SSSSSO : Eq (B 5) 30", "predict": "postulate b_sssss_o : B 5 ≡ 30"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1728$ of $Dop$ of $x1$ and $x2$ to sets, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1729$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Dop_inv_rect_Type0 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1728 : Dop x1 x2) -> Set) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1729 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm", "predict": "axiom dop_inv_rect_Type0 (x1 : Type) (x2 : x1) : ∀ Hterm : Dop x1 x2, ∀ P : ∀ _z1728 : Dop x1 x2 → Type, ∀ H1 : sum (ACop x1 x2) → prod (x1 → Type) (x1 → Type) → Eq (prod x2 (x2 × x2)) (a : x1) → Eq (prod x2 (x1 × x2)) (sum (ACop x1 x2)) → Eq (prod x2 (a × x2)) (x2 × x2) → Eq (prod x2 (a × (x1 × x2))) (x2 × (x1 × x2)) → Eq (prod x2 (mk_Dop x1 x2) (sum (ACop x1 x2)) (prod (x1 → Type) (x1 → Type))) (x2 × (mk_Dop x1 x2) (sum (ACop x1 x2)) (prod (x1 → Type) (x1 → Type))) → P (Hterm)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBc2. Let $n$ and $k$ be natural numbers. Assume that $k \\leq n$. Then $k ! \\times (n - k)!$ is divisible by $n !$.\nassistant\n", "label": "axiom bc2 (n k : Nat) (x__ : k ≤ n) : divisible (factorial k * factorial (n - k)) (factorial n)", "predict": "axiom b2 (n k : Nat) (x : k ≤ n) : div (fact k * fact (n - k)) (fact n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_16001. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Alors si $0$ est inférieur à $n$, alors si $0$ est inférieur à $m$, alors si le diviseur commun plus grand de $n$ et de $m$ est égal à $1$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.\nassistant\n", "label": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), gcd m n = n * c - m * d .", "predict": "Axiom let_clause_16001 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n -> 0 < m -> Gcd n m = 1 -> forall c : nat, forall _clearme : ex, (c : Nat -> disj (Eq (n * c - m * d) 1) (Eq (m * d - n * c) 1)) -> forall d : nat, (Eq (n * c - m * d) 1 \\/ Eq (m * d - n * c) 1 -> Eq (n * c - m * d) 1 -> Gcd m n = (n * c - m * d)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1569. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$, så $n c - m d = 1$.\nassistant\n", "label": "let_clause_1569 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_1569 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (forall (x : Elem (ex (Nat))) (forall (f : Elem (Disj (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) (forall (d : Elem Nat) (and (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times n c) (times m d)) (nd 1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_ind. Soient $_n$ et $_m$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_1192$ de $divisible$ de $_n$ et de $_m$ à des propositions. Soit $_H_quotient$ une fonction des nombres naturels $q$ et des éléments $x_1193$ de $Eq$ de $_m$ et de $_n \\times q$ à des éléments de $Q_$ de $quotient (_n , _m , q , x_1193)$. Alors si $_n$ est divisible par $_m$, alors $Q_$ tient pour $x_1192$.\nassistant\n", "label": "divides_ind : _n : Nat -> _m : Nat -> Q_ : (_x_1192 : divisible _n _m -> Prop) -> _H_quotient : (q : Nat -> x_1193 : Eq _m (times _n q) -> Q_ (quotient _n _m q x_1193)) -> x_1192 : divisible _n _m -> Q_ x_1192 .", "predict": "divides_ind : (n : Elem Nat) -> (m : Elem Nat) -> Proof (forall (x_1192 : Elem (divisible n m)) => Proof (forall (q : Elem Nat) -> forall (x_1193 : Elem (Eq m (times n q))) => Proof (Eq (Q_ (quotient n m q) x_1193) x_1192))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin_spec_ind. Let $_n$ and $_b$ be natural numbers. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$. Let $x_1075 \\in N$. Then for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "postulate min_spec_ind : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076", "predict": "postulate min_spec_ind : (n : Nat) -> (b : Nat) -> (f : Nat -> Bool) -> all (min_spec n b f) (\\ x -> all (Q_ n b f x) (\\ m -> if (and (Leq b m) (Lt m n)) (if (Eq (plus n b) m) (if (Eq (f m) true) (all (x -> if (and (Leq b x) (Lt x m)) (Eq (f x) (absurd))) (plus n b)))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_Sfalse. Let $k \\in N$. Let $p$ be a function from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if absurdity is equal to $p (k)$, then $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "Axiom bigop_Sfalse : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall x__ : (p k = false), bigop (k + 1) (fun i => p i) B nil op (fun i => f i) = bigop k (fun i => p i) B nil op (fun i => f i) .", "predict": "Axiom bigop_Sfalse : forall k : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (p k -> bigop k (fun i => p i B nil op (fun i => f i)) = bigop (k + 1) (fun i => p i B nil op (fun i => f i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLt_O_S. Låt $n \\in N$. Då $0 < n + 1$.\nassistant\n", "label": "lt_O_S : n : Nat -> Lt 0 (plus n (nd 1)) .", "predict": "Lt_O_S : n : Elem Nat -> Proof (Lt (nd 0) (plus n (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type4_body. Let $Q_$ be a function from natural numbers $_x_369$ to elements of $Type4$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_370$ and elements $_x_372$ of $Q_$ of $x_370$ to elements of $Q_$ of $x_370 + 1$. Then for all natural numbers $x_369$, $Q_$ holds for $x_369$.\nassistant\n", "label": "postulate nat_rect_Type4_body : (Q_ : (_x_369 : Nat) -> Type4) -> (_H_O : Q_ 0) -> (_H_S : (x_370 : Nat) -> (_x_372 : Q_ x_370) -> Q_ (plus x_370 1)) -> (x_369 : Nat) -> Q_ x_369", "predict": "postulate nat_rect_Type4_body : (Q : Nat -> Type4) -> Q 0 -> (x : Nat) -> (x' : Q x) -> all Nat (\\ x -> Q x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1571. Låt $m$ och $n$ vara naturliga tal. Då om $0 < n$ och $0$ är lika med det största gemensama delaret av $m$ och $n$, så om $m = 0$ och $n = 0$, så $m = n$.\nassistant\n", "label": "axiom let_clause_1571 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = n", "predict": "axiom let_clause_1571 (m n : Nat) : 0 < n ∧ gcd m n = 0 ∧ (m = 0 ∧ n = 0) → m = n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_15622. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$. Alors $m d - n c = 1$.\nassistant\n", "label": "axiom let_clause_15622 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15622 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : 1 = gcd n m) (c : Nat) (x1 : ex : Nat → Prop) (x2 : ∀ d : Nat, x1 d ↔ Eq 1 (if (and (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) (m * d - n * c))) : c * n - d * m = 1 ∨ d * m - c * n = 1 → m * d - n * c = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDivides_to_mod_O. Låt $n , m \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är delbart med $m$. Då är $mod$ applicerat på $m$ och $n$ lika med $0$.\nassistant\n", "label": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : divisible n m, mod m n = 0 .", "predict": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, (0 < n -> n mod m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLt_to_not_zero. Låt $n$ och $m$ vara naturliga tal. Då om $n$ är mindre än $m$, så håller $not_zero$ för $m$.\nassistant\n", "label": "Axiom lt_to_not_zero : forall n : nat, forall m : nat, forall x__ : (n < m), not_zero m .", "predict": "Axiom lt_to_not_zero : forall n : nat, forall m : nat, (n < m -> not_zero m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_16003. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.\nassistant\n", "label": "axiom let_clause_16003 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16003 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (t : ex Nat → Nat → Prop) : c * n - d * m = 1 ∨ d * m - c * n = 1 → (d * m - c * n = 1 → gcd m n = m * d - n * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nP_ord_to_exp1. Låt $p , n , q , r \\in N$. Anta att $1 < p$ och $0 < n$. Anta att $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$. Då är $p$ inte delbart med $r$ och $n = p ^ q r$.\nassistant\n", "label": "postulate p_ord_to_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> (__2 : Eq (p_ord n p) (mk_Prod Nat Nat q r)) -> and (not (divisible p r)) (Eq n (times (pow p q) r))", "predict": "postulate p_ord_to_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> and (Lt 1 p) (Gt 0 n) -> Eq (p_ord n p) (mk_Prod Nat Nat q r) -> not (divides p r) /\\ Eq n (pow p q * r)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNat_rect_CProp1. Soit $Q_$ une fonction des nombres naturels $_x_409$ à des propositions. Soit $_H_O$ un élément de $Q_$ de $0$. Soit $_H_S$ une fonction des nombres naturels $x_410$ et des éléments $_x_412$ de $Q_$ de $x_410$ à des éléments de $Q_$ de $x_410 + 1$. Soit $x_409$ un nombre naturel. Alors $Q_$ tient pour $x_409$.\nassistant\n", "label": "nat_rect_CProp1 : Q_ : (_x_409 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_410 : Nat -> _x_412 : Q_ x_410 -> Q_ (plus x_410 (nd 1))) -> x_409 : Nat -> Q_ x_409 .", "predict": "nat_rect_CProp1 : (Q : Elem (Nat -> Prop)) -> Elem Q 0 -> (x : Elem Nat) -> Elem (x -> Elem Q (plus x 1)) Nat -> Proof (Q x_409) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (Permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (Leq a n) -> Proof (Eq (f a) i) -> b : Elem Nat -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (Leq b n) -> Proof (Eq (f b) j) -> Proof (forall (f : Elem (Nat -> Nat)) -> Proof (and (Eq f i0) (Elem (Leq i0 n))) -> Proof (forall (injf : Elem (injn f n)) -> Proof (and (Eq a b) (Eq (f a) j))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLt_O_theta. Pour tous les nombres naturels $n$, $0$ est inférieur à $theta$ appliqué à $n$.\nassistant\n", "label": "postulate lt_O_theta : (n : Nat) -> Lt 0 (theta n)", "predict": "postulate lt_O_theta : all Nat (\\ n -> 0 < (theta n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLe_prim_n. Låt $n \\in N$. Då $prim (n)\\leq n$.\nassistant\n", "label": "axiom le_prim_n (n : Nat) : prim n ≤ n", "predict": "axiom le_prim_n (n : Nat) : prime n ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a = 1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : Eq 1 (gcd p m)) -> (y : Eq p (times m n)) -> c : Nat -> Eq (times m n) (times p c) -> all Nat (\\ a -> all Nat (\\ b -> all Nat (\\ _clearme0 -> if (or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (if (Eq (gcd p m) (minus (times b m) (times a p))) (if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) 1))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nFilter_nat. Soit $return_sort$ un élément de $Sort$. Alors pour toutes les fonctions $return_type$ des nombres naturels $z$ à des éléments de $return_sort$, pour toutes les fonctions $return$ des nombres naturels $z$ à des éléments de $return_type$ de $z$, pour tous les nombres naturels $z$, $return_type$ tient pour $z$.\nassistant\n", "label": "axiom filter_nat (return_sort : Sort) (return_type : (z : Nat) -> return_sort) (return : (z : Nat) -> return_type z) (z : Nat) : return_type z", "predict": "axiom filter_nat (return_sort : Sort) : ∀ return_type : Nat → return_sort → ∀ return : Nat → return_type → ∀ z : Nat, return_type z"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_ord_log. Låt $n$ och $p$ vara naturliga tal. Då om $0$ är mindre än $n$, så om $1$ är mindre än $p$, så är $ord$ applicerat på $n$ och $p$ mindre än eller lika med logaritmen av $p$ och $n$.\nassistant\n", "label": "Axiom le_ord_log : forall n : nat, forall p : nat, forall x__ : (0 < n), forall __1 : (1 < p), Leq (ord n p) (log p n) .", "predict": "Axiom le_ord_log : forall n : nat, forall p : nat, (0 < n -> 1 < p -> ord n p <= log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nEq_Psi_2_n. Låt $n \\in N$. Då om $0$ är mindre än $n$, så är $Psi$ applicerat på produkten av $2$ och $n$ lika med produkten av $bigop$ applicerat på summan av produkten av $2$ och $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $bigop$ applicerat på logaritmen av $p$ och produkten av $2$ och $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $p$ och $bool_to_nat$ applicerat på $leb$ applicerat på summan av $n$ och $1$ och potensen av $p$ och summan av $i$ och $1$ och $Psi$ applicerat på $n$.\nassistant\n", "label": "postulate eq_Psi_2_n : (n : Nat) -> (_ : Lt 0 n) -> Eq (Psi (times 2 n)) (times (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (bool_to_nat (leb (plus n 1) (pow p (plus i 1))))))) (Psi n))", "predict": "postulate eq_Psi_2_n : (n : Nat) -> if (Lt 0 n) (Eq (Psi (times 2 n)) (times (bigop (plus (times 2 n) 1)) (primeb n) Nat 1) (times (bigop (times (log n) (times 2 n))) (and true (Nat 1)) (times (pow n (bool_to_nat (leb (plus n 1) (pow n (plus i 1))))) Psi n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDivides_fact_to_divides. Låt $p , n \\in N$. Då om $p$ är både primt och delbart med $n !$, så håller $ex$ för $Nat$ och funktionen som avbildar $m$ som konjunktionen av konjunktionen av $Lt$ applicerat på $0$ och $m$ och $Leq$ applicerat på $m$ och $n$ och $divisible$ applicerat på $p$ och $m$.\nassistant\n", "label": "axiom divides_fact_to_divides (p n : Nat) (x__ : prime p) (__1 : divisible p (factorial n)) : ex Nat (λ m => 0 < m ∧ m ≤ n ∧ divisible p m)", "predict": "axiom divides_fact_to_divides (p n : Nat) (x : prime p ∧ p % n) : ∀ ex : Nat, ∀ m : Nat, (Lt 0 m ∧ Leq m n ∧ divisible p m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nNat_rect_CProp4. För alla funktioner $Q_$ från naturliga tal $_x_393$ till påståenden, för alla element $_H_O$ av $Q_$ av $0$, för alla funktioner $_H_S$ från naturliga tal $x_394$ och element $_x_396$ av $Q_$ av $x_394$ till element av $Q_$ av summan av $x_394$ och $1$, för alla naturliga tal $x_393$, håller $Q_$ för $x_393$.\nassistant\n", "label": "nat_rect_CProp4 : Q_ : (_x_393 : Nat -> Prop) -> _H_O : Q_ 0 -> _H_S : (x_394 : Nat -> _x_396 : Q_ x_394 -> Q_ (plus x_394 (nd 1))) -> x_393 : Nat -> Q_ x_393 .", "predict": "nat_rect_CProp4 : (Q : Elem Nat -> Prop) -> Proof (Q 0) -> Proof (forall Nat (x => forall (H_S : Elem Nat) -> forall (x => Eq (Q (plus x H_S)) (Q x))) x_393) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nF3_ind_aux. Låt $A1$ och $A2$ och $A3$ vara mängder. Låt $f$ vara en funktion från element av $A1$ och element $__1$ av $A2$ och element $__2$ av $A3$ till naturliga tal. Låt $P$ vara ett element av $relation3$ av $A1$ och $A2$ och $A3$. Låt $__$ vara en funktion från naturliga tal $n$ och funktioner från element $a1$ av $A1$ och element $a2$ av $A2$ och element $a3$ av $A3$ och element av $Lt$ av $f (a1 , a2 , a3)$ och $n$ till element av $P$ av $a1$ och $a2$ och $a3$ och element $a1$ av $A1$ och element $a2$ av $A2$ och element $a3$ av $A3$ och element $__1$ av $Eq$ av $f (a1 , a2 , a3)$ och $n$ till element av $P$ av $a1$ och $a2$ och $a3$. Låt $n \\in N$. Låt $a1$ vara ett element av $A1$. Låt $a2$ vara ett element av $A2$. Då för alla element $a3$ av $A3$, om $f (a1 , a2 , a3)= n$, så håller $P$ för $a1$ och $a2$ och $a3$.\nassistant\n", "label": "axiom f3_ind_aux (A1 A2 A3 : Set) (f : (x__ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) (P : relation3 A1 A2 A3) (x__ : (n : Nat) -> (x__ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (x__ : f a1 a2 a3 < n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : f a1 a2 a3 = n) -> P a1 a2 a3) (n : Nat) (a1 : A1) (a2 : A2) (a3 : A3) (__1 : f a1 a2 a3 = n) : P a1 a2 a3", "predict": "axiom f3_ind_aux (A1 A2 A3 : Type) (f : A1 → A2 → A3 → Nat) (P : relation3 A1 A2 A3) (g : Nat → (a1 : A1) → (a2 : A2) → (a3 : A3) → Lt f a1 a2 a3 → Nat → P a1 a2 a3) (n : Nat) (a1 : A1) (a2 : A2) : ∀ a3 : A3, (f a1 a2 a3 = n → P a1 a2 a3)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_plus. For all natural numbers $n$ and $m$ and $p$ and $q$, if $n$ is less than $m$, then if $p$ is less than $q$, then the sum of $n$ and $p$ is less than the sum of $m$ and $q$.\nassistant\n", "label": "axiom lt_plus (n m p q : Nat) (x__ : n < m) (__1 : p < q) : n + p < m + q", "predict": "axiom lt_plus (n m p q : Nat) (x : n < m) (y : p < q) : n + p < m + q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nCongruent_pi. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Då för alla naturliga tal $n$ och $p$, om $0 < p$, så håller $congruent$ för $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som $mod$ applicerat på $f$ applicerat på $i$ och $p$ och $p$.\nassistant\n", "label": "axiom congruent_pi (f : (x__ : Nat) -> Nat) (n p : Nat) (x__ : 0 < p) : congruent (bigop n (λ i => true) Nat 1 times (λ i => f i)) (bigop n (λ i => true) Nat 1 times (λ i => mod (f i) p)) p", "predict": "axiom congruent_pi (f : Nat → Nat) : ∀ n : Nat, ∀ p : Nat, (0 < p → congruent (bigop n (λ i, true)) (Nat 1) (times (bigop n (λ i, true)) (mod (f i) p) p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nAxiom. Låt $__$ och $__1$ vara naturliga tal. Då är produkten av $__$ och $__1$ ett naturligt tal.\nassistant\n", "label": "axiom times (x__ __1 : Nat) : Nat", "predict": "axiom prodNat (a b : Nat) : Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_10471. Soit $n1 , n2 \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1", "label": "Axiom let_clause_10471 : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), forall h : ((x__ : nat) -> nat), forall _clearme0 : ex (prod Set Set nat (fun x__ => nat)) (fun k => prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) /\\ sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)), forall k : ((x__ : nat) -> nat), forall _clearme1 : (prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_hk h k B (mk_range B", "predict": "$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $k$ appliqué à $i$ et de $sub_kh$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_kh$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Supposons que $h$ est une fonction des nombres naturels à des nombres naturels. Supposons que $f1$ est une fonction des nombres naturels à des éléments de $B$. Supposons que $f2$ est une fonction des nombres naturels à des éléments de $B$. Supposons que $n1$ est un nombre naturel. Supposons que $n2$ est un nombre naturel. Supposons que $p1$ est une fonction des nombres naturels à des valeurs booléennes. Supposons que $p2$ est une fonction des nombres naturels à des valeurs booléennes. Supposons que $B$ est un ensemble. Supposons que $nil$ est un élément de $B$. Supposons que $op$ est un élément de $ACop$ de $B$ et de $nil$. Supposons que $f1$ est une fonction des nombres naturels à des éléments de $B$. Supposons que $f2$ est une fonction des nombres naturels à des éléments de $B$. Supposons que $_clearme$ est un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Supposons que $k$ est une fonction des nombres naturels à des nombres naturels. Supposons que $x$ est un élément de $ex$ de $prod$ appliqué à $Set$"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLt_smallest_factor_to_not_divides. Pour tous les nombres naturels $n$ et $i$, si $1 < n$, alors si $1 < i$, alors si $i < smallest_factor (n)$, alors $i$ n'est pas divisible par $n$.\nassistant\n", "label": "postulate lt_smallest_factor_to_not_divides : (n : Nat) -> (i : Nat) -> (_ : Lt 1 n) -> (__1 : Lt 1 i) -> (__2 : Lt i (smallest_factor n)) -> not (divisible i n)", "predict": "postulate lt_smallest_factor_to_not_divides : (n : Nat) -> (i : Nat) -> if (and (Lt 1 n) (Lt 1 i) (Lt i (smallest_factor n))) (not (divisible i n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_4_to_le_B_exp. Soit $n$ un nombre naturel. Supposons que $4$ est inférieur à $n$. Alors $B$ appliqué à le produit de $2$ et de $n$ est inférieur ou ágal à la puissance de $2$ et de la différence du produit de $2$ et de $n$ et de $2$.\nassistant\n", "label": "axiom lt_4_to_le_B_exp (n : Nat) (x__ : 4 < n) : B (2 * n) ≤ pow 2 (2 * n - 2)", "predict": "axiom lt_4_to_le_B_exp (n : Nat) (x : 4 < n) : B (2 * n) ≤ pow 2 (2 - (2 * n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $5 < n$. Låt $m$ vara ett naturligt tal. Då om $6 \\leq m$ och $(m + 1)^ 2 \\leq 2 ^ m$, så för alla naturliga tal $a$, om $6 \\leq a$ och $2 (a + 1)+ 1 \\leq 2 ^ a$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall lt4n : (5 < n), forall m : nat, forall le4m : Leq 6 m, forall Hind : Leq (pow (m + 1) 2) (pow 2 m), forall a : nat, forall lea : Leq 6 a, forall Hinda : Leq (2 * (a + 1) + 1) (pow 2 a), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, (5 < n -> forall m : nat, (6 <= m /\\ pow (m + 1) 2 <= pow m 2 -> forall a : nat, (6 <= a /\\ 2 * (a + 1) + 1 <= pow a 2 -> forall x2515, x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDiv_mod_spec_inv_rect_Type1. För alla naturliga tal $x1$ och $x2$ och $x3$ och $x4$, för alla element $Hterm$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$, för alla funktioner $P$ från element $_z1458$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till element av $Type1$, för alla funktioner $_H1$ från element $x_831$ av $Lt$ av $x4$ och $x2$ och element $x_830$ av $Eq$ av $x1$ och $x3 x2 + x4$ och element $_z1459$ av $Eq$ av $Hterm$ och $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_831 , x_830)$ till element av $P$ av $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_831 , x_830)$, håller $P$ för $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_rect_Type1 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1458 : div_mod_spec x1 x2 x3 x4) -> Type1), forall _H1 : ((x_831 : x4 < x2) -> (x_830 : x1 = x3 * x2 + x4) -> (_z1459 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_831 x_830) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)), P Hterm .", "predict": "Axiom div_mod_spec_inv_rect_Type1 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : forall z1458 : div_mod_spec x1 x2 x3 x4 -> Type1, forall _H1 : Lt x4 x2 /\\ Eq x1 (x3 * x2 + x4) /\\ Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10336. Let $n , m \\in N$. Let $Hind$ be a function from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$. Let $a$ be a natural number. Assume that $m = 2 a$ or $m = 2 a + 1$. Assume that $m = 2 a + 1$. Assume that $1 < 2 a + 1$. Assume that $0 < a$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10336 : n : Nat -> m : Nat -> Hind : (p : Nat -> __ : Lt p m -> __1 : Lt (nd 1) p -> Leq (Psi p) (times (pred p) (pow (nd 2) (minus (times (nd 2) p) (nd 3))))) -> a : Nat -> _clearme : or (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1))) -> Hm : Eq m (plus (times (nd 2) a) (nd 1)) -> Hlt : Lt (nd 1) (plus (times (nd 2) a) (nd 1)) -> Ha : Lt 0 a -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10336 : n : Elem Nat -> m : Elem Nat -> Proof (Hind : (p : Elem Nat) -> Proof (and (Eq (Lt (a : Elem (Lt p m)) (Lt (b : Elem (Lt p (nd 1))) p)) (Eq (Leq (Psi p) (times (nd 2) (minus p (nd 3)))))) -> Proof (or (and (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1)))) (and (Eq m (plus (times (nd 2) a) (nd 1))) (Lt (nd 1) (plus (times (nd 2) a) (nd 1)))) (Lt (nd 0) a)) -> Proof (forall Nat (x2515 : Elem Nat) -> forall Nat (x2516 : Elem Nat) -> Eq x2515 x2516 (plus (times x2515 (div x2515 x2516)) (mod x2515 x2516)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : Permut f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n /\\ f a = i -> a <= n /\\ f a = i) -> forall b : nat, (b <= n /\\ f b = j -> b <= n /\\ f b = j) -> forall i0 : nat, forall Leq : Leq i0 n -> forall x : Leq f i0 n, exists y : Leq f x n, a = b -> f a = i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1062. Soient $a$ et $b$ et $q$ et $r$ et $q1$ et $r1$ des nombres naturels. Soit $_clearme$ un élément de $div_mod_spec$ de $a$ et de $b$ et de $q$ et de $r$. Supposons que $r < b$. Supposons que $a = q b + r$. Alors pour tous les éléments $_clearme0$ de $div_mod_spec$ de $a$ et de $b$ et de $q1$ et de $r1$, si $r1 < b$, alors si $a = q1 b + r1$, alors si $q$ n'est pas inférieur ou ágal à $q1$, alors $a = r1 + b q1$.\nassistant\n", "label": "axiom let_clause_1062 (a b q r q1 r1 : Nat) (_clearme : div_mod_spec a b q r) (ltrb : r < b) (spec : a = q * b + r) (_clearme0 : div_mod_spec a b q1 r1) (ltr1b : r1 < b) (spec1 : a = q1 * b + r1) (leqq1 : ¬ (q ≤ q1)) : a = r1 + b * q1", "predict": "axiom let_clause_1062 (a b q r q1 r1 : Nat) (x : div_mod_spec a b q r) (x1 : r < b) (x2 : a = q * b + r) : ∀ x0 : div_mod_spec a b q1 r1, (x11 : r1 < b) → (x21 : a = q1 * b + r1) → (x3 : q ≤ q1) → a = r1 + b * q1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLt_O_bc. Soient $n$ et $m$ des nombres naturels. Alors si $m$ est inférieur ou ágal à $n$, alors $0$ est inférieur à $bc$ appliqué à $n$ et $m$.\nassistant\n", "label": "Axiom lt_O_bc : forall n : nat, forall m : nat, forall x__ : Leq m n, 0 < bc n m .", "predict": "Axiom lt_O_bc : forall n : nat, forall m : nat, (m <= n -> 0 < (bc n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nTimes_div_le. Låt $a$ och $b$ och $c$ och $d$ vara naturliga tal. Då om $0 < b$ och $0 < d$, så $a \\div b (c \\div d)\\leq a c \\div (b d)$.\nassistant\n", "label": "Axiom times_div_le : forall a : nat, forall b : nat, forall c : nat, forall d : nat, forall x__ : (0 < b), forall __1 : (0 < d), Leq (a / b * (c / d)) (a * c / (b * d)) .", "predict": "Axiom times_div_le : forall a : nat, forall b : nat, forall c : nat, forall d : nat, (0 < b /\\ 0 < d -> a / b * c / d <= a * c / (b * d)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nNat_ind_body. Soit $Q_$ une fonction des nombres naturels $_x_365$ à des propositions. Soit $_H_O$ un élément de $Q_$ de $0$. Soit $_H_S$ une fonction des nombres naturels $x_366$ et des éléments $_x_368$ de $Q_$ de $x_366$ à des éléments de $Q_$ de la somme de $x_366$ et de $1$. Soit $x_365 \\in N$. Alors $Q_$ tient pour $x_365$.\nassistant\n", "label": "Axiom nat_ind_body : forall Q_ : ((_x_365 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_366 : nat) -> (_x_368 : Q_ x_366) -> Q_ (x_366 + 1)), forall x_365 : nat, Q_ x_365 .", "predict": "Axiom nat_ind_body : forall Q : nat -> Prop, (Q 0 -> forall x : nat, (Q x -> Q (x + 1))) -> forall x : nat, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDiv_mod_spec_inv_rect_CProp1. Soit $x1 , x2 , x3 , x4 \\in N$. Alors pour tous les éléments $Hterm$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$, pour toutes les fonctions $P$ des éléments $_z1488$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des propositions, pour toutes les fonctions $_H1$ des éléments $x_855$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_854$ de $Eq$ de $x1$ et de la somme du produit de $x3$ et de $x2$ et de $x4$ et des éléments $_z1489$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro$ appliqué à $x1$ et $x2$ et $x3$ et $x4$ et $x_855$ et $x_854$ à des éléments de $P$ de $div_mod_spec_intro$ appliqué à $x1$ et $x2$ et $x3$ et $x4$ et $x_855$ et $x_854$, $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_rect_CProp1 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1488 : div_mod_spec x1 x2 x3 x4) -> Prop), forall _H1 : ((x_855 : x4 < x2) -> (x_854 : x1 = x3 * x2 + x4) -> (_z1489 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_855 x_854) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)), P Hterm .", "predict": "Axiom div_mod_spec_inv_rect_CProp1 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : forall _z1488 : div_mod_spec x1 x2 x3 x4, Prop, forall _H1 : forall x_855 : Lt x4 x2, forall x_854 : Eq x1 x854, Prop, (forall x_855 : Lt x4 x2, forall x_854 : Eq x1 x854, P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_16171. Låt $p , m , n \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c$ vara ett naturligt tal. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Då om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (and (Lt (nd 0) p) (Eq (nd 1) (Gcd p m))) -> Proof (Div p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> ex : Elem (Nat -> Prop) -> Proof (forall Nat (b => and (Eq (Gcd p m) (minus (times a p) (times b m))) (Eq (Gcd p m) (minus (times b m) (times a p))))) -> b : Elem Nat -> Proof (or (and (Eq (Gcd p m) (minus (times a p) (times b m))) (Eq (Gcd p m) (minus (times b m) (times a p)))) (and (Eq (Gcd p m) (minus (times a p) (times b m))) (Eq (Gcd p m) (minus (times b m) (times a p))))) -> Proof (if (Eq (minus (times b m) (times a p)) (nd 1)) (Eq (minus (times m b) (times p a)) (Gcd p m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPsidef. For all natural numbers $n$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $p$ is equal to $Psi' (n)$.\nassistant\n", "label": "axiom Psidef (n : Nat) : Psi' n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => bigop (log p n) (λ i => true) Nat 1 times (λ i => p))", "predict": "axiom psidef (n : Nat) : bigop (n + 1) (λ p, primeb p) Nat 1 times (λ p, bigop (log p n) (λ i, true) Nat 1 times (λ i, p)) = Psi' n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_CProp0_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "Axiom range_rect_CProp0_body : forall _A : Set, forall Q_ : ((_x_939 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_939 : range _A, Q_ x_939 .", "predict": "Axiom range_rect_CProp0_body : forall A : Set, forall Q : range A -> Prop, forall H : (enum nat -> A) -> nat -> Prop, forall x : range A, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nEq_fact_B. Låt $n \\in N$. Då om $1 < n$, så $(2 n)! = n ! ^ 2 B (2 n)$.\nassistant\n", "label": "axiom eq_fact_B (n : Nat) (x__ : 1 < n) : factorial (2 * n) = pow (factorial n) 2 * B (2 * n)", "predict": "axiom eq_fact_B (n : Nat) : 1 < n → (2 * n) ! = pow (n !) 2 * B (2 * n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nPrimeb_true_to_prime. För alla naturliga tal $n$, om $primeb (n)= true$, så är $n$ primt.\nassistant\n", "label": "axiom primeb_true_to_prime (n : Nat) (x__ : primeb n = true) : prime n", "predict": "axiom primeb_true_to_prime (n : Nat) : primeb n = true → prime n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nRange_ind_body. Soit $_A$ un ensemble. Soit $Q_$ une fonction des éléments $_x_915$ de $range$ de $_A$ à des propositions. Soit $_H_mk_range$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range (_A , _enum , _upto , _filter)$. Alors pour tous les éléments $x_915$ de $range$ de $_A$, $Q_$ tient pour $x_915$.\nassistant\n", "label": "axiom range_ind_body (_A : Set) (Q_ : (_x_915 : range _A) -> Prop) (_H_mk_range : (_enum : (x__ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) (x_915 : range _A) : Q_ x_915", "predict": "axiom range_ind_body (A : Type) (Q : ∀ x : range A, Prop) : ∀ h : ∀ n : Nat, (∀ x : A, x ∈ enum n → n ≤ upto n → Q (filter n)) → ∀ x : range A, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nSameF_upto_le. Låt $A$ vara en mängd. Låt $f$ och $g$ vara funktioner från naturliga tal till element av $A$. Då för alla naturliga tal $n$ och $m$, om $n$ är mindre än eller lika med $m$, så för alla element $__1$ av $sameF_upto$ av $m$ och $A$ och $f$ och $g$, håller $sameF_upto$ för $n$ och $A$ och $f$ och $g$.\nassistant\n", "label": "Axiom sameF_upto_le : forall A : Set, forall f : ((x__ : nat) -> A), forall g : ((x__ : nat) -> A), forall n : nat, forall m : nat, forall x__ : Leq n m, forall __1 : sameF_upto m A f g, sameF_upto n A f g .", "predict": "Axiom sameF_upto_le : forall A : Type, forall f g : nat -> A, forall n m : nat, (n <= m -> forall x : sameF_upto m A f g, sameF_upto n A f g x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1575. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$, så för alla naturliga tal $x1029$, $x1029 = x1029 (n c - m d)$.\nassistant\n", "label": "Axiom let_clause_1575 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (c * n - d * m = 1), forall x1029 : nat, x1029 = x1029 * (n * c - m * d) .", "predict": "Axiom let_clause_1575 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ 1 = gcd n m -> forall c : nat, forall _clearme : ex (Nat -> bool), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 /\\ Eq (c * n - d * m) 1 -> forall x1029 : nat, x1029 = x1029 (n * c - m * d)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSame_bigop. Let $k \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Then for all functions $f$ and $g$ from natural numbers to elements of $B$, for all elements $__$ of $sameF_upto$ of $k$ and $bool$ and $p1$ and $p2$, for all elements $__1$ of $sameF_p$ of $k$ and $p1$ and $B$ and $f$ and $g$, $bigop$ applied to $k$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$.\nassistant\n", "label": "Axiom same_bigop : forall k : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), forall x__ : sameF_upto k bool p1 p2, forall __1 : sameF_p k p1 B f g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i) .", "predict": "Axiom same_bigop : forall k : nat, forall p1 : nat -> bool, forall p2 : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, (forall f : nat -> B, forall g : nat -> B, forall sameF_upto : k -> bool -> p1 -> p2, forall sameF_p : k -> p1 -> B -> f -> g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem Nat -> Nat -> Proof (let n : Nat => let permf : Permut f n => let i : Elem Nat => let j : Elem Nat => Proof (and (Leq i n) (Leq j n)) => let a : Nat => Proof (and (Leq a n) (Eq (f a) i)) => Proof (Leq a n) => Proof (Eq (f a) i)) => let b : Nat => Proof (and (Leq b n) (Eq (f b) j)) => Proof (Leq b n) => Proof (Eq (f b) j)) => Proof (forall (injf : Elem (f n)) (Proof (and (Eq a b) (Eq (f a) j))) => Eq (f a) j)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $bijf$ vara ett element av $bijn$ av $f$ och summan av $n$ och $1$. Anta att $f$ applicerat på summan av $n$ och $1$ är lika med summan av $n$ och $1$. Låt $i$ vara ett naturligt tal. Anta att $i$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med summan av $n$ och $1$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med summan av $n$ och $1$. Anta att $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är lika med summan av $n$ och $1$. Då är $i$ lika med $a$.\nassistant\n", "label": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a", "predict": "postulate let_clause_1075 : (f : Nat -> Nat) -> n : Nat -> bijf : f n + 1 -> Eq (f (plus n 1)) (plus n 1) -> i : Nat -> Leq i n -> a : Nat -> (Leq a (plus n 1) /\\ Eq (f a) i) -> Leq a (plus n 1) -> Eq (f a) i -> Eq a (plus n 1) -> Eq i a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLog_times. Soient $p$ et $n$ et $m$ des nombres naturels. Supposons que $1 < p$. Alors $\\log_ p {n m}\\leq (\\log_ p {n})+ (\\log_ p {m})+ 1$.\nassistant\n", "label": "axiom log_times (p n m : Nat) (x__ : 1 < p) : log p (n * m) ≤ log p n + log p m + 1", "predict": "axiom log_times (p n m : Nat) (x : 1 < p) : log p (n * m) ≤ log p n + log p m + 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> i : Nat -> j : Nat -> (i' : Leq i n) -> (j' : Leq j n) -> a : Nat -> (and (Leq a n) (Eq (f a) i)) -> (and (Leq a n) (Eq (f a) i)) -> all Nat (\\ b -> if (and (Leq b n) (Eq (f b) j)) (if (Leq b n) (if (Eq (f b) j) (all (x -> Leq x n) (\\ injf -> if (Eq a b) (Eq (f a) j))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLt_min_to_false. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m , b \\in N$. Anta att $b$ är mindre än eller lika med $m$. Då om $m$ är mindre än $min$ applicerat på $n$ och $b$ och $f$, så är $f$ applicerat på $m$ lika med kontradiktion.\nassistant\n", "label": "lt_min_to_false : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> b : Nat -> __ : Leq b m -> __1 : Lt m (min n b f) -> Eq (f m) false .", "predict": "Lt_min_to_false : (f : Elem (Nat -> Bool)) -> Proof (forall Nat (n => forall Nat (m => forall Nat (b => if (Leq b m) (if (Lt m (min n b)) (Eq (f m) (Contr)))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nNat_rect_Type2. Soit $Q_$ une fonction des nombres naturels $_x_381$ à des éléments de $Type2$. Soit $_H_O$ un élément de $Q_$ de $0$. Soit $_H_S$ une fonction des nombres naturels $x_382$ et des éléments $_x_384$ de $Q_$ de $x_382$ à des éléments de $Q_$ de $x_382 + 1$. Soit $x_381 \\in N$. Alors $Q_$ tient pour $x_381$.\nassistant\n", "label": "axiom nat_rect_Type2 (Q_ : (_x_381 : Nat) -> Type2) (_H_O : Q_ 0) (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (x_382 + 1)) (x_381 : Nat) : Q_ x_381", "predict": "axiom nat_rect_Type2 (Q : Nat → Type2) (H_O : Q 0) (H_S : ∀ x : Nat, ∀ y : Q x, Q (x + 1)) (x_381 : Nat) : Q x_381"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1047. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n$ is less than or equal to $k$. Let $j \\in N$. Assume that $n$ is less than or equal to $j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity. Let $x2571 , x2572 \\in N$. Then $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.\nassistant\n", "label": "let_clause_1047 : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> lenk : Leq n k -> j : Nat -> leup : Leq n j -> Hind : (__ : (i : Nat -> __ : Leq n i -> __1 : Lt i j -> Eq (p i) false) -> Eq (bigop n (i : Nat => p i) B nil op (i : Nat => f i)) (bigop j (i : Nat => p i) B nil op (i : Nat => f i))) -> Hfalse : (i : Nat -> __ : Leq n i -> __1 : Lt i (plus j (nd 1)) -> Eq (p i) false) -> x2571 : Nat -> x2572 : Nat -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572)) .", "predict": "let_clause_1047 : k : Elem Nat -> n : Elem Nat -> p : Elem (Nat -> Bool) -> B : Set -> nil : Elem B -> op : Elem (B -> B -> B) -> f : Elem (Nat -> B) -> Proof (Leq n k) -> j : Elem Nat -> Proof (Leq n j) -> Hind : Elem (forall i : Nat -> forall Leq : Elem (n, i) -> forall Lt : Elem (i, j) -> Eq (p i) (absurdity)) -> Hfalse : Elem (forall i : Nat -> Leq n i -> Lt i j -> Eq (p i) (absurdity)) -> x2571 : Elem Nat -> x2572 : Elem Nat -> Proof (Eq (plus (times x2572 (quot x2571 x2572)) (mod x2571 x2572)) x2571) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDiv_mod_spec_inv_rect_CProp3. Soient $x1$ et $x2$ et $x3$ et $x4$ des nombres naturels. Soit $Hterm$ un élément de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$. Soit $P$ une fonction des éléments $_z1476$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des propositions. Soit $_H1$ une fonction des éléments $x_847$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_846$ de $Eq$ de $x1$ et de $x3 x2 + x4$ et des éléments $_z1477$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$ à des éléments de $P$ de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "Axiom div_mod_spec_inv_rect_CProp3 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : ((_z1476 : div_mod_spec x1 x2 x3 x4) -> Prop), forall _H1 : ((x_847 : x4 < x2) -> (x_846 : x1 = x3 * x2 + x4) -> (_z1477 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_847 x_846) -> P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846)), P Hterm .", "predict": "Axiom div_mod_spec_inv_rect_CProp3 : forall x1 : nat, forall x2 : nat, forall x3 : nat, forall x4 : nat, forall Hterm : div_mod_spec x1 x2 x3 x4, forall P : forall z1476 : div_mod_spec x1 x2 x3 x4 -> Prop, forall H1 : forall x847 : Lt x4 x2 -> Eq x1 x3 * x2 + x4 -> forall z1477 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x847 (Eq z1477 (div_mod_spec_intro x1 x2 x3 x4 x847))), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMatch_divides. Soit $_n , _m \\in N$. Soit $return_sort$ un élément de $Sort$. Alors pour toutes les fonctions $return_type$ des éléments $z$ de $divisible$ de $_n$ et de $_m$ à des éléments de $return_sort$, pour toutes les fonctions $case_quotient$ des nombres naturels $q$ et des éléments de $Eq$ de $_m$ et de $_n \\times q$ à des éléments de $return_type$ de $quotient (_n , _m , q , __)$, si $_n$ est divisible par $_m$, alors $return_type$ tient pour $z$.\nassistant\n", "label": "postulate match_divides : (_n : Nat) -> (_m : Nat) -> (return_sort : Sort) -> (return_type : (z : divisible _n _m) -> return_sort) -> (case_quotient : (q : Nat) -> (_ : Eq _m (times _n q)) -> return_type (quotient _n _m q __)) -> (z : divisible _n _m) -> return_type z", "predict": "postulate match_divides : (n : Nat) -> (m : Nat) -> return_sort : Sort -> all (divisible n m) (all Nat (q -> Eq m (times n q)) (return_type -> if (divides n m) (Eq (return_type z)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDivides_exp_to_divides. Låt $p$ och $n$ och $m$ vara naturliga tal. Då om $p$ är både primt och delbart med $n ^ m$, så är $p$ delbart med $n$.\nassistant\n", "label": "Axiom divides_exp_to_divides : forall p : nat, forall n : nat, forall m : nat, forall x__ : prime p, forall __1 : divisible p (pow n m), divisible p n .", "predict": "Axiom divides_exp_to_divides : forall p : nat, forall n : nat, forall m : nat, (prime p /\\ divides (pow n m) p -> divides p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_found_max_spec. Let $n$ be a natural number. Then for all functions $f$ from natural numbers to booleans, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $max_spec$ holds for $n$ and $f$ and $0$.\nassistant\n", "label": "Axiom not_found_max_spec : forall n : nat, forall f : ((x__ : nat) -> bool), forall x__ : ((i : nat) -> (x__ : i < n) -> f i = false), max_spec n f 0 .", "predict": "Axiom not_found_max_spec : forall n : nat, forall f : nat -> Prop, forall __ : nat -> Lt -> Eq (f _), max_spec n f 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15692. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "axiom let_clause_15692 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15692 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (t : ex Nat (λ d, or (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1))) : ∀ d : Nat, (c * n - d * m = 1 ∨ d * m - c * n = 1) → (d * m - c * n = 1 → m * d - n * c = 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_div. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1$ is less than $p$. Then if $0$ is less than $m$, then if $m$ is less than or equal to $n$, then the logarithm of $p$ and the quotient of $n$ and $m$ is less than or equal to the difference of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "axiom log_div (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) (__2 : m ≤ n) : log p (n / m) ≤ log p n - log p m", "predict": "axiom log_div (p n m : Nat) (x : 1 < p) : 0 < m → m ≤ n → log p (n / m) ≤ log p n - log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_exp_to_le. Soient $b$ et $n$ et $m$ des nombres naturels. Alors si $1 < b$ et $b ^ n \\leq b ^ m$, alors $n \\leq m$.\nassistant\n", "label": "Axiom le_exp_to_le : forall b : nat, forall n : nat, forall m : nat, forall x__ : (1 < b), forall __1 : Leq (pow b n) (pow b m), Leq n m .", "predict": "Axiom le_exp_to_le : forall b : nat, forall n : nat, forall m : nat, (1 < b /\\ b ^ n <= b ^ m -> n <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLt_to_not_zero. Låt $n$ och $m$ vara naturliga tal. Då om $n$ är mindre än $m$, så håller $not_zero$ för $m$.\nassistant\n", "label": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not_zero m", "predict": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> Lt n m -> not_zero m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15441. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$ och $n \\leq m$. Anta att $n \\leq q + 1$ och $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Då för alla naturliga tal $b$, om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ och $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Leq n m) -> Proof (Leq n q)) -> Proof (ex Nat) -> Proof (f (a : Elem Nat) -> ex Nat) -> Proof (f (b : Elem Nat) -> Disj (Eq (minus (times a (mod m n)) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a (mod m n))) (gcd_aux q m n))) -> Proof (m : Elem Nat) -> Proof (n : Elem Nat) -> Proof (and (Lt (nd 0) n) (Leq n m)) -> Proof (and (Leq n (plus q (nd 1))) (not (divides n m))) -> Proof (a : Elem Nat) -> Proof (x : ex Nat) -> Proof (f (b : Elem Nat) -> Disj (Eq (minus (times b (nd n)) (times a (mod m n))) (gcd_aux q n (mod m n))) (Eq (minus (times a (mod m n)) (times b (nd n))) (gcd_aux q n (mod m n)))) -> Proof (and (forall Nat (b => or (Eq (minus (times (nd n) b) (times a (mod m n))) (gcd_aux q m n)) (Eq (minus (times a (mod m n)) (times (nd n) b)) (gcd_aux q m n)))) (Eq (minus (times (nd n) b) (times a (mod m n))) (gcd_aux q m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_minus_gcd. Let $m$ and $n$ be natural numbers. Then $ex$ holds for $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and the greatest common divisor of $n$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and the greatest common divisor of $n$ and $m$.\nassistant\n", "label": "postulate eq_minus_gcd : (m : Nat) -> (n : Nat) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd n m)) (Eq (minus (times b m) (times a n)) (gcd n m))))", "predict": "postulate eq_minus_gcd : (m : Nat) -> (n : Nat) -> Eq (map ex Nat) (foldr (\\ a -> foldr (\\ b -> or (Eq (minus (times a n) (times b m)) (gcd n m)) (Eq (minus (times b m) (times a n)) (gcd n m)))) 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nNat_inv_rect_Type2. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z671$ à des éléments de $Type2$. Alors pour toutes les fonctions $_H1$ des éléments $_z672$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$, pour toutes les fonctions $_H2$ des nombres naturels $x_382$ et des fonctions $_x_384$ des éléments $_z672$ de $Eq$ de $Hterm$ et de $x_382$ à des éléments de $P$ de $x_382$ et des éléments $_z672$ de $Eq$ de $Hterm$ et de la somme de $x_382$ et de $1$ à des éléments de $P$ de la somme de $x_382$ et de $1$, $P$ tient pour $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_Type2 : (Hterm : Nat) -> (P : (_z671 : Nat) -> Type2) -> (_H1 : (_z672 : Eq Hterm 0) -> P 0) -> (_H2 : (x_382 : Nat) -> (_x_384 : (_z672 : Eq Hterm x_382) -> P x_382) -> (_z672 : Eq Hterm (plus x_382 1)) -> P (plus x_382 1)) -> P Hterm", "predict": "postulate nat_inv_rect_Type2 : (Hterm : Nat) -> (P : Nat -> Type2) -> all (Eq Hterm 0 -> P 0) -> all Nat (\\ x -> all (Eq Hterm x) -> all (Eq Hterm (plus x 1)) -> P (plus x 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMin_spec_ind_body. Låt $_n , _b \\in N$. Då för alla funktioner $_f$ från naturliga tal till sanningsvärden, för alla funktioner $Q_$ från naturliga tal $x_1075$ och element $_x_1076$ av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$ till påståenden, för alla funktioner $_H_found_min_spec$ från naturliga tal $m$ och element $x_1080$ av $Leq$ av $_b$ och $m$ och element $x_1079$ av $Lt$ av $m$ och summan av $_n$ och $_b$ och element $x_1078$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $x_1077$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $m$ och $found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $m$ och $x_1080$ och $x_1079$ och $x_1078$ och $x_1077$, för alla funktioner $_H_not_found_min_spec$ från funktioner $x_1081$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $_n$ och $_b$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av summan av $_n$ och $_b$ och $not_found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $x_1081$, för alla naturliga tal $x_1075$, för alla element $x_1076$ av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$, håller $Q_$ för $x_1075$ och $x_1076$.\nassistant\n", "label": "min_spec_ind_body : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 .", "predict": "min_spec_ind_body : n : Elem Nat -> b : Elem Nat -> Proof (forall Fun (f : Elem Nat -> Prop) -> forall Fun (Q : (x : Elem Nat) -> Proof (f x)) -> forall x : Elem (min_spec n b) -> Proof (f x) -> forall Fun (H_found_min_spec : (m : Elem Nat) -> Proof (Leq b m) -> Proof (Lt m (plus n b)) -> Proof (Eq (f m) true) -> forall Fun (x : (i : Elem Nat) -> Proof (Leq b i) -> Proof (Lt i m)) -> Proof (Eq (f i) (contradiction (Q (plus n b)) (H_found_min_spec n b f m x))))) -> forall Fun (H_not_found_min_spec : (x : Elem Nat) -> Proof (Leq b x) -> Proof (Lt x (plus n b)) -> Proof (Eq (f x) (contradiction (Q (plus n b)) (not_found_min_spec n b f x)))) -> forall x : Elem Nat -> Proof (forall x : Elem (min_spec n b) -> Proof (Q x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produk", "label": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))", "predict": "ten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Anta att $_clearme$ inte är lika med $Eq$ applicerat på $a$ och $b$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nGcd_times_SO_to_gcd_SO. Låt $m$ och $n$ och $p$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $m$ och produkten av $n$ och $p$ är lika med $1$. Då är det största gemensama delaret av $m$ och $n$ lika med $1$.\nassistant\n", "label": "Axiom gcd_times_SO_to_gcd_SO : forall m : nat, forall n : nat, forall p : nat, forall x__ : (0 < n), forall __1 : (0 < p), forall __2 : (gcd m (n * p) = 1), gcd m n = 1 .", "predict": "Axiom gcd_times_SO_to_gcd_SO : forall m : nat, forall n : nat, forall p : nat, (0 < n /\\ 0 < p /\\ gcd m (n * p) = 1 -> gcd m n = 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10335. Let $n$ be a natural number. Assume that $0 < n$. Let $x2515 , x2516 \\in N$. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_10335 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10335 : forall n : nat, (0 < n -> forall x2515, x2516 : nat, (x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1575. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $c n - d m = 1$. Then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.\nassistant\n", "label": "axiom let_clause_1575 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) (x1029 : Nat) : x1029 = x1029 * (n * c - m * d)", "predict": "axiom let_clause_1575 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : gcd n m = 1) (c : Nat) (x1 : ex : Nat → Nat) (x2 : ∀ d : Nat, x1 d = Eq (1 + Eq (1 - (c * n - d * m))) (1 + Eq (1 - (d * m - c * n)))) : c * n - d * m = 1 ∨ d * m - c * n = 1 ∧ c * n - d * m = 1 → ∀ x1029 : Nat, x1029 = x1029 (n * c - m * d)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLeb_elim. För alla naturliga tal $n$ och $m$, för alla funktioner $P$ från sanningsvärden till påståenden, för alla funktioner $__$ från element av $Leq$ av $n$ och $m$ till element av $P$ av $true$, för alla funktioner $__1$ från element $__1$ av $not$ av $Leq$ applicerat på $n$ och $m$ till element av $P$ av kontradiktion, håller $P$ för $leb$ applicerat på $n$ och $m$.\nassistant\n", "label": "leb_elim : n : Nat -> m : Nat -> P : (__ : bool -> Prop) -> __ : (__ : Leq n m -> P true) -> __1 : (__1 : not (Leq n m) -> P false) -> P (leb n m) .", "predict": "leb_elim : (n : Elem Nat) -> (m : Elem Nat) -> Proof (forall (P : Proof (Prop (Proof Val))) -> forall (f : Proof (forall (x : Elem (Leq n m)) -> Proof (P true))) -> forall (g : Proof (forall (x : Proof (not (Leq n m))) -> Proof (P (contra))))) -> Proof (forall (x : Proof (Leb n m)) -> Proof (P x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nMod_S_fact. Låt $n$ och $i$ vara naturliga tal. Anta att $1 < i$. Då om $i \\leq n$, så $mod (n ! + 1 , i)= 1$.\nassistant\n", "label": "Axiom mod_S_fact : forall n : nat, forall i : nat, forall x__ : (1 < i), forall __1 : Leq i n, mod (factorial n + 1) i = 1 .", "predict": "Axiom mod_S_fact : forall n : nat, forall i : nat, (1 < i -> (i <= n -> mod (n + 1) i = 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nTimes_mod. Soient $a$ et $b$ et $c$ des nombres naturels. Alors si $0 < c$ et $0 < b$, alors $mod (a c , b c)= c mod (a , b)$.\nassistant\n", "label": "postulate times_mod : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Lt 0 c) -> (__1 : Lt 0 b) -> Eq (mod (times a c) (times b c)) (times c (mod a b))", "predict": "postulate times_mod : (a : Nat) -> (b : Nat) -> (c : Nat) -> and (Lt 0 c) (Lt 0 b) -> Eq (mod (times a c) (times b c)) (times (mod a b) c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDivides_mod. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < n$ et $p$ est divisible par $m$. Alors si $p$ est divisible par $n$, alors $p$ est divisible par $mod (m , n)$.\nassistant\n", "label": "axiom divides_mod (p m n : Nat) (x__ : 0 < n) (__1 : divisible p m) (__2 : divisible p n) : divisible p (mod m n)", "predict": "axiom divides_mod (p m n : Nat) (x : 0 < n ∧ p % m = 0) : p % n = 0 → p % mod m n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16171. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p /\\ Eq (gcd p m) 1 /\\ (p `div` m) == n) -> (c : Nat) -> Eq (times m n) (times p c) -> (a : Nat) -> ex (Nat) -> (b : Nat) -> Eq (if (or (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) (gcd p m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nGcd_1_to_lt_O. För alla naturliga tal $i$ och $n$, om $1$ är mindre än $n$, så om det största gemensama delaret av $i$ och $n$ är lika med $1$, så är $0$ mindre än $i$.\nassistant\n", "label": "postulate gcd_1_to_lt_O : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (gcd i n) 1) -> Lt 0 i", "predict": "postulate gcd_1_to_lt_O : (i : Nat) -> (n : Nat) -> Lt 1 n -> Eq (gcd i n) 1 -> Lt 0 i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_n_8_to_le_Psi_exp. Soit $n \\in N$. Alors si $n \\leq 8$, alors $Psi (n)\\leq 2 ^ (2 n - 3)$.\nassistant\n", "label": "postulate le_n_8_to_le_Psi_exp : (n : Nat) -> (_ : Leq n 8) -> Leq (Psi n) (pow 2 (minus (times 2 n) 3))", "predict": "postulate le_n_8_to_le_Psi_exp : (n : Nat) -> if (Leq n 8) (Leq (Psi n) (pow 2 (minus (times 2 n) 3)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_CProp3. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_879$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_879$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_879$.\nassistant\n", "label": "axiom Aop_rect_CProp3 (A : Set) (_nil : A) (Q_ : (_x_879 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_879 : Aop A _nil) : Q_ x_879", "predict": "axiom aop_rect_CProp3 (A : Set) (nil : A) : ∀ Q_ : Aop A → nil → Prop, ∀ H_mk_Aop : ∀ op : A → _, ∀ a : A, Eq (op nil) (mk_Aop A op a) ∧ Eq (op nil) (nilr a) ∧ Eq (op a) (assoc a b c) (op (op a b) c), ∀ x_879 : Aop A, Q_ x_879"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nInjective_plus_l. Soit $n \\in N$. Alors $injective$ tient pour $Nat$ et $Nat$ et la fonction qui envoie $m$ à $m + n$.\nassistant\n", "label": "injective_plus_l : n : Nat -> injective Nat Nat (m : Nat => plus m n) .", "predict": "injective_plus_l : (n : Elem Nat) -> Proof (injective Nat Nat (lambda m => plus m n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$, alors si $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.\nassistant\n", "label": "Axiom let_clause_1063 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = j .", "predict": "Axiom let_clause_1063 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n /\\ f a = i -> a <= n -> (f a = i -> forall b : nat, (b <= n /\\ f b = j -> b <= n -> (f b = j -> forall i0 : nat, forall injf : permut f i0 n, forall x : Leq i0 n -> Leq (f x) (f i0) /\\ n -> (f b = j -> a = b -> f a = j))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLstar_inv_O. Låt $B$ vara en mängd. Låt $R$ vara ett element av $relation$ av $B$. Låt $l$ vara ett naturligt tal. Låt $b1$ och $b2$ vara element av $B$. Låt $__$ vara ett element av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b2$. Anta att $0 = l$. Då $b1 = b2$.\nassistant\n", "label": "postulate lstar_inv_O : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> (__1 : Eq 0 l) -> Eq b1 b2", "predict": "postulate lstar_inv_O : (B : Set) -> (R : Rel B) -> Nat -> (b1 : B) -> (b2 : B) -> LStar B R l b1 b2 -> Eq b1 b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nPrime_to_divides_M. Soient $m$ et $p$ des nombres naturels. Alors si $p$ est premier, alors si $m + 1 < p$, alors si $p \\leq 2 m + 1$, alors $p$ est divisible par $M (m)$.\nassistant\n", "label": "prime_to_divides_M : m : Nat -> p : Nat -> __ : prime p -> __1 : Lt (plus m (nd 1)) p -> __2 : Leq p (plus (times (nd 2) m) (nd 1)) -> divisible p (M m) .", "predict": "prime_to_divides_M : m : Elem Nat -> p : Elem Nat -> Proof (if (and (if (if (Lt (plus m (nd 1)) p) (Leq p (plus (times (nd 2) m) (nd 1)))) (divisible p (M m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDivides_to_ord. Låt $p , n , m \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $p$ är primt och $n$ är delbart med $m$. Då är $ord_rem (n , p)$ delbart med $ord_rem (m , p)$ och $ord (n , p)\\leq ord (m , p)$.\nassistant\n", "label": "Axiom divides_to_ord : forall p : nat, forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : (0 < m), forall __2 : prime p, forall __3 : divisible n m, divisible (ord_rem n p) (ord_rem m p) /\\ Leq (ord n p) (ord m p) .", "predict": "Axiom divides_to_ord : forall p : nat, forall n : nat, forall m : nat, (0 < n /\\ 0 < m /\\ prime p /\\ n mod m = 0 -> ord_rem n p mod ord_rem m p = 0 /\\ ord n p <= ord m p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1617. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Då om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$, så om $a p - b m = 1$, så är $p a - m b$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))", "predict": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : Eq 1 (gcd p m)) -> (z : p % m * n) -> (c : Nat) -> (Eq (times m n) (times p c)) -> (a : Nat) -> Eq (times m n) (times a p) -> Eq (times m n) (times b m) -> Eq (times m n) (times a p) -> Eq (times m n) (times b m) -> ex Nat -> (Eq (gcd p m) (minus (times a p) (times b m))) -> (Eq (gcd p m) (minus (times b m) (times a p))) -> Eq (times p a) (times m b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nAop_inv_rect_Type0. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $x1$. Då för alla element $Hterm$ av $Aop$ av $x1$ och $x2$, för alla funktioner $P$ från element $_z1530$ av $Aop$ av $x1$ och $x2$ till mängder, för alla funktioner $_H1$ från funktioner $op$ från element av $x1$ och element $__1$ av $x1$ till element av $x1$ och funktioner $_nill$ från element $a$ av $x1$ till element av $Eq$ av $op$ applicerat på $x2$ och $a$ och $a$ och funktioner $_nilr$ från element $a$ av $x1$ till element av $Eq$ av $op$ applicerat på $a$ och $x2$ och $a$ och funktioner $_assoc$ från element $a$ av $x1$ och element $b$ av $x1$ och element $c$ av $x1$ till element av $Eq$ av $op$ applicerat på $a$ och $op$ applicerat på $b$ och $c$ och $op$ applicerat på $op$ applicerat på $a$ och $b$ och $c$ och element $_z1531$ av $Eq$ av $Hterm$ och $mk_Aop$ applicerat på $x1$ och $x2$ och $op$ och $_nill$ och $_nilr$ och $_assoc$ till element av $P$ av $mk_Aop$ applicerat på $x1$ och $x2$ och $op$ och $_nill$ och $_nilr$ och $_assoc$, håller $P$ för $Hterm$.\nassistant\n", "label": "axiom Aop_inv_rect_Type0 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1530 : Aop x1 x2) -> Set) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1531 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm", "predict": "axiom aop_inv_rect_Type0 (x1 : Type) (x2 : x1) : ∀ Hterm : Aop x1 x2, ∀ P : op x1 x2 → Type, ∀ H1 : op x1 (x1 → x1) → x1 → Eq (op x2) → x1, ∀ nill : a : x1 → Eq (op x2) a, ∀ nilr : a : x1 → Eq (op a) x2 a, ∀ assoc : a : x1 → b : x1 → c : x1 → Eq (op a) (op b) c (op (op a) b) c → Eq (Hterm) (mk_Aop x1 x2 op nill nilr assoc) → P (mk_Aop x1 x2 op nill nilr assoc)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLstar_lstar_r. Låt $B$ vara en mängd. Låt $R$ vara ett element av $relation$ av $B$. Då för alla naturliga tal $l$, för alla element $b1$ och $b2$ av $B$, för alla element $__$ av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b2$, håller $lstar_r$ för $B$ och $R$ och $l$ och $b1$ och $b2$.\nassistant\n", "label": "Axiom lstar_lstar_r : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b2 : B, forall x__ : lstar B R l b1 b2, lstar_r B R l b1 b2 .", "predict": "Axiom lstar_lstar_r : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b2 : B, forall x : lstar B, (x R l b1 b2) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nTrue_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $b$, om $f (b)= true$, så för alla naturliga tal $n$, $min (n , b , f)= b$.\nassistant\n", "label": "Axiom true_min : forall f : ((x__ : nat) -> bool), forall b : nat, forall x__ : (f b = true), forall n : nat, min n b f = b .", "predict": "Axiom true_min : forall f : nat -> bool, (forall b : nat, (f b = true -> forall n : nat, min n b f = b)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nMinus_le_minus_minus_comm. Pour tous les nombres naturels $b$ et $c$ et $a$, si $c$ est inférieur ou ágal à $b$, alors la différence de $a$ et de la différence de $b$ et de $c$ est égale à la différence de la somme de $a$ et de $c$ et de $b$.\nassistant\n", "label": "minus_le_minus_minus_comm : b : Nat -> c : Nat -> a : Nat -> __ : Leq c b -> Eq (minus a (minus b c)) (minus (plus a c) b) .", "predict": "minus_le_minus_minus_comm : (b : Elem Nat) -> (c : Elem Nat) -> Proof (Leq c b) -> Proof (Eq (minus a (minus b c)) (minus (plus a c) b)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att potensen av $2$ och $8$ är mindre än eller lika med $n$. Låt $m \\in N$. Anta att $3$ är mindre än eller lika med $m$. Anta att summan av logaritmen av $2$ och $m$ och $2$ är mindre än eller lika med $m$. Låt $x2515 , x2516 \\in N$. Då är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> len : Leq (pow (nd 2) (nd 8)) n -> m : Nat -> lt2m : Leq (nd 3) m -> Hind : Leq (plus (log (nd 2) m) (nd 2)) m -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (if (Leq (pow (nd 2) (nd 8)) n) (and (m : Elem Nat -> Proof (if (Leq (nd 3) m) (if (Leq (plus (log (nd 2) m) (nd 2)) m) (x2515, x2516 : Elem Nat -> Proof (Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nPlus_minus_associative. Soit $x , y , z \\in N$. Supposons que $z \\leq y$. Alors $x + (y - z)= x + y - z$.\nassistant\n", "label": "plus_minus_associative : x : Nat -> y : Nat -> z : Nat -> __ : Leq z y -> Eq (plus x (minus y z)) (minus (plus x y) z) .", "predict": "plus_minus_associative : (x : Elem Nat) -> (y : Elem Nat) -> (z : Elem Nat) -> Proof (Leq z y) -> Proof (Eq (plus x (minus y z)) (minus (plus x y) z)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_exp. Let $n , m , i \\in N$. Assume that $0 < m$. Assume that $mod (n , m)$ is not equal to $0$. Then for all natural numbers $p$, if $i \\leq p$, then $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.\nassistant\n", "label": "Axiom p_ord_exp : forall n : nat, forall m : nat, forall i : nat, forall x__ : (0 < m), forall __1 : (~ (mod n m = 0)), forall p : nat, forall __2 : Leq i p, p_ord_aux p (pow m i * n) m = mk_Prod nat nat i n .", "predict": "Axiom p_ord_exp : forall n : nat, forall m : nat, (0 < m -> ~ (mod n m = 0) -> forall i : nat, (i <= p -> p_ord_aux p (pow m i * n) m = mk_Prod Nat Nat i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLog_exp2. Låt $p , n , m \\in N$. Då om $1$ är mindre än $p$, så om $0$ är mindre än $n$, så är produkten av $m$ och logaritmen av $p$ och $n$ mindre än eller lika med logaritmen av $p$ och potensen av $n$ och $m$.\nassistant\n", "label": "Axiom log_exp2 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), Leq (m * log p n) (log p (pow n m)) .", "predict": "Axiom log_exp2 : forall p : nat, forall n : nat, forall m : nat, (1 < p -> 0 < n -> m * (log p + log n) <= log p + pow n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nEq_length_to_mem. För alla naturliga tal $n$, för alla listor $l$ av naturliga tal, om $length$ applicerat på $Nat$ och $l$ är lika med summan av $n$ och $1$, så för alla element $__1$ av $unique$ av $Nat$ och $l$, för alla funktioner $__2$ från naturliga tal $x$ och element $__2$ av $mem$ av $Nat$ och $x$ och $l$ till element av $Leq$ av $x$ och $n$, håller $mem$ för $Nat$ och $n$ och $l$.\nassistant\n", "label": "axiom eq_length_to_mem (n : Nat) (l : list Nat) (x__ : length Nat l = n + 1) (__1 : unique Nat l) (__2 : (x : Nat) -> (__2 : mem Nat x l) -> x ≤ n) : mem Nat n l", "predict": "axiom eq_length_to_mem (n : Nat) (l : List Nat) (x : length Nat l = n + 1) : ∀ x : unique Nat l, ∀ f : Nat → x → Nat → Leq x n, mem Nat n l"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1575. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$. Soit $x1029$ un nombre naturel. Alors $x1029$ est égal au produit de $x1029$ et de la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.\nassistant\n", "label": "axiom let_clause_1575 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) (x1029 : Nat) : x1029 = x1029 * (n * c - m * d)", "predict": "axiom soient m n a b : Nat\naxiom supposons 0 < n\naxiom supposons 0 < m\naxiom supposons gcd n m = 1\naxiom c : Nat\naxiom clearme : ex : Nat × (d : Nat → Eq (1 - c * n + d * m) 1 ∨ Eq (1 - d * m + c * n) 1)\naxiom d : Nat\naxiom supposons (Eq (1 - c * n + d * m) 1 ∨ Eq (1 - d * m + c * n) 1)\naxiom supposons (Eq (1 - c * n + d * m) 1)\naxiom x1029 : Nat\naxiom alors x1029 = x1029 * (1 - n * c + m * d)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nMin_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $t$ et $m$ des nombres naturels. Supposons que $m < t$ et $f (m)= true$. Soit $k , b \\in N$. Supposons que $b \\leq m$. Soit $__3$ une fonction des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f (i)$ et de contradiction. Alors si $t = k + b$, alors $min (k , b , f)= m$.\nassistant\n", "label": "Axiom min_exists : forall f : ((x__ : nat) -> bool), forall t : nat, forall m : nat, forall x__ : (m < t), forall __1 : (f m = true), forall k : nat, forall b : nat, forall __2 : Leq b m, forall __3 : ((i : nat) -> (__3 : Leq b i) -> (__4 : i < m) -> f i = false), forall __4 : (t = k + b), min k b f = m .", "predict": "Axiom min_exists : forall f : nat -> bool, forall t : nat, forall m : nat, (m < t /\\ f m = true -> forall k : nat, forall b : nat, (b <= m -> forall x : Leq b i, forall y : Lt i m, Eq (f i) contradiction -> if (t = k + b) (min k b f = m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10331. Let $n \\in N$. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Then if $6$ is less than or equal to $a$, then if the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (Lt (nd 5) n) -> m : Elem Nat -> Proof (Leq (nd 6) m) -> Proof (Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m)) -> a : Elem Nat -> Proof (Leq (nd 6) a) -> Proof (Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a)) -> Proof (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nCongruent_ab_lt. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Då om $0 < m$, så om $1$ är lika med det största gemensama delaret av $n$ och $m$, så håller $ex$ för $Nat$ och funktionen som avbildar $x$ som konjunktionen av konjunktionen av $congruent$ applicerat på $x$ och $a$ och $m$ och $congruent$ applicerat på $x$ och $b$ och $n$ och $Lt$ applicerat på $x$ och produkten av $m$ och $n$.\nassistant\n", "label": "Axiom congruent_ab_lt : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall x__ : (0 < n), forall __1 : (0 < m), forall __2 : (gcd n m = 1), ex nat (fun x => congruent x a m /\\ congruent x b n /\\ x < m * n) .", "predict": "Axiom congruent_ab_lt : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n -> (0 < m -> GCD n m = 1 -> ex (Nat -> and (and (congruent x a m) (congruent x b n)) (Lt x (times m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_15611. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Alors si la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale à $1$, alors la différence du produit de $m$ et de $b$ et du produit de $p$ et de $a$ est égale à $1$.\nassistant\n", "label": "axiom let_clause_15611 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : m * b - p * a = 1", "predict": "axiom solemne (p m n : Nat) (x : 0 < p) (y : gcd p m = 1) (z : p % (m * n) = 0) (c : Nat) (a : Nat) (clearme0 : ex Nat (b => Eq (gcd p m) (if (Eq (m * n) (p * c)) b))) (b : Nat) : Eq (if (or (Eq (gcd p m) (diff (m * b) (p * a))) (Eq (gcd p m) (diff (p * a) (m * b)))) (Eq (gcd p m) (diff (m * b) (p * a)))) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDiv_mod_spec_rect_Type3_body. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_821$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till element av $Type3$. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_823$ av $Lt$ av $_r$ och $_m$ och element $x_822$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_823$ och $x_822$. Då för alla element $x_821$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_821$.\nassistant\n", "label": "axiom div_mod_spec_rect_Type3_body (_n _m _q _r : Nat) (Q_ : (_x_821 : div_mod_spec _n _m _q _r) -> Type3) (_H_div_mod_spec_intro : (x_823 : _r < _m) -> (x_822 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) (x_821 : div_mod_spec _n _m _q _r) : Q_ x_821", "predict": "axiom div_mod_spec_rect_Type3_body (n m q r : Nat) (Q : div_mod_spec n m q r → Type3) (H_div_mod_spec_intro : Lt r m ∧ Eq n (q * m + r)) : ∀ x : div_mod_spec n m q r, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1549. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$ och $0 = m$. Låt $x1106 \\in N$. Då $x1106 = x1106 - m$.\nassistant\n", "label": "let_clause_1549 : m : Nat -> n : Nat -> posn : Lt 0 n -> eqm0 : Eq 0 m -> x1106 : Nat -> Eq x1106 (minus x1106 m) .", "predict": "let_clause_1549 : m : Elem Nat -> n : Elem Nat -> Proof (and (Lt (nd 0) n) (Eq (nd 0) m)) -> x1106 : Elem Nat -> Proof (Eq x1106 (minus x1106 m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_spec_ind_body. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$. Let $x_1075$ be a natural number. Let $x_1076$ be an element of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$. Then $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "axiom min_spec_ind_body (_n _b : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) (_H_found_min_spec : (m : Nat) -> (x_1080 : _b ≤ m) -> (x_1079 : m < _n + _b) -> (x_1078 : _f m = true) -> (x_1077 : (i : Nat) -> (x__ : _b ≤ i) -> (__1 : i < m) -> _f i = false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (x__ : _b ≤ i) -> (__1 : i < _n + _b) -> _f i = false) -> Q_ (_n + _b) (not_found_min_spec _n _b _f x_1081)) (x_1075 : Nat) (x_1076 : min_spec _n _b _f x_1075) : Q_ x_1075 x_1076", "predict": "axiom min_spec_ind_body (n b : Nat) (f : Nat → Bool) (Q : ∀ x : min_spec n b f, ∀ x : Nat, Prop) (H_found_min_spec : ∀ m : Nat, ∀ x : Leq b m ∧ Lt m (n + b) ∧ Eq (f m) true ∧ ∀ i : Nat, (Leq b i ∧ Lt i m → Eq (f i) absurdity) → Q m (found_min_spec n b f m x)) (H_not_found_min_spec : ∀ x : Nat → ∀ i : Leq b i ∧ Lt i (n + b) → Eq (f i) absurdity → Q (n + b) (not_found_min_spec n b f x)) (x_1075 : Nat) (x_1076 : min_spec n b f x_1075) : Q x_1075 x_1076"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_prim_n. Soit $n \\in N$. Alors $prim$ appliqué à $n$ est inférieur ou ágal à $n$.\nassistant\n", "label": "axiom le_prim_n (n : Nat) : prim n ≤ n", "predict": "axiom prim_n (n : Nat) : prim n ≤ n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1607. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.\nassistant\n", "label": "Axiom let_clause_1607 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_1607 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ gcd n m = 1 -> forall c : nat, forall _clearme : ex (Nat -> bool), forall d : nat, (1 = (Eq (n * c - m * d) 1 \\/ Eq (m * d - n * c) 1) -> (Eq (m * d - n * c) 1 -> gcd m n = (m * d - n * c))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLe_B2_exp. Pour tous les nombres naturels $n$, si $2 ^ 7 \\leq n$, alors $B2 (2 n)\\leq 2 n ^ pred ((\\sqrt{ 2 n})\\div 2)$.\nassistant\n", "label": "postulate le_B2_exp : (n : Nat) -> (_ : Leq (pow 2 7) n) -> Leq (B2 (times 2 n)) (pow (times 2 n) (pred (div (sqrt (times 2 n)) 2)))", "predict": "postulate le_B2_exp : (n : Nat) -> if (Leq (pow 2 7) n) (Leq (B2 (times 2 n)) (times 2 (pow n (pred (div (sqrt (times 2 n)) 2))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_previous_prime5. Let $n$ and $m$ be natural numbers. Then if $nth_prime (n)< m$, then $Nat$.\nassistant\n", "label": "axiom let_previous_prime5 (n m : Nat) (ltml : nth_prime n < m) : Nat", "predict": "axiom let_previous_prime (n m : Nat) : nth_prime n < m → Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLog_exp. Låt $p$ och $n$ och $m$ vara naturliga tal. Då om $1 < p$, så om $0 < m$, så $\\log_ p {(p ^ n m)}= n + \\log_ p {m}$.\nassistant\n", "label": "Axiom log_exp : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < m), log p (pow p n * m) = n + log p m .", "predict": "Axiom log_exp : forall p : nat, (1 < p -> forall n : nat, forall m : nat, (0 < m -> log p (pow p n * m) = n + log p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLt_max_n. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ vara ett naturligt tal. Då om $0 < n$, så $max (n , f)< n$.\nassistant\n", "label": "lt_max_n : f : (__ : Nat -> bool) -> n : Nat -> __ : Lt 0 n -> Lt (max n f) n .", "predict": "Lt_max_n : f : Elem Nat -> Proof (forall n : Elem Nat (if (Lt (nd 0) n) (Lt (max n (f n)) n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nAop_inv_rect_Type4. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $x1$. Låt $Hterm$ vara ett element av $Aop$ av $x1$ och $x2$. Låt $P$ vara en funktion från element $_z1506$ av $Aop$ av $x1$ och $x2$ till element av $Type4$. Låt $_H1$ vara en funktion från funktioner $op$ från element av $x1$ och element $__1$ av $x1$ till element av $x1$ och funktioner $_nill$ från element $a$ av $x1$ till element av $Eq$ av $op (x2 , a)$ och $a$ och funktioner $_nilr$ från element $a$ av $x1$ till element av $Eq$ av $op (a , x2)$ och $a$ och funktioner $_assoc$ från element $a$ av $x1$ och element $b$ av $x1$ och element $c$ av $x1$ till element av $Eq$ av $op (a , op (b , c))$ och $op (op (a , b), c)$ och element $_z1507$ av $Eq$ av $Hterm$ och $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$ till element av $P$ av $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$. Då håller $P$ för $Hterm$.\nassistant\n", "label": "Aop_inv_rect_Type4 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1506 : Aop x1 x2 -> Type4) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1507 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_Type4 : x1 : Elem -> x2 : Elem x1 -> Hterm : Elem (Aop x1 x2) -> P : (op : Elem (Aop x1 x2) -> Elem Type4) -> _H1 : Elem (fun (op : Elem x1) (x : Elem x1) -> Elem x1) (fun (a : Elem x1) -> Elem (Eq (Aop x2 a) a)) (fun (a : Elem x1) -> Elem (Eq (Aop a x2) a)) (fun (a : Elem x1) (b : Elem x1) (c : Elem x1) -> Elem (Eq (Aop a (Aop b c)) (Aop (Aop a b) c))) (z1506 : Elem (Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc))) -> Proof (P (mk_Aop x1 x2 op _nill _nilr _assoc)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Då för alla naturliga tal $a$, om $a \\leq n$ och $f (a)= i$, så om $a \\leq n$, så om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> Proof (and (Leq i n) (Leq j n)) -> Proof (forall Nat (a => and (Leq a n) (and (Eq (f a) i) (Leq a n))) (and (forall Nat (b => and (Leq b n) (and (Eq (f b) j) (Leq b n))) (forall (__) => and (forall (Leq i n) (forall (Leq (f i) n)) (forall (injf : Elem (injn f n)) (Eq a b) (Eq (f a) i)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIso. For all sets $A$, $relation$ holds for $range$ applied to $A$.\nassistant\n", "label": "postulate iso : (A : Set) -> relation (range A)", "predict": "postulate iso : all Set (\\ A -> relation (range A))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nF3_ind. Let $A1$ and $A2$ and $A3$ be sets. Let $f$ be a function from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers. Let $P$ be an element of $relation3$ of $A1$ and $A2$ and $A3$. Let $__$ be a function from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$. Let $a1$ be an element of $A1$. Then for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "f3_ind : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> P a1 a2 a3 .", "predict": "f3_ind : (A1 : Elem Set) -> (A2 : Elem Set) -> (A3 : Elem Set) -> (f : Elem A1 -> Elem A2 -> Elem A3 -> Nat) -> (P : Relation3 A1 A2 A3) -> (n : Elem Nat) -> (a1 : Elem A1) -> (a2 : Elem A2) -> (a3 : Elem A3) -> (Lt : Elem (f a1 a2 a3) n) -> (Eq : Elem (f a1 a2 a3) n) -> Proof (forall (a2 : Elem A2) -> forall (a3 : Elem A3) -> Proof (P a1 a2 a3)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDop_inv_ind. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $Dop$ de $x1$ et de $x2$. Alors pour toutes les fonctions $P$ des éléments $_z1698$ de $Dop$ de $x1$ et de $x2$ à des propositions, pour toutes les fonctions $_H1$ des éléments $sum$ de $ACop$ de $x1$ et de $x2$ et des fonctions $prod$ des éléments de $x1$ et des éléments $__1$ de $x1$ à des éléments de $x1$ et des fonctions $_null$ des éléments $a$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $x2$ et de $x2$ et des fonctions $_distr$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ et des éléments $c$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ et des éléments $_z1699$ de $Eq$ de $Hterm$ et de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$ à des éléments de $P$ de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$, $P$ tient pour $Hterm$.\nassistant\n", "label": "axiom Dop_inv_ind (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1698 : Dop x1 x2) -> Prop) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1699 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm", "predict": "axiom dop_inv_ind (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : ∀ z1698 : Dop x1 x2 → Prop) (H1 : ∀ sum : ACop x1 x2, ∀ prod : x1 → ∀ __1 : x1, x1) (null : ∀ a : x1, Eq (prod a x2) x2) (distr : ∀ a : x1, ∀ b : x1, ∀ c : x1, Eq (prod (aop__o__op x1 x2 sum) b c) (aop__o__op x1 x2 sum (prod a b) (prod a c))) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_to_div_mod_spec. Soit $n , m \\in N$. Supposons que $0 < n$ et $n$ est divisible par $m$. Alors $div_mod_spec$ tient pour $m$ et $n$ et $m \\div n$ et $0$.\nassistant\n", "label": "divides_to_div_mod_spec : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : divisible n m -> div_mod_spec m n (div m n) 0 .", "predict": "divides_to_div_mod_spec : (n : Elem Nat) -> (m : Elem Nat) -> Proof (and (Lt (nd 0) n) (divisible n m)) -> Proof (and (div_mod_spec m n (div m n)) (Eq (nd 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_15441. Soient $p$ et $q$ des nombres naturels. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0 < n$ et $n \\leq m$. Alors si $n \\leq q + 1$ et $n$ n'est pas divisible par $m$, alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, pour tous les nombres naturels $b$, si $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ et $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, alors $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "Axiom let_clause_15441 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (b * n - a * mod m n = gcd_aux q n (mod m n)), n * b - a * mod m n = gcd_aux q n (mod m n) .", "predict": "Axiom let_clause_15441 : forall p : nat, forall q : nat, (forall m : nat, forall n : nat, (0 < n /\\ n <= m -> (n <= q + 1 /\\ ~ (n mod m = 0) -> forall a : nat, forall _clearme : ex Nat, (forall b : nat, (Eq (a * n - (b * m)) (gcd_aux q m n)) \\/ (Eq (b * n - a * (mod m n)) (gcd_aux q m n)) /\\ (Eq (b * n - a * (mod m n)) (gcd_aux q m n)) -> Eq (n * b - a * (mod m n)) (gcd_aux q m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_sigma. Let $n \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $g1$ and $g2$ be functions from natural numbers to natural numbers. Let $__$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$. Let $__1$ be a function from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$. Then $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$ is less than or equal to $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$.\nassistant\n", "label": "postulate le_sigma : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))", "predict": "postulate le_sigma : (n : Nat) -> (p1 : Nat -> Bool) -> (p2 : Nat -> Bool) -> (g1 : Nat -> Nat) -> (g2 : Nat -> Nat) -> Eq (bigop n (fun i -> p2 i) Nat 0 plus (fun i -> g2 i)) (bigop n (fun i -> p1 i) Nat 0 plus (fun i -> g1 i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_inv_rect_CProp1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z707$ to propositions. Let $_H1$ be a function from elements $_z708$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Then for all functions $_H2$ from natural numbers $x_410$ and functions $_x_412$ from elements $_z708$ of $Eq$ of $Hterm$ and $x_410$ to elements of $P$ of $x_410$ and elements $_z708$ of $Eq$ of $Hterm$ and the sum of $x_410$ and $1$ to elements of $P$ of the sum of $x_410$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom nat_inv_rect_CProp1 : forall Hterm : nat, forall P : ((_z707 : nat) -> Prop), forall _H1 : ((_z708 : Hterm = 0) -> P 0), forall _H2 : ((x_410 : nat) -> (_x_412 : (_z708 : Hterm = x_410) -> P x_410) -> (_z708 : Hterm = x_410 + 1) -> P (x_410 + 1)), P Hterm .", "predict": "Axiom nat_inv_rect_CProp1 : forall Hterm : nat, forall P : nat -> Prop, forall H1 : forall x : Eq Hterm 0, P 0, forall H2 : nat -> forall x : Eq Hterm x, P x -> forall x : nat, forall y : Eq Hterm (x + 1), P (x + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b \\in N$. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $b$ är lika med $j$. Då för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (z : a ≤ n ∧ f a = i) (w : a ≤ n) (v : f a = i) (b : Nat) (u : b ≤ n ∧ f b = j) (t : b ≤ n) (s : f b = j) : a = b → f a = j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLt_mod_m_m. Låt $n , m \\in N$. Då om $0$ är mindre än $m$, så är $mod$ applicerat på $n$ och $m$ mindre än $m$.\nassistant\n", "label": "axiom lt_mod_m_m (n m : Nat) (x__ : 0 < m) : mod n m < m", "predict": "axiom lt_mod_m_m (n m : Nat) (x : 0 < m) : mod n m < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDop_rect_CProp3. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_961$ de $Dop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$. Alors pour tous les éléments $x_961$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_961$.\nassistant\n", "label": "Dop_rect_CProp3 : A : Set -> _nil : A -> Q_ : (_x_961 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_961 : Dop A _nil -> Q_ x_961 .", "predict": "dop_rect_CProp3 : (A : Elem) -> (x : Elem A) -> (Q : (x : Elem Dop A) -> Prop) -> (H : (x : Elem ACop A) -> (y : Elem A) -> (Q : (a : Elem A) -> Eq (prod a y) x) -> Eq (aop__o__op A x Dop (sum y) (prod a (nd 1))) x) -> (D : (x : Elem A) -> (y : Elem A) -> (z : Elem A) -> Eq (aop__o__op A x Dop (sum y) (prod x (aop__o__op A y (nd 1) Dop (sum z) (nd 1))) (aop__o__op A x Dop (sum (prod x y)) (prod x (aop__o__op A y (nd 1) Dop (sum z) (nd 1))))) -> Q (dop_rect_CProp3 A x Q H D) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nEq_transpose. Låt $i , j , k , n \\in N$. Anta att $j$ inte är lika med $i$. Anta att $i$ inte är lika med $k$. Anta att $j$ inte är lika med $k$. Då $transpose (i , j , n)= transpose (i , k , transpose (k , j , transpose (i , k , n)))$.\nassistant\n", "label": "postulate eq_transpose : (i : Nat) -> (j : Nat) -> (k : Nat) -> (n : Nat) -> (_ : not (Eq j i)) -> (__1 : not (Eq i k)) -> (__2 : not (Eq j k)) -> Eq (transpose i j n) (transpose i k (transpose k j (transpose i k n)))", "predict": "postulate eq_transpose : (i : Nat) -> (j : Nat) -> (k : Nat) -> (n : Nat) -> Neq j i -> Neq i k -> Neq j k -> Eq (transpose (i , j , n)) (transpose (i , k , transpose (k , j , transpose (i , k , n))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nDivides_exp_to_eq. Låt $p$ och $q$ och $m$ vara naturliga tal. Anta att både $p$ och $q$ är prima. Då om $p$ är delbart med $q ^ m$, så $p = q$.\nassistant\n", "label": "axiom divides_exp_to_eq (p q m : Nat) (x__ : prime p) (__1 : prime q) (__2 : divisible p (pow q m)) : p = q", "predict": "axiom divides_exp_to_eq (p q m : Nat) (x : prime p ∧ prime q) : p % pow q m → p = q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1033. Let $n \\in N$. Assume that $0$ is less than $n$. Then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> Proof (Lt Nat 0 n) -> Proof (forall Nat (x2515 => forall Nat (x2516 => Eq Nat (x2515) (plus Nat (times Nat (x2516) (quot Nat (x2515) (x2516))) (mod Nat (x2515) (x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1075. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $bijf$ be an element of $bijn$ of $f$ and $n + 1$. Assume that $f (n + 1)= n + 1$. Let $i$ be a natural number. Assume that $i \\leq n$. Let $a \\in N$. Assume that $a \\leq n + 1$ and $f (a)= i$. Assume that $a \\leq n + 1$. Assume that $f (a)= i$. Then if $a = n + 1$, then $i = a$.\nassistant\n", "label": "Axiom let_clause_1075 : forall f : ((x__ : nat) -> nat), forall n : nat, forall bijf : bijn f (n + 1), forall fS : (f (n + 1) = n + 1), forall i : nat, forall lein : Leq i n, forall a : nat, forall _clearme : (Leq a (n + 1) /\\ f a = i), forall lean : Leq a (n + 1), forall fa : (f a = i), forall Hc : (a = n + 1), i = a .", "predict": "Axiom let_clause_1075 : forall f : nat -> nat, forall n : nat, (bijf : f n = n + 1) -> forall i : nat, (Leq i n -> a : nat, (Leq a (n + 1) /\\ f a = i) /\\ Leq a (n + 1)) -> (a = n + 1 -> i = a) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1573. Let $n , m \\in N$. Assume that $0 < n$. Assume that $m$ is divisible by $n$. Let $d$ be a natural number. Assume that $0 = m$. Then if $n = m d$, then $n = m$.\nassistant\n", "label": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq n m", "predict": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> (x : 0 < n) -> (y : divisible m n) -> all Nat (\\ d -> Eq 0 m -> Eq n (times n d))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15622. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$ och $d m - c n = 1$, så $m d - n c = 1$.\nassistant\n", "label": "let_clause_15622 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15622 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (ex Nat (lambda d => and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> Proof (and (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times m d) (times n c)) (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nDiv_mod_spec_intro. För alla naturliga tal $n$ och $m$ och $q$ och $r$, om $r < m$, så om $n = q m + r$, så håller $div_mod_spec$ för $n$ och $m$ och $q$ och $r$.\nassistant\n", "label": "postulate div_mod_spec_intro : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt r m) -> (__1 : Eq n (plus (times q m) r)) -> div_mod_spec n m q r", "predict": "postulate div_mod_spec_intro : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> r < m -> Eq n (plus (times q m) r) -> div_mod_spec n m q r"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nBigop_distr. Soit $n \\in N$. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $R$ un élément de $Dop$ de $B$ et de $nil$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Soit $a$ un élément de $B$. Alors $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $let_aop$ appliqué à $n$ et $p$ et $B$ et $nil$ et $R$ et $f$ et $a$ et la fonction qui envoie $i$ à $let_mop$ appliqué à $n$ et $p$ et $B$ et $nil$ et $R$ et $f$ et $a$ et $a$ et $f$ appliqué à $i$ est égal à $let_mop$ appliqué à $n$ et $p$ et $B$ et $nil$ et $R$ et $f$ et $a$ et $a$ et $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $let_aop$ appliqué à $n$ et $p$ et $B$ et $nil$ et $R$ et $f$ et $a$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "axiom bigop_distr (n : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (R : Dop B nil) (f : (x__ : Nat) -> B) (a : B) : let_mop n p B nil R f a a (bigop n (λ i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (λ i => f i)) = bigop n (λ i => p i) B nil (aop__o__op B nil (let_aop n p B nil R f a)) (λ i => let_mop n p B nil R f a a (f i))", "predict": "axiom bigop_distr (n : Nat) (p : Nat → Bool) (B : Set) (nil : B) (R : Dop B nil) (f : Nat → B) (a : B) : bigop n (λ i, p i) B nil (aop__o__op B nil) R f a = let_aop n p B nil R f a (λ i, let_mop n p B nil R f a (f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nQuotient. Soient $n$ et $m$ et $q$ des nombres naturels. Supposons que $m = n q$. Alors $n$ est divisible par $m$.\nassistant\n", "label": "Axiom quotient : forall n : nat, forall m : nat, forall q : nat, forall x__ : (m = n * q), divisible n m .", "predict": "Axiom quotient : forall n : nat, forall m : nat, forall q : nat, (m = n * q -> n % m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nExp_to_eq_O. Låt $n , m \\in N$. Anta att $1$ är mindre än $n$. Då om potensen av $n$ och $m$ är lika med $1$, så är $m$ lika med $0$.\nassistant\n", "label": "postulate exp_to_eq_O : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (pow n m) 1) -> Eq m 0", "predict": "postulate exp_to_eq_O : (n : Nat) -> (m : Nat) -> less 1 n -> Eq (pow n m) 1 -> Eq m 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nNat_inv_rect_CProp3. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z695$ à des propositions. Alors pour toutes les fonctions $_H1$ des éléments $_z696$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$, pour toutes les fonctions $_H2$ des nombres naturels $x_402$ et des fonctions $_x_404$ des éléments $_z696$ de $Eq$ de $Hterm$ et de $x_402$ à des éléments de $P$ de $x_402$ et des éléments $_z696$ de $Eq$ de $Hterm$ et de la somme de $x_402$ et de $1$ à des éléments de $P$ de la somme de $x_402$ et de $1$, $P$ tient pour $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : (_z695 : Nat) -> Prop) -> (_H1 : (_z696 : Eq Hterm 0) -> P 0) -> (_H2 : (x_402 : Nat) -> (_x_404 : (_z696 : Eq Hterm x_402) -> P x_402) -> (_z696 : Eq Hterm (plus x_402 1)) -> P (plus x_402 1)) -> P Hterm", "predict": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : Nat -> Prop) -> all (Eq Hterm 0 -> Nat -> all (Eq Hterm (plus x 1) -> P Hterm))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1607. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "axiom let_clause_1607 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_1607 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : 1 = gcd n m) (c : Nat) (xclearme : ex : Nat → Prop) (xclearme' : xclearme c := disj (Eq (n * c - m * d) 1) (Eq (m * d - n * c) 1)) : ∀ d : Nat, (Eq (n * c - d * m) 1 ∨ Eq (d * m - n * c) 1) → Eq (m * d - n * c) (gcd m n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_minl. För alla naturliga tal $i$ och $n$ och $m$, om $i \\leq min (n , m)$, så $i \\leq n$.\nassistant\n", "label": "Axiom le_minl : forall i : nat, forall n : nat, forall m : nat, forall x__ : Leq i (min n m), Leq i n .", "predict": "Axiom le_minl : forall i : nat, forall n : nat, forall m : nat, (i <= min n m -> i <= n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLt_O_smallest_factor. Soit $n$ un nombre naturel. Supposons que $0$ est inférieur à $n$. Alors $0$ est inférieur à $smallest_factor$ appliqué à $n$.\nassistant\n", "label": "lt_O_smallest_factor : n : Nat -> __ : Lt 0 n -> Lt 0 (smallest_factor n) .", "predict": "Lt_O_smallest_factor : (n : Elem Nat) -> Proof (Lt O n) -> Proof (Lt O (smallest_factor n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1033. Låt $p , n , q , r \\in N$. Anta att $0 < p$. Anta att $p$ inte är delbart med $r$. Anta att $n = p ^ q r$. Låt $q0$ och $q1$ vara naturliga tal. Anta att $q1 + 1 \\leq p ^ (q1 + 1)$. Då för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (x2515 : Nat) -> (x2516 : Nat) -> and (Lt 0 p) (not (divides p r)) (Eq n (pow p q * r)) -> and (Lt (plus q1 (pow p (plus q1 1))) (pow p (plus q1 (pow p (plus q1 1))))) -> all Nat (\\ x2515 -> all Nat (\\ x2516 -> Eq x2515 x2516 (plus (div x2515 x2516) (mod x2515 x2516))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Alors pour tous les nombres naturels $n$, pour tous les éléments $permf$ de $permut$ de $f$ et de $n$, pour tous les nombres naturels $i$ et $j$, si $i \\leq n$ et $j \\leq n$, alors pour tous les nombres naturels $a$, si $a \\leq n$ et $f (a)= i$ et $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$ et $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> all Nat (\\ n -> all (permut f n) (\\ permf -> all Nat (\\ i -> all Nat (\\ j -> if (and (Leq i n) (and (Leq j n))) (all Nat (\\ a -> if (and (Leq a n) (and (Eq (f a) i) (Leq a n))) (if (Eq (f a) i) (all Nat (\\ b -> if (and (Leq b n) (and (Eq (f b) j) (Leq b n))) (if (Eq (f b) j) (all (fun -> all (Leq ->) (Eq (f (inj f n)) j)))))))))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1034. Let $n$ and $m$ and $q$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515$ is equal to the sum of $mod$ applied to $x2515$ and $x2516$ and the product of $x2516$ and the quotient of $x2515$ and $x2516$.\nassistant\n", "label": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (div x2515 x2516)))", "predict": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (q : Nat) -> 0 < n -> 0 < m -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (quot x2515 x2516)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nACop_rect_CProp4. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_903$ de $ACop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_ACop$ des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $A$ et $_nil$ et $aop$ et $a$ et $b$ et de $op$ appliqué à $A$ et $_nil$ et $aop$ et $b$ et $a$ à des éléments de $Q_$ de $mk_ACop$ appliqué à $A$ et $_nil$ et $aop$ et $_comm$, pour tous les éléments $x_903$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_903$.\nassistant\n", "label": "axiom ACop_rect_CProp4 (A : Set) (_nil : A) (Q_ : (_x_903 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_903 : ACop A _nil) : Q_ x_903", "predict": "axiom cop_rect_CProp4 (A : Type) : ∀ nil : A, ∀ Q_ : x_903 : ACop A → nil → Prop, ∀ H_mk_ACop : aop : Aop A → nil → Eq (op A nil) (mk_ACop A nil aop) → ∀ a : A, ∀ b : A, Eq (op A nil) (op A nil) (cop_rect_CProp4 A Q_ x_903) → ∀ x_903 : ACop A → nil, Q_ x_903"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1572. Let $m , n \\in N$. Assume that $0$ is less than $n$. Assume that the greatest common divisor of $m$ and $n$ is equal to $0$. Then if $m$ is equal to $0$, then if $n$ is equal to $0$, then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0", "predict": "axiom let_clause_1572 (m n : Nat) (x : 0 < n) (y : gcd m n = 0) : m = 0 → (n = 0 → m = 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nSameF_p_le. Soit $A$ un ensemble. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soient $f$ et $g$ des fonctions des nombres naturels à des éléments de $A$. Alors pour tous les nombres naturels $n$ et $m$, si $n$ est inférieur ou ágal à $m$, alors pour tous les éléments $__1$ de $sameF_p$ de $m$ et de $p$ et de $A$ et de $f$ et de $g$, $sameF_p$ tient pour $n$ et $p$ et $A$ et $f$ et $g$.\nassistant\n", "label": "sameF_p_le : A : Set -> p : (__ : Nat -> bool) -> f : (__ : Nat -> A) -> g : (__ : Nat -> A) -> n : Nat -> m : Nat -> __ : Leq n m -> __1 : sameF_p m p A f g -> sameF_p n p A f g .", "predict": "sameF_p_le : (A : Elem Set) -> (p : Elem (Nat -> Bool)) -> (f : Elem (Nat -> A)) -> (g : Elem (Nat -> A)) -> Proof (forall Nat (n => forall Nat (m => if (Leq n m) (forall (x : Elem (sameF_p m p A f g)) (sameF_p n p A f g))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_to_exp1. Let $p , n , q , r \\in N$. Assume that $1$ is less than $p$. Assume that $0$ is less than $n$. Assume that $p_ord$ applied to $n$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$. Then $p$ is not divisible by $r$ and $n$ is equal to the product of the exponentiation of $p$ and $q$ and $r$.\nassistant\n", "label": "axiom p_ord_to_exp1 (p n q r : Nat) (x__ : 1 < p) (__1 : 0 < n) (__2 : p_ord n p = mk_Prod Nat Nat q r) : ¬ divisible p r ∧ n = pow p q * r", "predict": "axiom p_ord_to_exp1 (p n q r : Nat) (x : 1 < p ∧ 0 < n ∧ p_ord n p = mk_Prod Nat Nat q r) : p % r ≠ 0 ∧ n = pow p q * r"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInvert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n , m \\in N$. Assume that $m \\leq n$. Let $__1$ be an element of $injn$ of $f$ and $n$. Then $invert_permut (n , f , f (m))= m$.\nassistant\n", "label": "postulate invert_permut_f : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : injn f n) -> Eq (invert_permut n f (f m)) m", "predict": "postulate invert_permut_f : (f : Nat -> Nat) -> (n : Nat) -> (m : Nat) -> Leq m n -> InjN f n -> Eq (invert_permut (n , f , f m)) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nNot_not_bertrand_to_bertrand1. Soit $n$ un nombre naturel. Supposons qu'il n'est pas le cas que $not_bertrand$ tienne pour $n$. Soit $x$ un nombre naturel. Supposons que $n \\leq x$. Alors si $x \\leq 2 n$, alors pour toutes les fonctions $__3$ des nombres naturels $p$ et des éléments $__3$ de $Lt$ de $x$ et de $p$ et des éléments $__4$ de $Leq$ de $p$ et de $2 \\times n$ à des éléments de $not$ de $prime (p)$, $ex$ tient pour $Nat$ et la fonction qui envoie $p$ à la conjonction de la conjonction de $Lt$ appliqué à $n$ et $p$ et de $Leq$ appliqué à $p$ et $x$ et de $prime$ appliqué à $p$.\nassistant\n", "label": "axiom not_not_bertrand_to_bertrand1 (n : Nat) (x__ : ¬ not_bertrand n) (x : Nat) (__1 : n ≤ x) (__2 : x ≤ 2 * n) (__3 : (p : Nat) -> (__3 : x < p) -> (__4 : p ≤ 2 * n) -> ¬ prime p) : ex Nat (λ p => n < p ∧ p ≤ x ∧ prime p)", "predict": "axiom not_not_bertrand_to_bertrand1 (n : Nat) : ¬ not_bertrand n → ∀ x : Nat, (n ≤ x → (x ≤ 2 * n → ∀ p : Nat, ∀ Lt : Lt x p, ∀ Leq : Leq p (2 * n), not (prime p) → ex : Nat ∧ (∀ p : Nat, Lt n p ∧ Leq p x ∧ prime p)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10471. Let $n1 , n2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Let $f1$ and $f2$ be functions from natural numbers to elements of $B$. Let $_clearme$ be an element of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Let $h$ be a function from natural numbers to natural numbers. Let $_clearme0$ be an element of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. Let $k$ be a function from natural numbers to natural numbers. Assume that $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied", "label": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (", "predict": " to $k$ applied to $i$ and $sub_ki$ applied to $k$ and $i$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_ki$ applied to $i$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. Then let $k$ be a function from natural numbers to natural numbers. Assume that $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $k$ applied to $i$ and $sub_ki$ applied to $k$ and $i$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_ki$ applied to $i$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_1617. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c \\in N$. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$. Då om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $p$ och $a$ och produkten av $m$ och $b$.\nassistant\n", "label": "let_clause_1617 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (gcd p m) (minus (times p a) (times m b)) .", "predict": "let_clause_1617 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (GCD p m = 1) -> Proof (p % (m * n) = 0) -> c : Elem Nat -> Proof (m * n = (p * c)) -> a : Elem Nat -> _clearme0 : Elem (ex (Nat -> Function (b => disj (Eq (minus (times a p) (times b m)) (GCD p m)) (Eq (minus (times b m) (times a p)) (GCD p m)))) -> Proof (if (or (Eq (minus (times a p) (times b m)) (GCD p m)) (Eq (minus (times b m) (times a p)) (GCD p m))) (Eq (minus (times a p) (times b m)) (GCD p m))) -> Proof (if (Eq (minus (times a p) (times b m)) 1) (Eq (GCD p m) (minus (times p a) (times m b)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDivides_mod_to_divides. Soit $p , m , n \\in N$. Supposons que $0 < n$. Supposons que $p$ est divisible par $mod (m , n)$. Alors si $p$ est divisible par $n$, alors $p$ est divisible par $m$.\nassistant\n", "label": "Axiom divides_mod_to_divides : forall p : nat, forall m : nat, forall n : nat, forall x__ : (0 < n), forall __1 : divisible p (mod m n), forall __2 : divisible p n, divisible p m .", "predict": "Axiom divides_mod_to_divides : forall p : nat, forall m : nat, forall n : nat, (0 < n -> (p % m = 0 -> (p % n = 0 -> p % m = 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nUpto. Let $A$ be a set. Let $_xxx$ be an element of $range$ of $A$. Then $Nat$.\nassistant\n", "label": "upto : A : Set -> _xxx : range A -> Nat .", "predict": "upTo : (A : Elem Set) -> (x : Elem (Range A)) -> Proof (Nat x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1047. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n$ is less than or equal to $k$. Let $j$ be a natural number. Assume that $n$ is less than or equal to $j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity. Then for all natural numbers $x2571$ and $x2572$, $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.\nassistant\n", "label": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 .", "predict": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : nat -> Prop, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (n <= k -> forall j : nat, (n <= j -> forall Hind : (forall i : nat, Leq n i) -> (forall i : nat, Lt i j) -> Eq (p i) absurdity -> Eq (bigop n (fun i => p i B nil op (fun i => f i)) (j (fun i => p i B nil op (fun i => f i)))) (x2571 = sum (x2572 * (quot x2571 x2572)) (mod x2571 x2572))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nDivides_to_lt_O. Låt $n$ och $m$ vara naturliga tal. Anta att $0 < m$. Då om $n$ är delbart med $m$, så $0 < n$.\nassistant\n", "label": "divides_to_lt_O : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Lt 0 n .", "predict": "divides_to_lt_O : (n : Elem Nat) -> (m : Elem Nat) -> Proof (Lt (nd 0) m) -> Proof (if (divides n m) (Lt (nd 0) n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_lt_O. Let $n , m \\in N$. Then if $0 < m$ and $n$ is divisible by $m$, then $0 < n$.\nassistant\n", "label": "axiom divides_to_lt_O (n m : Nat) (x__ : 0 < m) (__1 : divisible n m) : 0 < n", "predict": "axiom divides_to_lt_O (n m : Nat) : 0 < m ∧ n % m = 0 → 0 < n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nGcd_1_to_lt_n. Soit $i , n \\in N$. Alors si $1 < n$ et $i \\leq n$, alors si $1$ est égal au diviseur commun plus grand de $i$ et de $n$, alors $i < n$.\nassistant\n", "label": "postulate gcd_1_to_lt_n : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Leq i n) -> (__2 : Eq (gcd i n) 1) -> Lt i n", "predict": "postulate gcd_1_to_lt_n : (i : Nat) -> (n : Nat) -> and (Lt 1 n) (Leq i n) -> Eq 1 (gcd i n) -> Lt i n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1562. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att $c n - d m = 1$ eller $d m - c n = 1$. Anta att $c n - d m = 1$. Då $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_1562 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_1562 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (t : ex Nat → Nat → Prop) : ∀ d : Nat, (c * n - d * m = 1 ∨ d * m - c * n = 1) → c * n - d * m = 1 → n * c - m * d = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nEq_mod_to_divides. Soient $n$ et $m$ et $q$ des nombres naturels. Supposons que $0 < q$. Supposons que $mod (n , q)= mod (m , q)$. Alors $q$ est divisible par $n - m$.\nassistant\n", "label": "axiom eq_mod_to_divides (n m q : Nat) (x__ : 0 < q) (__1 : mod n q = mod m q) : divisible q (n - m)", "predict": "axiom eq_mod_to_divides (n m q : Nat) (x : 0 < q) (y : mod n q = mod m q) : q divides (n - m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMatch_Aop. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des éléments $z$ de $Aop$ de $A$ et de $_nil$ à des éléments de $return_sort$. Soit $case_mk_Aop$ une fonction des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $return_type$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Soit $z$ un élément de $Aop$ de $A$ et de $_nil$. Alors $return_type$ tient pour $z$.\nassistant\n", "label": "postulate match_Aop : (A : Set) -> (_nil : A) -> (return_sort : Sort) -> (return_type : (z : Aop A _nil) -> return_sort) -> (case_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> return_type (mk_Aop A _nil op _nill _nilr _assoc)) -> (z : Aop A _nil) -> return_type z", "predict": "postulate match_Aop : (A : Set) -> _nil : A -> return_sort : Sort -> return_type : (z : Aop A) -> _nil -> return_sort -> case_mk_Aop : (op : A) -> __1 : A -> A -> _nill : (a : A) -> Eq (op _nil a) a -> a -> _nilr : (a : A) -> Eq (op a _nil) a -> a -> _assoc : (a : A) -> b : A -> c : A -> Eq (op (op a b) c) (op a (op b c)) -> return_type (mk_Aop A _nil op _nill _nilr _assoc)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_Conf3. Let $A$ and $B$ be sets. Let $succ$ be an element of $relation2$ of $A$ and $B$. Let $R$ be an element of $relation$ of $A$. Let $__$ be an element of $Conf3$ of $A$ and $B$ and $succ$ and $R$. Let $l \\in N$. Then $Conf3$ holds for $A$ and $B$ and $succ$ and $lstar$ applied to $A$ and $R$ and $l$.\nassistant\n", "label": "Axiom lstar_Conf3 : forall A : Set, forall B : Set, forall succ : relation2 A B, forall R : relation A, forall x__ : Conf3 A B succ R, forall l : nat, Conf3 A B succ (lstar A R l) .", "predict": "Axiom lstar_Conf3 : forall A : Set, forall B : Set, forall succ : rel2 A B, forall R : rel A, forall $__ : Conf3 A B succ R, forall l : nat, Conf3 A B succ (lstar A R l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTech_log. Let $p$ and $n$ be natural numbers. Assume that $1$ is less than $p$. Then if $0$ is less than $n$, then the logarithm of $p$ and $n$ is equal to $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the exponentiation of $p$ and $x$ and $n$.\nassistant\n", "label": "postulate tech_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Eq (log p n) (max (plus n 1) (\\ x : Nat -> leb (pow p x) n))", "predict": "postulate tech_log : (p : Nat) -> (n : Nat) -> Lt 1 p -> Lt 0 n -> Eq (log p n) (max (plus n 1) (map (\\ x -> leb (pow p x) n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLog_div. Soient $p$ et $n$ et $m$ des nombres naturels. Supposons que $1 < p$ et $0 < m$. Alors si $m \\leq n$, alors $\\log_ p {n \\div m}\\leq (\\log_ p {n})- (\\log_ p {m})$.\nassistant\n", "label": "Axiom log_div : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < m), forall __2 : Leq m n, Leq (log p (n / m)) (log p n - log p m) .", "predict": "Axiom log_div : forall p : nat, forall n : nat, forall m : nat, (1 < p /\\ 0 < m -> m <= n -> log p (n / m) <= (log p n - log p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nFilter_max_spec. Soit $_n \\in N$. Soit $_f$ une fonction des nombres naturels à des valeurs booléennes. Soit $__ \\in N$. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des éléments $z$ de $max_spec$ de $_n$ et de $_f$ et de $__$ à des éléments de $return_sort$. Soit $return$ une fonction des éléments $z$ de $max_spec$ de $_n$ et de $_f$ et de $__$ à des éléments de $return_type$ de $z$. Soit $z$ un élément de $max_spec$ de $_n$ et de $_f$ et de $__$. Alors $return_type$ tient pour $z$.\nassistant\n", "label": "Axiom filter_max_spec : forall _n : nat, forall _f : ((x__ : nat) -> bool), forall x__ : nat, forall return_sort : Sort, forall return_type : ((z : max_spec _n _f x__) -> return_sort), forall return : ((z : max_spec _n _f x__) -> return_type z), forall z : max_spec _n _f x__, return_type z .", "predict": "Axiom filter_max_spec : forall n : nat, forall f : nat -> bool, forall x : nat, forall return_sort : Type, forall return_type : forall z : max_spec n f x, return_sort, forall return : forall z : max_spec n f x, return_type z, z : max_spec n f x -> return_type z ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nACop_inv_rect_CProp0. För alla mängder $x1$, för alla element $x2$ av $x1$, för alla element $Hterm$ av $ACop$ av $x1$ och $x2$, för alla funktioner $P$ från element $_z1626$ av $ACop$ av $x1$ och $x2$ till påståenden, för alla funktioner $_H1$ från element $aop$ av $Aop$ av $x1$ och $x2$ och funktioner $_comm$ från element $a$ av $x1$ och element $b$ av $x1$ till element av $Eq$ av $op$ applicerat på $x1$ och $x2$ och $aop$ och $a$ och $b$ och $op$ applicerat på $x1$ och $x2$ och $aop$ och $b$ och $a$ och element $_z1627$ av $Eq$ av $Hterm$ och $mk_ACop$ applicerat på $x1$ och $x2$ och $aop$ och $_comm$ till element av $P$ av $mk_ACop$ applicerat på $x1$ och $x2$ och $aop$ och $_comm$, håller $P$ för $Hterm$.\nassistant\n", "label": "Axiom ACop_inv_rect_CProp0 : forall x1 : Set, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ((_z1626 : ACop x1 x2) -> Prop), forall _H1 : ((aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> op x1 x2 aop a b = op x1 x2 aop b a) -> (_z1627 : Hterm = mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)), P Hterm .", "predict": "Axiom cop_inv_rect_CProp0 : forall x1 : Type, forall x2 : x1, forall Hterm : ACop x1 x2, forall P : ACop x1 x2 -> Prop, forall aop : Aop x1 x2, forall comm : x1 -> x1 -> Eq (op x1 x2) (aop (comm x1 x2)), forall z1626 : ACop x1 x2, forall z1627 : Eq Hterm (mk_ACop x1 x2 aop comm), P (Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16002. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> (c : Nat) -> clearme : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> all Nat (\\ d -> or (and (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNot_eq_O_S. Låt $n$ vara ett naturligt tal. Då är $0$ inte lika med summan av $n$ och $1$.\nassistant\n", "label": "axiom not_eq_O_S (n : Nat) : ¬ (0 = n + 1)", "predict": "axiom not_eq_O_S (n : Nat) : 0 ≠ n + 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nEq_fact_pi_p. Soit $n \\in N$. Alors $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $i$ à $leb$ appliqué à $1$ et $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $i$ est égal à $n !$.\nassistant\n", "label": "axiom eq_fact_pi_p (n : Nat) : factorial n = bigop (n + 1) (λ i => leb 1 i) Nat 1 times (λ i => i)", "predict": "axiom eq_fact_pi_p (n : Nat) : bigop (λ i, leb 1 i) Nat 1 (times (λ i, i)) n = fact n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nMonotonic_lt_minus_l. Soit $p , q , n \\in N$. Alors si $n \\leq q$ et $q < p$, alors $q - n < p - n$.\nassistant\n", "label": "Axiom monotonic_lt_minus_l : forall p : nat, forall q : nat, forall n : nat, forall x__ : Leq n q, forall __1 : (q < p), q - n < p - n .", "predict": "Axiom monotonic_lt_minus_l : forall p : nat, forall q : nat, forall n : nat, (n <= q /\\ q < p -> q - n < p - n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1561. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n)) -> (c : Nat) -> (q : m * n == p * c) -> (a : Nat) -> (clearme0 : ex (Nat -> if (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (b : Nat) -> if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (Eq (minus (times p a) (times m b)) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15591. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < m$ et $0 = n$. Supposons que $0$ est divisible par $m$. Soit $q$ un nombre naturel. Supposons que $m = 0 q$. Alors $m = n$.\nassistant\n", "label": "postulate let_clause_15591 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m n", "predict": "postulate let_clause_15591 : (n : Nat) -> (m : Nat) -> and (Lt 0 m) (Eq 0 n) -> Div 0 m -> Nat -> Eq m n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nNot_not_bertrand_to_bertrand1. Soit $n$ un nombre naturel. Alors s'il n'est pas le cas que $not_bertrand$ tienne pour $n$, alors pour tous les nombres naturels $x$, si $n \\leq x$ et $x \\leq 2 n$, alors pour toutes les fonctions $__3$ des nombres naturels $p$ et des éléments $__3$ de $Lt$ de $x$ et de $p$ et des éléments $__4$ de $Leq$ de $p$ et de $2 \\times n$ à des éléments de $not$ de $prime (p)$, $ex$ tient pour $Nat$ et la fonction qui envoie $p$ à la conjonction de la conjonction de $Lt$ appliqué à $n$ et $p$ et de $Leq$ appliqué à $p$ et $x$ et de $prime$ appliqué à $p$.\nassistant\n", "label": "Axiom not_not_bertrand_to_bertrand1 : forall n : nat, forall x__ : (~ not_bertrand n), forall x : nat, forall __1 : Leq n x, forall __2 : Leq x (2 * n), forall __3 : ((p : nat) -> (__3 : x < p) -> (__4 : Leq p (2 * n)) -> ~ prime p), ex nat (fun p => n < p /\\ Leq p x /\\ prime p) .", "predict": "Axiom not_not_bertrand_to_bertrand1 : forall n : nat, (~ (not_bertrand n) -> forall x : nat, (n <= x /\\ x <= 2 * n -> forall p : nat, forall Lt : x -> forall Leq : p -> not (prime p) -> ex : Nat -> (p -> Lt n /\\ Leq p x /\\ prime p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_inv_rect_Type4. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1638$ of $range$ of $x1$ to elements of $Type4$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1639$ of $Eq$ of $Hterm$ and $mk_range (x1 , _enum , _upto , _filter)$ to elements of $P$ of $mk_range (x1 , _enum , _upto , _filter)$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate range_inv_rect_Type4 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1638 : range x1) -> Type4) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1639 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm", "predict": "postulate range_inv_rect_Type4 : (x1 : Set) -> all (range x1) (\\ Hterm -> all (P : (z1638 : range x1) -> Set) -> all (H1 : (enum : Nat -> x1) -> upto : Nat -> filter : Nat -> Bool -> Eq Hterm (mk_range x1 enum upto (filter z1639))) -> P (mk_range x1 enum upto (filter z1639)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1561. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b = 1$.\nassistant\n", "label": "axiom let_clause_1561 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : p * a - m * b = 1", "predict": "axiom let_clause_1561 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (w : m * n = p * c) (a : Nat) (x : element ex (Nat := Nat) (b : Nat) → disjunction (Eq (a * p - b * m) (gcd p m)) (Eq (b * m - a * p) (gcd p m))) (b : Nat) (x : y = gcd p m) (x : y = a * p - b * m ∨ y = b * m - a * p) : y = 1 → a * p - b * m = 1 → p * a - m * b = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0 < n$ and $n \\leq m$. Assume that $n \\leq q + 1$ and $n$ is not divisible by $m$. Let $a \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> Hind -> m : Nat -> n : Nat -> Eq (Nat (ex Nat (a -> Nat (and (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) (and (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> and (Lt 0 n) (Leq n m) (and (Leq n (plus q 1)) (not (divisible n m))) -> a : Nat -> all (ex Nat (b -> or (and (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))))) (forall Nat (b -> if (or (and (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) (Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nOrd_ord_rem. Pour tous les nombres naturels $p$ et $q$ et $m$, si $0$ est inférieur à $m$, alors si $p$ est premier, alors si $q$ est premier, alors si $q$ est inférieur à $p$, alors $ord$ appliqué à $ord_rem$ appliqué à $m$ et $p$ et $q$ est égal à $ord$ appliqué à $m$ et $q$.\nassistant\n", "label": "Axiom ord_ord_rem : forall p : nat, forall q : nat, forall m : nat, forall x__ : (0 < m), forall __1 : prime p, forall __2 : prime q, forall __3 : (q < p), ord (ord_rem m p) q = ord m q .", "predict": "Axiom ord_ord_rem : forall p : nat, forall q : nat, forall m : nat, (0 < m -> p prime -> q prime -> q < p -> ord (ord_rem m p q) = ord m q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_mod_m_m. Let $n$ and $m$ be natural numbers. Then if $0 < m$, then $mod (n , m)< m$.\nassistant\n", "label": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt (mod n m) m", "predict": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> if (Lt 0 m) (Lt (mod n m) m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1559. Soit $n , m \\in N$. Supposons que $n$ est divisible par $m$. Supposons que $0$ est égal à $n$. Alors pour tous les nombres naturels $d$, si $m$ est égal au produit de $0$ et de $d$, alors $m$ est égal à $n$.\nassistant\n", "label": "Axiom let_clause_1559 : forall n : nat, forall m : nat, forall divnm : divisible n m, forall H : (0 = n), forall d : nat, forall auto : (m = 0 * d), m = n .", "predict": "Axiom let_clause_1559 : forall n : nat, forall m : nat, (n mod m = 0 -> n = 0 -> forall d : nat, (m = 0 * d -> m = n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nF2_ind_aux. Låt $A1$ och $A2$ vara mängder. Låt $f$ vara en funktion från element av $A1$ och element $__1$ av $A2$ till naturliga tal. Då för alla element $P$ av $relation2$ av $A1$ och $A2$, för alla funktioner $__$ från naturliga tal $n$ och funktioner från element $a1$ av $A1$ och element $a2$ av $A2$ och element av $Lt$ av $f (a1 , a2)$ och $n$ till element av $P$ av $a1$ och $a2$ och element $a1$ av $A1$ och element $a2$ av $A2$ och element $__1$ av $Eq$ av $f (a1 , a2)$ och $n$ till element av $P$ av $a1$ och $a2$, för alla naturliga tal $n$, för alla element $a1$ av $A1$, för alla element $a2$ av $A2$, om $f (a1 , a2)= n$, så håller $P$ för $a1$ och $a2$.\nassistant\n", "label": "f2_ind_aux : A1 : Set -> A2 : Set -> f : (__ : A1 -> __1 : A2 -> Nat) -> P : relation2 A1 A2 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> __ : Lt (f a1 a2) n -> P a1 a2) -> a1 : A1 -> a2 : A2 -> __1 : Eq (f a1 a2) n -> P a1 a2) -> n : Nat -> a1 : A1 -> a2 : A2 -> __1 : Eq (f a1 a2) n -> P a1 a2 .", "predict": "f2_ind_aux : (A1 : Elem -> Type) -> (A2 : Elem -> Type) -> (f : (A1 -> A2 -> Nat) -> Proof (forall (P : Rel2 A1 A2) -> forall (g : Nat -> (a1 : A1 -> a2 : A2 -> Lt (f a1 a2) (g (Eq (f a1 a2) (nd 0))))) -> forall (n : Nat) -> forall (a1 : A1) -> forall (a2 : A2) -> Proof (if (Eq (f a1 a2) n) (P a1 a2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_to_le_min. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then for all natural numbers $b$, $min$ applied to $n$ and $b$ and $f$ is less than or equal to $min$ applied to $m$ and $b$ and $f$.\nassistant\n", "label": "le_to_le_min : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> __ : Leq n m -> b : Nat -> Leq (min n b f) (min m b f) .", "predict": "le_to_le_min : (f : Elem Nat -> Bool) -> Nat -> Nat -> Proof (if (Leq n m) (forall Nat (b => Leq (min n b) (f)) (min m b) (f))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_16001. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.\nassistant\n", "label": "let_clause_16001 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) .", "predict": "let_clause_16001 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (0 < n) -> Proof (0 < m) -> Proof (GreatestCommonDivisor n m = 1) -> c : Elem Nat -> Proof (forall Nat (d => Eq (plus (minus (times c n) (times d m)) 1) (minus (times d m) (times c n) 1))) -> d : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times c n) (times d m)) 1) (Eq (GreatestCommonDivisor m n) (minus (times n c) (times m d)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_prim_log. Let $n$ and $b$ be natural numbers. Then if $1 < b$, then $\\log_ b {Psi (n)}\\leq prim (n)(\\log_ b {n}+ 1)$.\nassistant\n", "label": "Axiom le_prim_log : forall n : nat, forall b : nat, forall x__ : (1 < b), Leq (log b (Psi n)) (prim n * (log b n + 1)) .", "predict": "Axiom le_prim_log : forall n : nat, forall b : nat, (1 < b -> log b (Psi n) <= prim n (log b n + 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nExample11. $nth_prime (2)= 5$.\nassistant\n", "label": "Axiom example11 : nth_prime 2 = 5 .", "predict": "Axiom example11 : nth_prime 2 = 5 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp4_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_957$ of $Dop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Dop$ be a function from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$. Then for all elements $x_957$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_957$.\nassistant\n", "label": "Dop_rect_CProp4_body : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 .", "predict": "dop_rect_CProp4_body : (A : Elem Set) -> (_nil : Elem A) -> (Q_ : Func (x_957 : Elem (Dop A)) -> _nil -> Prop) -> (H_mk_Dop : Func (sum : Elem (ACop A)) -> _nil -> Func (prod : Elem A -> Elem A) -> _nil -> Func (null : Elem A -> Eq (prod A _nil) (Eq (mk_Dop A _nil sum (prod A _nil) (null A) (distr A B C) ))) -> Proof (forall (x_957 : Elem (Dop A)) -> _nil, Q_ (x_957)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLt_max_n. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$, om $0$ är mindre än $n$, så är $max$ applicerat på $n$ och $f$ mindre än $n$.\nassistant\n", "label": "postulate lt_max_n : (f : (_ : Nat) -> bool) -> (n : Nat) -> (_ : Lt 0 n) -> Lt (max n f) n", "predict": "postulate lt_max_n : (f : Nat -> Prop) -> all Nat (\\ n -> if (Lt 0 n) (Eq (max n) (Lt (f n) n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nSame_bigop. Låt $k$ vara ett naturligt tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara en funktion från element av $B$ och element $__1$ av $B$ till element av $B$. Låt $f$ och $g$ vara funktioner från naturliga tal till element av $B$. Låt $__$ vara ett element av $sameF_upto$ av $k$ och $bool$ och $p1$ och $p2$. Låt $__1$ vara ett element av $sameF_p$ av $k$ och $p1$ och $B$ och $f$ och $g$. Då är $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p2$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $g$ applicerat på $i$ lika med $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p1$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.\nassistant\n", "label": "Axiom same_bigop : forall k : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), forall x__ : sameF_upto k bool p1 p2, forall __1 : sameF_p k p1 B f g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i) .", "predict": "Axiom same_bigop : forall k : nat, (forall p1 : nat -> Prop, forall p2 : nat -> Prop, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, forall g : nat -> B, forall $ : sameF_upto k bool p1 p2, forall $1 : sameF_p k p1 B f g, (bigop k (fun i => p2 i) B nil op (fun i => g i) = bigop k (fun i => p1 i) B nil op (fun i => f i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $0 < n$. Då för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (posn : 0 < n) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n : Nat) (x2515 x2516 : Nat) (x2515_neq_0 : 0 < n) : n = x2515 / x2516 + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nPrime_to_primeb_true. Låt $n \\in N$. Då om $n$ är primt, så är $primeb$ applicerat på $n$ lika med $true$.\nassistant\n", "label": "prime_to_primeb_true : n : Nat -> __ : prime n -> Eq (primeb n) true .", "predict": "prime_to_primeb_true : (n : Elem Nat) -> Proof (if (prime n) (Eq (primeb n) true)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLog_div. Soit $p , n , m \\in N$. Supposons que $1 < p$ et $0 < m$. Alors si $m \\leq n$, alors $\\log_ p {n \\div m}\\leq (\\log_ p {n})- (\\log_ p {m})$.\nassistant\n", "label": "axiom log_div (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) (__2 : m ≤ n) : log p (n / m) ≤ log p n - log p m", "predict": "axiom log_div (p n m : Nat) (x : 1 < p ∧ 0 < m) : m ≤ n → log p (n / m) ≤ log p n - log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Då om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$ och $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (y : a ≤ n ∧ f a = i ∧ a ≤ n) : f a = i → ∀ b : Nat, (b ≤ n ∧ f b = j ∧ b ≤ n → f b = j → ∀ (i0 : Nat) → ∀ (leq : Leq i0 n) → ∀ (injf : Nat) → (injn f n) → (a = b → f a = j)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nACop_rect_CProp2. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_909$ av $ACop$ av $A$ och $_nil$ till påståenden. Då för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op$ applicerat på $A$ och $_nil$ och $aop$ och $a$ och $b$ och $op$ applicerat på $A$ och $_nil$ och $aop$ och $b$ och $a$ till element av $Q_$ av $mk_ACop$ applicerat på $A$ och $_nil$ och $aop$ och $_comm$, för alla element $x_909$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_909$.\nassistant\n", "label": "axiom ACop_rect_CProp2 (A : Set) (_nil : A) (Q_ : (_x_909 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_909 : ACop A _nil) : Q_ x_909", "predict": "axiom cop_rect_CProp2 (A : Type) (nil : A) (Q : ∀ x : cop A nil, Prop) : ∀ H : ∀ aop : op A nil, ∀ a : A, ∀ b : A, Eq (op A nil aop a b) (op A nil aop b) → ∀ x : cop A nil, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_10331. Soit $n \\in N$. Supposons que la puissance de $2$ et de $8$ est inférieure ou ágale à $n$. Soit $m$ un nombre naturel. Supposons que $3$ est inférieur ou ágal à $m$. Supposons que la somme du logarithme de $2$ et de $m$ et de $2$ est inférieure ou ágale à $m$. Soit $x2515 , x2516 \\in N$. Alors $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall len : Leq (pow 2 8) n, forall m : nat, forall lt2m : Leq 3 m, forall Hind : Leq (log 2 m + 2) m, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, (forall m : nat, (3 <= m -> log 2 m + 2 <= m) -> x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_min_to_false. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $m$ et $b$ des nombres naturels. Alors si $b \\leq m$ et $m < min (n , b , f)$, alors contradiction est égal à $f (m)$.\nassistant\n", "label": "axiom lt_min_to_false (f : (x__ : Nat) -> bool) (n m b : Nat) (x__ : b ≤ m) (__1 : m < min n b f) : f m = false", "predict": "axiom lt_min_to_false (f : Nat → Bool) (n m b : Nat) (x : b ≤ m ∧ m < min n b (f m)) : contradiction = f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nBigop_I_gen. Soient $a$ et $b$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Alors pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $a$ est inférieur ou ágal à $b$, alors $bigop$ appliqué à la différence de $b$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ est égal à $bigop$ appliqué à $b$ et la fonction qui envoie $i$ à $andb$ appliqué à $leb$ appliqué à $a$ et $i$ et $p$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.\nassistant\n", "label": "bigop_I_gen : a : Nat -> b : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> __ : Leq a b -> Eq (bigop (minus b a) (i : Nat => (i0 : Nat => p i0) (plus i a)) B nil (op B nil op) (i : Nat => (i0 : Nat => f i0) (plus i a))) (bigop b (i : Nat => andb (leb a i) (p i)) B nil (op B nil op) (i : Nat => f i)) .", "predict": "bigop_I_gen : (a : Elem Nat) -> (b : Elem Nat) -> (p : Proof (forall Nat (b => Bool))) -> Proof (forall Aop (Elem (times (plus b (neg a)) (and (forall Nat (f => Elem B)) (and (Leq a b) (forall Nat (i => (and (Leq (plus i a) b) (p (plus i a))))))) (forall Nat (i => (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq (plus i a) b) (and (Leq"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nNat_rect_CProp3_body. Soit $Q_$ une fonction des nombres naturels $_x_401$ à des propositions. Alors pour tous les éléments $_H_O$ de $Q_$ de $0$, pour toutes les fonctions $_H_S$ des nombres naturels $x_402$ et des éléments $_x_404$ de $Q_$ de $x_402$ à des éléments de $Q_$ de $x_402 + 1$, pour tous les nombres naturels $x_401$, $Q_$ tient pour $x_401$.\nassistant\n", "label": "Axiom nat_rect_CProp3_body : forall Q_ : ((_x_401 : nat) -> Prop), forall _H_O : Q_ 0, forall _H_S : ((x_402 : nat) -> (_x_404 : Q_ x_402) -> Q_ (x_402 + 1)), forall x_401 : nat, Q_ x_401 .", "predict": "Axiom nat_rect_CProp3_body : forall Q : nat -> Prop, (forall H_O : Q 0, forall H_S : forall x_402 : nat, forall x_404 : Q x_402, Q (x_402 + 1)) -> forall x_401 : nat, Q x_401 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDividesb_false_to_not_divides. Soit $n , m \\in N$. Alors si $dividesb$ appliqué à $n$ et $m$ est égal à contradiction, alors $n$ n'est pas divisible par $m$.\nassistant\n", "label": "postulate dividesb_false_to_not_divides : (n : Nat) -> (m : Nat) -> (_ : Eq (dividesb n m) false) -> not (divisible n m)", "predict": "postulate dividesb_false_to_not_divides : (n : Nat) -> (m : Nat) -> if (dividesb n m == Contradiction) (not (divisible n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1561. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n)) -> (c : Nat) -> (x' : m * n == p * c) -> (a : Nat) -> (clearme0 : ex (Nat -> if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> b : Nat -> (if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (if (Eq (minus (times a p) (times b m)) (gcd p m)) (if (Eq (minus (times a p) (times b m)) 1) (Eq (minus (times p a) (times m b)) 1)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a = b$. Alors $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (y : a ≤ n ∧ f a = i ∧ a ≤ n) (z : f a = i) (b : Nat) (t : b ≤ n ∧ f b = j ∧ b ≤ n) (u : f b = j) (g : Nat → Nat × Leq) (injf : Injn f n) (x' : a = b) : f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDiv_mod_spec_rect_CProp2_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_849$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_851$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_850$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_851 , x_850)$, pour tous les éléments $x_849$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_849$.\nassistant\n", "label": "div_mod_spec_rect_CProp2_body : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_849 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_851 : Lt _r _m -> x_850 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> x_849 : div_mod_spec _n _m _q _r -> Q_ x_849 .", "predict": "div_mod_spec_rect_CProp2_body : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Q : (x : Elem (div_mod_spec n m q r)) -> Prop -> Proof (forall (x : Elem (Lt r m)) -> forall (x : Elem (Eq n (q (plus m r)))) -> Q (div_mod_spec_intro n m q r x)) (forall (x : Elem (div_mod_spec n m q r)) -> Q x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLd_to_prime. Soit $i \\in N$. Alors pour toutes les listes $acc$ de nombres naturels, si $1$ est inférieur à $i$, alors pour tous les éléments $__1$ de $primes_below$ de $acc$ et de $i$, si $list_divides$ appliqué à $acc$ et $i$ est égal à contradiction, alors $i$ est premier.\nassistant\n", "label": "axiom ld_to_prime (i : Nat) (acc : list Nat) (x__ : 1 < i) (__1 : primes_below acc i) (__2 : list_divides acc i = false) : prime i", "predict": "axiom ld_to_prime (i : Nat) : 1 < i → ∀ acc : List Nat, ∀ x : primes_below i ∈ acc, list_divides acc i = contradiction → prime i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nACop_discr. Låt $a1$ vara en mängd. Låt $a2$ vara ett element av $a1$. Låt $x$ och $y$ vara element av $ACop$ av $a1$ och $a2$. Anta att $x$ är lika med $y$. Då håller $match_ACop$ för $a1$ och $a2$ och summan av $Type2$ och $1$ och funktionen som avbildar $__$ som $univ$ applicerat på $Type2$ och funktionen som avbildar $t0$ och $t1$ som $match_ACop$ applicerat på $a1$ och $a2$ och summan av $Type2$ och $1$ och funktionen som avbildar $__$ som $univ$ applicerat på $Type2$ och funktionen som avbildar $u0$ och $u1$ som $prod$ applicerat på summan av $Type1$ och $1$ och $Type1$ och $univ$ applicerat på $Type1$ och funktionen som avbildar $P$ som $prod$ applicerat på $Type1$ och $Type1$ och $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R0$ applicerat på $Aop$ applicerat på $a1$ och $a2$ och $t0$ och $u0$ och funktionen som avbildar $e0$ som $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R1$ applicerat på $Aop$ applicerat på $a1$ och $a2$ och $t0$ och funktionen som avbildar $x_19$ och $_x_20$ som funktionen som avbildar $x0$ och $p0$ som $prod$ applicerat på $Set$ och $Prop$ och $a1$ och funktionen som avbildar $a$ som $prod$ applicerat på $Set$ och $Prop$ och $a1$ och funktionen som avbildar $b$ som $Eq$ applicerat på $op$ applicerat på $a1$ och $a2$ och $x0$ och $a$ och $b$ och $op$ applicerat på $a1$ och $a2$ och $x0$ och $b$ och $a$ applicerat på $x_19$ och $_x_20$ och $t1$ och $u0$ och $e0$ och $u1$ och funktionen som avbildar $_e1$ som $P$ och funktionen som avbildar $_z57$ som $P$ och $y$ och $x$.\nassistant\n", "label": "Axiom ACop_discr : forall a1 : Set, forall a2 : a1, forall x : ACop a1 a2, forall y : ACop a1 a2, forall _e : (x = y), match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun t0 => fun t1 => match_ACop a1 a2 (Type2 + 1) (fun x__ => univ Type2) (fun u0 => fun u1 => prod (Type1 + 1) Type1 (univ Type1) (fun P => prod Type1 Type1 (prod Prop Type1 (R0 (Aop a1 a2) t0 = u0) (fun e0 => prod Prop Type1 (R1 (Aop a1 a2) t0 (fun x_19 => fun _x_20 => (fun x0 => fun p0 => prod Set Prop a1 (fun a => prod Set Prop a1 (fun b => op a1 a2 x0 a b = op a1 a2 x0 b a))) x_19 _x_20) t1 u0 e0 = u1) (fun _e1 => P))) (fun _z57 => P))) y) x .", "predict": "Axiom cop_discr : forall a1 : Set, forall a2 : a1 -> Prop, forall x : ACop a1 a2, forall y : ACop a1 a2, (x = y -> match_ACop a1 a2 (Type2 + 1) (univ : Type2 -> Prop) (t0, t1 : ACop a1 a2) -> Type2 + 1 -> univ : Type2 -> Prop -> prod (Set + 1) Type1 -> prod (Set + 1) Type1 -> prod Prop Type1 -> Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0) -> prod (Set + 1) Prop -> prod (Set + 1) Type1 -> prod (Set + 1) Type1 -> Eq (prod Prop Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) (prod (Set + 1) Prop (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) -> prod (Set + 1) (prod Prop Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) (prod (Set + 1) Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) -> prod (Set + 1) (prod Prop Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) (prod (Set + 1) Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) -> prod (Set + 1) (prod Prop Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) (prod (Set + 1) Type1 (Eq (R0 (Aop a1 a2) t0) (R1 (Aop a1 a2) t0))) -> prod (Set +"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDiv_mod_spec_rect_Type3_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_821$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des éléments de $Type3$. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_823$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_822$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_823$ et $x_822$. Soit $x_821$ un élément de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$. Alors $Q_$ tient pour $x_821$.\nassistant\n", "label": "postulate div_mod_spec_rect_Type3_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_821 : div_mod_spec _n _m _q _r) -> Type3) -> (_H_div_mod_spec_intro : (x_823 : Lt _r _m) -> (x_822 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) -> (x_821 : div_mod_spec _n _m _q _r) -> Q_ x_821", "predict": "postulate div_mod_spec_rect_Type3_body : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> Q_ : div_mod_spec n m -> Eq n (plus (times q m) r) -> Lt r m -> H_div_mod_spec_intro : Lt r m -> Eq n (plus (times q m) r) -> div_mod_spec_intro n m q r -> x_821 : div_mod_spec n m -> Q_ x_821"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_le_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Assume that $n$ is less than $m$. Then if $m$ is less than or equal to $p$, then $n$ is less than $p$.\nassistant\n", "label": "lt_to_le_to_lt : n : Nat -> m : Nat -> p : Nat -> __ : Lt n m -> __1 : Leq m p -> Lt n p .", "predict": "lt_to_le_to_lt : (n : Elem Nat) -> (m : Elem Nat) -> (p : Elem Nat) -> Proof (Lt n m) -> Proof (Leq m p) -> Proof (Lt n p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nDop_rect_Type3. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_949$ de $Dop$ de $A$ et de $_nil$ à des éléments de $Type3$. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $_nil$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ à des éléments de $Q_$ de $mk_Dop$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ et $_null$ et $_distr$. Soit $x_949$ un élément de $Dop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_949$.\nassistant\n", "label": "axiom Dop_rect_Type3 (A : Set) (_nil : A) (Q_ : (_x_949 : Dop A _nil) -> Type3) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_949 : Dop A _nil) : Q_ x_949", "predict": "axiom dop_rect_Type3 (A : Type) (nil : A) (Q : ∀ x : Dop A nil, Type3) (H_mk_Dop : ∀ s : ACop A nil, ∀ f : Prod A (1 : A), A × Eq (f nil) × nil × Eq (distr (A := A) nil (sum s) (Prod (f A) (b := A) (c := A))) (Q (mk_Dop A nil s f))) (x_949 : Dop A nil) : Q x_949"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTo_max. Let $i$ and $n$ and $m$ be natural numbers. Assume that $n \\leq i$. Assume that $m \\leq i$. Then $max (n , m)\\leq i$.\nassistant\n", "label": "Axiom to_max : forall i : nat, forall n : nat, forall m : nat, forall x__ : Leq n i, forall __1 : Leq m i, Leq (max n m) i .", "predict": "Axiom to_max : forall i : nat, forall n : nat, forall m : nat, (n <= i /\\ m <= i -> max n m <= i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFilter_div_mod_spec. Let $_n , _m , _q , _r \\in N$. Let $return_sort$ be an element of $Sort$. Let $return_type$ be a function from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_sort$. Let $return$ be a function from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_type$ of $z$. Let $z$ be an element of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$. Then $return_type$ holds for $z$.\nassistant\n", "label": "postulate filter_div_mod_spec : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (return_sort : Sort) -> (return_type : (z : div_mod_spec _n _m _q _r) -> return_sort) -> (return : (z : div_mod_spec _n _m _q _r) -> return_type z) -> (z : div_mod_spec _n _m _q _r) -> return_type z", "predict": "postulate filter_div_mod_spec : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> return_sort : Sort -> return : div_mod_spec n m q r -> return_sort"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nExp_sigma_l. Låt $n , a \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Då är potensen av $a$ och $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $a$ och $f$ applicerat på $i$.\nassistant\n", "label": "axiom exp_sigma_l (n a : Nat) (p : (x__ : Nat) -> bool) (f : (x__ : Nat) -> Nat) : bigop n (λ i => p i) Nat 1 times (λ i => pow a (f i)) = pow a (bigop n (λ i => p i) Nat 0 plus (λ i => f i))", "predict": "axiom exp_sigma_l (n a : Nat) (p : Nat → Prop) (f : Nat → Nat) : pow a (bigop n (λ i, p i ∧ Nat ∧ 0) (plus (λ i, p i ∧ Nat) 1) (times (pow a (f i))) n) = bigop n (λ i, p i ∧ Nat) 1 (times (pow a (f i)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1 < p$. Then if $0 < m$, then $\\log_ p {(p ^ n m)}= n + \\log_ p {m}$.\nassistant\n", "label": "axiom log_exp (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) : log p (pow p n * m) = n + log p m", "predict": "axiom log_exp (p n m : Nat) (x : 1 < p) : 0 < m → log p (pow p n * m) = n + log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDivides_to_lt_O. Låt $n , m \\in N$. Då om $0$ är mindre än $m$, så om $n$ är delbart med $m$, så är $0$ mindre än $n$.\nassistant\n", "label": "Axiom divides_to_lt_O : forall n : nat, forall m : nat, forall x__ : (0 < m), forall __1 : divisible n m, 0 < n .", "predict": "Axiom divides_to_lt_O : forall n : nat, forall m : nat, (0 < m -> (n % m = 0 -> 0 < n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_minus_to_plus_r. Soient $a$ et $b$ et $c$ des nombres naturels. Supposons que $c$ est inférieur ou ágal à $b$. Alors si $a$ est inférieur ou ágal à la différence de $b$ et de $c$, alors la somme de $a$ et de $c$ est inférieure ou ágale à $b$.\nassistant\n", "label": "Axiom le_minus_to_plus_r : forall a : nat, forall b : nat, forall c : nat, forall x__ : Leq c b, forall __1 : Leq a (b - c), Leq (a + c) b .", "predict": "Axiom le_minus_to_plus_r : forall a : nat, forall b : nat, forall c : nat, (c <= b -> (a <= b - c -> a + c <= b)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16171. Låt $p , m , n \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Då om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> Eq 1 (gcd p m) -> Eq p (times m n) -> (c : Nat) -> Eq (times m n) (times p c) -> (a : Nat) -> ex (Nat) -> (b : Nat) -> Eq (gcd p m) (if (or (and (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (Eq (minus (times b m) (times a p)) 1)) (Eq (minus (times m b) (times p a)) (gcd p m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type0_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 .", "predict": "Axiom div_mod_spec_rect_Type0_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall Q : div_mod_spec n m q r -> Set, forall H_div_mod_spec_intro : Lt r m /\\ Eq n (q * m + r) /\\ forall x : Lt r m, forall y : Eq n (q * m + r), Q (div_mod_spec_intro n m q r x y), forall x : div_mod_spec n m q r, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Alors si $i$ est inférieur ou ágal à $n$, alors si $j$ est inférieur ou ágal à $n$, alors pour tous les nombres naturels $a$, si $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$, alors si $a$ est inférieur ou ágal à $n$, alors si $f$ appliqué à $a$ est égal à $i$, alors pour tous les nombres naturels $b$, si $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$, alors si $b$ est inférieur ou ágal à $n$, alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> Proof (if (and (Leq i n) (Leq j n)) (forall Nat (a => if (and (Leq a n) (Eq (f a) i)) (if (and (Leq a n) (Eq (f a) i)) (forall Nat (b => if (and (Leq b n) (Eq (f b) j)) (if (and (Leq b n) (Eq (f b) j)) (forall (f : Elem (Nat -> Nat)) (i0 : Elem Nat) (inj : Elem (Leq i0 n) -> Elem (Leq (f i0) n)) => forall (injf : Elem (permut f n)) (injn : Eq injf inj) => if (Eq a b) (Eq (f a) j))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_ind_body. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1337$ and elements $x_1336$ of $B$ and elements $x_1335$ of $B$ and elements $_x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$ to propositions. Let $_H_lstar_r_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_r_S$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1340$ of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $x_1339$ of $_R$ of $b$ and $b2$ and elements $_x_1342$ of $Q_$ of $l$ and $b1$ and $b$ and $x_1340$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $x_1340$ and $b2$ and $x_1339$. Let $x_1337$ be a natural number. Let $x_1336$ and $x_1335$ be elements of $B$. Then for all elements $x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$, $Q_$ holds for $x_1337$ and $x_1336$ and $x_1335$ and $x_1338$.\nassistant\n", "label": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : ((x_1337 : nat) -> (x_1336 : B) -> (x_1335 : B) -> (_x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Prop), forall _H_lstar_r_O : ((b : B) -> Q_ 0 b b (lstar_r_O B _R b)), forall _H_lstar_r_S : ((l : nat) -> (b1 : B) -> (b : B) -> (x_1340 : lstar_r B _R l b1 b) -> (b2 : B) -> (x_1339 : _R b b2) -> (_x_1342 : Q_ l b1 b x_1340) -> Q_ (l + 1) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)), forall x_1337 : nat, forall x_1336 : B, forall x_1335 : B, forall x_1338 : lstar_r B _R x_1337 x_1336 x_1335, Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : nat -> B -> B -> B -> lstar_r B -> _R -> B -> B -> Prop -> B -> Prop, forall b : B, Q_ 0 b b (lstar_r_O B _R b) -> forall l : nat, b1 : B, b : B, x_1340 : lstar_r B, _R, l, b1, b, b2 : B, x_1339 : _R b, b2, x_1342 : Prop, lstar_r_S B _R l b1 b x_1340 b2 x_1339 -> forall x_1338 : lstar_r B, _R, x_1337, x_1336, x_1335 : B, Q_ x_1337 x_1336 x_1335 x_1338 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPi_p_primeb5. For all natural numbers $n$, if $1$ is less than $n$, then $bigop$ applied to the sum of the product of $2$ and $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and the product of $2$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$.\nassistant\n", "label": "pi_p_primeb5 : n : Nat -> __ : Lt (nd 1) n -> Eq (bigop (plus (times (nd 2) n) (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p (times (nd 2) n)) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (times (nd 2) (div n (pow p (plus i (nd 1)))))))) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p n) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (times (nd 2) (div n (pow p (plus i (nd 1)))))))) .", "predict": "pi_p_primeb5 : (n : Elem Nat) -> Proof (if (Lt (nd 1) n) (Eq (bigop (plus (times (nd 2) n) (nd 1)) (func (p => (primeb p))) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (nd 2) (nd 1)) (nd 1) (times (nd 2) (nd 1)) (nd 1)) -> Proof (Eq (bigop (plus n (nd 1)) (func (p => (primeb p))) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (nd 2) (nd 1) (times (nd 2) (nd 1)) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1728$ of $Dop$ of $x1$ and $x2$ to sets. Let $_H1$ be a function from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1729$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Dop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : ((_z1728 : Dop x1 x2) -> Set), forall _H1 : ((sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1729 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)), P Hterm .", "predict": "Axiom dop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : forall z1728 : Dop x1 x2 -> Set, forall sum : ACop x1 x2, forall prod : x1 -> x1 -> x1, forall null : forall a : x1 -> Eq (prod a x2) x2, forall distr : forall a : x1 -> forall b : x1 -> forall c : x1 -> Eq (prod (a (aop__o__op x1 x2 sum)) b) (c (aop__o__op x1 x2 sum)), forall z1729 : Eq Hterm (mk_Dop x1 x2 sum prod null distr), P (mk_Dop x1 x2 sum prod null distr) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1033. Soit $n$ un nombre naturel. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1$ un nombre naturel. Alors pour toutes les fonctions $Hind$ des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$ et des fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n1$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$, pour toutes les fonctions $H1$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$, pour toutes les fonctions $H2$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, si $p2 (n1)= true$, alors si $p1 (n1)= true$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 ,", "label": "postulate let_clause_1033 : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n1) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))) -> (H1 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (H2 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (Hp2 : Eq (p2 n1) true) -> (Hp1 : Eq (p1 n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": " x2516)$.\npostulate clause_1033 : (n : Nat) -> (p1 : Nat -> Bool) -> (p2 : Nat -> Bool) -> (g1 : Nat -> Nat) -> (g2 : Nat -> Nat) -> (n1 : Nat) -> all (Hind (Eq p1 p2) (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p2 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all (Eq (p1 n1) true) (Leq (g1 n1) (g2 n1))) -> all (all ("}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_prime_times_2. Let $n \\in N$. Assume that $1$ is less than $n$. Then the product of $2$ and $n$ is not prime.\nassistant\n", "label": "axiom not_prime_times_2 (n : Nat) (x__ : 1 < n) : ¬ prime (2 * n)", "predict": "axiom not_prime_times_2 (n : Nat) (x : 1 < n) : 2 * n ≠ prime"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1617. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Alors pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b$ est égal au diviseur commun plus grand de $p$ et de $m$.\nassistant\n", "label": "axiom let_clause_1617 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : gcd p m = p * a - m * b", "predict": "axiom let_clause_1617 (p m n : Nat) (x : 0 < p ∧ 1 = gcd p m ∧ p % m * n = 0) (c : Nat) (x2 : m * n = p * c) (a : Nat) (x3 : mem (ex : Nat → Nat) (λ b, disj (Eq (gcd p m) (a * p - b * m)) (Eq (gcd p m) (b * m - a * p))) (a * p - b * m) = 1) : Eq (p * a - m * b) (gcd p m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_ind. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "postulate Dop_ind : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943", "predict": "postulate dop_ind : (A : Set) -> _nil : A -> (Q_ : Dop A -> _nil -> Prop) -> all (forall (H : ACop A -> _nil -> (A -> A -> A) -> (a : A) -> Eq (prod a _nil) (null a) -> Eq (distr a b c) (prod (aop__o__op A _nil sum) b) (prod (aop__o__op A _nil sum) c))) (forall (x : Dop A) -> Q_ x _nil)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSigma_p_dividesb. Let $m , n , p \\in N$. Then if $0 < n$ and $p$ is prime, then if $p$ is not divisible by $n$, then $bigop$ applied to $m$ and the function that maps $i$ to $dividesb$ applied to the exponentiation of $p$ and the sum of $i$ and $1$ and the product of the exponentiation of $p$ and $m$ and $n$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $1$ is equal to $m$.\nassistant\n", "label": "axiom sigma_p_dividesb (m n p : Nat) (x__ : 0 < n) (__1 : prime p) (__2 : ¬ divisible p n) : m = bigop m (λ i => dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (λ i => 1)", "predict": "axiom sigma_p_dividesb (m n p : Nat) (x : 0 < n ∧ p.prime ∧ ¬divisible p n) : bigop m (λ i, dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (λ i, 1) = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_op. Let $k \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Then for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $aop__o__op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $aop__o__op$ applied to $B$ and $nil$ and $op$ and $f$ applied to $i$ and $g$ applied to $i$.\nassistant\n", "label": "Axiom bigop_op : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), aop__o__op B nil op (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => g i)) = bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => aop__o__op B nil op (f i) (g i)) .", "predict": "Axiom bigop_op : forall k : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : ACop B nil, forall f : nat -> B, forall g : nat -> B, (B -> bool) -> eq (aop__o__op B nil op (bigop k (fun i => p i) B nil (aop__o__op B nil op (f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op (g i)))) (bigop k (fun i => p i) B nil (aop__o__op B nil op (f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op (g i)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nMinus_Sn_m. Soit $m , n \\in N$. Alors si $m \\leq n$, alors $n + 1 - m = n - m + 1$.\nassistant\n", "label": "Axiom minus_Sn_m : forall m : nat, forall n : nat, forall x__ : Leq m n, n + 1 - m = n - m + 1 .", "predict": "Axiom minus_Sn_m : forall m : nat, forall n : nat, (m <= n -> n + 1 - m = n - m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nNot_divides_S_fact. Soit $n , i \\in N$. Alors si $1$ est inférieur à $i$, alors si $i$ est inférieur ou ágal à $n$, alors $i$ n'est pas divisible par la somme de la factorielle de $n$ et de $1$.\nassistant\n", "label": "not_divides_S_fact : n : Nat -> i : Nat -> __ : Lt (nd 1) i -> __1 : Leq i n -> not (divisible i (plus (factorial n) (nd 1))) .", "predict": "not_divides_S_fact : (n : Elem Nat) -> (i : Elem Nat) -> Proof (if (Lt (nd 1) i) (if (Leq i n) (Neq (div i (plus (fact n) (nd 1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nEq_to_eqb_true. Pour tous les nombres naturels $n$ et $m$, si $n$ est égal à $m$, alors $eqb$ appliqué à $n$ et $m$ est égal à $true$.\nassistant\n", "label": "postulate eq_to_eqb_true : (n : Nat) -> (m : Nat) -> (_ : Eq n m) -> Eq (eqb n m) true", "predict": "postulate eq_to_eqb_true : (n : Nat) -> (m : Nat) -> Eq n m -> Eqb n m == true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nDop_rect_Type3. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_949$ de $Dop$ de $A$ et de $_nil$ à des éléments de $Type3$. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$. Alors pour tous les éléments $x_949$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_949$.\nassistant\n", "label": "Axiom Dop_rect_Type3 : forall A : Set, forall _nil : A, forall Q_ : ((_x_949 : Dop A _nil) -> Type3), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_949 : Dop A _nil, Q_ x_949 .", "predict": "Axiom dop_rect_Type3 : forall A : Type, forall _nil : A, forall Q_ : Dop A _nil -> Type3 -> Prop, forall _H_mk_Dop : ACop A _nil -> A -> Eq -> Dop A _nil -> Prop -> Prop -> Prop -> Dop A _nil -> Prop, forall x_949 : Dop A _nil, Q_ x_949 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_10331. Let $n$ be a natural number. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Assume that $6$ is less than or equal to $a$. Assume that the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (lt4n : 5 < n) (m : Nat) (le4m : 6 ≤ m) (Hind : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (lea : 6 ≤ a) (Hinda : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n : Nat) (x : 5 < n) (m : Nat) (y : 6 ≤ m) (z : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (u : 6 ≤ a) (v : pow 2 (a + 1) ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b \\in N$. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$. Let $injf$ be an element of $injn$ of $f$ and $n$. Then if $a = b$, then $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (y : a ≤ n ∧ f a = i ∧ a ≤ n) (a_eq_i : f a = i) (b : Nat) (z : b ≤ n ∧ f b = j ∧ b ≤ n) (f_b_eq_j : f b = j) (g : Nat → Nat → Leq) (injf : Injn f n) : a = b → f a = j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_2. Let $n \\in N$. Then the exponentiation of $n$ and $2$ is equal to the product of $n$ and $n$.\nassistant\n", "label": "postulate exp_2 : (n : Nat) -> Eq (pow n 2) (times n n)", "predict": "postulate exp_2 : (n : Nat) -> pow n 2 == times n n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : (f : Elem (Nat -> Nat)) -> (n : Elem Nat) -> (permf : Elem (permut f n)) -> (i : Elem Nat) -> (j : Elem Nat) -> Proof (and (Leq i n) (Leq j n)) -> (a : Elem Nat) -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (Leq a n) -> Proof (Eq (f a) i) -> (b : Elem Nat) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (Leq b n) -> Proof (Eq (f b) j) -> (g : Elem (Nat -> (Leq (nd 0) n) -> Leq (f (nd 0)) n)) -> Proof (forall (injn (f n)) (Eq a b) -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_dx. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $l$ be a natural number. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$. Let $b2$ be an element of $B$. Then for all elements $__1$ of $R$ of $b$ and $b2$, $lstar$ holds for $B$ and $R$ and $l + 1$ and $b1$ and $b2$.\nassistant\n", "label": "lstar_dx : B : Set -> R : relation B -> l : Nat -> b1 : B -> b : B -> __ : lstar B R l b1 b -> b2 : B -> __1 : R b b2 -> lstar B R (plus l (nd 1)) b1 b2 .", "predict": "lstar_dx : (B : Elem Set) -> (R : Elem (Relation B)) -> (l : Elem Nat) -> (b1 : Elem B) -> (b : Elem B) -> (x : Elem (lstar B R l b1 b)) -> (b2 : Elem B) -> Proof (forall (x1 : Elem (R b b2)) => lstar (B R (plus l 1) b1 b2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1585. Låt $n , m \\in N$. Anta att $0$ är mindre än $n$. Anta att $m$ är delbart med $n$. Då för alla naturliga tal $d$, om $0$ är lika med $m$, så om $n$ är lika med produkten av $m$ och $d$, så är $0$ lika med $n$.\nassistant\n", "label": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n", "predict": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) ->Lt 0 n -> Div m n -> all Nat (\\ d -> if (Eq 0 m) (if (Eq n (times m d)) (Eq 0 n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nAxiome. Soit $__ \\in N$. Alors nous pouvons dire que $__$ est premier.\nassistant\n", "label": "postulate prime : (_ : Nat) -> Prop", "predict": "postulate : (n : Nat) -> prime n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_rect_Type0_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_901$ of $ACop$ of $A$ and $_nil$ to sets. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$. Let $x_901$ be an element of $ACop$ of $A$ and $_nil$. Then $Q_$ holds for $x_901$.\nassistant\n", "label": "ACop_rect_Type0_body : A : Set -> _nil : A -> Q_ : (_x_901 : ACop A _nil -> Set) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_901 : ACop A _nil -> Q_ x_901 .", "predict": "ACop_rect_Type0_body : A : Elem Set -> _nil : Elem A -> Q_ : (x : Elem (ACop A)) -> _nil -> Set -> H_mk_ACop : (aop : Elem (Aop A)) -> _nil -> (comm : (a : Elem A) -> (b : Elem A) -> Eq (op A) _nil aop a b (op A) _nil aop b a) -> Set -> x_901 : Elem (ACop A) A -> _nil -> Proof (Q_ x_901) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nNth_primeS. Pour tous les nombres naturels $n$, $nth_prime (n + 1)= min (let_upper_bound1 (n), let_previous_prime1 (n)+ 1 , primeb)$.\nassistant\n", "label": "postulate nth_primeS : (n : Nat) -> Eq (nth_prime (plus n 1)) (min (let_upper_bound1 n) (plus (let_previous_prime1 n) 1) primeb)", "predict": "postulate nth_primeS : (n : Nat) -> nth_prime (plus n 1) = min (let_upper_bound1 n) (plus (let_previous_prime1 n) 1) primeb"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nPad_bigop. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara en funktion från element av $B$ och element $__1$ av $B$ till element av $B$. Låt $f$ vara en funktion från naturliga tal till element av $B$. Anta att $n \\leq k$. Då är $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $match_bool$ applicerat på $Set$ och funktionen som avbildar $_0$ som $bool$ och kontradiktion och $p$ applicerat på $i$ och $leb$ applicerat på $n$ och $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.\nassistant\n", "label": "postulate pad_bigop : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> match_bool Set (\\ _0 : bool -> bool) false (p i) (leb n i)) B nil op (\\ i : Nat -> f i))", "predict": "postulate pad_bigop : (k : Nat) -> (n : Nat) -> Eq (bigop k (match_bool Set (bool contraction) p) (op (nd 0) (nd 1)) (nd n) B nil op (nd -> f) n) (bigop n (nd -> p) B nil op (nd -> f))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nAxiom. Låt $_p , _n \\in N$. Då är logaritmen av $_p$ och $_n$ ett naturligt tal.\nassistant\n", "label": "Axiom log : forall _p : nat, forall _n : nat, nat .", "predict": "Axiom log_of_natural : forall p : nat, forall n : nat, log p n : nat ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_ind_body. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1337$ and elements $x_1336$ of $B$ and elements $x_1335$ of $B$ and elements $_x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$ to propositions. Let $_H_lstar_r_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_r_S$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1340$ of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $x_1339$ of $_R$ of $b$ and $b2$ and elements $_x_1342$ of $Q_$ of $l$ and $b1$ and $b$ and $x_1340$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $x_1340$ and $b2$ and $x_1339$. Let $x_1337$ be a natural number. Then for all elements $x_1336$ and $x_1335$ of $B$, for all elements $x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$, $Q_$ holds for $x_1337$ and $x_1336$ and $x_1335$ and $x_1338$.\nassistant\n", "label": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : ((x_1337 : nat) -> (x_1336 : B) -> (x_1335 : B) -> (_x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Prop), forall _H_lstar_r_O : ((b : B) -> Q_ 0 b b (lstar_r_O B _R b)), forall _H_lstar_r_S : ((l : nat) -> (b1 : B) -> (b : B) -> (x_1340 : lstar_r B _R l b1 b) -> (b2 : B) -> (x_1339 : _R b b2) -> (_x_1342 : Q_ l b1 b x_1340) -> Q_ (l + 1) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)), forall x_1337 : nat, forall x_1336 : B, forall x_1335 : B, forall x_1338 : lstar_r B _R x_1337 x_1336 x_1335, Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : nat -> B -> B -> B -> lstar_r B -> _R -> B -> B -> Prop -> forall b : B, Q_ 0 b b (lstar_r_O B _R b) -> forall l : nat, b1 : B, b : B, x1340 : lstar_r B, _R, l, b1, b, b2 : B, x1339 : _R b b2, x1342 : Prop, Q_ l b1 b x1340 -> Q_ (l + 1) b1 b2 (lstar_r_S B _R l b1 b x1340 b2 x1339) -> forall x1337 : nat, forall x1336, x1335 : B, forall x1338 : lstar_r B, _R, x1337, x1336, x1335, Q_ x1337 x1336 x1335 x1338 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nBertrand. För alla naturliga tal $n$, om $0 < n$, så håller $bertrand$ för $n$.\nassistant\n", "label": "Axiom bertrand : forall n : nat, forall x__ : (0 < n), bertrand n .", "predict": "Axiom bertrand : forall n : nat, (0 < n -> Bertrand n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nMax_spec_to_max. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , m \\in N$. Alors pour tous les éléments $__$ de $max_spec$ de $n$ et de $f$ et de $m$, $max (n , f)= m$.\nassistant\n", "label": "postulate max_spec_to_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : max_spec n f m) -> Eq (max n f) m", "predict": "postulate max_spec_to_max : (f : Nat -> Bool) -> all Nat (\\ n -> all Nat (\\ m -> all (max_spec n f) (\\ x -> Eq (max n (f x)) m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_fact_10. The factorial of the product of $2$ and $5$ is less than or equal to the product of the product of the exponentiation of $2$ and the difference of the product of $2$ and $5$ and $2$ and the factorial of $5$ and the factorial of $5$.\nassistant\n", "label": "postulate le_fact_10 : Leq (factorial (times 2 5)) (times (times (pow 2 (minus (times 2 5) 2)) (factorial 5)) (factorial 5))", "predict": "postulate le_fact_10 : (2 * 5) ! <= ((2 ^ (2 * 5 - 2)) * (5 !) * (5 !))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1531. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < m$ et $n$ est divisible par $m$. Alors pour tous les nombres naturels $d$, si $m = n 0$, alors $m = 0$.\nassistant\n", "label": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0", "predict": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> and (Lt 0 m) (divisible n m) -> all Nat (\\ d -> if (Eq m (times n 0)) (Eq m 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nTimesACdef. Soient $n$ et $m$ des nombres naturels. Alors $aop__o__op (Nat , 1 , timesAC , n , m)= n m$.\nassistant\n", "label": "Axiom timesACdef : forall n : nat, forall m : nat, aop__o__op nat 1 timesAC n m = n * m .", "predict": "Axiom timesACdef : forall n : nat, forall m : nat, aop__o__op (Nat , 1 , timesAC , n , m) = n * m ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_15321. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < m$ et $0 = n$. Supposons que $0$ est divisible par $m$. Alors pour tous les nombres naturels $q$, si $m = 0 q$, alors $m = 0$.\nassistant\n", "label": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0", "predict": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> and (Lt 0 m) (Eq 0 n) -> Divisible 0 m -> all Nat (\\ q -> if (Eq m (times 0 q)) (Eq m 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLog_div. Låt $p$ och $n$ och $m$ vara naturliga tal. Anta att $1 < p$. Då om $0 < m$, så om $m \\leq n$, så $\\log_ p {(n \\div m)}\\leq \\log_ p {n}- \\log_ p {m}$.\nassistant\n", "label": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) .", "predict": "log_div : (p : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (Lt 1 p) -> Proof (Lt 0 m) -> Proof (Leq m n) -> Proof (Leq (log p (div n m)) (minus (log p n) (log p m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nBigop_commute. Låt $n , m \\in N$. Låt $p11$ vara en funktion från naturliga tal till sanningsvärden. Låt $p12$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $p21$ vara en funktion från naturliga tal till sanningsvärden. Låt $p22$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Då för alla element $op$ av $ACop$ av $B$ och $nil$, för alla funktioner $f$ från naturliga tal och naturliga tal $__1$ till element av $B$, om $0 < n$, så om $0 < m$, så för alla funktioner $__2$ från naturliga tal $i$ och naturliga tal $j$ och element $__2$ av $Lt$ av $i$ och $n$ och element $__3$ av $Lt$ av $j$ och $m$ till element av $Eq$ av $andb (p11 (i), p12 (i , j))$ och $andb (p21 (j), p22 (i , j))$, är $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p21$ applicerat på $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p22$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $j$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p11$ applicerat på $i$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $bigop$ applicerat på $m$ och funktionen som avbildar $j$ som $p12$ applicerat på $i$ och $j$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $j$ som $f$ applicerat på $i$ och $j$.\nassistant\n", "label": "axiom bigop_commute (n m : Nat) (p11 : (x__ : Nat) -> bool) (p12 : (x__ : Nat) -> (__1 : Nat) -> bool) (p21 : (x__ : Nat) -> bool) (p22 : (x__ : Nat) -> (__1 : Nat) -> bool) (B : Set) (nil : B) (op : ACop B nil) (f : (x__ : Nat) -> (__1 : Nat) -> B) (x__ : 0 < n) (__1 : 0 < m) (__2 : (i : Nat) -> (j : Nat) -> (__2 : i < n) -> (__3 : j < m) -> andb (p11 i) (p12 i j) = andb (p21 j) (p22 i j)) : bigop n (λ i => p11 i) B nil (aop__o__op B nil op) (λ i => bigop m (λ j => p12 i j) B nil (aop__o__op B nil op) (λ j => f i j)) = bigop m (λ j => p21 j) B nil (aop__o__op B nil op) (λ j => bigop n (λ i => p22 i j) B nil (aop__o__op B nil op) (λ i => f i j))", "predict": "axiom bigop_commute (n m : Nat) (p11 : Nat → Prop) (p12 : Nat → Nat → Prop) (p21 : Nat → Prop) (p22 : Nat → Nat → Prop) (B : Type) (nil : B) : ∀ op : ACop B, ∀ f : Nat → Nat → B, (0 < n ∧ 0 < m → ∀ i : Nat, ∀ j : Nat, Eq (andb (p11 i, p12 i j) ∧ andb (p21 j, p22 i j)) → Eq (bigop m (λ j, p21 j) B nil) (aop__o__op B nil op (λ j, bigop n (λ i, andb (p11 i, p22 i j)) B nil)) (bigop n (λ i, p11 i) B nil) (aop__o__op B nil op (λ i, bigop m (λ j, andb (p12 i j) (p22 i j)) B nil)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1573. Låt $n$ och $m$ vara naturliga tal. Då om $0 < n$ och $m$ är delbart med $n$, så för alla naturliga tal $d$, om $0 = m$ och $n = m d$, så $n = m$.\nassistant\n", "label": "Axiom let_clause_1573 : forall n : nat, forall m : nat, forall posn : (0 < n), forall _clearme : divisible m n, forall d : nat, forall auto : (0 = m), forall auto' : (n = m * d), n = m .", "predict": "Axiom let_clause_1573 : forall n : nat, forall m : nat, (0 < n /\\ (m mod n = 0) -> forall d : nat, (0 = m /\\ (n = m * d) -> n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nCongruent_times. Soit $n , m , n1 , m1 , p \\in N$. Supposons que $0 < p$. Soit $__1$ un élément de $congruent$ de $n$ et de $n1$ et de $p$. Alors pour tous les éléments $__2$ de $congruent$ de $m$ et de $m1$ et de $p$, $congruent$ tient pour $n \\times m$ et $n1 \\times m1$ et $p$.\nassistant\n", "label": "axiom congruent_times (n m n1 m1 p : Nat) (x__ : 0 < p) (__1 : congruent n n1 p) (__2 : congruent m m1 p) : congruent (n * m) (n1 * m1) p", "predict": "axiom congruent_times (n m n1 m1 p : Nat) (x : 0 < p) (x1 : congruent n n1 p) : ∀ x2 : congruent m m1 p, congruent (n * m) (n1 * m1) p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1544. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Then if $n$ is not divisible by $m$, then for all natural numbers $a$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_1544 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : a * mod m n - b * n = gcd_aux q n (mod m n)) : a * mod m n - n * b = gcd_aux q n (mod m n)", "predict": "axiom let_clause_1544 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, 0 ≤ n ∧ n ≤ m ∧ n ≤ q + 1 → ¬ (n % m) → ∀ a : Nat, ∀ ex : Lt 0 n ∧ Leq n m ∧ Leq n q → ex Nat (a → ex Nat (b → or (Eq (a * n - b * m) (gcd_aux q m n)) (Eq (b * n - a * n) (gcd_aux q m n)))) → ∀ b : Nat, or (Eq (a % (m, n) - b * n) (gcd_aux q n (mod m n))) (Eq (b * n - a % (m, n)) (gcd_aux q n (mod m n))) → Eq (a % (m, n) - n * b) (gcd_aux q n (mod m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15611. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Then for all natural numbers $c$, if the product of $m$ and $n$ is equal to the product of $p$ and $c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the difference of the product of $m$ and $b$ and the product of $p$ and $a$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (0 < p) -> (gcd p m == 1) -> (p % (m * n)) -> all Nat (\\ c -> if (Eq (m * n) (p * c)) (all Nat (\\ a -> all (ex : Nat) (\\ _clearme0 -> all Nat (\\ b -> if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (if (Eq (minus (times b m) (times a p)) (gcd p m)) (if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) 1))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nAxiom. Låt $_l$ vara en lista av naturliga tal. Låt $_n \\in N$. Då kan vi säga att $primes_all$ håller för $_l$ och $_n$.\nassistant\n", "label": "postulate primes_all : (_l : list Nat) -> (_n : Nat) -> Prop", "predict": "postulate primes_all : (l : List Nat) -> n : Nat -> Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Då om $n$ inte är delbart med $m$, så för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av $b$ och", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": " $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, då är $Eq$ applicerat på $a$ och $b$ lika med $Eq$ applicerat på $a$ och $b$.\n\npostulate clause_1544 : (p : Nat) -> (q : Nat) -> Hind -> Proof (and (Lt 0 n) (Leq n m) (Leq n (plus q 1))) -> Proof (if (not (divides m n)) (forall Nat (a => forall ex (clearme : ex Nat) => forall Nat (b => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))))) -> Eq a b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLstar_r_sn. Soit $B$ un ensemble. Soit $R$ un élément de $relation$ de $B$. Soit $l$ un nombre naturel. Soient $b$ et $b2$ des éléments de $B$. Soit $__$ un élément de $lstar_r$ de $B$ et de $R$ et de $l$ et de $b$ et de $b2$. Alors pour tous les éléments $b1$ de $B$, pour tous les éléments $__1$ de $R$ de $b1$ et de $b$, $lstar_r$ tient pour $B$ et $R$ et $l + 1$ et $b1$ et $b2$.\nassistant\n", "label": "axiom lstar_r_sn (B : Set) (R : relation B) (l : Nat) (b b2 : B) (x__ : lstar_r B R l b b2) (b1 : B) (__1 : R b1 b) : lstar_r B R (l + 1) b1 b2", "predict": "axiom lstar_r_sn (B : Set) (R : Relation B) (l : Nat) (b b2 : B) (x : lstar_r B R l b b2) : ∀ b1 : B, ∀ x1 : R b1 b, lstar_r B R (l + 1) b1 b2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nAop_rect_CProp5_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_877$ de $Aop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_Aop$ une fonction des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Soit $x_877$ un élément de $Aop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_877$.\nassistant\n", "label": "axiom Aop_rect_CProp5_body (A : Set) (_nil : A) (Q_ : (_x_877 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_877 : Aop A _nil) : Q_ x_877", "predict": "axiom aop_rect_CProp5_body (A : Type) (nil : A) (Q : ∀ x : Aop A nil, Prop) (H_mk_Aop : ∀ op : A → _, ∀ x : A, Eq (op nil) x → Eq x (H nil x)) (H_nilr : ∀ x : A, Eq (op x nil) x) (H_assoc : ∀ a : A, ∀ b : A, ∀ c : A, Eq (op (op a b) c) (op a (op b c))) : ∀ x : Aop A nil, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAntisymmetric_divides. Let $n$ and $m$ be natural numbers. Assume that $n$ is divisible by $m$. Then if $m$ is divisible by $n$, then $n = m$.\nassistant\n", "label": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, forall x__ : divisible n m, forall __1 : divisible m n, n = m .", "predict": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, (n % m -> m % n -> n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_transpose. Let $i , j , k , n \\in N$. Assume that $j$ is not equal to $i$. Assume that $i$ is not equal to $k$. Then if $j$ is not equal to $k$, then $transpose$ applied to $i$ and $j$ and $n$ is equal to $transpose$ applied to $i$ and $k$ and $transpose$ applied to $k$ and $j$ and $transpose$ applied to $i$ and $k$ and $n$.\nassistant\n", "label": "eq_transpose : i : Nat -> j : Nat -> k : Nat -> n : Nat -> __ : not (Eq j i) -> __1 : not (Eq i k) -> __2 : not (Eq j k) -> Eq (transpose i j n) (transpose i k (transpose k j (transpose i k n))) .", "predict": "eq_transpose : (i : Elem Nat) -> (j : Elem Nat) -> (k : Elem Nat) -> (n : Elem Nat) -> Proof (and (Neq j i) (Neq i k)) -> Proof (if (Neq j k) (Eq (transpose i j n) (transpose i k (transpose k j (transpose i k n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (i <= n -> j <= n -> forall a : nat, (a <= n /\\ f a = i -> a <= n /\\ f a = i) /\\ forall b : nat, (b <= n /\\ f b = j -> b <= n /\\ f b = j) -> (f b = j -> forall i0 : nat, forall injf : Leq i0 n /\\ Leq (f i0) n, a = b -> f a = i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_upper_bound6. Låt $n , m \\in N$. Anta att $nth_prime$ applicerat på $n$ är mindre än $m$. Då för alla naturliga tal $x$, $Nat$.\nassistant\n", "label": "postulate let_upper_bound6 : (n : Nat) -> (m : Nat) -> (ltml : Lt (nth_prime n) m) -> (x : Nat) -> Nat", "predict": "postulate let_upper_bound6 : (n : Nat) -> (m : Nat) -> nth_prime n < m -> all Nat (\\ x -> ...)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_to_le. Soit $n , m \\in N$. Alors si $0$ est inférieur à $m$, alors si $n$ est divisible par $m$, alors $n$ est inférieur ou ágal à $m$.\nassistant\n", "label": "divides_to_le : n : Nat -> m : Nat -> __ : Lt 0 m -> __1 : divisible n m -> Leq n m .", "predict": "divides_to_le : n : Elem Nat -> m : Elem Nat -> Proof (if (Lt (nd 0) m) (if (Divisible n m) (Leq n m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLstar_inv_S. Låt $B$ vara en mängd. Låt $R$ vara ett element av $relation$ av $B$. Låt $l$ vara ett naturligt tal. Låt $b1$ och $b2$ vara element av $B$. Låt $__$ vara ett element av $lstar$ av $B$ och $R$ och $l$ och $b1$ och $b2$. Låt $l0 \\in N$. Då om $l0 + 1 = l$, så håller $ex2$ för $B$ och funktionen som avbildar $b$ som $R (b1 , b)$ och funktionen som avbildar $b$ som $lstar (B , R , l0 , b , b2)$.\nassistant\n", "label": "axiom lstar_inv_S (B : Set) (R : relation B) (l : Nat) (b1 b2 : B) (x__ : lstar B R l b1 b2) (l0 : Nat) (__1 : l0 + 1 = l) : ex2 B (λ b => R b1 b) (λ b => lstar B R l0 b b2)", "predict": "axiom lstar_inv_S (B : Set) (R : Relation B) (l : Nat) (b1 b2 : B) (x : lstar B R l b1 b2) (l0 : Nat) : l0 + 1 = l → ex2 B (λ b, R (b1, b)) (λ b, lstar (B, R, l0, b, b2))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem Nat -> Nat -> Proof (let (permf : Elem (permut f n)) (let (i : Elem Nat) (let (j : Elem Nat) (and (Leq i n) (Leq j n)) (let (a : Elem Nat) (and (Leq a n) (Eq (f a) i))) (let (b : Elem Nat) (and (Leq b n) (Eq (f b) j))) (let (__) (Function (and (Elem Nat) (Elem (Leq (f (nd 0)) n))) (and (Elem (Leq (f (nd 0)) n)) (Eq (f (nd 0)) i))) (forall (injf : Elem (injn (f n))) (if (Eq a b) (Eq (f a) i)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1012. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $i$ des nombres naturels. Soit $Hind$ une fonction des nombres naturels $b$ à des éléments de $prod$ de $Prop$ et de $Prop$ et de $Eq$ appliqué à $f$ appliqué à $let_m2$ appliqué à $f$ et $n$ et $i$ et $b$ et contradiction et de la fonction qui envoie $__$ à $Eq$ appliqué à $let_m2$ appliqué à $f$ et $n$ et $i$ et $b$ et la somme de $i$ et de $b$. Soit $b$ un nombre naturel. Supposons que $f$ appliqué à $b$ est égal à $true$. Supposons que $f$ appliqué à $b$ est égal à contradiction. Alors contradiction est égal à $true$.\nassistant\n", "label": "axiom let_clause_1012 (f : (x__ : Nat) -> bool) (n i : Nat) (Hind : (b : Nat) -> prod Prop Prop (f (let_m2 f n i b) = false) (λ x__ => let_m2 f n i b = i + b)) (b : Nat) (fb : f b = true) (eqm : f b = false) : false = true", "predict": "axiom let_clause_1012 (f : Nat → Bool) (n i : Nat) (Hind : ∀ b : Nat, Prop × Prop × Eq (f (let_m2 f n i) b) contradiction) : ∀ b : Nat, (f b = true → f b = contradiction → contradiction = true)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nSame_bigop. Soit $k$ un nombre naturel. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$. Alors pour toutes les fonctions $f$ et $g$ des nombres naturels à des éléments de $B$, pour tous les éléments $__$ de $sameF_upto$ de $k$ et de $bool$ et de $p1$ et de $p2$, pour tous les éléments $__1$ de $sameF_p$ de $k$ et de $p1$ et de $B$ et de $f$ et de $g$, $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $g$ appliqué à $i$.\nassistant\n", "label": "Axiom same_bigop : forall k : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), forall x__ : sameF_upto k bool p1 p2, forall __1 : sameF_p k p1 B f g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i) .", "predict": "Axiom same_bigop : forall k : nat, forall p1 : nat -> bool, forall p2 : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, (forall f : nat -> B, forall g : nat -> B, forall sameF_upto : bool * p1 * p2, forall sameF_p : p1 * B * f * g, (bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nEq_div_div_div_div. Låt $n$ och $m$ och $q$ vara naturliga tal. Anta att $0 < n$. Då om $0 < m$, så $q \\div n \\div m = q \\div m \\div n$.\nassistant\n", "label": "Axiom eq_div_div_div_div : forall n : nat, forall m : nat, forall q : nat, forall x__ : (0 < n), forall __1 : (0 < m), q / n / m = q / m / n .", "predict": "Axiom eq_div_div_div_div : forall n : nat, (0 < n -> forall m : nat, (0 < m -> forall q : nat, eq (q / n / m) (q / m / n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_n_O. Let $n$ be a natural number. Then $0 = n 0$.\nassistant\n", "label": "Axiom times_n_O : forall n : nat, 0 = n * 0 .", "predict": "Axiom times_n_O : forall n : nat, 0 = n * 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_16171. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale à $1$. Alors le diviseur commun plus grand de $p$ et de $m$ est égal à la différence du produit de $m$ et de $b$ et du produit de $p$ et de $a$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n) == 0) -> (c : Nat) -> (w : m * n == p * c) -> (a : Nat) -> (clearme0 : Ex (Nat -> if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (if (Eq (minus (times b m) (times a p)) 1) (Eq (gcd p m) (minus (times m b) (times p a)))))) -> b : Nat -> if (or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (Eq (minus (times b m) (times a p)) (gcd p m)) -> Eq (gcd p m) (minus (times m b) (times p a))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_10471. Låt $n1$ och $n2$ vara naturliga tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $_clearme0$ vara ett element av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $", "label": "Axiom let_clause_10471 : forall n1 : nat, forall n2 : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f1 : ((x__ : nat) -> B), forall f2 : ((x__ : nat) -> B), forall _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2), forall h : ((x__ : nat) -> nat), forall _clearme0 : ex (prod Set Set nat (fun x__ => nat)) (fun k => prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ => prod Prop Prop (p1 i = true) (fun __1 => f1 i = f2 (h i)))) /\\ sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) /\\ sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)), forall k : ((x__ : nat) -> nat), forall _clearme1 : (prod Set Prop nat (fun i => prod Prop Prop (i < n1) (fun x__ =>", "predict": "Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $k$ som $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $Eq$ håller för $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nP_ord_exp. Låt $n , m , i \\in N$. Anta att $0 < m$. Anta att $mod (n , m)$ inte är lika med $0$. Då för alla naturliga tal $p$, om $i \\leq p$, så $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.\nassistant\n", "label": "Axiom p_ord_exp : forall n : nat, forall m : nat, forall i : nat, forall x__ : (0 < m), forall __1 : (~ (mod n m = 0)), forall p : nat, forall __2 : Leq i p, p_ord_aux p (pow m i * n) m = mk_Prod nat nat i n .", "predict": "Axiom p_ord_exp : forall n : nat, forall m : nat, (0 < m -> ~ (mod n m = 0) -> forall i : nat, (forall p : nat, (i <= p -> p_ord_aux p (pow m i * n) m = mk_Prod Nat Nat i n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nChecker_abl. Let $a$ and $b$ be natural numbers. Let $l$ be a list of natural numbers. Assume that $checker (cons (Nat , a , cons (Nat , b , l)))= true$. Then $a < b$, $b \\leq 2 a$ and $checker (cons (Nat , b , l))= true$.\nassistant\n", "label": "postulate checker_abl : (a : Nat) -> (b : Nat) -> (l : list Nat) -> (_ : Eq (checker (cons Nat a (cons Nat b l))) true) -> and (and (Lt a b) (Leq b (times 2 a))) (Eq (checker (cons Nat b l)) true)", "predict": "postulate checker_abl : (a : Nat) -> (b : Nat) -> List Nat -> and (Lt a b) (Leq b (times 2 a)) (true == (checker (cons (Nat) b l)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nSigma_const. Låt $n$ vara ett naturligt tal. Då är $n$ lika med $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $1$.\nassistant\n", "label": "axiom sigma_const (n : Nat) : bigop n (λ i => true) Nat 0 plus (λ i => 1) = n", "predict": "axiom sigma_const (n : Nat) : n = bigop n (λ i, if (true : Nat) 0 (plus 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_n_to_eq_n. Let $h$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $permut$ of $h$ and $n$, for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Lt$ of $m$ and $n$ to elements of $Eq$ of $h (m)$ and $m$, $h (n)= n$.\nassistant\n", "label": "postulate permut_n_to_eq_n : (h : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut h n) -> (__1 : (m : Nat) -> (__1 : Lt m n) -> Eq (h m) m) -> Eq (h n) n", "predict": "postulate permut_n_to_eq_n : (h : Nat -> Nat) -> n : Nat -> all (permut h n) (all Nat (m => all (Lt m n) (Eq (h m) m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1607. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_1607 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_1607 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (Lt Nat 0 n) -> Proof (Lt Nat 0 m) -> Proof (Eq Nat (Gcd n m) 1) -> c : Elem Nat -> Proof (Clearme (ex (Nat (fun d => Disj (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)))) -> d : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (Gcd m n) (minus (times m d) (times n c)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLt_minus_to_plus. Låt $a$ och $b$ och $c$ vara naturliga tal. Då om skillnaden mellan $a$ och $b$ är mindre än $c$, så är $a$ mindre än summan av $c$ och $b$.\nassistant\n", "label": "Axiom lt_minus_to_plus : forall a : nat, forall b : nat, forall c : nat, forall x__ : (a - b < c), a < c + b .", "predict": "Axiom lt_minus_to_plus : forall a : nat, forall b : nat, forall c : nat, (a - b < c -> a < c + b) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_897$ of $ACop$ of $A$ and $_nil$ to elements of $Type2$. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$. Then for all elements $x_897$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_897$.\nassistant\n", "label": "postulate ACop_rect_Type2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_897 : ACop A _nil) -> Type2) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_897 : ACop A _nil) -> Q_ x_897", "predict": "postulate cop_rect_Type2_body : (A : Set) -> _nil : A -> (Q_ : (x : ACop A) -> _nil -> Type2) -> (aop : Aop A) -> _nil -> (comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Type2 (Q_ (mk_ACop A _nil aop comm))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_times. For all natural numbers $n1$ and $n2$ and $m1$ and $m2$, if $n1 \\leq n2$ and $m1 \\leq m2$, then $n1 m1 \\leq n2 m2$.\nassistant\n", "label": "axiom le_times (n1 n2 m1 m2 : Nat) (x__ : n1 ≤ n2) (__1 : m1 ≤ m2) : n1 * m1 ≤ n2 * m2", "predict": "axiom le_times (n1 n2 m1 m2 : Nat) (x : n1 ≤ n2 ∧ m1 ≤ m2) : n1 * m1 ≤ n2 * m2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1033. Soit $n \\in N$. Supposons que $1 < n$. Soit $x2515 , x2516 \\in N$. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_1033 : forall n : nat, forall lt1n : (1 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall n : nat, (1 < n -> forall x2515 : nat, forall x2516 : nat, (x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_times_gcd_aux. Pour tous les nombres naturels $p$ et $m$ et $n$ et $d$ et $c$, si $0 < c$ et $0 < n$, alors si $n \\leq m$ et $n \\leq p$, alors si $d$ est et divisible par $c \\times m$ et divisible par $c \\times n$, alors $d$ est divisible par $c \\times gcd_aux (p , m , n)$.\nassistant\n", "label": "divides_times_gcd_aux : p : Nat -> m : Nat -> n : Nat -> d : Nat -> c : Nat -> __ : Lt 0 c -> __1 : Lt 0 n -> __2 : Leq n m -> __3 : Leq n p -> __4 : divisible d (times c m) -> __5 : divisible d (times c n) -> divisible d (times c (gcd_aux p m n)) .", "predict": "divides_times_gcd_aux : (p : Elem Nat) -> (m : Elem Nat) -> (n : Elem Nat) -> (d : Elem Nat) -> (c : Elem Nat) -> Proof (and (Lt (nd 0) c) (Lt (nd 0) n)) -> Proof (and (Leq n m) (Leq n p)) -> Proof (and (divisible d (times c m)) (divisible d (times c n))) -> Proof (divisible d (times c (gcd_aux p m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1561. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c$ un nombre naturel. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$. Alors la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$ est égale à $1$.\nassistant\n", "label": "axiom let_clause_1561 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : p * a - m * b = 1", "predict": "axiom so1561 (p m n : Nat) (x : 0 < p) (y : gcd p m = 1) (z : p % (m * n) = 0) (c : Nat) (a : Nat) (x : Eq (m * n) (p * c)) (y : clearme0 : ex (b : Nat) (Eq (gcd p m) (abs (p * a - b * m))) ∨ Eq (gcd p m) (abs (b * m - p * a))) (z : Eq (gcd p m) 1) : Eq (p * a - m * b) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_15624. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.\nassistant\n", "label": "axiom let_clause_15624 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15624 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) (c : Nat) : ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1) → Eq (m * d - n * c) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLt_4_to_le_B_exp. Låt $n$ vara ett naturligt tal. Anta att $4 < n$. Då $B (2 n)\\leq 2 ^ (2 n - 2)$.\nassistant\n", "label": "axiom lt_4_to_le_B_exp (n : Nat) (x__ : 4 < n) : B (2 * n) ≤ pow 2 (2 * n - 2)", "predict": "axiom lt_4_to_le_B_exp (n : Nat) (x : 4 < n) : B (2 * n) ≤ pow 2 (2 * n - 2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nPlus_div. Soient $n$ et $m$ et $d$ des nombres naturels. Supposons que $0$ est inférieur à $d$. Alors si $d$ est divisible par $n$, alors si $d$ est divisible par $m$, alors le quotient de la somme de $n$ et de $m$ et de $d$ est égal à la somme du quotient de $n$ et de $d$ et du quotient de $m$ et de $d$.\nassistant\n", "label": "postulate plus_div : (n : Nat) -> (m : Nat) -> (d : Nat) -> (_ : Lt 0 d) -> (__1 : divisible d n) -> (__2 : divisible d m) -> Eq (div (plus n m) d) (plus (div n d) (div m d))", "predict": "postulate plus_div : (n : Nat) -> (m : Nat) -> (d : Nat) -> 0 < d -> if (divisible d n) (if (divisible d m) (equal (quot (plus n m) d) (plus (quot n d) (quot m d))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $5 < n$. Låt $m$ vara ett naturligt tal. Anta att $6 \\leq m$ och $(m + 1)^ 2 \\leq 2 ^ m$. Låt $a$ vara ett naturligt tal. Anta att $6 \\leq a$ och $2 (a + 1)+ 1 \\leq 2 ^ a$. Låt $x2515$ och $x2516$ vara naturliga tal. Då $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (lt4n : 5 < n) (m : Nat) (le4m : 6 ≤ m) (Hind : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (lea : 6 ≤ a) (Hinda : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n : Nat) (x : 5 < n) (m : Nat) (y : 6 ≤ m ∧ pow (m + 1) 2 ≤ pow m) (a : Nat) (z : 6 ≤ a ∧ 2 * (a + 1) + 1 ≤ pow a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDiv_mod_spec_rect_CProp1. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_853$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Då för alla funktioner $_H_div_mod_spec_intro$ från element $x_855$ av $Lt$ av $_r$ och $_m$ och element $x_854$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_855 , x_854)$, för alla element $x_853$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_853$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp1 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_853 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_855 : _r < _m) -> (x_854 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)), forall x_853 : div_mod_spec _n _m _q _r, Q_ x_853 .", "predict": "Axiom div_mod_spec_rect_CProp1 : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall Q : div_mod_spec n m q r -> Prop -> forall H_div_mod_spec_intro : Lt r m /\\ Eq n (q * m + r) -> forall x_853 : div_mod_spec n m q r, Q x_853 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nBigop_sumI. Soient $a$ et $b$ et $c$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $a \\leq b$, alors si $b \\leq c$, alors $op$ appliqué à $B$ et $nil$ et $op$ et $bigop$ appliqué à la différence de $c$ et de $b$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $b$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $b$ et $bigop$ appliqué à la différence de $b$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ est égal à $bigop$ appliqué à la différence de $c$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$.\nassistant\n", "label": "postulate bigop_sumI : (a : Nat) -> (b : Nat) -> (c : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> (__1 : Leq b c) -> Eq (bigop (minus c a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (op B nil op (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i b)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b))) (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))))", "predict": "postulate bigop_sumI : (a : Nat) -> (b : Nat) -> (c : Nat) -> (p : Nat -> Bool) -> all Set (all Nat (all (Aop Nat) (all Nat (all (f : Nat -> Elem Set) -> if (Leq a b) (if (Leq b c) (eq (op (B Set) nil) (and (op (op (bigop (minus c b) (fun (i => (fun (i0 => p (p (i0 (plus i b))))) B nil) (op (B Set) nil) (op (op (bigop (minus b a) (fun (i => (fun (i0 => p (p (i0 (plus i a)))))) B nil)) (op (B Set) nil) (op (op (bigop (minus b a) (fun (i => (fun (i0 => p (p (i0 (plus i a)))))) B nil)) (op (B Set) nil) (op (fun (i => (fun (i0 => f (f (i0 (plus i b)))))) B nil)))))) (eq (op (B Set) nil) (and (op (B Set) nil) (op (op (bigop (minus c a) (fun (i => (fun (i0 => p (p (i0 (plus i a)))))) B nil)) (op (B Set) nil) (op (fun (i => (fun (i0 => f (f (i0 (plus i a)))))) B nil)))))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDop_rect_CProp0. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_967$ av $Dop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$, för alla element $x_967$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_967$.\nassistant\n", "label": "Axiom Dop_rect_CProp0 : forall A : Set, forall _nil : A, forall Q_ : ((_x_967 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_967 : Dop A _nil, Q_ x_967 .", "predict": "Axiom dop_rect_CProp0 : forall A : Type, forall nil : A, forall Q_ : Dop A nil -> Prop, forall H_mk_Dop : ACop A nil -> Prod A (Eq nil) -> Prop, forall null : A -> Eq (Prod nil) (Eq null), forall distr : A -> A -> A -> Eq (Prod (aop__o__op A nil sum) (Prod a b) (Prod a c)) (distr a b c), forall x_967 : Dop A nil, Q_ x_967 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nStart_lop. For all natural numbers $n$, if $1 \\leq n$, then $option_hd (Nat , list_of_primes (n))= Some (Nat , 2)$.\nassistant\n", "label": "axiom start_lop (n : Nat) (x__ : 1 ≤ n) : option_hd Nat (list_of_primes n) = Some Nat 2", "predict": "axiom start_lop (n : Nat) (x : 1 ≤ n) : option_hd (Nat, list_of_primes n) = some (Nat, 2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_inv_rect_Type2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Then for all functions $P$ from elements $_z1716$ of $Dop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1717$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate Dop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1716 : Dop x1 x2) -> Type2) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1717 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm", "predict": "postulate dop_inv_rect_Type2 : (x1 : Set) -> x2 : x1 -> Hterm : Dop x1 x2 -> all (P : Dop x1 x2 -> Set) -> all (sum : ACop x1 x2) -> all (prod : x1 -> x1 -> x1) -> all (null : x1 -> Eq (prod x2 x) x2) -> all (distr : x1 -> x1 -> x1 -> Eq (prod (a , aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> all (Eq Hterm (mk_Dop x1 x2 sum prod null distr)) -> P (mk_Dop x1 x2 sum prod null distr)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_upper_bound4. Soient $n$ et $m$ des nombres naturels. Alors $Nat$.\nassistant\n", "label": "axiom let_upper_bound4 (n m : Nat) : Nat", "predict": "axiom let_upper_bound4 (n m : Nat) : Prop"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nDivides_gcd_mod. Soit $m , n \\in N$. Supposons que $0$ est inférieur à $n$. Alors le diviseur commun plus grand de $m$ et de $n$ est divisible par le diviseur commun plus grand de $n$ et de $mod$ appliqué à $m$ et $n$.\nassistant\n", "label": "divides_gcd_mod : m : Nat -> n : Nat -> __ : Lt 0 n -> divisible (gcd m n) (gcd n (mod m n)) .", "predict": "divides_gcd_mod : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (divides (gcd m n) (gcd n (mod m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10131. Let $f$ be a function from natural numbers to booleans. Let $n , m , n0 \\in N$. Assume that $max (n0 + 1 , f)= m$. Assume that absurdity is equal to $f (m)$. Let $i$ and $j$ be natural numbers. Assume that $j + 1 < n0 + 1$. Let $x7$ be a natural number. Then $x7 = m + x7$.\nassistant\n", "label": "let_clause_10131 : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> n0 : Nat -> eqm : Eq (max (plus n0 (nd 1)) f) m -> fm : Eq (f m) false -> i : Nat -> j : Nat -> ltj : Lt (plus j (nd 1)) (plus n0 (nd 1)) -> x7 : Nat -> Eq x7 (plus m x7) .", "predict": "let_clause_10131 : f : Elem (Nat -> Bool) -> n : Elem Nat -> m : Elem Nat -> n0 : Elem Nat -> Proof (Eq (max (plus n0 (nd 1)) f) m) -> Proof (Eq (absurdity) (f m)) -> i : Elem Nat -> j : Elem Nat -> Proof (Lt (plus j (nd 1)) (plus n0 (nd 1))) -> x7 : Elem Nat -> Proof (Eq x7 (plus m x7)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLt_times_n. Soient $n$ et $m$ des nombres naturels. Alors si $0$ est inférieur à $n$, alors $m$ est inférieur ou ágal au produit de $n$ et de $m$.\nassistant\n", "label": "Axiom lt_times_n : forall n : nat, forall m : nat, forall x__ : (0 < n), Leq m (n * m) .", "predict": "Axiom lt_times_n : forall n : nat, forall m : nat, (0 < n -> m <= n * m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_CProp3. Let $x1 , x2 , x3 , x4 \\in N$. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Let $P$ be a function from elements $_z1476$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions. Let $_H1$ be a function from elements $x_847$ of $Lt$ of $x4$ and $x2$ and elements $x_846$ of $Eq$ of $x1$ and $x3 x2 + x4$ and elements $_z1477$ of $Eq$ of $Hterm$ and $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$ to elements of $P$ of $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_CProp3 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1476 : div_mod_spec x1 x2 x3 x4) -> Prop) (_H1 : (x_847 : x4 < x2) -> (x_846 : x1 = x3 * x2 + x4) -> (_z1477 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_847 x_846) -> P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_CProp3 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : ∀ z : div_mod_spec x1 x2 x3 x4, Prop) (H1 : ∀ x : Lt x4 x2 ∧ Eq x1 (x3 * x2 + x4) ∧ Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x)) → P (div_mod_spec_intro x1 x2 x3 x4)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLstar_ind. Låt $B$ vara en mängd. Låt $_R$ vara ett element av $relation$ av $B$. Då för alla funktioner $Q_$ från naturliga tal $x_1233$ och element $x_1232$ av $B$ och element $x_1231$ av $B$ och element $_x_1234$ av $lstar$ av $B$ och $_R$ och $x_1233$ och $x_1232$ och $x_1231$ till påståenden, för alla funktioner $_H_lstar_O$ från element $b$ av $B$ till element av $Q_$ av $0$ och $b$ och $b$ och $lstar_O (B , _R , b)$, för alla funktioner $_H_lstar_S$ från element $b1$ av $B$ och element $b$ av $B$ och element $x_1236$ av $_R$ av $b1$ och $b$ och naturliga tal $l$ och element $b2$ av $B$ och element $x_1235$ av $lstar$ av $B$ och $_R$ och $l$ och $b$ och $b2$ och element $_x_1238$ av $Q_$ av $l$ och $b$ och $b2$ och $x_1235$ till element av $Q_$ av $l + 1$ och $b1$ och $b2$ och $lstar_S (B , _R , b1 , b , x_1236 , l , b2 , x_1235)$, för alla naturliga tal $x_1233$, för alla element $x_1232$ och $x_1231$ av $B$, för alla element $x_1234$ av $lstar$ av $B$ och $_R$ och $x_1233$ och $x_1232$ och $x_1231$, håller $Q_$ för $x_1233$ och $x_1232$ och $x_1231$ och $x_1234$.\nassistant\n", "label": "axiom lstar_ind (B : Set) (_R : relation B) (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (l + 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) (x_1233 : Nat) (x_1232 x_1231 : B) (x_1234 : lstar B _R x_1233 x_1232 x_1231) : Q_ x_1233 x_1232 x_1231 x_1234", "predict": "axiom lstar_ind (B : Set) (R : Relation B) : ∀ Q : Nat → B → B → Prop → ∀ b : B, ∀ x : Q 0 b b b (lstar R b) → ∀ b1 : B, ∀ b : B, ∀ x : R b1 b, ∀ l : Nat, ∀ b2 : B, ∀ x : lstar R b b2, ∀ x : Q l b b2 (x : l + 1) b1 b2 (x : lstar R b1 b x : R b1 b x : l b b2 x : lstar R b b2), ∀ x : Q l b b2, ∀ x : Q (l + 1) b1 b2, ∀ x : lstar R b1 b x : R b1 b x : l b b2 x : lstar R b b2) := Q x x x x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nEq_times_div_minus_mod. Låt $a$ och $b$ vara naturliga tal. Då är produkten av kvoten av $a$ och $b$ och $b$ lika med skillnaden mellan $a$ och $mod$ applicerat på $a$ och $b$.\nassistant\n", "label": "axiom eq_times_div_minus_mod (a b : Nat) : a / b * b = a - mod a b", "predict": "axiom eq_times_div_minus_mod (a b : Nat) : a * (b / b) = a - mod a b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_CProp3. Let $Q_$ be a function from natural numbers $_x_401$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_402$ and elements $_x_404$ of $Q_$ of $x_402$ to elements of $Q_$ of $x_402 + 1$. Then for all natural numbers $x_401$, $Q_$ holds for $x_401$.\nassistant\n", "label": "axiom nat_rect_CProp3 (Q_ : (_x_401 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_402 : Nat) -> (_x_404 : Q_ x_402) -> Q_ (x_402 + 1)) (x_401 : Nat) : Q_ x_401", "predict": "axiom nat_rect_CProp3 (Q : Nat → Prop) (H_O : Q 0) (H_S : ∀ x : Nat, ∀ x_404 : Q x, Q (x + 1)) : ∀ x : Nat, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nTimes_div_le. För alla naturliga tal $a$ och $b$ och $c$ och $d$, om $0 < b$, så om $0 < d$, så $a \\div b (c \\div d)\\leq a c \\div (b d)$.\nassistant\n", "label": "Axiom times_div_le : forall a : nat, forall b : nat, forall c : nat, forall d : nat, forall x__ : (0 < b), forall __1 : (0 < d), Leq (a / b * (c / d)) (a * c / (b * d)) .", "predict": "Axiom times_div_le : forall a : nat, forall b : nat, b > 0 -> forall c : nat, forall d : nat, d > 0 -> a / b * (c / d) <= a * c / (b * d) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp2. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_935$ of $range$ of $_A$ to propositions. Let $_H_mk_range$ be a function from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range (_A , _enum , _upto , _filter)$. Then for all elements $x_935$ of $range$ of $_A$, $Q_$ holds for $x_935$.\nassistant\n", "label": "range_rect_CProp2 : _A : Set -> Q_ : (_x_935 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_935 : range _A -> Q_ x_935 .", "predict": "range_rect_CProp2 : (A : Elem Set) -> (Q : x_935 : Elem (range A)) -> Proof (H_mk_range : (enum : Elem (Nat -> Elem A)) -> upto : Elem Nat -> (filter : Elem (Nat -> Elem Bool)) -> Proof (mk_range A enum upto filter)) -> Proof (forall (x_935 : Elem (range A)) (Q x_935)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Eq (gcd n m) 1) -> (c : Nat) -> (clearme : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> if (or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times d m) (times c n)) 1)) (Eq (gcd m n) (minus (times m d) (times n c)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nNat_inv_rect_CProp2. Låt $Hterm$ vara ett naturligt tal. Låt $P$ vara en funktion från naturliga tal $_z701$ till påståenden. Låt $_H1$ vara en funktion från element $_z702$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$. Låt $_H2$ vara en funktion från naturliga tal $x_406$ och funktioner $_x_408$ från element $_z702$ av $Eq$ av $Hterm$ och $x_406$ till element av $P$ av $x_406$ och element $_z702$ av $Eq$ av $Hterm$ och $x_406 + 1$ till element av $P$ av $x_406 + 1$. Då håller $P$ för $Hterm$.\nassistant\n", "label": "nat_inv_rect_CProp2 : Hterm : Nat -> P : (_z701 : Nat -> Prop) -> _H1 : (_z702 : Eq Hterm 0 -> P 0) -> _H2 : (x_406 : Nat -> _x_408 : (_z702 : Eq Hterm x_406 -> P x_406) -> _z702 : Eq Hterm (plus x_406 (nd 1)) -> P (plus x_406 (nd 1))) -> P Hterm .", "predict": "nat_inv_rect_CProp2 : (Hterm : Elem Nat) -> (P : Proof (forall Nat (x => Prop))) -> Proof (forall (x : Elem (Eq Hterm 0)) (H1 : Proof (P 0)) -> forall (x : Nat) (H2 : Proof (forall (y : Elem (Eq Hterm (plus x 1))) (P (plus x 1)))) -> Proof (forall Nat (x => P x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nDiv_mod_spec_inv_rect_Type1. Soient $x1$ et $x2$ et $x3$ et $x4$ des nombres naturels. Soit $Hterm$ un élément de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$. Soit $P$ une fonction des éléments $_z1458$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des éléments de $Type1$. Soit $_H1$ une fonction des éléments $x_831$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_830$ de $Eq$ de $x1$ et de $x3 x2 + x4$ et des éléments $_z1459$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_831 , x_830)$ à des éléments de $P$ de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_831 , x_830)$. Alors $P$ tient pour $Hterm$.\nassistant\n", "label": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1458 : div_mod_spec x1 x2 x3 x4) -> Type1) -> (_H1 : (x_831 : Lt x4 x2) -> (x_830 : Eq x1 (plus (times x3 x2) x4)) -> (_z1459 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P Hterm", "predict": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> div_mod_spec x1 x2 x3 x4 -> Eq (P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) (Hterm)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nEq_plus_to_le. Låt $n , m , p \\in N$. Anta att $n = m + p$. Då $m \\leq n$.\nassistant\n", "label": "Axiom eq_plus_to_le : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n = m + p), Leq m n .", "predict": "Axiom eq_plus_to_le : forall n : nat, forall m : nat, forall p : nat, (n = m + p -> m <= n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1553. Let $n$ and $n0$ be natural numbers. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$. Let $a \\in N$. Assume that $n0$ is equal to the product of $2$ and $a$ or $n0$ is equal to the sum of the product of $2$ and $a$ and $1$. Then if $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then $n0$ is equal to the sum of $a$ and the sum of $a$ and $1$.\nassistant\n", "label": "Axiom let_clause_1553 : forall n : nat, forall n0 : nat, forall _clearme : ex nat (fun a => n0 = 2 * a \\/ n0 = 2 * a + 1), forall a : nat, forall _clearme0 : (n0 = 2 * a \\/ n0 = 2 * a + 1), forall Hn : (n0 = 2 * a + 1), n0 = a + (a + 1) .", "predict": "Axiom let_clause_1553 : forall n : nat, forall n0 : nat, forall clearme : ex, (Nat -> Prop),\n  (a : nat) -> Eq n0 (2 * a \\/ Eq n0 (2 * a + 1)) -> (Eq n0 (2 * a + 1) -> Eq n0 (a + (a + 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_minus_to_plus. Pour tous les nombres naturels $n$ et $m$ et $p$, si la différence de $n$ et de $m$ est inférieure ou ágale à $p$, alors $n$ est inférieur ou ágal à la somme de $p$ et de $m$.\nassistant\n", "label": "Axiom le_minus_to_plus : forall n : nat, forall m : nat, forall p : nat, forall x__ : Leq (n - m) p, Leq n (p + m) .", "predict": "Axiom le_minus_to_plus : forall n : nat, forall m : nat, forall p : nat, (n - m <= p -> n <= p + m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLprim_invariant. Let $n , i \\in N$. Let $acc$ be a list of natural numbers. Then if $1$ is less than $i$, then for all elements $__1$ of $primes_below$ of $acc$ and $i$, $primes_below$ holds for $lprim$ applied to $n$ and $i$ and $acc$ and the sum of $n$ and $i$.\nassistant\n", "label": "lprim_invariant : n : Nat -> i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> primes_below (lprim n i acc) (plus n i) .", "predict": "lprim_invariant : (n : Elem Nat) -> (i : Elem Nat) -> Proof (forall Nat (acc => if (Lt (nd 1) i) (forall (p : Elem (primes_below acc)) (forall Nat (j => Eq (primes_below (lprim n i acc)) (plus n j)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_case. Let $n$ be a natural number. Let $P$ be a function from natural numbers to propositions. Let $__$ be a function from elements of $Eq$ of $n$ and $0$ to elements of $P$ of $0$. Then for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Eq$ of $n$ and the sum of $m$ and $1$ to elements of $P$ of the sum of $m$ and $1$, $P$ holds for $n$.\nassistant\n", "label": "postulate nat_case : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (_ : Eq n 0) -> P 0) -> (__1 : (m : Nat) -> (__1 : Eq n (plus m 1)) -> P (plus m 1)) -> P n", "predict": "postulate nat_case : (n : Nat) -> (P : Nat -> Prop) -> (nEq0 : Eq n 0 -> P 0) -> all Nat (\\ m -> all (Eq n (plus m 1)) -> P (plus m 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nFact_pi_p3. Pour tous les nombres naturels $n$, la factorielle du produit de $2$ et de $n$ est égale au produit de $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ et de $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et de $mod$ appliqué à le quotient du produit de $2$ et de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ et $2$.\nassistant\n", "label": "fact_pi_p3 : n : Nat -> Eq (factorial (times (nd 2) n)) (times (bigop (plus (times (nd 2) n) (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p (times (nd 2) n)) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (times (nd 2) (div n (pow p (plus i (nd 1)))))))) (bigop (plus (times (nd 2) n) (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p (times (nd 2) n)) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (mod (div (times (nd 2) n) (pow p (plus i (nd 1)))) (nd 2)))))) .", "predict": "fact_pi_p3 : (n : Elem Nat) -> Proof (Eq (fact (times (nd 2) n)) (times (bigop (plus (times (nd 2) n) (nd 1))) (times (primeb n) (nd 1)) (times (times (nd 1) (times (nd 2) (nd 1))) (times (nd 1) (times (nd 2) (nd 1)))) (times (times (nd 1) (times (nd 2) (nd 1))) (times (nd 1) (times (nd 2) (nd 1)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLt_to_le_to_lt. Soient $n$ et $m$ et $p$ des nombres naturels. Alors si $n$ est inférieur à $m$, alors si $m$ est inférieur ou ágal à $p$, alors $n$ est inférieur à $p$.\nassistant\n", "label": "postulate lt_to_le_to_lt : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt n m) -> (__1 : Leq m p) -> Lt n p", "predict": "postulate lt_to_le_to_lt : (n : Nat) -> (m : Nat) -> (p : Nat) -> n < m -> m ≤ p -> n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nDivides_exp_to_divides. Låt $p , n , m \\in N$. Anta att $p$ är primt. Anta att $p$ är delbart med potensen av $n$ och $m$. Då är $p$ delbart med $n$.\nassistant\n", "label": "Axiom divides_exp_to_divides : forall p : nat, forall n : nat, forall m : nat, forall x__ : prime p, forall __1 : divisible p (pow n m), divisible p n .", "predict": "Axiom divides_exp_to_divides : forall p : nat, (prime p -> divides p (pow n m) -> divides p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1532. Soient $n$ et $m$ des nombres naturels. Alors si $n$ est divisible par $m$ et $0 = n$, alors pour tous les nombres naturels $d$, si $m = 0 d$, alors $m = 0$.\nassistant\n", "label": "let_clause_1532 : n : Nat -> m : Nat -> divnm : divisible n m -> H : Eq 0 n -> d : Nat -> auto : Eq m (times 0 d) -> Eq m 0 .", "predict": "let_clause_1532 : (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (and (divisible n m) (Eq 0 n)) (forall Nat (d => if (Eq m (times 0 d)) (Eq m 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp1. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1554$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1555$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1554 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1555 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_CProp1 : (x1 : Elem Set) -> (x2 : Elem x1) -> Proof (forall (Hterm : Elem (Aop x1 x2)) -> forall (P : (op : Elem (Aop x1 x2)) -> Prop) -> forall (op : (op : (z1554 : Elem x1) -> Elem x1) -> (nill : (a : Elem x1) -> Eq a x2) -> (nilr : (a : Elem x1) -> Eq a x2) -> (assoc : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Eq (op a (op b c)) (op (op a b) c)) -> Proof (forall (z1555 : Eq Hterm (mk_Aop x1 x2 op nill nilr assoc)) -> P (mk_Aop x1 x2 op nill nilr assoc))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLet_clause_1617. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$. Anta att $a p - b m = 1$. Då är $p a - m b$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "axiom let_clause_1617 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : gcd p m = p * a - m * b", "predict": "axiom let_clause_1617 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (d : m * n = p * c) (a : Nat) (ex : Nat) (f : ex = disj (Eq (a * p - b * m) (gcd p m)) (Eq (b * m - a * p) (gcd p m))) (b : Nat) (x1 : gcd p m = a * p - b * m) (x2 : gcd p m = a * p - b * m) (x3 : a * p - b * m = 1) : p * a - m * b = gcd p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nF_invert_permut. Let $f$ be a function from natural numbers to natural numbers. Let $n$ and $m$ be natural numbers. Assume that $m$ is less than or equal to $n$. Let $__1$ be an element of $permut$ of $f$ and $n$. Then $f$ applied to $invert_permut$ applied to $n$ and $f$ and $m$ is equal to $m$.\nassistant\n", "label": "Axiom f_invert_permut : forall f : ((x__ : nat) -> nat), forall n : nat, forall m : nat, forall x__ : Leq m n, forall __1 : permut f n, f (invert_permut n f m) = m .", "predict": "Axiom f_invert_permut : forall f : nat -> nat, forall n : nat, forall m : nat, (m <= n -> exists p : permut f n, f (invert_permut n f m) = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_smallest_factor_to_not_divides. Soient $n$ et $i$ des nombres naturels. Supposons que $1 < n$ et $1 < i$. Supposons que $i < smallest_factor (n)$. Alors $i$ n'est pas divisible par $n$.\nassistant\n", "label": "axiom lt_smallest_factor_to_not_divides (n i : Nat) (x__ : 1 < n) (__1 : 1 < i) (__2 : i < smallest_factor n) : ¬ divisible i n", "predict": "axiom lt_smallest_factor_to_not_divides (n i : Nat) (x : 1 < n ∧ 1 < i ∧ i < smallest_factor n) : ¬ (divisible i n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_n_O_to_eq. Låt $n$ vara ett naturligt tal. Då om $n$ är mindre än eller lika med $0$, så är $0$ lika med $n$.\nassistant\n", "label": "Axiom le_n_O_to_eq : forall n : nat, forall x__ : Leq n 0, 0 = n .", "predict": "Axiom le_n_O_to_eq : forall n : nat, (n <= 0 -> 0 = n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_sigma. Let $n \\in N$. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than or equal to $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "axiom le_sigma (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)", "predict": "axiom le_sigma (n : Nat) : ∀ p1 : Nat → Bool, ∀ p2 : Nat → Bool, ∀ g1 : Nat → Nat, ∀ g2 : Nat → Nat, ∀ f : Nat → Lt n i → Eq p1 i true → Eq p2 i true → Nat, ∀ g : Nat → Lt n i → Eq p1 i true → Leq (g1 i) (g2 i), bigop n (λ i, p1 i) Nat 0 plus (λ i, g1 i) ≤ bigop n (λ i, p2 i) Nat 0 plus (λ i, g2 i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_10331. Soit $n$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1 \\in N$. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$. Soit $Hle$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$. Supposons que $p (n1)= true$. Alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))) -> (Hle : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> (Hcase : Eq (p n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate clause_10331 : (n : Nat) -> (p : Nat -> Bool) -> (g1 : Nat -> Nat) -> (g2 : Nat -> Nat) -> (n1 : Nat) -> Hind p n1 true -> Leq (bigop n1 (Nat 1 * times (g1 , g2))) -> Eq (plus n1 (mod n1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nMod_times. Soient $n$ et $m$ et $p$ des nombres naturels. Alors si $0 < p$, alors $mod (n m , p)= mod (mod (n , p)mod (m , p), p)$.\nassistant\n", "label": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), mod (n * m) p = mod (mod n p * mod m p) p .", "predict": "Axiom mod_times : forall n : nat, forall m : nat, forall p : nat, (0 < p -> mod (n * m) p = mod (mod n p * mod m p) p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_15441. Soient $p$ et $q$ des nombres naturels. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $n$ est inférieur ou ágal à $m$. Supposons que $n$ est inférieur ou ágal à la somme de $q$ et de $1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ ou la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": " à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Supposons que $a$ est inférieur à $b$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $b$ est inférieur à $q$. Soit $x \\in Lt$ de $0$ et de $n$. Supposons que $x$ est inférieur à $q$. Supposons que $x$ est inférieur ou ágal à $m$. Supposons que $x$ est inférieur ou ágal à la somme de $q$ et de $1$. Soit $y \\in Leq$ de $n$ et de $q$. Supposons que $y$ est inférieur ou ágal à $m$. Supposons que $y$ est inférieur ou ágal à la somme de $q$ et de $1$. Soit $z \\in Lt$ de $0$ et de $n$. Supposons que $z$ est inférieur à $q$. Supposons que $z$ est inférieur ou ágal à $m$. Supposons que $z$ est inférieur ou ágal à la somme de $q$ et de $1$. Supposons que $z$ est inférieur à $x$. Supposons que $z$ est inférieur à $y$. Supposons que $z$ est inférieur ou ágal à $n$. Soit $w \\in Lt$ de $0$ et de $n$. Supposons que $w$ est inférieur à $x$. Supposons que $w$ est inférieur à $y$. Supposons que $w$ est inférieur à $z$. Supposons que $w$ est inférieur ou ágal à $n$. Soit $k \\in Lt$ de $0$ et de $n$. Supposons que $k$ est inférieur à $x$. Supposons que $k$ est inférieur à $y$. Supposons que $k$ est inférieur à $z$. Supposons que $k$ est inférieur à $w$. Supposons que $k$ est inférieur ou ágal à $n$. Soit $i \\in Lt$"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLe_times_to_le_div2. Pour tous les nombres naturels $m$ et $n$ et $q$, si $0$ est inférieur à $q$, alors si $n$ est inférieur ou ágal au produit de $m$ et de $q$, alors le quotient de $n$ et de $q$ est inférieur ou ágal à $m$.\nassistant\n", "label": "Axiom le_times_to_le_div2 : forall m : nat, forall n : nat, forall q : nat, forall x__ : (0 < q), forall __1 : Leq n (m * q), Leq (n / q) m .", "predict": "Axiom le_times_to_le_div2 : forall m : nat, forall n : nat, forall q : nat, (0 < q -> n <= m * q -> n / q <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMin_spec_ind_body. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and $_n + _b$ and elements $x_1078$ of $Eq$ of $_f (m)$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec (_n , _b , _f , m , x_1080 , x_1079 , x_1078 , x_1077)$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n + _b$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $_n + _b$ and $not_found_min_spec (_n , _b , _f , x_1081)$. Let $x_1075 \\in N$. Then for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "min_spec_ind_body : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 .", "predict": "min_spec_ind_body : n : Elem Nat -> b : Elem Nat -> f : Nat -> Prop -> Q : (x : Elem (min_spec n b) -> f x -> Prop) -> H_found_min_spec : (m : Elem Nat) -> x : Elem (Leq b m) -> x : Elem (Lt m n + b) -> Eq (f m) true -> (x : Nat -> i : Elem (Leq b i) -> Lt i m -> Eq (f i) (true)) -> Absurdity -> Q m (found_min_spec n b f m x) -> H_not_found_min_spec : (x : Nat -> i : Elem (Leq b i) -> Lt i (n + b)) -> Eq (f i) absurdity -> Q (n + b) (not_found_min_spec n b f x) -> x : Elem Nat -> Proof (forall (x : Elem (min_spec n b) -> f x -> Q x) (Eq x n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_16005. Pour tous les nombres naturels $m$ et $n$ et $a$ et $b$, si $0 < n$, alors si $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$, alors si $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.\nassistant\n", "label": "let_clause_16005 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_16005 : (m : Elem Nat) -> (n : Elem Nat) -> (a : Elem Nat) -> (b : Elem Nat) -> Proof (if (and (Lt (nd 0) n) (Lt (nd 0) m)) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (x : Elem ex) => if (and (Eq (nd 1) (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times m d) (times n c)) (gcd m n))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLe_n_Sm_elim. Soit $n , m \\in N$. Alors si $n \\leq m + 1$, alors pour toutes les propositions $P$, pour toutes les fonctions $__1$ des éléments $__1$ de $Leq$ de $n + 1$ et de $m + 1$ à des éléments de $P$, pour toutes les fonctions $__2$ des éléments $__2$ de $Eq$ de $n$ et de $m + 1$ à des éléments de $P$, $P$.\nassistant\n", "label": "axiom le_n_Sm_elim (n m : Nat) (x__ : n ≤ m + 1) (P : Prop) (__1 : (__1 : n + 1 ≤ m + 1) -> P) (__2 : (__2 : n = m + 1) -> P) : P", "predict": "axiom le_n_Sm_elim (n m : Nat) (x : n ≤ m + 1) : ∀ P : Prop, ∀ f : ∀ n : Leq n (n + 1), ∀ m : Eq n (m + 1), P → P"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b = 1$.\nassistant\n", "label": "let_clause_1561 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (minus (times p a) (times m b)) (nd 1) .", "predict": "let_clause_1561 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Eq (1) (Greatest Common Divisor p m)) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> Proof (ex (Nat) (b => Eq (Greatest Common Divisor p m) (minus (times a p) (times b m))) . Proof (Eq (Greatest Common Divisor p m) (minus (times b m) (times a p)))) -> b : Elem Nat -> Proof (Eq (Greatest Common Divisor p m) (if (or (Eq (minus (times a p) (times b m)) (1)) (Eq (minus (times b m) (times a p)) (1))) (if (Eq (minus (times a p) (times b m)) (1)) (Eq (minus (times p a) (times m b)) (1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nEq_minus_O. Soit $n , m \\in N$. Alors si $n \\leq m$, alors $n - m = 0$.\nassistant\n", "label": "eq_minus_O : n : Nat -> m : Nat -> __ : Leq n m -> Eq (minus n m) 0 .", "predict": "eq_minus_O : (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (Leq n m) (Eq (minus n m) 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLt_sigma_p. Soit $n$ un nombre naturel. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Alors pour toutes les fonctions $__$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$, pour toutes les fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, pour tous les éléments $__2$ de $ex$ de $Nat$ et de la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de la disjonction de la conjonction de $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et de $Lt$ appliqué à $g1$ appliqué à $i$ et $g2$ appliqué à $i$ et de la conjonction de la conjonction de $Eq$ appliqué à $p1$ appliqué à $i$ et contradiction et de $Eq$ appliqué à $p2$ appliqué à $i$ et $true$ et de $Lt$ appliqué à $0$ et $g2$ appliqué à $i$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$ est inférieur à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$.\nassistant\n", "label": "lt_sigma_p : n : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> g1 : (__ : Nat -> Nat) -> g2 : (__ : Nat -> Nat) -> __ : (i : Nat -> __ : Lt i n -> __1 : Eq (p1 i) true -> Eq (p2 i) true) -> __1 : (i : Nat -> __1 : Lt i n -> __2 : Eq (p1 i) true -> Leq (g1 i) (g2 i)) -> __2 : ex Nat (i : Nat => and (Lt i n) (or (and (Eq (p1 i) true) (Lt (g1 i) (g2 i))) (and (and (Eq (p1 i) false) (Eq (p2 i) true)) (Lt 0 (g2 i))))) -> Lt (bigop n (i : Nat => p1 i) Nat 0 plus (i : Nat => g1 i)) (bigop n (i : Nat => p2 i) Nat 0 plus (i : Nat => g2 i)) .", "predict": "Lt_sigma_p : (n : Elem Nat) -> (p1 : Elem (Nat -> Bool)) -> (p2 : Elem (Nat -> Bool)) -> (g1 : Elem (Nat -> Nat)) -> (g2 : Elem (Nat -> Nat)) -> Proof (forall (i : Elem Nat) -> forall (x : Elem Lt (i, n)) -> forall (y : Elem Eq (p1 i), true) -> forall (z : Elem Eq (p2 i), true) -> forall (w : Elem Leq (g1 i), (g2 i)) -> Proof (forall (x : Elem Nat) -> Proof (and (Lt x n) (or (and (Eq (p1 x) true) (Lt (g1 x) (g2 x))) (and (Eq (p1 x) (contra)) (and (Eq (p2 x) true) (Lt (nd 0) (g2 x)))))) -> Proof (bigop n (fun (i : Elem Nat) => (p2 i)) Nat 0 plus (fun (i : Elem Nat) => (g2 i))) < (bigop n (fun (i : Elem Nat) => (p1 i)) Nat 0 plus (fun (i : Elem Nat) => (g1 i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nACop_inv_ind. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $x1$. Då för alla element $Hterm$ av $ACop$ av $x1$ och $x2$, för alla funktioner $P$ från element $_z1566$ av $ACop$ av $x1$ och $x2$ till påståenden, för alla funktioner $_H1$ från element $aop$ av $Aop$ av $x1$ och $x2$ och funktioner $_comm$ från element $a$ av $x1$ och element $b$ av $x1$ till element av $Eq$ av $op$ applicerat på $x1$ och $x2$ och $aop$ och $a$ och $b$ och $op$ applicerat på $x1$ och $x2$ och $aop$ och $b$ och $a$ och element $_z1567$ av $Eq$ av $Hterm$ och $mk_ACop$ applicerat på $x1$ och $x2$ och $aop$ och $_comm$ till element av $P$ av $mk_ACop$ applicerat på $x1$ och $x2$ och $aop$ och $_comm$, håller $P$ för $Hterm$.\nassistant\n", "label": "ACop_inv_ind : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1566 : ACop x1 x2 -> Prop) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1567 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "ACop_inv_ind : (x1 : Elem) -> (x2 : Elem x1) -> Proof (forall (Hterm : Elem (ACop x1 x2)) -> forall (P : (a : Elem (ACop x1 x2)) -> Proof (forall (aop : Elem (Aop x1 x2)) -> forall (comm : (a : Elem x1) -> (b : Elem x1) -> Proof (Eq (op x1 x2) (aop a b)) -> Proof (Eq (op x1 x2) (aop b a))) -> Proof (P (mk_ACop x1 x2 aop comm)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLe_log. Låt $p , n , m \\in N$. Då om $1 < p$, så om $n \\leq m$, så $\\log_ p {n}\\leq \\log_ p {m}$.\nassistant\n", "label": "le_log : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Leq n m -> Leq (log p n) (log p m) .", "predict": "le_log : (p : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (and (Lt (nd 1) p) (Leq n m)) (Leq (log p n) (log p m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nEq_ord_sigma_p. Soit $n , m , x \\in N$. Supposons que $0 < n$. Supposons que $x$ est premier. Supposons que $x ^ m \\leq n$. Supposons que $n < x ^ (m + 1)$. Alors $bigop$ appliqué à $m$ et la fonction qui envoie $i$ à $dividesb$ appliqué à la puissance de $x$ et de la somme de $i$ et de $1$ et $n$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $1$ est égal à $ord (n , x)$.\nassistant\n", "label": "postulate eq_ord_sigma_p : (n : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt 0 n) -> (__1 : prime x) -> (__2 : Leq (pow x m) n) -> (__3 : Lt n (pow x (plus m 1))) -> Eq (ord n x) (bigop m (\\ i : Nat -> dividesb (pow x (plus i 1)) n) Nat 0 plus (\\ i : Nat -> 1))", "predict": "postulate eq_ord_sigma_p : (n : Nat) -> (m : Nat) -> (x : Nat) -> 0 < n -> prime x -> pow x m <= n -> n < pow x (plus m 1) -> Eq (bigop m (fun i -> dividesb (pow x (plus i 1)) n)) (ord n x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Agda.\nLet_clause_16003. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.\nassistant\n", "label": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> c : Nat -> ex Nat (\\ d -> or (and (Eq (minus (times c n) (times d m)) 1) (and (Eq (minus (times d m) (times c n)) 1))) -> and (Eq (minus (times d m) (times c n)) 1) -> Gcd m n == (minus (times m d) (times n c))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nPlus_div. För alla naturliga tal $n$ och $m$ och $d$, om $0 < d$ och $d$ är delbart med $n$, så om $d$ är delbart med $m$, så $(n + m)\\div d = n \\div d + m \\div d$.\nassistant\n", "label": "axiom plus_div (n m d : Nat) (x__ : 0 < d) (__1 : divisible d n) (__2 : divisible d m) : (n + m) / d = n / d + m / d", "predict": "axiom plus_div (n m d : Nat) (x : 0 < d ∧ n % d = 0 ∧ d % m = 0) : (n + m) / d = n / d + m / d"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nMinus_to_plus. Låt $n$ och $m$ och $p$ vara naturliga tal. Anta att $m \\leq n$. Anta att $n - m = p$. Då $n = m + p$.\nassistant\n", "label": "minus_to_plus : n : Nat -> m : Nat -> p : Nat -> __ : Leq m n -> __1 : Eq (minus n m) p -> Eq n (plus m p) .", "predict": "minus_to_plus : n : Elem Nat -> m : Elem Nat -> p : Elem Nat -> Proof (if (Leq m n) (Eq (minus n m) p) (Eq n (plus m p))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type2_body. Let $Q_$ be a function from natural numbers $_x_381$ to elements of $Type2$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_382$ and elements $_x_384$ of $Q_$ of $x_382$ to elements of $Q_$ of the sum of $x_382$ and $1$. Let $x_381$ be a natural number. Then $Q_$ holds for $x_381$.\nassistant\n", "label": "postulate nat_rect_Type2_body : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381", "predict": "postulate nat_rect_Type2_body : (Q : Nat -> Type2) -> Q 0 -> (x : Nat) -> (q : Q x) -> Nat -> q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nLet_clause_1033. Soit $n \\in N$. Supposons que $2 ^ 4 \\leq n$. Soit $x2515 , x2516 \\in N$. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_1033 : forall n : nat, forall le_n : Leq (pow 2 4) n, forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_1033 : forall n : nat, (2 ^ 4 <= n -> forall x2515, x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Then for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), gcd p m = p * a - m * b .", "predict": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ gcd p m = 1 /\\ p mod (m * n) = 0 -> forall c : nat, (m * n = p * c -> forall a : nat, forall ex : list nat, forall b : nat, (Eq (gcd p m) (a * p - b * m) \\/ Eq (gcd p m) (b * m - a * p) /\\ Eq (gcd p m) (a * p - b * m) -> if (Eq (a * p - b * m) 1) (Eq (p * a - m * b) (gcd p m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_plus_to_le. Let $a , n , m \\in N$. Then if $a + n \\leq a + m$, then $n \\leq m$.\nassistant\n", "label": "le_plus_to_le : a : Nat -> n : Nat -> m : Nat -> __ : Leq (plus a n) (plus a m) -> Leq n m .", "predict": "le_plus_to_le : (a : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (Leq (plus a n) (plus a m)) (Leq n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nLt_max_n. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$, om $0$ är mindre än $n$, så är $max$ applicerat på $n$ och $f$ mindre än $n$.\nassistant\n", "label": "axiom lt_max_n (f : (x__ : Nat) -> bool) (n : Nat) (x__ : 0 < n) : max n f < n", "predict": "axiom lt_max_n (f : Nat → Prop) : ∀ n : Nat, (0 < n → max n (f n) < n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLet_clause_1617. Låt $p , m , n \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Då om $p$ är delbart med $m \\times n$, så för alla naturliga tal $c$, om $m n = p c$, så för alla naturliga tal $a$, för alla element $_clearme0$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$, för alla naturliga tal $b$, om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$, så om $a p - b m = 1$, så är $p a - m b$ lika med det största gemensama delaret av $p$ och $m$.\nassistant\n", "label": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), gcd p m = p * a - m * b .", "predict": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ 1 = gcd p m -> p mod (m * n) -> forall c : nat, (m * n = p * c -> forall a : nat, forall _clearme0 : ex (Nat), forall f : b -> Eq (p * a - m * b) (gcd p m) /\\ Eq (m * b - p * a) (gcd p m) /\\ (a * p - b * m = 1 -> p * a - m * b = gcd p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (x1 : a ≤ n ∧ f a = i) (y1 : a ≤ n) (b : Nat) (x2 : b ≤ n ∧ f b = j) (y2 : b ≤ n) : f b = j → ∀ g : Nat → i0 → Leq (f (g i0)) n, ∀ injf : injn f n, (a = b → f a = i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Lean.\nNilr_body. Låt $A$ vara en mängd. Då för alla element $nil$ av $A$, för alla element $xxx$ av $Aop$ av $A$ och $nil$, för alla element $a$ av $A$, $op (A , nil , xxx , a , nil)= a$.\nassistant\n", "label": "axiom nilr_body (A : Set) (nil : A) (xxx : Aop A nil) (a : A) : op A nil xxx a nil = a", "predict": "axiom nilr_body (A : Type) : ∀ nil : A, ∀ xxx : Aop A, ∀ a : A, op (A, nil, xxx, a, nil) = a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLet_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a = b$. Alors $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (y : a ≤ n ∧ f a = i ∧ a ≤ n) (z : f a = i) (b : Nat) (z' : b ≤ n ∧ f b = j ∧ b ≤ n) (w : f b = j) (g : Nat → Nat × (Leq i0 n → Leq (f i0) n)) (injf : Injn f n) (h : a = b) : f a = j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10336. For all natural numbers $n$ and $m$, for all functions $Hind$ from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$, for all natural numbers $a$, if $m = 2 a$ or $m = 2 a + 1$, then if $m = 2 a + 1$, then if $1 < 2 a + 1$, then if $0 < a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10336 : n : Nat -> m : Nat -> Hind : (p : Nat -> __ : Lt p m -> __1 : Lt (nd 1) p -> Leq (Psi p) (times (pred p) (pow (nd 2) (minus (times (nd 2) p) (nd 3))))) -> a : Nat -> _clearme : or (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1))) -> Hm : Eq m (plus (times (nd 2) a) (nd 1)) -> Hlt : Lt (nd 1) (plus (times (nd 2) a) (nd 1)) -> Ha : Lt 0 a -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10336 : (n : Elem Nat) -> (m : Elem Nat) -> (Hind : Elem (forall (p : Elem Nat) -> forall (x : Elem (Lt p m)) -> forall (y : Elem (Lt 1 p)) -> Elem (Leq (Psi p) (pred p) * (pow 2 (minus (times 2 p) 3))))) -> Proof (forall (a : Elem Nat) -> if (or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) (if (Eq m (plus (times 2 a) 1)) (if (Lt (nd 1) (plus (times 2 a) (nd 1))) (if (Lt (nd 0) a) (forall (x2515 : Elem Nat) -> forall (x2516 : Elem Nat) -> Eq x2515 (plus (x2515 / x2516) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nBigop_commute. Soient $n$ et $m$ des nombres naturels. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Soit $p22$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soit $f$ une fonction des nombres naturels et des nombres naturels $__1$ à des éléments de $B$. Alors si $0$ est inférieur à $n$, alors si $0$ est inférieur à $m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb$ appliqué à $p11$ appliqué à $i$ et $p12$ appliqué à $i$ et $j$ et de $andb$ appliqué à $p21$ appliqué à $j$ et $p22$ appliqué à $i$ et $j$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$", "label": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))", "predict": " à $f$ appliqué à $i$ et $j$.\n\npostulate bigop_commute : (n : Nat) -> (m : Nat) -> bigop_commute n m\n  where bigop_commute : (n : Nat) -> (m : Nat) -> Eq (bigop n (f n m)) (bigop m (f m n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBijn_fg. Let $f$ and $g$ be functions from natural numbers to natural numbers. Then for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and $n$, for all elements $__1$ of $bijn$ of $g$ and $n$, $bijn$ holds for the function that maps $p$ to $f (g (p))$ and $n$.\nassistant\n", "label": "bijn_fg : f : (__ : Nat -> Nat) -> g : (__ : Nat -> Nat) -> n : Nat -> __ : bijn f n -> __1 : bijn g n -> bijn (p : Nat => f (g p)) n .", "predict": "bijn_fg : (f : Elem (Nat -> Nat)) -> (g : Elem (Nat -> Nat)) -> Proof (forall Nat (n => forall (p : Elem (bijn (f n))) => forall (q : Elem (bijn (g n))) => bijn (map (p => f (g p)) n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Dedukti.\nLet_clause_1075. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $bijf$ un élément de $bijn$ de $f$ et de la somme de $n$ et de $1$. Supposons que $f$ appliqué à la somme de $n$ et de $1$ est égal à la somme de $n$ et de $1$. Soit $i \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à la somme de $n$ et de $1$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à la somme de $n$ et de $1$. Supposons que $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est égal à la somme de $n$ et de $1$. Alors $i$ est égal à $a$.\nassistant\n", "label": "let_clause_1075 : f : (__ : Nat -> Nat) -> n : Nat -> bijf : bijn f (plus n (nd 1)) -> fS : Eq (f (plus n (nd 1))) (plus n (nd 1)) -> i : Nat -> lein : Leq i n -> a : Nat -> _clearme : and (Leq a (plus n (nd 1))) (Eq (f a) i) -> lean : Leq a (plus n (nd 1)) -> fa : Eq (f a) i -> Hc : Eq a (plus n (nd 1)) -> Eq i a .", "predict": "let_clause_1075 : f : Elem (Nat -> Nat) -> n : Elem Nat -> bijf : Elem (bijn (f n) (plus n 1)) -> Proof (Eq (f (plus n 1)) (plus n 1)) -> i : Elem Nat -> Proof (Leq i n) -> a : Elem Nat -> Proof (and (Leq a (plus n 1)) (Eq (f a) i)) -> Proof (Leq a (plus n 1)) -> Proof (Eq (f a) i) -> Proof (Eq a (plus n 1)) -> Proof (Eq i a) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nLet_clause_15621. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.\nassistant\n", "label": "let_clause_15621 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_15621 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Gcd n m = (nd 1))) -> c : Elem Nat -> Proof (and (Ex (and (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) -> d : Elem Nat -> Proof (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> Proof (if (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times n c) (times m d)) (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Dedukti.\nPermut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $k$ och $n$ vara naturliga tal. Anta att $k \\leq n$. Låt $__1$ vara ett element av $permut$ av $h$ och $n$. Låt $__2$ vara en funktion från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h (m)$ och $m$. Låt $j \\in N$. Anta att $k \\leq j$. Anta att $j \\leq n$. Då $k \\leq h (j)$.\nassistant\n", "label": "permut_n_to_le : h : (__ : Nat -> Nat) -> k : Nat -> n : Nat -> __ : Leq k n -> __1 : permut h n -> __2 : (m : Nat -> __2 : Lt m k -> Eq (h m) m) -> j : Nat -> __3 : Leq k j -> __4 : Leq j n -> Leq k (h j) .", "predict": "permut_n_to_le : (h : Elem (Nat -> Nat)) -> (k : Elem Nat) -> (n : Elem Nat) -> Proof (Leq k n) -> Proof (Elem (permut h n) (nd 1)) -> Proof (forall Nat (m => forall (Lt m k) (Elem (Eq (h m) m) (nd 2)))) -> Proof (forall Nat (j => and (Leq k j) (Leq j n))) -> Proof (Leq k (h j)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Coq.\nNot_divides_S_fact. Soit $n , i \\in N$. Alors si $1$ est inférieur à $i$, alors si $i$ est inférieur ou ágal à $n$, alors $i$ n'est pas divisible par la somme de la factorielle de $n$ et de $1$.\nassistant\n", "label": "Axiom not_divides_S_fact : forall n : nat, forall i : nat, forall x__ : (1 < i), forall __1 : Leq i n, ~ divisible i (factorial n + 1) .", "predict": "Axiom not_divides_S_fact : forall n : nat, forall i : nat, (1 < i -> i <= n -> ~ (i mod (fact n + 1) = 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Lean.\nLt_exp. Soit $n , m , p \\in N$. Supposons que $1 < p$. Supposons que $n < m$. Alors $p ^ n < p ^ m$.\nassistant\n", "label": "axiom lt_exp (n m p : Nat) (x__ : 1 < p) (__1 : n < m) : pow p n < pow p m", "predict": "axiom lt_exp (n m p : Nat) (x : 1 < p) (y : n < m) : pow p n < pow p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following Swedish statement into Coq.\nLe_plus_mod. För alla naturliga tal $m$ och $n$ och $q$, om $0$ är mindre än $q$, så är $mod$ applicerat på summan av $m$ och $n$ och $q$ mindre än eller lika med summan av $mod$ applicerat på $m$ och $q$ och $mod$ applicerat på $n$ och $q$.\nassistant\n", "label": "Axiom le_plus_mod : forall m : nat, forall n : nat, forall q : nat, forall x__ : (0 < q), Leq (mod (m + n) q) (mod m q + mod n q) .", "predict": "Axiom le_plus_mod : forall m : nat, forall n : nat, forall q : nat, (0 < q -> mod (m + n) q <= mod m q + mod n q) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following French statement into Agda.\nLet_clause_1572. Soit $m , n \\in N$. Supposons que $0 < n$ et $0$ est égal au diviseur commun plus grand de $m$ et de $n$. Supposons que $m = 0$ et $n = 0$. Alors $m = 0$.\nassistant\n", "label": "postulate let_clause_1572 : (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (H : Eq (gcd m n) 0) -> (auto : Eq m 0) -> (auto' : Eq n 0) -> Eq m 0", "predict": "postulate let_clause_1572 : (m : Nat) -> (n : Nat) -> and (Lt 0 n) (Eq 0 (gcd m n)) -> and (Eq 0 m) (Eq 0 n) -> Eq 0 m"}