{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n$ be a natural number. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $g1$ and $g2$ be functions from natural numbers to natural numbers. Let $n1$ be a natural number. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$ and functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n1$ and elements $__2$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$. Let $H1$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$. Let $H2$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$. Assume that $p2 (n1)= true$. Assume that $p1 (n1)= true$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (n1 : Nat) (Hind : (x__ : (i : Nat) -> (x__ : i < n1) -> (__1 : p1 i = true) -> p2 i = true) -> (__1 : (i : Nat) -> (__1 : i < n1) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) -> bigop n1 (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n1 (λ i => p2 i) Nat 0 plus (λ i => g2 i)) (H1 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> p2 i = true) (H2 : (i : Nat) -> (x__ : i < n1 + 1) -> (__1 : p1 i = true) -> g1 i ≤ g2 i) (Hp2 : p2 n1 = true) (Hp1 : p1 n1 = true) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (p1 p2 : Nat → Bool) (g1 g2 : Nat → Nat) (n1 : Nat) : Hind (λ i : Nat, Lt i n1) (true) (p1 i) (true) (λ i : Nat, Lt i n1) (p2 i) (true) (λ i : Nat, Lt i n1) (g1 i) (g2 i) → Eq (bigop n1 (λ i : Nat, p1 i) Nat 0 plus (λ i : Nat, g1 i)) (bigop n1 (λ i : Nat, p2 i) Nat 0 plus (λ i : Nat, g2 i)) → H1 (Lt i (n1 + 1)) (true) (p1 i) (true) → Eq (p2 i) (true) → H2 (Lt i (n1 + 1)) (true) (p1 i) (true) → Leq (g1 i) (g2 i) → p2 n1 = true → p1 n1 = true → ∀ x2515 : Nat, ∀ x2516 : Nat, x2515 = x2516 (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMod_O_to_divides. Let $n$ and $m$ be natural numbers. Assume that $0 < n$. Assume that $mod (m , n)= 0$. Then $n$ is divisible by $m$.\nassistant\n", "label": "mod_O_to_divides : n : Nat -> m : Nat -> __ : Lt 0 n -> __1 : Eq (mod m n) 0 -> divisible n m .", "predict": "mod_O_to_divides : (n : Elem Nat) -> (m : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Eq (mod m n) (nd 0)) -> Proof (Divisible n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Then if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Nat -> permf : Elem (Permut f n) -> i : Nat -> j : Nat -> Proof (and (Leq i n) (Eq (f a) i)) -> Proof (and (Leq a n) (Eq (f a) i)) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (forall (g : Elem (Nat -> Nat (and i0 : Nat) (Leq (f (g i0)) n))) -> forall (injf : Elem (injn (f n))) -> Eq a b -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15311. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $n$ is divisible by $m$. Then for all natural numbers $d$ and $p$, if $m$ is equal to the product of $n$ and the sum of $p$ and $1$, then $m$ is equal to the sum of $n$ and the product of $n$ and $p$.\nassistant\n", "label": "Axiom let_clause_15311 : forall n : nat, forall m : nat, forall posm : (0 < m), forall _clearme : divisible n m, forall d : nat, forall p : nat, forall eqm : (m = n * (p + 1)), m = n + n * p .", "predict": "Axiom let_clause_15311 : forall n : nat, forall m : nat, (0 < m -> n mod m = 0 -> forall d : nat, forall p : nat, (m = n * (p + 1) -> m = n + n * p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_d_gcd. Let $m$ and $n$ and $d$ be natural numbers. Then if $d$ is divisible by $m$, then if $d$ is divisible by $n$, then $d$ is divisible by the greatest common divisor of $n$ and $m$.\nassistant\n", "label": "postulate divides_d_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> (_ : divisible d m) -> (__1 : divisible d n) -> divisible d (gcd n m)", "predict": "postulate divides_d_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> (divisible_by d m) -> (divisible_by d n) -> divisible_by d (gcd n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_1544 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : a * mod m n - b * n = gcd_aux q n (mod m n)) : a * mod m n - n * b = gcd_aux q n (mod m n)", "predict": "axiom let_clause_1544 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, ∀ x : Lt 0 n × Leq n m × Leq n q, ex Nat (a => Nat x a) × b => disj (Eq (a * n - b * m) (gcd_aux q m n)) (Eq (b * n - a * n) (gcd_aux q m n))) (m n : Nat) (x : 0 < n) (y : n ≤ m) (z : n ≤ q + 1) (w : n % m ≠ 0) (a : Nat) : ex Nat (b => disj (Eq (a * mod m n - b * n) (gcd_aux q n (mod m n))) (Eq (b * n - a * mod m n) (gcd_aux q n (mod m n)))) (b : Nat) : (a % (m, n) - b * n = gcd_aux (q, n, mod (m, n)) ∨ b * n - a % (m, n) = gcd_aux (q, n, mod (m, n))) → (a % (m, n) - b * n = gcd_aux (q, n, mod (m, n))) → a % (m, n) - n * b = gcd_aux (q, n, mod (m, n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_to_not_eq_O. Let $n$ and $p$ and $q$ and $r$ be natural numbers. Assume that $1$ is less than $n$. Assume that $p_ord$ applied to $n$ and $nth_prime$ applied to $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$. Then $r$ is not equal to $0$.\nassistant\n", "label": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, forall x__ : (1 < n), forall __1 : (p_ord n (nth_prime p) = mk_Prod nat nat q r), ~ (r = 0) .", "predict": "Axiom p_ord_to_not_eq_O : forall n : nat, forall p : nat, forall q : nat, forall r : nat, (1 < n -> p_ord n (nth_prime p) = mk_Prod Nat Nat q r -> r <> 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_exp_r. Let $b \\in N$. Then if $1 < b$, then $injective$ holds for $Nat$ and $Nat$ and the function that maps $i$ to $b ^ i$.\nassistant\n", "label": "axiom injective_exp_r (b : Nat) (x__ : 1 < b) : injective Nat Nat (λ i => pow b i)", "predict": "axiom injective_exp_r (b : Nat) (x : 1 < b) : injective Nat Nat (fun i => pow b i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_n_O. For all natural numbers $n$, if $0$ is less than $n$, then the exponentiation of $0$ and $n$ is equal to $0$.\nassistant\n", "label": "postulate exp_n_O : (n : Nat) -> (_ : Lt 0 n) -> Eq (pow 0 n) 0", "predict": "postulate exp_n_O : (n : Nat) -> 0 < n -> 0 ^ n == 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $ACop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1596$ of $ACop$ of $x1$ and $x2$ to sets, for all functions $_H1$ from elements $aop$ of $Aop$ of $x1$ and $x2$ and functions $_comm$ from elements $a$ of $x1$ and elements $b$ of $x1$ to elements of $Eq$ of $op$ applied to $x1$ and $x2$ and $aop$ and $a$ and $b$ and $op$ applied to $x1$ and $x2$ and $aop$ and $b$ and $a$ and elements $_z1597$ of $Eq$ of $Hterm$ and $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$ to elements of $P$ of $mk_ACop$ applied to $x1$ and $x2$ and $aop$ and $_comm$, $P$ holds for $Hterm$.\nassistant\n", "label": "ACop_inv_rect_Type0 : x1 : Set -> x2 : x1 -> Hterm : ACop x1 x2 -> P : (_z1596 : ACop x1 x2 -> Set) -> _H1 : (aop : Aop x1 x2 -> _comm : (a : x1 -> b : x1 -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> _z1597 : Eq Hterm (mk_ACop x1 x2 aop _comm) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm .", "predict": "acop_inv_rect_Type0 : x1 : Elem Set -> x2 : Elem x1 -> Proof (forall (Hterm : Elem (ACop x1 x2)) -> forall (P : (forall (z1596 : Elem (ACop x1 x2)) -> Set)) -> forall (aop : Elem (Aop x1 x2)) -> forall (comm : (forall (a : Elem x1) -> forall (b : Elem x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a))) -> Proof (forall (z1597 : Eq (Hterm (mk_ACop x1 x2 aop (comm (Eq (op x1 x2) aop a b) (op x1 x2) aop (mk_ACop x1 x2 aop (comm a b))))) (P (mk_ACop x1 x2 aop (comm a b)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLog_times1. For all natural numbers $p$ and $n$ and $m$, if $1$ is less than $p$, then if $0$ is less than $n$, then if $0$ is less than $m$, then the logarithm of $p$ and the product of $n$ and $m$ is less than or equal to the sum of the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ and $1$.\nassistant\n", "label": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, forall x__ : (1 < p), forall __1 : (0 < n), forall __2 : (0 < m), Leq (log p (n * m)) (log p n + log p m + 1) .", "predict": "Axiom log_times1 : forall p : nat, forall n : nat, forall m : nat, (1 < p -> 0 < n -> 0 < m -> log p (n * m) <= log p n + log p m + 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16171. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (b * m - a * p = gcd p m), forall H0 : (b * m - a * p = 1), gcd p m = m * b - p * a .", "predict": "Axiom let_clause_16171 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ Eq (gcd p m) 1 /\\ Divisible p (m * n)) -> forall c : nat, (Eq (m * n) (p * c)) -> forall a : nat, forall ex : Prop -> forall _clearme0 : ex -> forall b : nat, (Eq (gcd p m) (a * p - b * m) \\/ Eq (gcd p m) (b * m - a * p)) -> (Eq (b * m - a * p) 1 -> Eq (m * b - p * a) (gcd p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLprim_ex. $lprim$ applied to $8$ and $2$ and $nil$ applied to $Nat$ is equal to $cons$ applied to $Nat$ and $2$ and $cons$ applied to $Nat$ and $3$ and $cons$ applied to $Nat$ and $5$ and $cons$ applied to $Nat$ and $7$ and $nil$ applied to $Nat$.\nassistant\n", "label": "postulate lprim_ex : Eq (lprim 8 2 (nil Nat)) (cons Nat 2 (cons Nat 3 (cons Nat 5 (cons Nat 7 (nil Nat)))))", "predict": "postulate lprim_ex : (8, 2, Nil Nat) ≡ (cons Nat 2) . (cons Nat 3) . (cons Nat 5) . (cons Nat 7) . (Nil Nat)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that $b m - a p = 1$. Then $m b - p a = 1$.\nassistant\n", "label": "axiom let_clause_15611 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : m * b - p * a = 1", "predict": "axiom let_clause_15611 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (w : m * n = p * c) (a : Nat) (clearme0 : ex Nat (b => Eq (gcd p m) (a * p - b * m)) ∨ Eq (gcd p m) (b * m - a * p)) (b : Nat) (x1 : y ∨ Eq (gcd p m) (b * m - a * p)) (x2 : y) (x3 : Eq (gcd p m) (b * m - a * p)) (x4 : b * m - a * p = 1) : m * b - p * a = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "let_clause_15621 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (minus (times n c) (times m d)) (nd 1) .", "predict": "let_clause_15621 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (Lt (nd 0) n) (if (Lt (nd 0) m) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (ex : Elem Nat) (if (Eq (nd 1) (or (Eq (nd 1) (minus (times c n) (times d m))) (Eq (nd 1) (minus (times d m) (times c n))))) (forall Nat (d => if (or (Eq (nd 1) (minus (times c n) (times d m))) (Eq (nd 1) (minus (times d m) (times c n)))) (Eq (nd 1) (minus (times n c) (times m d))))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_i_2n. Let $n , i \\in N$. Assume that $1 < n$. Assume that $n < i$. Then if $i \\leq 2 n$, then $\\log_ i {(2 n)}= 1$.\nassistant\n", "label": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> (_ : Lt 1 n) -> (__1 : Lt n i) -> (__2 : Leq i (times 2 n)) -> Eq (log i (times 2 n)) 1", "predict": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> and (Lt 1 n) (Lt n i) -> Leq i (times 2 n) -> Eq (log i (times 2 n)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_to_log_O. Let $n , m \\in N$. Assume that $0$ is less than $m$. Then if $m$ is less than $n$, then the logarithm of $n$ and $m$ is equal to $0$.\nassistant\n", "label": "postulate lt_to_log_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt m n) -> Eq (log n m) 0", "predict": "postulate lt_to_log_O : (n : Nat) -> (m : Nat) -> 0 < m -> if (Lt m n) (Eq (log n m) 0)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_rect_Type4. Let $Q_$ be a function from natural numbers $_x_369$ to elements of $Type4$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_370$ and elements $_x_372$ of $Q_$ of $x_370$ to elements of $Q_$ of $x_370 + 1$. Let $x_369 \\in N$. Then $Q_$ holds for $x_369$.\nassistant\n", "label": "Axiom nat_rect_Type4 : forall Q_ : ((_x_369 : nat) -> Type4), forall _H_O : Q_ 0, forall _H_S : ((x_370 : nat) -> (_x_372 : Q_ x_370) -> Q_ (x_370 + 1)), forall x_369 : nat, Q_ x_369 .", "predict": "Axiom nat_rect_Type4 : forall Q_ : nat -> Type4, H_O : Q_ 0, H_S : forall x_370 : nat, forall x_372 : Q_ x_370, Q_ (x_370 + 1), x_369 : nat, Q_ x_369 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBigop_0. Let $n$ be a natural number. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the sum of $i$ and $1$ and $f$ applied to $0$.\nassistant\n", "label": "postulate bigop_0 : (n : Nat) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> Eq (bigop (plus n 1) (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f i)) (op B nil op (bigop n (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f (plus i 1))) (f 0))", "predict": "postulate bigop_0 : (n : Nat) -> all Set (\\ B -> all B (\\ nil -> all (Aop B) (\\ op -> all (Function Nat (B)) (\\ f -> eq (bigop (plus n 1) (fun (i -> true) B nil op (B nil op) (f i))) (op (B nil op) (bigop n (fun (i -> true) B nil op (B nil op) (f (plus i 1))) (f 0))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15311. For all natural numbers $n$ and $m$, if $0 < m$ and $n$ is divisible by $m$, then for all natural numbers $d$ and $p$, if $m = n (p + 1)$, then $m = n + n p$.\nassistant\n", "label": "Axiom let_clause_15311 : forall n : nat, forall m : nat, forall posm : (0 < m), forall _clearme : divisible n m, forall d : nat, forall p : nat, forall eqm : (m = n * (p + 1)), m = n + n * p .", "predict": "Axiom let_clause_15311 : forall n : nat, forall m : nat, (0 < m /\\ n mod m = 0 -> forall d : nat, forall p : nat, (m = n * (p + 1) -> m = n + n * p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if $b m - a p = 1$, then $m b - p a = 1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (0 < p) -> (Eq (gcd p m) 1) -> (Divisible p (times m n)) -> (c : Nat) -> (Eq (times m n) (times p c)) -> (a : Nat) -> (x : ex : Nat) -> (b : Nat) -> Eq (gcd p m) (disj (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (Eq (gcd p m) (or (Eq (minus (times p a) (times m b)) (gcd p m)) (Eq (minus (times m b) (times p a)) (gcd p m)))) -> (Eq (gcd p m) (minus (times m b) (times p a))) -> if (Eq (minus (times m b) (times p a)) 1) (Eq (minus (times b m) (times p a)) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Then if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (and (Leq b n) (Eq (f b) j)) (if (Leq b n) (Eq (f b) j))) -> Proof (forall (f : Elem (Nat -> Nat)) -> forall (i0 : Elem Nat) -> forall (injf : Elem (Leq i0 n)) -> forall (injnf : Elem (Leq (f i0) n)) -> Eq a b -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_Type2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1518$ of $Aop$ of $x1$ and $x2$ to elements of $Type2$. Then for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1519$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_Type2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1518 : Aop x1 x2 -> Type2) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1519 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_Type2 : x1 : Elem Set -> x2 : Elem x1 -> Hterm : Elem (Aop x1 x2) -> P : (op : Elem (Aop x1 x2) -> Elem Type2) -> Proof (forall (H1 : (op : (x : Elem x1) -> (y : Elem x1) -> Elem x1) -> nill : (a : Elem x1) -> Eq (op x2 a) a a) -> (nilr : (a : Elem x1) -> Eq (op a x2) a a) -> assoc : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Eq (op a (op b c)) (op (op a b) c) -> z1519 : Elem (Eq (Hterm (mk_Aop x1 x2) (op nill nilr assoc))) -> Proof (forall (x : Elem (mk_Aop x1 x2)) -> P (op nill nilr assoc))) -> Proof (forall (Hterm : Elem (Aop x1 x2)) -> P Hterm) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1548$ of $Aop$ of $x1$ and $x2$ to propositions. Then for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1549$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1548 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1549 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_CProp2 : (x1 : Elem Set) -> (x2 : Elem x1) -> (Hterm : Elem (Aop x1) x2) -> (P : (op : Elem (Aop x1) x2) -> Prop) -> Proof (forall (H1 : (op : Elem x1 -> Elem x1) -> (nill : Elem (x1 -> Eq (op x2) a)) -> (nilr : Elem (x1 -> Eq (op a) x2)) -> (assoc : Elem (x1 -> x1 -> x1) -> Eq (op (op a b) c) (op a (op b c))) -> forall (z1548 : Elem (Aop x1) x2) -> P (mk_Aop x1 x2 op nill nilr assoc)) (P Hterm)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_CProp3. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1542$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1543$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_CProp3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1542 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1543 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom aop_inv_rect_CProp3 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : forall z1542 : Aop x1 x2 -> Prop, forall H1 : forall op : x1 -> x1 -> x1, forall nill : forall a : x1 -> Eq (op x2 a) a, forall nilr : forall a : x1 -> Eq (op a x2) a, forall assoc : forall a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c), forall z1543 : Eq Hterm (mk_Aop x1 x2 op nill nilr assoc), P (mk_Aop x1 x2 op nill nilr assoc) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16004. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0 < n$ and $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16004 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16004 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ GCD n m = 1 -> forall c : nat, forall ex : nat, forall f : nat -> disjunction (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1) /\\ forall d : nat, (c * n - d * m = 1 \\/ d * m - c * n = 1 /\\ Eq (m * d - n * c) (GCD m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_aux_to_exp. Let $p$ and $n$ and $m$ and $q$ and $r$ be natural numbers. Then if $0 < m$ and $p_ord_aux (p , n , m)= mk_Prod (Nat , Nat , q , r)$, then $n = m ^ q r$.\nassistant\n", "label": "postulate p_ord_aux_to_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 0 m) -> (__1 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> Eq n (times (pow m q) r)", "predict": "postulate p_ord_aux_to_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> if (and (Lt 0 m) (Eq (p_ord_aux (p , n , m)) (mk_Prod (Nat , Nat) q r))) (Eq n (pow m q r))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_rect_Type3. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_949$ of $Dop$ of $A$ and $_nil$ to elements of $Type3$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_949$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_949$.\nassistant\n", "label": "postulate Dop_rect_Type3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_949 : Dop A _nil) -> Type3) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_949 : Dop A _nil) -> Q_ x_949", "predict": "postulate dop_rect_Type3 : (A : Set) -> all A (\\ _nil -> all (Dop A) (\\ x_949 -> all (Q_ x_949) (\\ _H_mk_Dop -> all (ACop A) (\\ sum -> all (A -> Eq) (\\ a -> all (Eq) (\\ b -> all (Eq) (\\ c -> all (distr) (\\ a -> all (distr) (\\ b -> all (distr) (\\ c -> Q_ (mk_Dop A _nil sum prod null distr))))))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_div. For all natural numbers $n$, if $0$ is less than $n$, then $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to the quotient of $m$ and $n$.\nassistant\n", "label": "monotonic_div : n : Nat -> __ : Lt 0 n -> monotonic Nat Leq (m : Nat => div m n) .", "predict": "monotonic_div : (n : Elem Nat) -> Proof (Lt Nat 0 n) -> Proof (and (monotonic Nat Leq) (forall Nat (m => monotonic Nat Leq (quot m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_times. Let $n , m , p , q \\in N$. Assume that $n$ is divisible by $p$. Assume that $m$ is divisible by $q$. Then $n \\times m$ is divisible by $p \\times q$.\nassistant\n", "label": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible m q) -> divisible (times n m) (times p q)", "predict": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> divides n p -> divides m q -> divides (times n m) (times p q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16003. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Assume that $d m - c n = 1$. Then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ Gcd n m = 1 -> forall c : nat, forall x : ex (Nat -> Prop), forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (m * d - n * c) (Gcd m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_times_times. Let $a$ and $b$ and $c$ be natural numbers. Assume that $0$ is less than $c$. Assume that $0$ is less than $b$. Then the quotient of $a$ and $b$ is equal to the quotient of the product of $a$ and $c$ and the product of $b$ and $c$.\nassistant\n", "label": "div_times_times : a : Nat -> b : Nat -> c : Nat -> __ : Lt 0 c -> __1 : Lt 0 b -> Eq (div a b) (div (times a c) (times b c)) .", "predict": "div_times_times : a : Elem Nat -> b : Elem Nat -> c : Elem Nat -> Proof (and (Lt (nd 0) c) (Lt (nd 0) b)) -> Proof (Eq (div a b) (div (times a c) (times b c))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nTo_min. For all natural numbers $i$ and $n$ and $m$, if $i \\leq n$ and $i \\leq m$, then $i \\leq min (n , m)$.\nassistant\n", "label": "axiom to_min (i n m : Nat) (x__ : i ≤ n) (__1 : i ≤ m) : i ≤ min n m", "predict": "axiom to_min (i n m : Nat) (x : i ≤ n ∧ i ≤ m) : i ≤ min n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp2. Let $p , n , m \\in N$. Then if $1 < p$ and $0 < n$, then $m \\log_ p {n}\\leq \\log_ p {(n ^ m)}$.\nassistant\n", "label": "axiom log_exp2 (p n m : Nat) (x__ : 1 < p) (__1 : 0 < n) : m * log p n ≤ log p (pow n m)", "predict": "axiom log_exp2 (p n m : Nat) (x : 1 < p ∧ 0 < n) : m * log p n ≤ log p (pow n m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "axiom let_clause_1617 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : gcd p m = p * a - m * b", "predict": "axiom let_clause_1617 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (t : m * n = p * c) (a : Nat) (ex : Nat → ex) (b : Nat) (u : gcd p m = a * p - b * m ∨ gcd p m = b * m - a * p) (v : gcd p m = a * p - b * m) : a * p - b * m = 1 → p * a - m * b = gcd p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_length_to_mem_all. Let $n$ be a natural number. Let $l$ be a list of natural numbers. Assume that $length$ applied to $Nat$ and $l$ is equal to $n$. Let $__1$ be an element of $unique$ of $Nat$ and $l$. Let $__2$ be a function from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$. Then for all natural numbers $i$, if $i$ is less than $n$, then $mem$ holds for $Nat$ and $i$ and $l$.\nassistant\n", "label": "eq_length_to_mem_all : n : Nat -> l : list Nat -> __ : Eq (length Nat l) n -> __1 : unique Nat l -> __2 : (x : Nat -> __2 : mem Nat x l -> Lt x n) -> i : Nat -> __3 : Lt i n -> mem Nat i l .", "predict": "eq_length_to_mem_all : n : Elem Nat -> l : Elem List Nat -> Proof (Eq (length Nat l) n) -> Proof (forall Nat (i => if (Lt i n) (mem Nat i l))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_S. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $R$ of $b1$ and $b$. Let $l \\in N$. Then for all elements $b2$ of $B$, for all elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$, $lstar$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "lstar_S : B : Set -> R : relation B -> b1 : B -> b : B -> __ : R b1 b -> l : Nat -> b2 : B -> __1 : lstar B R l b b2 -> lstar B R (plus l (nd 1)) b1 b2 .", "predict": "Lstar_S : (B : Elem Set) -> (R : Elem (Relation B)) -> (b1 : Elem B) -> (b : Elem B) -> (x : Elem (R b1 b)) -> (l : Elem Nat) -> Proof (forall (b2 : Elem B) -> forall (x1 : Elem (Lstar l B) -> Proof (forall (R : Relation B) -> forall (l : Nat) -> forall (b : Elem B) -> forall (b2 : Elem B) -> Proof (Lstar B R (plus l 1) b1 b2))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPermut_S_mod. Let $n \\in N$. Then $permut$ holds for $S_mod (n + 1)$ and $n$.\nassistant\n", "label": "permut_S_mod : n : Nat -> permut (S_mod (plus n (nd 1))) n .", "predict": "permut_S_mod : (n : Elem Nat) -> Proof (permut (S_mod (plus n 1)) n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15321. Let $n , m \\in N$. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Assume that $0$ is divisible by $m$. Let $q \\in N$. Assume that $m$ is equal to the product of $0$ and $q$. Then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_15321 (n m : Nat) (posn : 0 < m) (eqn0 : 0 = n) (_clearme : divisible 0 m) (q : Nat) (eqm : m = 0 * q) : m = 0", "predict": "axiom let_clause_15321 (n m : Nat) (x : 0 < m) (y : 0 = n) (z : 0 % m = 0) (q : Nat) (a : m = 0 * q) : m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp4. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Then for all functions $P$ from elements $_z1734$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1735$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp4 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1734 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1735 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "dop_inv_rect_CProp4 : (x1 : Elem Set) -> (x2 : Elem x1) -> (Hterm : Elem (Dop x1 x2)) -> Proof (forall (P : (z1734 : Elem (Dop x1 x2)) -> Prop) -> forall (H1 : (sum : Elem (ACop x1 x2)) -> (prod : (a : Elem x1) -> Elem x1) -> (null : (a : Elem x1) -> Elem (Eq (prod a x2) x2)) -> (distr : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Elem (Eq (prod (a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c)))) -> Proof (forall (z1735 : Elem (Eq Hterm (mk_Dop x1 x2 sum prod null distr))) -> Proof (P (mk_Dop x1 x2 sum prod null distr)))) -> Proof (P Hterm)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_inv_rect_CProp2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1548$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op (x2 , a)$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op (a , x2)$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ and elements $_z1549$ of $Eq$ of $Hterm$ and $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$ to elements of $P$ of $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Aop_inv_rect_CProp2 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : ((_z1548 : Aop x1 x2) -> Prop), forall _H1 : ((op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1549 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)), P Hterm .", "predict": "Axiom aop_inv_rect_CProp2 : forall x1 : Set, forall x2 : x1, forall Hterm : Aop x1 x2, forall P : forall z1548 : Aop x1 x2 -> Prop, forall op : x1 -> x1 -> x1, forall _nill : x1 -> x1, forall _nilr : x1 -> x1 -> Eq, forall _assoc : x1 -> x1 -> x1 -> Eq, forall z1549 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc), P (mk_Aop x1 x2 op _nill _nilr _assoc) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1595. Let $p , n , m \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is both equal to the greatest common divisor of $p$ and $n$ and equal to the greatest common divisor of $p$ and $m$. Then if the greatest common divisor of $p$ and the product of $n$ and $m$ is less than $1$ and $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $m$ is equal to the greatest common divisor of $p$ and $n$.\nassistant\n", "label": "axiom let_clause_1595 (p n m : Nat) (posn : 0 < n) (posm : 0 < m) (primepn : gcd p n = 1) (primepm : gcd p m = 1) (lt1gcd : 1 < gcd p (n * m)) (H : divisible (smallest_factor (gcd p (n * m))) m) : gcd p n = gcd p m", "predict": "axiom let_clause_1595 (p n m : Nat) (x : 0 < n ∧ 0 < m ∧ 1 = gcd p n ∧ 1 = gcd p m) : gcd p (n * m) < 1 ∧ divisible (smallest_factor (gcd p (n * m))) m → gcd p m = gcd p n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n \\in N$. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a$ be a natural number. Assume that $6$ is less than or equal to $a$. Then if the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> (P : 5 < n) -> (m : Nat) -> (Q : 6 <= m) -> (R : pow (plus m 1) 2 <= pow 2 m) -> (a : Nat) -> (S : 6 <= a) -> (T : 2 * (plus a 1) + 1 <= pow 2 a) -> all Nat (\\ x2515 -> all Nat (\\ x2516 -> x2515 == (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_S. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $l \\in N$. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $lstar_r$ of $B$ and $R$ and $l$ and $b1$ and $b$. Let $b2$ be an element of $B$. Let $__1$ be an element of $R$ of $b$ and $b2$. Then $lstar_r$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "Axiom lstar_r_S : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b : B, forall x__ : lstar_r B R l b1 b, forall b2 : B, forall __1 : R b b2, lstar_r B R (l + 1) b1 b2 .", "predict": "Axiom lstar_r_S : forall B : Set, forall R : relation B, forall l : nat, forall b1 : B, forall b : B, forall __ : lstar_r B R l b1 b, forall b2 : B, forall __1 : R b b2, lstar_r B R (l + 1) b1 b2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEqb_true_to_eq. For all natural numbers $n$ and $m$, if $eqb (n , m)= true$, then $n = m$.\nassistant\n", "label": "Axiom eqb_true_to_eq : forall n : nat, forall m : nat, forall x__ : (eqb n m = true), n = m .", "predict": "Axiom eqb_true_to_eq : forall n : nat, forall m : nat, (eqb n m = true -> n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16005. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "axiom let_clause_16005 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : gcd m n = m * d - n * c", "predict": "axiom let_clause_16005 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (ex : ex : Nat → Prop) (clearme : ex c) (d : Nat) (eq1_or_eq2 : c * n - d * m = 1 ∨ d * m - c * n = 1) (eq3 : d * m - c * n = 1) : m * d - n * c = gcd m n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15623 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n -> 0 < m -> 1 = gcd n m -> forall c : nat, forall x : ex, forall d : Nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax_spec_ind. Let $_n \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions. Let $_H_found_max_spec$ be a function from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f (m)$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$. Let $_H_not_found_max_spec$ be a function from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec (_n , _f , x_976)$. Let $x_971$ be a natural number. Let $x_972$ be an element of $max_spec$ of $_n$ and $_f$ and $x_971$. Then $Q_$ holds for $x_971$ and $x_972$.\nassistant\n", "label": "axiom max_spec_ind (_n : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) (_H_found_max_spec : (m : Nat) -> (x_975 : m < _n) -> (x_974 : _f m = true) -> (x_973 : (i : Nat) -> (x__ : m < i) -> (__1 : i < _n) -> _f i = false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) (_H_not_found_max_spec : (x_976 : (i : Nat) -> (x__ : i < _n) -> _f i = false) -> Q_ 0 (not_found_max_spec _n _f x_976)) (x_971 : Nat) (x_972 : max_spec _n _f x_971) : Q_ x_971 x_972", "predict": "axiom max_spec_ind (n : Nat) (f : Nat → Bool) (Q : Nat → Nat → max_spec n f → Prop) : ∀ x : Nat, ∃ y : max_spec n f, Q x y → Q x (f x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_73. Let $n , m , p \\in N$. Then if $0 < p$, then for all natural numbers $x134$ and $x135$ and $x136$, $x134 + (x135 + x136)= x135 + (x134 + x136)$.\nassistant\n", "label": "let_clause_73 : n : Nat -> m : Nat -> p : Nat -> posp : Lt 0 p -> x134 : Nat -> x135 : Nat -> x136 : Nat -> Eq (plus x134 (plus x135 x136)) (plus x135 (plus x134 x136)) .", "predict": "let_clause_73 : n : Elem Nat -> m : Elem Nat -> p : Elem Nat -> Proof (if (Lt (nd 0) p) (forall Nat (x134 => forall Nat (x135 => forall Nat (x136 => Eq (plus x134 (plus x135 x136)) (plus x135 (plus x134 x136)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMonotonic_lt_times_l. Let $c$ be a natural number. Assume that $0 < c$. Then $monotonic$ holds for $Nat$ and $Lt$ and the function that maps $t$ to $t \\times c$.\nassistant\n", "label": "postulate monotonic_lt_times_l : (c : Nat) -> (_ : Lt 0 c) -> monotonic Nat Lt (\\ t : Nat -> times t c)", "predict": "postulate monotonic_lt_times_l : (c : Nat) -> 0 < c -> monotonic Nat Lt (fun t -> t * c)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLePsi_r2. For all natural numbers $n$, the exponentiation of $n$ and $prim$ applied to $n$ is less than or equal to the product of $Psi$ applied to $n$ and $Psi$ applied to $n$.\nassistant\n", "label": "lePsi_r2 : n : Nat -> Leq (pow n (prim n)) (times (Psi n) (Psi n)) .", "predict": "lePsi_r2 : (n : Elem Nat) -> Proof (Leq (pow n prim n) (times (Psi n) (Psi n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_CProp3_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_879$ of $Aop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Aop$ be a function from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$. Then for all elements $x_879$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_879$.\nassistant\n", "label": "Axiom Aop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_879 : Aop A _nil) -> Prop), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_879 : Aop A _nil, Q_ x_879 .", "predict": "Axiom aop_rect_CProp3_body : forall A : Set, forall _nil : A, forall Q_ : Aop A -> _nil -> Prop, forall H_mk_Aop : forall op : A -> _, forall _nill : A -> Eq (op _nil) _nil, forall _nilr : A -> Eq (op _nil) _nil _nil, forall _assoc : A -> A -> A -> Eq (op (op _nil _nil) _nil) (op _nil (op _nil _nil)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc) . forall x_879 : Aop A, Q_ x_879 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_O_log. Let $p , n \\in N$. Then if $1$ is less than $n$, then if $p$ is less than or equal to $n$, then $0$ is less than the logarithm of $p$ and $n$.\nassistant\n", "label": "Axiom lt_O_log : forall p : nat, forall n : nat, forall x__ : (1 < n), forall __1 : Leq p n, 0 < log p n .", "predict": "Axiom lt_O_log : forall p : nat, forall n : nat, (1 < n -> p <= n -> 0 < log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMonotonic_le_minus_r. Let $p , q , n \\in N$. Then if $q \\leq p$, then $n - p \\leq n - q$.\nassistant\n", "label": "monotonic_le_minus_r : p : Nat -> q : Nat -> n : Nat -> __ : Leq q p -> Leq (minus n p) (minus n q) .", "predict": "monotonic_le_minus_r : (p : Elem Nat) -> (q : Elem Nat) -> (n : Elem Nat) -> Proof (Leq q p) -> Proof (Leq (minus n p) (minus n q)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_16171. Let $p$ and $m$ and $n$ be natural numbers. Then if $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$, then if $p$ is divisible by $m \\times n$, then for all natural numbers $c$, if $m n = p c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "axiom let_clause_16171 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : b * m - a * p = gcd p m) (H0 : b * m - a * p = 1) : gcd p m = m * b - p * a", "predict": "axiom let_clause_16171 (p m n : Nat) (x : 0 < p ∧ gcd p m = 1) (y : p % m * n = 0) : ∀ c : Nat, (m * n = p * c → ∀ a : Nat, ∀ _clearme0 : ex ∈ Nat, ∀ b : Nat, (gcd p m = a * p - b * m ∨ gcd p m = b * m - a * p ∧ gcd p m = b * m - a * p → (b * m - a * p = 1 → m * b - p * a = gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDiv_mod_spec_inv_rect_Type1. Let $x1 , x2 , x3 , x4 \\in N$. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Then for all functions $P$ from elements $_z1458$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type1$, for all functions $_H1$ from elements $x_831$ of $Lt$ of $x4$ and $x2$ and elements $x_830$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1459$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_831$ and $x_830$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_831$ and $x_830$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1458 : div_mod_spec x1 x2 x3 x4) -> Type1) -> (_H1 : (x_831 : Lt x4 x2) -> (x_830 : Eq x1 (plus (times x3 x2) x4)) -> (_z1459 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P Hterm", "predict": "postulate div_mod_spec_inv_rect_Type1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> div_mod_spec x1 x2 x3 x4 -> all (P : div_mod_spec x1 x2 x3 x4 -> Type1) (all (x_831 : Lt x4 x2) -> all (x_830 : Eq x1 (plus (times x3 x2) x4)) -> all (z1459 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_831 x_830))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1553. Let $n , n0 \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$. Let $a \\in N$. Then if $n0 = 2 a$ or $n0 = 2 a + 1$ and $n0 = 2 a + 1$, then $n0 = a + (a + 1)$.\nassistant\n", "label": "axiom let_clause_1553 (n n0 : Nat) (_clearme : ex Nat (λ a => n0 = 2 * a ∨ n0 = 2 * a + 1)) (a : Nat) (_clearme0 : n0 = 2 * a ∨ n0 = 2 * a + 1) (Hn : n0 = 2 * a + 1) : n0 = a + (a + 1)", "predict": "axiom let_clause_1553 (n n0 : Nat) (x : ex : Nat) (clearme : Eq n0 (2 * x) ∨ Eq n0 (2 * x + 1)) : ∀ a : Nat, (Eq n0 (2 * a) ∨ Eq n0 (2 * a + 1)) → Eq n0 (a + (a + 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c \\in N$. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the greatest common divisor of $p$ and $m$ is equal to the difference of the product of $p$ and $a$ and the product of $m$ and $b$.\nassistant\n", "label": "let_clause_1617 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (gcd p m) (minus (times p a) (times m b)) .", "predict": "let_clause_1617 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (Lt 0 p) -> Proof (Eq (Gcd p m) 1) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> _clearme0 : Elem (ex (Nat -> Proof (or (Eq (minus (times a p) (times b m)) (Gcd p m)) (Eq (minus (times b m) (times a p)) (Gcd p m)))) -> b : Elem Nat -> Proof (or (Eq (minus (times a p) (times b m)) (Gcd p m)) (Eq (minus (times b m) (times a p)) (Gcd p m))) -> Proof (if (Eq (minus (times a p) (times b m)) (Gcd p m)) (if (Eq (minus (times a p) (times b m)) 1) (Eq (Gcd p m) (minus (times p a) (times m b)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_fact_to_le. Let $p$ and $n$ be natural numbers. Assume that $p$ is prime. Then if $p$ is divisible by $n !$, then $p \\leq n$.\nassistant\n", "label": "postulate divides_fact_to_le : (p : Nat) -> (n : Nat) -> (_ : prime p) -> (__1 : divisible p (factorial n)) -> Leq p n", "predict": "postulate divides_fact_to_le : (p : Nat) -> prime p -> if (divisible p (factorial n)) (Leq p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMonotonic_le_times_r. For all natural numbers $n$, $monotonic$ holds for $Nat$ and $Leq$ and the function that maps $m$ to $n \\times m$.\nassistant\n", "label": "postulate monotonic_le_times_r : (n : Nat) -> monotonic Nat Leq (\\ m : Nat -> times n m)", "predict": "postulate monotonic_le_times_r : (n : Nat) -> monotonic Nat (Leq) (lambda m -> n * m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_m_exp_nm. Let $n , m \\in N$. Assume that $1 < n$. Then $m < n ^ m$.\nassistant\n", "label": "Axiom lt_m_exp_nm : forall n : nat, forall m : nat, forall x__ : (1 < n), m < pow n m .", "predict": "Axiom lt_m_exp_nm : forall n : nat, forall m : nat, (1 < n -> m < pow n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_to_mod_O. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $n$. Then if $n$ is divisible by $m$, then $mod$ applied to $m$ and $n$ is equal to $0$.\nassistant\n", "label": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : divisible n m, mod m n = 0 .", "predict": "Axiom divides_to_mod_O : forall n : nat, forall m : nat, (0 < n -> (divisible n m -> mod m n = 0)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_length_to_mem. Let $n$ be a natural number. Let $l$ be a list of natural numbers. Then if $length (Nat , l)= n + 1$, then for all elements $__1$ of $unique$ of $Nat$ and $l$, for all functions $__2$ from natural numbers $x$ and elements $__2$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Leq$ of $x$ and $n$, $mem$ holds for $Nat$ and $n$ and $l$.\nassistant\n", "label": "postulate eq_length_to_mem : (n : Nat) -> (l : list Nat) -> (_ : Eq (length Nat l) (plus n 1)) -> (__1 : unique Nat l) -> (__2 : (x : Nat) -> (__2 : mem Nat x l) -> Leq x n) -> mem Nat n l", "predict": "postulate eq_length_to_mem : (n : Nat) -> (l : List Nat) -> Eq (length (Nat , l)) (plus n 1) -> all Nat (unique l) (all Nat (mem l) (Leq n)) -> mem (Nat , n) l"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBigop_sum. Let $k1 , k2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k1$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to the sum of $k1$ and $k2$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $bool$ and $p1$ applied to the difference of $i$ and $k2$ and $p2$ applied to $i$ and $leb$ applied to $k2$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $B$ and $f$ applied to the difference of $i$ and $k2$ and $g$ applied to $i$ and $leb$ applied to $k2$ and $i$.\nassistant\n", "label": "bigop_sum : k1 : Nat -> k2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : Aop B nil -> f : (__ : Nat -> B) -> g : (__ : Nat -> B) -> Eq (op B nil op (bigop k1 (i : Nat => p1 i) B nil (op B nil op) (i : Nat => f i)) (bigop k2 (i : Nat => p2 i) B nil (op B nil op) (i : Nat => g i))) (bigop (plus k1 k2) (i : Nat => match_bool Set (__ : bool => bool) (p1 (minus i k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (i : Nat => match_bool Set (__ : bool => B) (f (minus i k2)) (g i) (leb k2 i))) .", "predict": "bigop_sum : (k1 : Elem Nat) -> (k2 : Elem Nat) -> Proof (forall Nat (i => and (p1 i) (p2 i))) -> Proof (forall Set (B => forall Elem (nil => forall Aop (op => forall (f : Elem (B => Nat)) -> forall (g : Elem (B => Nat)) => Eq (op B nil) (bigop (plus k1 k2) (lambda (i => match_bool (Set (forall _ => bool) (p1 (minus i k2))) (p2 i) (leb k2 i)) B nil (op B nil) (lambda (i => match_bool (Set (forall _ => B) (f (minus i k2))) (g i) (leb k2 i))))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTech_log. Let $p , n \\in N$. Assume that $1 < p$. Assume that $0 < n$. Then $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the exponentiation of $p$ and $x$ and $n$ is equal to $\\log_ p {n}$.\nassistant\n", "label": "Axiom tech_log : forall p : nat, forall n : nat, forall x__ : (1 < p), forall __1 : (0 < n), log p n = max (n + 1) (fun x => leb (pow p x) n) .", "predict": "Axiom tech_log : forall p : nat, forall n : nat, (1 < p /\\ 0 < n -> max (n + 1) (fun x => leb (pow p x) n) = log p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15622. Let $m , n , a , b \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$. Then $m d - n c = 1$.\nassistant\n", "label": "let_clause_15622 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15622 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (gcd n m)) -> c : Elem Nat -> Proof (and (ex (Nat, (d => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) (nd_clearme)) -> d : Elem Nat -> Proof (and (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times m d) (times n c)) (nd 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nP_ord_exp1. Let $p$ and $n$ and $q$ and $r$ be natural numbers. Assume that $0 < p$ and $p$ is not divisible by $r$. Then if $n = p ^ q r$, then $p_ord (n , p)= mk_Prod (Nat , Nat , q , r)$.\nassistant\n", "label": "postulate p_ord_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 0 p) -> (__1 : not (divisible p r)) -> (__2 : Eq n (times (pow p q) r)) -> Eq (p_ord n p) (mk_Prod Nat Nat q r)", "predict": "postulate p_ord_exp1 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> and (Lt 0 p) (not (divisible p r)) -> Eq n (pow p q * r) -> p_ord (n , p) = mk_Prod (Nat , Nat , q , r)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15601. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Assume that $0$ is divisible by $m$. Let $q$ be a natural number. Assume that $m$ is equal to the product of $0$ and $q$. Then $n$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_15601 (n m : Nat) (posn : 0 < m) (eqn0 : 0 = n) (_clearme : divisible 0 m) (q : Nat) (eqm : m = 0 * q) : n = 0", "predict": "axiom let_clause_15601 (n m q : Nat) (x : 0 < m) (y : 0 = n) (z : 0 % m = 0) : m = 0 * q → n = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_ind_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "axiom Dop_ind_body (A : Set) (_nil : A) (Q_ : (_x_943 : Dop A _nil) -> Prop) (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)) (x_943 : Dop A _nil) : Q_ x_943", "predict": "axiom dop_ind_body (A : Set) (nil : A) (Q_ : Dop A nil → Prop) : ∀ H : ACop A nil → ∀ prod : A → A → A → ∀ null : A → Eq (prod (nil, null)) nil → ∀ distr : A → A → A → Eq (prod (nil, aop__o__op (A, nil, ACop, prod (nil, b), prod (nil, c))) (aop__o__op (A, nil, ACop, prod (nil, b), prod (nil, c)))) → Q_ (mk_Dop A nil (ACop A nil) prod null distr) → ∀ x : Dop A nil, Q_ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLength_unique_le. For all natural numbers $n$, for all lists $l$ of natural numbers, for all elements $__$ of $unique$ of $Nat$ and $l$, for all functions $__1$ from natural numbers $x$ and elements $__1$ of $mem$ of $Nat$ and $x$ and $l$ to elements of $Lt$ of $x$ and $n$, $length (Nat , l)\\leq n$.\nassistant\n", "label": "postulate length_unique_le : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> Leq (length Nat l) n", "predict": "postulate length_unique_le : (n : Nat) -> (l : List Nat) -> all (unique Nat) l -> all (mem Nat) n l -> all (Lt Nat) n (length Nat l)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Assume that $b$ is less than or equal to $n$. Then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i j : nat, (Leq i n /\\ Leq j n -> forall a : nat, (Leq a n /\\ f a = i /\\ Leq a n /\\ f a = i -> forall b : nat, (Leq b n /\\ f b = j /\\ Leq b n /\\ f b = j -> if (f b = j) (forall g : nat -> nat -> Leq (f (g i n)) (f (g i n)) -> forall injf : permut (f n) n, (a = b -> f a = i)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMinus_Sn_m. Let $m , n \\in N$. Assume that $m$ is less than or equal to $n$. Then the difference of the sum of $n$ and $1$ and $m$ is equal to the sum of the difference of $n$ and $m$ and $1$.\nassistant\n", "label": "minus_Sn_m : m : Nat -> n : Nat -> __ : Leq m n -> Eq (minus (plus n (nd 1)) m) (plus (minus n m) (nd 1)) .", "predict": "minus_Sn_m : (m : Elem Nat) -> (n : Elem Nat) -> Proof (Leq m n) -> Proof (Eq (minus (plus n 1) m) (plus (minus n m) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nBijn_fg. Let $f$ and $g$ be functions from natural numbers to natural numbers. Let $n \\in N$. Let $__$ be an element of $bijn$ of $f$ and $n$. Let $__1$ be an element of $bijn$ of $g$ and $n$. Then $bijn$ holds for the function that maps $p$ to $f$ applied to $g$ applied to $p$ and $n$.\nassistant\n", "label": "postulate bijn_fg : (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f n) -> (__1 : bijn g n) -> bijn (\\ p : Nat -> f (g p)) n", "predict": "postulate bijn_fg : (f : Nat -> Nat) -> (g : Nat -> Nat) -> Nat -> Bijection (f n) -> Bijection (g n) -> Bijection (compose (compose f g) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1575. Let $m , n , a , b \\in N$. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.\nassistant\n", "label": "let_clause_1575 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> x1029 : Nat -> Eq x1029 (times x1029 (minus (times n c) (times m d))) .", "predict": "let_clause_1575 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (Lt (nd 0) n) (if (Lt (nd 0) m) (if (Eq (nd 1) (gcd n m)) (forall Nat (c => forall (ex : Elem Nat) (nd => forall Nat (d => if (or (Eq (nd (minus (times c n) (times d m))) (nd 1)) (Eq (nd (minus (times d m) (times c n))) (nd 1)))))) (forall Nat (x1029 => x1029 (nd (minus (times c n) (times d m)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_inv_rect_CProp2. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1746$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1747$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "Dop_inv_rect_CProp2 : x1 : Set -> x2 : x1 -> Hterm : Dop x1 x2 -> P : (_z1746 : Dop x1 x2 -> Prop) -> _H1 : (sum : ACop x1 x2 -> prod : (__ : x1 -> __1 : x1 -> x1) -> _null : (a : x1 -> Eq (prod a x2) x2) -> _distr : (a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> _z1747 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm .", "predict": "dop_inv_rect_CProp2 : x1 : Elem -> x2 : Elem x1 -> Hterm : Dop x1 x2 -> P : (z1746 : Dop x1 x2) -> Prop -> _H1 : (sum : ACop x1 x2) -> (prod : (z : Elem x1) -> (_1 : Elem x1) -> Elem x1) -> (null : (a : Elem x1) -> Eq (prod a x2) x2) -> (distr : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Eq (prod a (o_op x1 x2 sum) b c) (o_op x1 x2 (sum (prod a b) (prod a c)))) -> Eq Hterm (mk_Dop x1 x2 sum prod null distr) -> Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "let_clause_15623 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (minus (times m d) (times n c)) (nd 1) .", "predict": "let_clause_15623 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m)) -> Proof (Eq (nd 1) (Gcd n m)) -> c : Elem Nat -> Proof (forall Nat (d => or (and (Eq (minus (times c n) (times d m)) (nd 1)) (and (Eq (minus (times d m) (times c n)) (nd 1))))) -> Proof (forall Nat (d => if (or (and (Eq (minus (times c n) (times d m)) (nd 1)) (and (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times m d) (times n c)) (nd 1)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $permf$ of $permut$ of $f$ and $n$, for all natural numbers $i$ and $j$, if $i \\leq n$ and $j \\leq n$, then for all natural numbers $a$, if $a \\leq n$ and $f (a)= i$ and $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$ and $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "Axiom let_clause_1068 : forall f : ((x__ : nat) -> nat), forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, forall lein : Leq i n, forall lejn : Leq j n, forall a : nat, forall _clearme : (Leq a n /\\ f a = i), forall lean : Leq a n, forall fa : (f a = i), forall b : nat, forall _clearme0 : (Leq b n /\\ f b = j), forall lebn : Leq b n, forall fb : (f b = j), forall x__ : ((i0 : nat) -> (x__ : Leq i0 n) -> Leq (f i0) n), forall injf : injn f n, forall auto : (a = b), f a = i .", "predict": "Axiom let_clause_1068 : forall f : nat -> nat, forall n : nat, forall permf : permut f n, forall i : nat, forall j : nat, (i <= n /\\ j <= n -> forall a : nat, (a <= n /\\ f a = i /\\ a <= n -> if (f a = i) -> forall b : nat, (b <= n /\\ f b = j /\\ b <= n -> if (f b = j) -> forall i0 : nat, forall x : Leq i0 n, forall y : Leq (f i0) n, (a = b -> f a = i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15691. Let $m , n , a , b \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_15691 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15691 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : gcd n m = 1) (c : Nat) (x' : ex : Nat → disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) : ∀ d : Nat, (c * n - d * m = 1 ∨ d * m - c * n = 1 ∧ c * n - d * m = 1) → n * c - m * d = 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFound_min_spec. Let $n$ and $b$ be natural numbers. Let $f$ be a function from natural numbers to booleans. Let $m$ be a natural number. Assume that $b$ is less than or equal to $m$. Then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "Axiom found_min_spec : forall n : nat, forall b : nat, forall f : ((x__ : nat) -> bool), forall m : nat, forall x__ : Leq b m, forall __1 : (m < n + b), forall __2 : (f m = true), forall __3 : ((i : nat) -> (__3 : Leq b i) -> (__4 : i < m) -> f i = false), min_spec n b f m .", "predict": "Axiom found_min_spec : forall n : nat, forall b : nat, forall f : nat -> bool, forall m : nat, (b <= m -> (m < n + b -> f m = true -> forall g : nat -> Leq b (g) -> Lt g m -> Eq (f g) absurdity) -> min_spec n b f m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z677$ to elements of $Type1$. Let $_H1$ be a function from elements $_z678$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Let $_H2$ be a function from natural numbers $x_386$ and functions $_x_388$ from elements $_z678$ of $Eq$ of $Hterm$ and $x_386$ to elements of $P$ of $x_386$ and elements $_z678$ of $Eq$ of $Hterm$ and the sum of $x_386$ and $1$ to elements of $P$ of the sum of $x_386$ and $1$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : (_z677 : Nat) -> Type1) (_H1 : (_z678 : Hterm = 0) -> P 0) (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Hterm = x_386) -> P x_386) -> (_z678 : Hterm = x_386 + 1) -> P (x_386 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type1 (Hterm : Nat) (P : ∀ n : Nat, Type1) (H1 : ∀ n : Eq Hterm 0, P 0) (H2 : ∀ x : Nat, ∀ n : Eq Hterm x, P x → P (x + 1)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBertrand. Let $n \\in N$. Then if $0 < n$, then $bertrand$ holds for $n$.\nassistant\n", "label": "bertrand : n : Nat -> __ : Lt 0 n -> bertrand n .", "predict": "bertrand : (n : Elem Nat) -> Proof (if (Lt (nd 0) n) (Proof (bertrand n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15321. Let $n , m \\in N$. Assume that $0$ is less than $m$. Assume that $0$ is equal to $n$. Then if $0$ is divisible by $m$, then for all natural numbers $q$, if $m$ is equal to the product of $0$ and $q$, then $m$ is equal to $0$.\nassistant\n", "label": "Axiom let_clause_15321 : forall n : nat, forall m : nat, forall posn : (0 < m), forall eqn0 : (0 = n), forall _clearme : divisible 0 m, forall q : nat, forall eqm : (m = 0 * q), m = 0 .", "predict": "Axiom let_clause_15321 : forall n : nat, forall m : nat, (0 < m /\\ n = 0 -> (0 mod m -> forall q : nat, (m = 0 * q -> m = 0)) ) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> (c : Nat) -> ex (Nat -> and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (d : Nat) -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1) -> if (Eq (minus (times c n) (times d m)) 1) (Gcd m n == (minus (times n c) (times m d)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all natural numbers $n1$, for all functions $Hind$ from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g2$ applied to $i$, for all functions $Hle$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n1 + 1$ and elements $__1$ of $Eq$ of $p (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$, if $p (n1)= true$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))) -> (Hle : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> (Hcase : Eq (p n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> all (p : Nat -> Bool) -> all (g1 g2 : Nat -> Nat) -> all (n1 : Nat) -> all (Hind : (i : Nat) -> Lt i n1 -> Eq (p i) true -> Bool) -> all (Hle : (i : Nat) -> Lt i (plus n1 1) -> Eq (p i) true -> Bool) -> if (Eq (p n) true) (all (x2515 x2516 : Nat) -> Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2515)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nACop_rect_CProp4. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_903$ of $ACop$ of $A$ and $_nil$ to propositions. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$. Then for all elements $x_903$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_903$.\nassistant\n", "label": "axiom ACop_rect_CProp4 (A : Set) (_nil : A) (Q_ : (_x_903 : ACop A _nil) -> Prop) (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> op A _nil aop a b = op A _nil aop b a) -> Q_ (mk_ACop A _nil aop _comm)) (x_903 : ACop A _nil) : Q_ x_903", "predict": "axiom cop_rect_CProp4 (A : Set) (nil : A) (Q_ : (x : ACop A nil) → Prop) (H_mk_ACop : (aop : Aop A) → nil → (comm : ∀ a : A, ∀ b : A, Eq (op A nil aop a b) (op A nil aop b a)) → Q_ (mk_ACop A nil aop comm)) : ∀ x : ACop A nil, Q_ x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_ind. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_915$ of $range$ of $_A$ to propositions. Let $_H_mk_range$ be a function from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$. Then for all elements $x_915$ of $range$ of $_A$, $Q_$ holds for $x_915$.\nassistant\n", "label": "Axiom range_ind : forall _A : Set, forall Q_ : ((_x_915 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_915 : range _A, Q_ x_915 .", "predict": "Axiom range_ind : forall A : Set, forall Q : A -> Prop, forall H : forall enum : nat -> A, forall upto : nat, forall filter : nat -> bool -> Q (mk_range A enum upto filter) -> forall x : range A, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_maxr. Let $i , n , m \\in N$. Assume that $max$ applied to $n$ and $m$ is less than or equal to $i$. Then $m$ is less than or equal to $i$.\nassistant\n", "label": "Axiom le_maxr : forall i : nat, forall n : nat, forall m : nat, forall x__ : Leq (max n m) i, Leq m i .", "predict": "Axiom le_maxr : forall i : nat, forall n : nat, forall m : nat, (Leq (max n m) i -> Leq m i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_le_times_to_lt_S_to_div. Let $a , c , b \\in N$. Assume that $0 < b$. Assume that $b c \\leq a$. Then if $a < b (c + 1)$, then $a \\div b = c$.\nassistant\n", "label": "lt_to_le_times_to_lt_S_to_div : a : Nat -> c : Nat -> b : Nat -> __ : Lt 0 b -> __1 : Leq (times b c) a -> __2 : Lt a (times b (plus c (nd 1))) -> Eq (div a b) c .", "predict": "Lt_to_le_times_to_lt_S_to_div : (a : Elem Nat) -> (c : Elem Nat) -> (b : Elem Nat) -> Proof (Lt 0 b) -> Proof (Leq (times b c) a) -> Proof (Lt a (times b (plus c 1))) -> Proof (Eq (div a b) c) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1047. Let $k , n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n \\leq k$. Let $j$ be a natural number. Assume that $n \\leq j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p (i)$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j + 1$ to elements of $Eq$ of $p (i)$ and absurdity. Let $x2571 , x2572 \\in N$. Then $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.\nassistant\n", "label": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 .", "predict": "Axiom let_clause_1047 : forall k : nat, forall n : nat, (forall p : nat -> bool, forall B : Set, (forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (n <= k -> forall j : nat, (n <= j -> forall Hind : (forall i : nat, Leq n i -> Lt i j -> Eq (p i) absurdity) -> Eq (bigop n (fun i => Eq (p i) absurdity) B nil op (fun i => f i)) (bigop j (fun i => Eq (p i) absurdity) B nil op (fun i => f i)))) -> forall x2571, x2572 : nat, (x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_to_le1. Let $n$ and $m$ and $p$ be natural numbers. Then if $0 < p$ and $n ^ p \\leq m ^ p$, then $n \\leq m$.\nassistant\n", "label": "Axiom le_exp_to_le1 : forall n : nat, forall m : nat, forall p : nat, forall x__ : (0 < p), forall __1 : Leq (pow n p) (pow m p), Leq n m .", "predict": "Axiom le_exp_to_le1 : forall n : nat, forall m : nat, forall p : nat, (0 < p /\\ pow n p <= pow m p -> n <= m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrime_to_divides_M. For all natural numbers $m$ and $p$, if $p$ is prime and $m + 1 < p$, then if $p \\leq 2 m + 1$, then $p$ is divisible by $M (m)$.\nassistant\n", "label": "Axiom prime_to_divides_M : forall m : nat, forall p : nat, forall x__ : prime p, forall __1 : (m + 1 < p), forall __2 : Leq p (2 * m + 1), divisible p (M m) .", "predict": "Axiom prime_to_divides_M : forall m : nat, forall p : nat, (prime p /\\ m + 1 < p -> p <= 2 * m + 1 -> p % M m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_1_max_prime. Let $n$ be a natural number. Assume that $1$ is less than $n$. Then $1$ is less than $max$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $andb$ applied to $primeb$ applied to $i$ and $dividesb$ applied to $i$ and $n$.\nassistant\n", "label": "lt_1_max_prime : n : Nat -> __ : Lt (nd 1) n -> Lt (nd 1) (max (plus n (nd 1)) (i : Nat => andb (primeb i) (dividesb i n))) .", "predict": "Lt_1_max_prime : (n : Elem Nat) -> Proof (Lt 1 n) -> Proof (Lt 1 (Max (plus n 1) (lambda i => andb (primeb i) (dividesb i n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_CProp1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z707$ to propositions. Let $_H1$ be a function from elements $_z708$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Then for all functions $_H2$ from natural numbers $x_410$ and functions $_x_412$ from elements $_z708$ of $Eq$ of $Hterm$ and $x_410$ to elements of $P$ of $x_410$ and elements $_z708$ of $Eq$ of $Hterm$ and $x_410 + 1$ to elements of $P$ of $x_410 + 1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_CProp1 (Hterm : Nat) (P : (_z707 : Nat) -> Prop) (_H1 : (_z708 : Hterm = 0) -> P 0) (_H2 : (x_410 : Nat) -> (_x_412 : (_z708 : Hterm = x_410) -> P x_410) -> (_z708 : Hterm = x_410 + 1) -> P (x_410 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_CProp1 (Hterm : Nat) (P : Nat → Prop) (H1 : Eq Hterm 0 → P 0) : ∀ x : Nat, ∀ y : Eq Hterm x, P x → ∀ z : Eq Hterm (x + 1), P (x + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar. For all sets $B$, for all elements $_R$ of $relation$ of $B$, for all natural numbers $__$, $relation$ holds for $B$.\nassistant\n", "label": "Axiom lstar : forall B : Set, forall _R : relation B, forall x__ : nat, relation B .", "predict": "Axiom lstar : forall B : Set, forall _R : relation B, forall __ : nat, relation B _R __ ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_16171. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that $b m - a p = 1$. Then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "let_clause_16171 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times b m) (times a p)) (gcd p m) -> H0 : Eq (minus (times b m) (times a p)) (nd 1) -> Eq (gcd p m) (minus (times m b) (times p a)) .", "predict": "let_clause_16171 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Eq (nd 1) (gcd p m)) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> x : Elem ex (Nat) -> Proof (Eq (a p - b m) (gcd p m) || Eq (b m - a p) (gcd p m)) -> b : Elem Nat -> Proof (Eq (gcd p m) (if (or (Eq (a p - b m) (gcd p m)) (Eq (b m - a p) (gcd p m))) (Eq (b m - a p) (gcd p m))) -> Proof (Eq (if (or (Eq (gcd p m) (a p - b m)) (Eq (gcd p m) (b m - a p))) (Eq (gcd p m) (b m - a p))) -> Proof (Eq (b m - a p) (nd 1)) -> Proof (Eq (minus (times m b) (times p a)) (gcd p m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax. Let $_n \\in N$. Then for all functions $_f$ from natural numbers to booleans, $Nat$.\nassistant\n", "label": "axiom max (_n : Nat) (_f : (x__ : Nat) -> bool) : Nat", "predict": "axiom max (n : Nat) : ∀ f : Nat → Bool, ..."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_1544 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n)) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n)) .", "predict": "let_clause_1544 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : Function (m : Elem Nat) -> Function (n : Elem Nat) -> Proof (0 : Elem Lt n) -> Proof (Leq n m) -> Proof (Leq n q) -> Proof (ex (Nat -> Proof (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) -> Proof (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) -> Proof (Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_inv_rect_CProp1. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1554$ of $Aop$ of $x1$ and $x2$ to propositions. Let $_H1$ be a function from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1555$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Aop_inv_rect_CProp1 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : (_z1554 : Aop x1 x2) -> Prop) (_H1 : (op : (x__ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> op x2 a = a) -> (_nilr : (a : x1) -> op a x2 = a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> op a (op b c) = op (op a b) c) -> (_z1555 : Hterm = mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) : P Hterm", "predict": "axiom aop_inv_rect_CProp1 (x1 : Set) (x2 : x1) (Hterm : Aop x1 x2) (P : ∀ z1554 : Aop x1 x2 → Prop) (H1 : ∀ op : x1 → x1, ∀ __1 : x1, x1 → ∀ a : x1, Eq (op x2 a) a ∧ Eq (op a x2) a ∧ ∀ a : x1, ∀ b : x1, ∀ c : x1, Eq (op a (op b c)) (op (op a b) c)) : P (mk_Aop x1 x2 op _nill _nilr _assoc Hterm)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nCongruent_times. For all natural numbers $n$ and $m$ and $n1$ and $m1$ and $p$, if $0$ is less than $p$, then for all elements $__1$ of $congruent$ of $n$ and $n1$ and $p$, for all elements $__2$ of $congruent$ of $m$ and $m1$ and $p$, $congruent$ holds for the product of $n$ and $m$ and the product of $n1$ and $m1$ and $p$.\nassistant\n", "label": "congruent_times : n : Nat -> m : Nat -> n1 : Nat -> m1 : Nat -> p : Nat -> __ : Lt 0 p -> __1 : congruent n n1 p -> __2 : congruent m m1 p -> congruent (times n m) (times n1 m1) p .", "predict": "congruent_times : (n : Elem Nat) -> (m : Elem Nat) -> (n1 : Elem Nat) -> (m1 : Elem Nat) -> (p : Elem Nat) -> Proof (Lt 0 p) -> Proof (forall (x : Elem (congruent n n1 p)) -> forall (y : Elem (congruent m m1 p)) -> congruent (times n m) (times n1 m1) p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMod_times_mod. Let $n , m , p \\in N$. Then if $0 < p$ and $0 < m$, then $mod (n , p)= mod (mod (n , m p), p)$.\nassistant\n", "label": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)", "predict": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> and (Lt 0 p) (Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1033. Let $n \\in N$. Assume that $2 ^ 7 \\leq n$. Let $p \\in N$. Assume that $\\sqrt{ (2 n)}+ 1 \\leq p$. Assume that $p < 2 n + 1$. Assume that $leb (2 , k (2 n , p))= true$. Then if $2 n < p ^ 2$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "axiom let_clause_1033 (n : Nat) (len : pow 2 7 ≤ n) (p : Nat) (lep : sqrt (2 * n) + 1 ≤ p) (ltp : p < 2 * n + 1) (Hc : leb 2 (k (2 * n) p) = true) (H2n : 2 * n < pow p 2) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_1033 (n : Nat) (x : pow 2 7 ≤ n) (p : Nat) (y : sqrt (2 * n) + 1 ≤ p ∧ p < 2 * n + 1 ∧ leb 2 (k (2 * n) p) = true) (z : 2 * n < pow p 2) : ∀ x2515 : Nat, ∀ x2516 : Nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_plus_minus_m_m. Let $n , m \\in N$. Then $n \\leq n - m + m$.\nassistant\n", "label": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m", "predict": "axiom le_plus_minus_m_m (n m : Nat) : n ≤ n - m + m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1033. Let $n$ be a natural number. Assume that the exponentiation of $2$ and $7$ is less than or equal to $n$. Let $p \\in N$. Assume that the sum of the square root of the product of $2$ and $n$ and $1$ is less than or equal to $p$. Assume that $p$ is less than the sum of the product of $2$ and $n$ and $1$. Assume that $leb$ applied to $2$ and $k$ applied to the product of $2$ and $n$ and $p$ is equal to $true$. Then if the product of $2$ and $n$ is less than the exponentiation of $p$ and $2$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> len : Leq (pow (nd 2) (nd 7)) n -> p : Nat -> lep : Leq (plus (sqrt (times (nd 2) n)) (nd 1)) p -> ltp : Lt p (plus (times (nd 2) n) (nd 1)) -> Hc : Eq (leb (nd 2) (k (times (nd 2) n) p)) true -> H2n : Lt (times (nd 2) n) (pow p (nd 2)) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> Proof (Leq (pow (nd 2) (nd 7)) n) -> Proof (forall Nat (p => Leq (plus (sqrt (times (nd 2) n)) (nd 1)) p) /\\ Leq p (plus (times (nd 2) n) (nd 1))) -> Proof (Eq (leb (nd 2) (k (times (nd 2) n) p)) (nd true)) -> Proof (if (Leq (times (nd 2) n) (pow p (nd 2))) (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLt_to_le_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Then if $n < m$, then if $m \\leq p$, then $n < p$.\nassistant\n", "label": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, forall x__ : (n < m), forall __1 : Leq m p, n < p .", "predict": "Axiom lt_to_le_to_lt : forall n : nat, forall m : nat, forall p : nat, (n < m -> m <= p -> n < p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPrime_to_primeb_true. Let $n \\in N$. Assume that $n$ is prime. Then $primeb (n)= true$.\nassistant\n", "label": "postulate prime_to_primeb_true : (n : Nat) -> (_ : prime n) -> Eq (primeb n) true", "predict": "postulate prime_to_primeb_true : (n : Nat) -> prime n -> true (primeb n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1012. Let $f$ be a function from natural numbers to booleans. Let $n , i \\in N$. Let $Hind$ be a function from natural numbers $b$ to elements of $prod$ of $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m2$ applied to $f$ and $n$ and $i$ and $b$ and absurdity and the function that maps $__$ to $Eq (let_m2 (f , n , i , b), i + b)$. Let $b$ be a natural number. Assume that $f (b)= true$. Assume that absurdity is equal to $f (b)$. Then $true$ is equal to absurdity.\nassistant\n", "label": "let_clause_1012 : f : (__ : Nat -> bool) -> n : Nat -> i : Nat -> Hind : (b : Nat -> prod Prop Prop (Eq (f (let_m2 f n i b)) false) (__ : Eq (f (let_m2 f n i b)) false => Eq (let_m2 f n i b) (plus i b))) -> b : Nat -> fb : Eq (f b) true -> eqm : Eq (f b) false -> Eq false true .", "predict": "let_clause_1012 : f : Elem (Nat -> Bool) -> n : Elem Nat -> i : Elem Nat -> Hind : Elem (b : Elem Nat -> Prod (Prop) (Prop) (Eq (f (let_m2 (f n i) b)) (plus i b))) -> b : Elem Nat -> Proof (f b = true) -> Proof (absurdity = f b) -> Proof (true = absurdity) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_CProp1_body. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_855 , x_854)$. Then for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp1_body (_n _m _q _r : Nat) (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_855 : _r < _m) -> (x_854 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) (x_853 : div_mod_spec _n _m _q _r) : Q_ x_853", "predict": "axiom div_mod_spec_rect_CProp1_body (n m q r : Nat) (Q : div_mod_spec n m q r → Prop) (H_div_mod_spec_intro : Lt r m × Eq n (q * m + r) → div_mod_spec_intro n m q r) : ∀ x : div_mod_spec n m q r, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16002. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> (c : Nat) -> and (clearme : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1595. Let $p$ and $n$ and $m$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $p$ and $n$, then if $1$ is equal to the greatest common divisor of $p$ and $m$, then if the greatest common divisor of $p$ and the product of $n$ and $m$ is less than $1$, then if $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $m$ is equal to the greatest common divisor of $p$ and $n$.\nassistant\n", "label": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, forall posn : (0 < n), forall posm : (0 < m), forall primepn : (gcd p n = 1), forall primepm : (gcd p m = 1), forall lt1gcd : (1 < gcd p (n * m)), forall H : divisible (smallest_factor (gcd p (n * m))) m, gcd p n = gcd p m .", "predict": "Axiom let_clause_1595 : forall p : nat, forall n : nat, forall m : nat, (0 < n -> 0 < m -> 1 = gcd p n -> 1 = gcd p m -> gcd p (n * m) < 1 -> (smallest_factor (gcd p (n * m)) mod m = 0 -> gcd p m = gcd p n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type4_body. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type4$. Then for all functions $_H_div_mod_spec_intro$ from elements $x_815$ of $Lt$ of $_r$ and $_m$ and elements $x_814$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_815 , x_814)$, for all elements $x_813$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_813$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type4_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_813 : div_mod_spec _n _m _q _r) -> Type4), forall _H_div_mod_spec_intro : ((x_815 : _r < _m) -> (x_814 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)), forall x_813 : div_mod_spec _n _m _q _r, Q_ x_813 .", "predict": "Axiom div_mod_spec_rect_Type4_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, (Q_ : div_mod_spec n m q r -> Type4) -> forall H_div_mod_spec_intro : Lt r m -> Eq n (q * m + r) -> div_mod_spec_intro n m q r (r : Lt r m) (x_814 : Eq n (q * m + r)) -> forall x_813 : div_mod_spec n m q r, Q_ x_813 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMin_spec_inv_ind. Let $x1 , x2 \\in N$. Let $x3$ be a function from natural numbers to booleans. Then for all natural numbers $x4$, for all elements $_Hterm$ of $min_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from natural numbers $_z1890$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_1080$ of $Leq$ of $x2$ and $m$ and elements $_x_1079$ of $Lt$ of $m$ and $x1 + x2$ and elements $_x_1078$ of $Eq$ of $x3 (m)$ and $true$ and functions $_x_1077$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $x3 (i)$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_1081$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1 + x2$ to elements of $Eq$ of $x3 (i)$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $x1 + x2$ to elements of $P$ of $x1 + x2$, $P$ holds for $x4$.\nassistant\n", "label": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : ((x__ : nat) -> bool), forall x4 : nat, forall _Hterm : min_spec x1 x2 x3 x4, forall P : ((_z1890 : nat) -> Prop), forall _H1 : ((m : nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : m < x1 + x2) -> (_x_1078 : x3 m = true) -> (_x_1077 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < m) -> x3 i = false) -> (_z1891 : x4 = m) -> P m), forall _H2 : ((_x_1081 : (i : nat) -> (x__ : Leq x2 i) -> (__1 : i < x1 + x2) -> x3 i = false) -> (_z1891 : x4 = x1 + x2) -> P (x1 + x2)), P x4 .", "predict": "Axiom min_spec_inv_ind : forall x1 : nat, forall x2 : nat, forall x3 : nat -> Prop, forall x4 : nat, forall Hterm : min_spec x1 x2 x3, forall P : nat -> Prop, forall _H1 : forall m : nat, forall x : Leq x2 m, forall x : Lt m, x1 + x2 = true, forall _x_1077 : forall i : nat, forall x : Leq x2 i, forall x : Lt i, x1 + x2 = true, absurdity, forall _z1891 : Eq x4 m -> P m, forall _H2 : forall i : nat, forall x : Leq x2 i, forall x : Lt i, x1 + x2 = true, absurdity, forall _z1891 : Eq x4 (x1 + x2) -> P (x1 + x2), P x4 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1686. Let $n$ and $m$ be natural numbers. Let $Hind$ be a function from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$. Let $a \\in N$. Assume that $m = 2 a$ or $m = 2 a + 1$. Assume that $m = 2 a + 1$. Assume that $1 < 2 a + 1$. Assume that $0 < a$. Then $pred (m)= a + a$.\nassistant\n", "label": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> Eq (pred m) (plus a a)", "predict": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> Hind n (Lt m a) (Lt 1 (Lt m (a + 1))) (Lt 0 a) -> pred m == a + a"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10471. Let $n1$ and $n2$ be natural numbers. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Let $f1$ and $f2$ be functions from natural numbers to elements of $B$. Let $_clearme$ be an element of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Then for all functions $h$ from natural numbers to natural numbers, for all elements $_clearme0$ of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, for all functions $k$ from natural numbers to natural numbers, if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_h", "label": "let_clause_10471 : n1 : Nat -> n2 : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : ACop B nil -> f1 : (__ : Nat -> B) -> f2 : (__ : Nat -> B) -> _clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2) -> h : (__ : Nat -> Nat) -> _clearme0 : ex (prod Set Set Nat (__ : Nat => Nat)) (k : (__ : Nat -> Nat) => and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq (p1 i) true) (__1 : Eq (p1 i) true => Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> k : (__ : Nat -> Nat) -> _clearme1 : and (and (prod Set Prop Nat (i : Nat => prod Prop Prop (Lt i n1) (__ : Lt i n1 => prod Prop Prop (Eq (p1 i) true) (__1 : Eq (p1 i) true => Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n", "predict": "k$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, then $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n2$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p2$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f2$ applied to $i$ and $f1$ applied to $h$ applied to $i$, $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_sigma_p. For all natural numbers $n$, for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, for all elements $__2$ of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and the disjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and $true$ and $Lt$ applied to $g1$ applied to $i$ and $g2$ applied to $i$ and the conjunction of the conjunction of $Eq$ applied to $p1$ applied to $i$ and absurdity and $Eq$ applied to $p2$ applied to $i$ and $true$ and $Lt$ applied to $0$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "axiom lt_sigma_p (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) (__2 : ex Nat (λ i => i < n ∧ (p1 i = true ∧ g1 i < g2 i ∨ (p1 i = false ∧ p2 i = true ∧ 0 < g2 i)))) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) < bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)", "predict": "axiom lt_sigma_p (n : Nat) (p1 p2 : Nat → Bool) (g1 g2 : Nat → Nat) (f : ∀ i : Nat, Lt i n ∧ (Eq (p1 i) true → Eq (p2 i) true)) (g : ∀ i : Nat, Lt i n ∧ (Eq (p1 i) true → Leq (g1 i) (g2 i))) (x : ex (Nat := Nat)) (f' : ∀ i : Nat, Lt i n ∧ (Eq (p1 i) true → and (Lt (g1 i) (g2 i)) (or (and (Eq (p1 i) absurdity) (Eq (p2 i) true)) (Lt 0 (g2 i)))) : bigop n (λ i, p1 i) Nat 0 plus (λ i, g1 i) < bigop n (λ i, p2 i) Nat 0 plus (λ i, g2 i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15625. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), m * d - n * c = 1 .", "predict": "Axiom let_clause_15625 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m -> (1 = gcd n m -> forall c : nat, forall _clearme : ex, forall d : Nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> Eq (d * m - c * n) 1 -> Eq (m * d - n * c) 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTo_min. For all natural numbers $i$ and $n$ and $m$, if $i \\leq n$, then if $i \\leq m$, then $i \\leq min (n , m)$.\nassistant\n", "label": "to_min : i : Nat -> n : Nat -> m : Nat -> __ : Leq i n -> __1 : Leq i m -> Leq i (min n m) .", "predict": "to_min : (i : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (Leq i n) (if (Leq i m) (Leq i (min n m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBigop_Strue. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to $true$, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $f$ applied to $k$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "axiom bigop_Strue (k : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (x__ : p k = true) : bigop (k + 1) (λ i => p i) B nil op (λ i => f i) = op (f k) (bigop k (λ i => p i) B nil op (λ i => f i))", "predict": "axiom bigop_strue (k : Nat) (p : Nat → Bool) (B : Set Nat) (nil : B) (op : B → Nat → B) (f : Nat → B) : p k = true → bigop (k + 1) (λ i, p i ∧ B ∧ nil ∧ op ∧ λ i, f i) = op (f k) (bigop k (λ i, p i ∧ B ∧ nil ∧ op ∧ λ i, f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAop_rect_Type5_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_865$ of $Aop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op (_nil , a)$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op (a , _nil)$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ to elements of $Q_$ of $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, for all elements $x_865$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_865$.\nassistant\n", "label": "Axiom Aop_rect_Type5_body : forall A : Set, forall _nil : A, forall Q_ : ((_x_865 : Aop A _nil) -> Type5), forall _H_mk_Aop : ((op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)), forall x_865 : Aop A _nil, Q_ x_865 .", "predict": "Axiom aop_rect_Type5_body : forall A : Set, forall nil : A, forall Q_ : forall x_865 : Aop A -> Type5, forall H_mk_Aop : forall op : A -> A -> A, forall nill : forall a : A -> Eq (op nil a) a, forall nilr : forall a : A -> Eq (op a nil) a, forall assoc : forall a : A -> b : A -> c : A -> Eq (op (op a b) c) (op a (op b c)), forall x_865 : Aop A, forall _nil : A, Q_ x_865 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_Type3. Let $_n , _m , _q , _r \\in N$. Then for all functions $Q_$ from elements $_x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type3$, for all functions $_H_div_mod_spec_intro$ from elements $x_823$ of $Lt$ of $_r$ and $_m$ and elements $x_822$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_823 , x_822)$, for all elements $x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_821$.\nassistant\n", "label": "div_mod_spec_rect_Type3 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_821 : div_mod_spec _n _m _q _r -> Type3) -> _H_div_mod_spec_intro : (x_823 : Lt _r _m -> x_822 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) -> x_821 : div_mod_spec _n _m _q _r -> Q_ x_821 .", "predict": "div_mod_spec_rect_Type3 : n : Elem Nat -> m : Elem Nat -> q : Elem Nat -> r : Elem Nat -> Proof (forall (Q_ : Proof (forall (x_821 : Elem (div_mod_spec n m q r)) (Q_ x_821))) -> forall (x_823 : Proof (Lt r m)) -> forall (x_822 : Proof (Eq n (plus q (minus m r)))) -> Proof (Q_ (div_mod_spec_intro n m q r x_823 x_822))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_0. Let $n$ be a natural number. Let $B$ be a set. Then for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $n$ and the function that maps $i$ to $true$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the sum of $i$ and $1$ and $f$ applied to $0$.\nassistant\n", "label": "Axiom bigop_0 : forall n : nat, forall B : Set, forall nil : B, forall op : Aop B nil, forall f : ((x__ : nat) -> B), bigop (n + 1) (fun i => true) B nil (op B nil op) (fun i => f i) = op B nil op (bigop n (fun i => true) B nil (op B nil op) (fun i => f (i + 1))) (f 0) .", "predict": "Axiom bigop_0 : forall n : nat, forall B : Set, forall nil : B, forall op : Aop -> B -> B, forall f : nat -> B, (bigop (n + 1) (fun i => true) B nil op (B nil op) (fun i => f i) = op (B nil op) (op (bigop n (fun i => true) B nil op (B nil op) (fun i => f i) (i + 1) (f 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15441. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Lt (nd 0) n -> Leq n m -> Leq n q) -> Proof (m : Elem Nat) -> Proof (Lt (nd 0) n) -> Proof (Leq n m) -> Proof (Leq n (plus q (nd 1))) -> Proof (Neq n (div (nd 0) m)) -> Proof (a : Elem Nat) -> Proof (ex (Nat) (b => or (Eq (minus (times a (nd n)) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a (nd n))) (gcd_aux q m n)))) -> Proof (b : Elem Nat) -> Proof (or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> Proof (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Proof (Eq (minus (times n b) (times (nd 0) (nd n))) (gcd_aux q n (mod m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_CProp0. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_857$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_859$ of $Lt$ of $_r$ and $_m$ and elements $x_858$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_859$ and $x_858$. Let $x_857$ be an element of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$. Then $Q_$ holds for $x_857$.\nassistant\n", "label": "Axiom div_mod_spec_rect_CProp0 : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_857 : div_mod_spec _n _m _q _r) -> Prop), forall _H_div_mod_spec_intro : ((x_859 : _r < _m) -> (x_858 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)), forall x_857 : div_mod_spec _n _m _q _r, Q_ x_857 .", "predict": "Axiom div_mod_spec_rect_CProp0 : forall n : nat, forall m : nat, forall q : nat, forall r : nat, (Q : div_mod_spec n m q r -> Prop) -> (forall x : Lt r m /\\ Eq n (q * m + r), H_div_mod_spec_intro Q x) -> forall x : div_mod_spec n m q r, Q x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInvert_permut_body. Let $__$ be a natural number. Let $__1$ be a function from natural numbers $__1$ to natural numbers. Let $__2$ be a natural number. Then $Nat$.\nassistant\n", "label": "Axiom invert_permut_body : forall x__ : nat, forall __1 : ((__1 : nat) -> nat), forall __2 : nat, nat .", "predict": "Axiom invert_permut_body : forall $x : nat, forall $f : nat -> nat, forall $y : nat, Prop ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_exp_Psi2. Let $n \\in N$. Then if $1$ is less than $n$, then the exponentiation of $2$ and the quotient of $n$ and $2$ is less than or equal to $Psi$ applied to $n$.\nassistant\n", "label": "Axiom le_exp_Psi2 : forall n : nat, forall x__ : (1 < n), Leq (pow 2 (n / 2)) (Psi n) .", "predict": "Axiom le_exp_Psi2 : forall n : nat, (1 < n -> pow 2 (n / 2) <= Psi n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Then if $a \\leq n$ and $f (a)= i$ and $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$ and $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x1 : a ≤ n ∧ f a = i ∧ a ≤ n) (x2 : ∀ b : Nat, (b ≤ n ∧ f b = j ∧ b ≤ n → ∀ (i0 : Nat) (x : Leq i0 n) (x : Leq (f i0) n), ∀ (injf : Injn f n) (x : a = b), f a = i)) : ∀ b : Nat, (b ≤ n ∧ f b = j ∧ b ≤ n → f b = j) → ∀ (i0 : Nat) (x : Leq i0 n) (x : Leq (f i0) n), ∀ (injf : Injn f n) (x : a = b), f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_rect_Type3. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_921$ of $range$ of $_A$ to elements of $Type3$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_921$ of $range$ of $_A$, $Q_$ holds for $x_921$.\nassistant\n", "label": "postulate range_rect_Type3 : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921", "predict": "postulate range_rect_Type3 : (A : Set) -> all (Q : range A -> Set3) -> all (H : (mk_range : Enum Nat -> A -> Nat) -> (upto : Nat) -> (filter : Nat -> Bool) -> Q (mk_range A (enum Nat) upto (filter))) -> all (range A) (Q)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nFound_min_spec. For all natural numbers $n$ and $b$, for all functions $f$ from natural numbers to booleans, for all natural numbers $m$, if $b$ is less than or equal to $m$, then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "found_min_spec : n : Nat -> b : Nat -> f : (__ : Nat -> bool) -> m : Nat -> __ : Leq b m -> __1 : Lt m (plus n b) -> __2 : Eq (f m) true -> __3 : (i : Nat -> __3 : Leq b i -> __4 : Lt i m -> Eq (f i) false) -> min_spec n b f m .", "predict": "found_min_spec : (n : Elem Nat) -> (b : Elem Nat) -> Proof (forall Nat (m => if (Leq b m) (if (Lt m (plus n b)) (if (Eq (f m) true) (forall (g : Elem (Nat -> Eq (f i) (Eq (f i) (f m))) (Leq b i) (Lt i m)) (absurdity))))) => Proof (min_spec n b f m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1617. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "let_clause_1617 : p : Nat -> m : Nat -> n : Nat -> posn : Lt 0 p -> gcd1 : Eq (gcd p m) (nd 1) -> _clearme : divisible p (times m n) -> c : Nat -> nm : Eq (times m n) (times p c) -> a : Nat -> _clearme0 : ex Nat (b : Nat => or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> _clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)) -> H : Eq (minus (times a p) (times b m)) (gcd p m) -> H0 : Eq (minus (times a p) (times b m)) (nd 1) -> Eq (gcd p m) (minus (times p a) (times m b)) .", "predict": "let_clause_1617 : p : Elem Nat -> m : Elem Nat -> n : Elem Nat -> Proof (0 < p) -> Proof (Eq (nd 1) (Gcd p m)) -> Proof (Divisible p (times m n)) -> c : Elem Nat -> Proof (Eq (times m n) (times p c)) -> a : Elem Nat -> Proof (ex (Nat) (b => Eq (or (Eq (minus (times a p) (times b m)) (Gcd p m)) (Eq (minus (times b m) (times a p)) (Gcd p m)))) -> b : Elem Nat -> Proof (Eq (Gcd p m) (or (Eq (minus (times a p) (times b m)) (nd 1)) (Eq (minus (times b m) (times a p)) (Gcd p m)))) -> Proof (if (Eq (Gcd p m) (minus (times a p) (times b m))) (if (Eq (minus (times a p) (times b m)) (nd 1)) (Eq (minus (times p a) (times m b)) (Gcd p m)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_rect_CProp5. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Then for all functions $_H_div_mod_spec_intro$ from elements $x_843$ of $Lt$ of $_r$ and $_m$ and elements $x_842$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_843 , x_842)$, for all elements $x_841$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_841$.\nassistant\n", "label": "div_mod_spec_rect_CProp5 : _n : Nat -> _m : Nat -> _q : Nat -> _r : Nat -> Q_ : (_x_841 : div_mod_spec _n _m _q _r -> Prop) -> _H_div_mod_spec_intro : (x_843 : Lt _r _m -> x_842 : Eq _n (plus (times _q _m) _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_843 x_842)) -> x_841 : div_mod_spec _n _m _q _r -> Q_ x_841 .", "predict": "div_mod_spec_rect_CProp5 : (n : Elem Nat) -> (m : Elem Nat) -> (q : Elem Nat) -> (r : Elem Nat) -> (Q_ : Proof (forall (x_841 : DivModSpec n m q r) => Prop)) -> Proof (forall (H_div_mod_spec_intro : Proof (forall (x_843 : Lt r m) -> forall (x_842 : Eq n (q + m)) => Elem (Q_ (div_mod_spec_intro n m q r x_843 x_842)))) => forall (x_841 : DivModSpec n m q r) => Q_ x_841) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIncreasing_to_le. For all functions $f$ from natural numbers to natural numbers, for all elements $__$ of $increasing$ of $f$, for all natural numbers $m$, $ex$ holds for $Nat$ and the function that maps $i$ to $Leq (m , f (i))$.\nassistant\n", "label": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))", "predict": "postulate increasing_to_le : (f : Nat -> Nat) -> all (increasing f) (\\ x -> all Nat (\\ m -> ex (Nat) (map (\\ i -> Leq m (f i))) x))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1545. Let $m$ and $n$ be natural numbers. Assume that $0$ is both equal to the greatest common divisor of $m$ and $n$ and divisible by $n$. Let $q1$ be a natural number. Assume that $n = 0 q1$ and $0$ is divisible by $m$. Let $q2 \\in N$. Then if $m = 0 q2$, then $m = 0$.\nassistant\n", "label": "let_clause_1545 : m : Nat -> n : Nat -> H : Eq (gcd m n) 0 -> _clearme : divisible 0 n -> q1 : Nat -> H1 : Eq n (times 0 q1) -> _clearme0 : divisible 0 m -> q2 : Nat -> H2 : Eq m (times 0 q2) -> Eq m 0 .", "predict": "let_clause_1545 : m : Elem Nat -> n : Elem Nat -> Proof (and (Eq (Gcd m n) 0) (Divisible n 0)) -> Proof (and (Eq n (times 0 q1)) (Divisible 0 m)) -> Proof (forall Nat (q2 => if (Eq m (times 0 q2)) (Eq m 0))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_exp1. Let $n , m , p \\in N$. Assume that $0$ is less than $p$. Then if $n$ is less than $m$, then the exponentiation of $n$ and $p$ is less than the exponentiation of $m$ and $p$.\nassistant\n", "label": "lt_exp1 : n : Nat -> m : Nat -> p : Nat -> __ : Lt 0 p -> __1 : Lt n m -> Lt (pow n p) (pow m p) .", "predict": "lt_exp1 : (n : Elem Nat) -> (m : Elem Nat) -> (p : Elem Nat) -> Proof (Lt (nd 0) p) -> Proof (Lt n m) -> Proof (Lt (pow n p) (pow m p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))", "predict": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Gcd n m == 1) -> (c : Nat) -> all Nat (\\ d -> all Nat (\\ e -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (Gcd m n) (minus (times n c) (times m d))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15625. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> if (Eq (gcd n m) 1) (all Nat (\\ c -> all (ex : Nat) -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) 1)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_16005. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_16005 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_16005 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Eq (Gcd n m) (nd 1))) -> c : Elem Nat -> Proof (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times d m) (times c n)) (Gcd m n)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$. Then $m d - n c = 1$.\nassistant\n", "label": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1", "predict": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> (c : Nat) -> (x : ex Nat (d -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> all Nat (\\ d -> or (and (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times d m) (times c n)) 1)) -> Eq (minus (times m d) (times n c)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLog_div. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1 < p$ and $0 < m$. Assume that $m \\leq n$. Then $\\log_ p {(n \\div m)}\\leq \\log_ p {n}- \\log_ p {m}$.\nassistant\n", "label": "log_div : p : Nat -> n : Nat -> m : Nat -> __ : Lt (nd 1) p -> __1 : Lt 0 m -> __2 : Leq m n -> Leq (log p (div n m)) (minus (log p n) (log p m)) .", "predict": "log_div : (p : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (and (Gt (nd 1) p) (Gt (nd 0) m) (Leq m n)) -> Proof (Leq (log p (div n m)) (minus (log p n) (log p m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPos_div. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then if $0$ is less than $n$, then if $mod$ applied to $n$ and $m$ is equal to $0$, then $0$ is less than the quotient of $n$ and $m$.\nassistant\n", "label": "axiom pos_div (n m : Nat) (x__ : 0 < m) (__1 : 0 < n) (__2 : mod n m = 0) : 0 < n / m", "predict": "axiom pos_div (n m : Nat) (x : 0 < m) (y : 0 < n) (z : mod n m = 0) : 0 < n / m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_ind. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233 \\in N$. Let $x_1232$ and $x_1231$ be elements of $B$. Then for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.\nassistant\n", "label": "Axiom lstar_ind : forall B : Set, forall _R : relation B, forall Q_ : ((x_1233 : nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop), forall _H_lstar_O : ((b : B) -> Q_ 0 b b (lstar_O B _R b)), forall _H_lstar_S : ((b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (l + 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)), forall x_1233 : nat, forall x_1232 : B, forall x_1231 : B, forall x_1234 : lstar B _R x_1233 x_1232 x_1231, Q_ x_1233 x_1232 x_1231 x_1234 .", "predict": "Axiom lstar_ind : forall B : Set, forall R : relation B, forall Q : forall x1233 : B, forall x1232 : B, forall x1231 : B, forall x1234 : lstar B, forall b : B, (x1233 : nat -> Prop) -> (x1232 : B -> Prop) -> (x1231 : B -> Prop) -> (x1234 : lstar B -> Prop) -> (b : B -> Prop) -> (H_lstar_O : forall b : B, Q 0 b b (lstar_O B R) R b) -> (H_lstar_S : forall b1 : B, forall b : B, forall x1236 : R b1 b, forall l : nat, forall b2 : B, forall x1235 : lstar B, forall R : relation B, forall l : nat, forall b : B, forall b2 : B, forall x1238 : Q l b b2 x1235, (Q (l + 1) b1 b2 (lstar_S B R b1 b x1236 l b2 x1235))) -> x1233 -> x1232 -> x1231 -> x1234 -> forall x : nat, Q x x x x ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nExp_pi. Let $n , m \\in N$. Let $p$ be a function from natural numbers to booleans. Then for all functions $f$ from natural numbers to natural numbers, the exponentiation of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $m$ is equal to $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $f$ applied to $i$ and $m$.\nassistant\n", "label": "exp_pi : n : Nat -> m : Nat -> p : (__ : Nat -> bool) -> f : (__ : Nat -> Nat) -> Eq (bigop n (i : Nat => p i) Nat (nd 1) times (i : Nat => pow (f i) m)) (pow (bigop n (i : Nat => p i) Nat (nd 1) times (i : Nat => f i)) m) .", "predict": "exp_pi : (n : Elem Nat) -> (m : Elem Nat) -> (p : Nat -> Bool) -> Proof (forall (f : Nat -> Nat) => Eq (bigop n (lambda i => p i) Nat 1 times (lambda i => f i) m) (bigop n (lambda i => p i) Nat 1 times (lambda i => (pow (f i) m)) m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_congruent. Let $n$ and $m$ and $p$ be natural numbers. Assume that $0$ is less than $p$. Then if $m$ is less than or equal to $n$, then if $p$ is divisible by the difference of $n$ and $m$, then $congruent$ holds for $n$ and $m$ and $p$.\nassistant\n", "label": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p", "predict": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> 0 < p -> if (Leq m n) (if (divisible p (minus n m)) (congruent n m p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_to_dividesb_true1. Let $n$ and $m$ be natural numbers. Assume that $0 < m$. Then if $n$ is divisible by $m$, then $dividesb (n , m)= true$.\nassistant\n", "label": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true", "predict": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> 0 < m -> divides n m -> dividesb n m == true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_inv_rect_Type4. For all natural numbers $Hterm$, for all functions $P$ from natural numbers $_z659$ to elements of $Type4$, for all functions $_H1$ from elements $_z660$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_370$ and functions $_x_372$ from elements $_z660$ of $Eq$ of $Hterm$ and $x_370$ to elements of $P$ of $x_370$ and elements $_z660$ of $Eq$ of $Hterm$ and the sum of $x_370$ and $1$ to elements of $P$ of the sum of $x_370$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom nat_inv_rect_Type4 (Hterm : Nat) (P : (_z659 : Nat) -> Type4) (_H1 : (_z660 : Hterm = 0) -> P 0) (_H2 : (x_370 : Nat) -> (_x_372 : (_z660 : Hterm = x_370) -> P x_370) -> (_z660 : Hterm = x_370 + 1) -> P (x_370 + 1)) : P Hterm", "predict": "axiom nat_inv_rect_Type4 (Hterm : Nat) (P : ∀ z659 : Nat, Type4) (H1 : ∀ z660 : Eq Hterm 0, P 0) (H2 : ∀ x370 : Nat, ∀ x_372 : Eq Hterm x_370, P x_370 ∧ ∀ z660 : Eq Hterm (x_370 + 1), P (x_370 + 1)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nEq_div_div_div_times. Let $n$ and $m$ and $q$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Then $q \\div n \\div m = q \\div (n m)$.\nassistant\n", "label": "Axiom eq_div_div_div_times : forall n : nat, forall m : nat, forall q : nat, forall x__ : (0 < n), forall __1 : (0 < m), q / n / m = q / (n * m) .", "predict": "Axiom eq_div_div_div_times : forall n : nat, forall m : nat, (0 < n /\\ 0 < m -> forall q : nat, (q / n / m = q / (n * m))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nTranspose_i_j_j_i. Let $i , j , n \\in N$. Then $transpose$ applied to $i$ and $j$ and $n$ is equal to $transpose$ applied to $j$ and $i$ and $n$.\nassistant\n", "label": "transpose_i_j_j_i : i : Nat -> j : Nat -> n : Nat -> Eq (transpose i j n) (transpose j i n) .", "predict": "transpose_i_j_j_i : (i : Elem Nat) -> (j : Elem Nat) -> (n : Elem Nat) -> Proof (Eq (transpose i j n) (transpose j i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "let_clause_1068 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) i .", "predict": "let_clause_1068 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (and (Leq i n) (Leq j n)) (and (Leq a n) (Eq (f a) i) (Leq a n)) (Eq (f a) i)) -> Proof (and (Leq b n) (Eq (f b) j) (Leq b n)) -> Eq b a -> Proof (forall (f : Elem (Nat -> Nat)) -> forall (injf : Elem (injn f n)) -> Eq a b -> Eq (f a) i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nFound_min_spec. Let $n , b \\in N$. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Assume that $b \\leq m$ and $m < n + b$. Then if $f (m)= true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.\nassistant\n", "label": "axiom found_min_spec (n b : Nat) (f : (x__ : Nat) -> bool) (m : Nat) (x__ : b ≤ m) (__1 : m < n + b) (__2 : f m = true) (__3 : (i : Nat) -> (__3 : b ≤ i) -> (__4 : i < m) -> f i = false) : min_spec n b f m", "predict": "axiom found_min_spec (n b : Nat) (f : Nat → Bool) (m : Nat) (x : b ≤ m ∧ m < n + b) (y : f m = true) : ∀ g : Nat → Nat → Leq b → Nat → Lt i m → Eq (f i) absurdity, min_spec n b f m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1600. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "let_clause_1600 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times c n) (times d m)) (nd 1) -> Eq (gcd m n) (minus (times n c) (times m d)) .", "predict": "let_clause_1600 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Eq (nd 1) (gcd n m))) -> Proof (forall Nat (c => forall (x : Elem ex : Elem Nat) (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (Eq (minus (times n c) (times m d)) (gcd m n)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFound_max_spec. Let $n$ be a natural number. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Then if $m < n$ and $f (m)= true$, then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max_spec$ holds for $n$ and $f$ and $m$.\nassistant\n", "label": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m", "predict": "postulate found_max_spec : (n : Nat) -> (f : Nat -> Bool) -> m : Nat -> (Lt m n) -> (True == f m) -> all (Nat -> Lt m _) -> all (Nat -> Lt _ n) -> Eq (f _) -> absurd (max_spec n f m)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10331. Let $n \\in N$. Assume that $0 < n$. Let $x2515 , x2516 \\in N$. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_10331 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10331 : forall n : nat, (0 < n -> forall x2515, x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1012. Let $f$ be a function from natural numbers to booleans. Let $n , i \\in N$. Let $Hind$ be a function from natural numbers $b$ to elements of $prod$ of $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m2$ applied to $f$ and $n$ and $i$ and $b$ and absurdity and the function that maps $__$ to $Eq (let_m2 (f , n , i , b), i + b)$. Let $b \\in N$. Assume that $f (b)= true$. Assume that absurdity is equal to $f (b)$. Then $true$ is equal to absurdity.\nassistant\n", "label": "Axiom let_clause_1012 : forall f : ((x__ : nat) -> bool), forall n : nat, forall i : nat, forall Hind : ((b : nat) -> prod Prop Prop (f (let_m2 f n i b) = false) (fun x__ => let_m2 f n i b = i + b)), forall b : nat, forall fb : (f b = true), forall eqm : (f b = false), false = true .", "predict": "Axiom let_clause_1012 : forall f : nat -> bool, forall n : nat, forall i : nat, (forall b : nat, (Eq (f (let_m2 f n i b)) (i + b)) -> absurdity = f n -> true = absurdity) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInjective_exp_r. Let $b$ be a natural number. Assume that $1 < b$. Then $injective$ holds for $Nat$ and $Nat$ and the function that maps $i$ to $b ^ i$.\nassistant\n", "label": "Axiom injective_exp_r : forall b : nat, forall x__ : (1 < b), injective nat nat (fun i => pow b i) .", "predict": "Axiom injective_exp_r : forall b : nat, (1 < b -> injective Nat Nat (fun i => pow b i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLog_times_l. Let $p , n , m \\in N$. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if $1$ is less than $p$, then the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ is less than or equal to the logarithm of $p$ and the product of $n$ and $m$.\nassistant\n", "label": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : Lt 1 p) -> Leq (plus (log p n) (log p m)) (log p (times n m))", "predict": "postulate log_times_l : (p : Nat) -> (n : Nat) -> (m : Nat) -> 0 < n -> 0 < m -> 1 < p -> leq (plus (log p n) (log p m)) (log p (times n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDiv_mod_spec_inv_rect_CProp1. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Then for all functions $P$ from elements $_z1488$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_855$ of $Lt$ of $x4$ and $x2$ and elements $x_854$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1489$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_855$ and $x_854$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_855$ and $x_854$, $P$ holds for $Hterm$.\nassistant\n", "label": "div_mod_spec_inv_rect_CProp1 : x1 : Nat -> x2 : Nat -> x3 : Nat -> x4 : Nat -> Hterm : div_mod_spec x1 x2 x3 x4 -> P : (_z1488 : div_mod_spec x1 x2 x3 x4 -> Prop) -> _H1 : (x_855 : Lt x4 x2 -> x_854 : Eq x1 (plus (times x3 x2) x4) -> _z1489 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P Hterm .", "predict": "div_mod_spec_inv_rect_CProp1 : x1 : Elem Nat -> x2 : Elem Nat -> x3 : Elem Nat -> x4 : Elem Nat -> Hterm : Elem (div_mod_spec x1 x2 x3 x4) -> Proof (forall (P : Elem (div_mod_spec x1 x2 x3 x4) -> Prop) -> forall (x_855 : Lt x4 x2) -> forall (x_854 : Eq x1 (plus (times x3 x2) x4)) -> forall (x_855 : Lt x4 x2) -> forall (x_854 : Eq x1 (plus (times x3 x2) x4)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLog_i_2n. Let $n$ and $i$ be natural numbers. Then if $1 < n$, then if $n < i$, then if $i \\leq 2 n$, then $\\log_ i {(2 n)}= 1$.\nassistant\n", "label": "Axiom log_i_2n : forall n : nat, forall i : nat, forall x__ : (1 < n), forall __1 : (n < i), forall __2 : Leq i (2 * n), log i (2 * n) = 1 .", "predict": "Axiom log_i_2n : forall n : nat, forall i : nat, (1 < n -> n < i -> i <= 2 * n -> log i (2 * n) = 1) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_rect_CProp4. Let $_n , _m , _q , _r \\in N$. Let $Q_$ be a function from elements $_x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Then for all functions $_H_div_mod_spec_intro$ from elements $x_839$ of $Lt$ of $_r$ and $_m$ and elements $x_838$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_839$ and $x_838$, for all elements $x_837$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_837$.\nassistant\n", "label": "axiom div_mod_spec_rect_CProp4 (_n _m _q _r : Nat) (Q_ : (_x_837 : div_mod_spec _n _m _q _r) -> Prop) (_H_div_mod_spec_intro : (x_839 : _r < _m) -> (x_838 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) (x_837 : div_mod_spec _n _m _q _r) : Q_ x_837", "predict": "axiom div_mod_spec_rect_CProp4 (n m q r : Nat) (Q : div_mod_spec n m q r → Prop) : ∀ H : Lt r m → Eq n (q * m + r) → ∀ x : Lt r m, ∀ y : Eq n (q * m + r), Q (div_mod_spec_intro x y) → ∀ x : div_mod_spec n m q r, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_ind. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "Axiom Dop_ind : forall A : Set, forall _nil : A, forall Q_ : ((_x_943 : Dop A _nil) -> Prop), forall _H_mk_Dop : ((sum : ACop A _nil) -> (prod : (x__ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> prod a _nil = _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> prod a (aop__o__op A _nil sum b c) = aop__o__op A _nil sum (prod a b) (prod a c)) -> Q_ (mk_Dop A _nil sum prod _null _distr)), forall x_943 : Dop A _nil, Q_ x_943 .", "predict": "Axiom dop_ind : forall A : Set, forall _nil : A, forall Q_ : Dop A _nil -> Prop, forall _H_mk_Dop : ACop A _nil -> Dop A _nil -> Prop, forall _null : forall a : A, Eq (prod a _nil) _nil -> Dop A _nil -> Prop, forall _distr : forall a : A, forall b : A, forall c : A, Eq (prod (a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Dop A _nil -> Prop, forall x_943 : Dop A _nil, Q_ x_943 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDivides_exp_to_divides. Let $p$ and $n$ and $m$ be natural numbers. Assume that $p$ is prime. Then if $p$ is divisible by $n ^ m$, then $p$ is divisible by $n$.\nassistant\n", "label": "postulate divides_exp_to_divides : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : prime p) -> (__1 : divisible p (pow n m)) -> divisible p n", "predict": "postulate divides_exp_to_divides : (p : Nat) -> prime p -> if (divisible p (pow n m)) (divisible p n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_CProp1_body. Let $Q_$ be a function from natural numbers $_x_409$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_410$ and elements $_x_412$ of $Q_$ of $x_410$ to elements of $Q_$ of the sum of $x_410$ and $1$. Let $x_409$ be a natural number. Then $Q_$ holds for $x_409$.\nassistant\n", "label": "axiom nat_rect_CProp1_body (Q_ : (_x_409 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_410 : Nat) -> (_x_412 : Q_ x_410) -> Q_ (x_410 + 1)) (x_409 : Nat) : Q_ x_409", "predict": "axiom nat_rect_CProp1_body (Q : Nat → Prop) (H_O : Q 0) (H_S : ∀ x : Nat, ∀ x' : Q x, Q (x + 1)) (x : Nat) : Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nExists_max_forall_false. Let $f$ be a function from natural numbers to booleans. Let $n$ be a natural number. Then $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $Eq$ applied to $f$ applied to $i$ and $true$ and $f$ applied to $max$ applied to $n$ and $f$ is equal to $true$ or $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__$ to $Eq$ applied to $f$ applied to $i$ and absurdity and $max$ applied to $n$ and $f$ is equal to $0$.\nassistant\n", "label": "axiom exists_max_forall_false (f : (x__ : Nat) -> bool) (n : Nat) : ex Nat (λ i => i < n ∧ f i = true) ∧ f (max n f) = true ∨ (prod Set Prop Nat (λ i => prod Prop Prop (i < n) (λ x__ => f i = false)) ∧ max n f = 0)", "predict": "axiom exists_max_forall_false (f : Nat → Bool) (n : Nat) : ∃ ex : Nat, ∀ i : Nat, (Lt i n → Eq (f i) true ∨ Prod (Set Prop Nat) (Eq (f (max n)) 0))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_discr. Let $a1 , a2 , a3 , a4 \\in N$. Then for all elements $x$ and $y$ of $div_mod_spec$ of $a1$ and $a2$ and $a3$ and $a4$, if $x$ is equal to $y$, then $match_div_mod_spec$ holds for $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $t0$ and $t1$ to $match_div_mod_spec$ applied to $a1$ and $a2$ and $a3$ and $a4$ and the sum of $Type2$ and $1$ and the function that maps $__$ to $univ$ applied to $Type2$ and the function that maps $u0$ and $u1$ to $prod$ applied to the sum of $Type1$ and $1$ and $Type1$ and $univ$ applied to $Type1$ and the function that maps $P$ to $prod$ applied to $Type1$ and $Type1$ and $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R0$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and $u0$ and the function that maps $e0$ to $prod$ applied to $Prop$ and $Type1$ and $Eq$ applied to $R1$ applied to $Lt$ applied to $a4$ and $a2$ and $t0$ and the function that maps $x_19$ and $_x_20$ to the function that maps $x0$ and $p0$ to $Eq$ applied to $a1$ and the sum of the product of $a3$ and $a2$ and $a4$ applied to $x_19$ and $_x_20$ and $t1$ and $u0$ and $e0$ and $u1$ and the function that maps $_e1$ to $P$ and the function that maps $_z53$ to $P$ and $y$ and $x$.\nassistant\n", "label": "axiom div_mod_spec_discr (a1 a2 a3 a4 : Nat) (x y : div_mod_spec a1 a2 a3 a4) (_e : x = y) : match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ x__ => univ Type2) (λ t0 => λ t1 => match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (λ x__ => univ Type2) (λ u0 => λ u1 => prod (Type1 + 1) Type1 (univ Type1) (λ P => prod Type1 Type1 (prod Prop Type1 (R0 (a4 < a2) t0 = u0) (λ e0 => prod Prop Type1 (R1 (a4 < a2) t0 (λ x_19 => λ _x_20 => (λ x0 => λ p0 => a1 = a3 * a2 + a4) x_19 _x_20) t1 u0 e0 = u1) (λ _e1 => P))) (λ _z53 => P))) y) x", "predict": "axiom div_mod_spec_discr (a1 a2 a3 a4 : Nat) : ∀ x y : div_mod_spec a1 a2 × div_mod_spec a3 a4, (x = y → match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (univ := Type2) (t0, t1 := match_div_mod_spec a1 a2 a3 a4 (Type2 + 1) (univ := Type2) (u0, u1 := prod (Type1 + 1) Type1 (univ := Type1)) (P := prod Type1 Type1) (Eq := Eq R0 (Lt a4 a2)) (t0, u0 := prod (Eq R1 (Lt a4 a2)) (t0, u0 := Eq a1 (plus (times a3 a2) a4)) (x0, p0 := Eq (x_19, _x_20) (plus (times a3 a2) a4)) (t1, u0 := Eq (a1, plus (times a3 a2) a4)) (u0, u1 := prod (Eq (a1, plus (times a3 a2) a4)) (Eq (x_19, _x_20)) (Eq (a1, plus (times a3 a2) a4)) (Eq (x_19, _x_20)) (Eq (a1, plus (times a3 a2) a4)) (Eq (x_19, _x_20)))) y)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$ and $n \\leq m$. Then if $n \\leq q + 1$ and $n$ is not divisible by $m$, then for all natural numbers $a$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "let_clause_15441 : p : Nat -> q : Nat -> Hind : (m : Nat -> n : Nat -> __ : Lt 0 n -> __1 : Leq n m -> __2 : Leq n q -> ex Nat (a : Nat => ex Nat (b : Nat => or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> m : Nat -> n : Nat -> posn : Lt 0 n -> lenm : Leq n m -> lenS : Leq n (plus q (nd 1)) -> ndivnm : not (divisible n m) -> a : Nat -> _clearme : ex Nat (b : Nat => or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> b : Nat -> _clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)) .", "predict": "let_clause_15441 : p : Elem Nat -> q : Elem Nat -> Proof (Hind : (m : Elem Nat) -> (n : Elem Nat) -> Proof (and (Leq (nd 0) n) (Leq n m)) -> Proof (and (Leq n (plus q (nd 1))) (not (divisible n m))) -> Proof (forall Nat (a => forall (x : Elem (ex Nat)) => forall (b : Elem (or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) => Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMax'. Let $__ \\in N$. Then for all functions $__1$ from natural numbers $__1$ to booleans, for all natural numbers $__2$, $Nat$.\nassistant\n", "label": "axiom max' (x__ : Nat) (__1 : (__1 : Nat) -> bool) (__2 : Nat) : Nat", "predict": "axiom max' (n : Nat) : ∀ f : Nat → Bool, ∀ m : Nat, f m = max n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1078. Let $a , b , q , r , q1 , r1 \\in N$. Let $_clearme$ be an element of $div_mod_spec$ of $a$ and $b$ and $q$ and $r$. Assume that $r$ is less than $b$. Assume that $a$ is equal to the sum of the product of $q$ and $b$ and $r$. Let $_clearme0$ be an element of $div_mod_spec$ of $a$ and $b$ and $q1$ and $r1$. Assume that $r1$ is less than $b$. Assume that $a$ is equal to the sum of the product of $q1$ and $b$ and $r1$. Then if $q$ is less than or equal to $q1$, then if $q$ is less than $q1$, then $a$ is equal to the sum of $r$ and the product of $b$ and $q$.\nassistant\n", "label": "let_clause_1078 : a : Nat -> b : Nat -> q : Nat -> r : Nat -> q1 : Nat -> r1 : Nat -> _clearme : div_mod_spec a b q r -> ltrb : Lt r b -> spec : Eq a (plus (times q b) r) -> _clearme0 : div_mod_spec a b q1 r1 -> ltr1b : Lt r1 b -> spec1 : Eq a (plus (times q1 b) r1) -> leqq1 : Leq q q1 -> ltqq1 : Lt q q1 -> Eq a (plus r (times b q)) .", "predict": "let_clause_1078 : a : Elem Nat -> b : Elem Nat -> q : Elem Nat -> r : Elem Nat -> q1 : Elem Nat -> r1 : Elem Nat -> Proof (div_mod_spec a b q r) -> Proof (Lt r b) -> Proof (Eq a (plus (times q b) r)) -> Proof (div_mod_spec a b q1 r1) -> Proof (Lt r1 b) -> Proof (Eq a (plus (times q1 b) r1)) -> Proof (Leq q q1) -> Proof (Lt q q1) -> Proof (Eq a (plus r (times b q))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_elim2. Let $R$ be a function from natural numbers and natural numbers $__1$ to propositions. Let $__$ be a function from natural numbers $n$ to elements of $R$ of $0$ and $n$. Let $__1$ be a function from natural numbers $n$ to elements of $R$ of $n + 1$ and $0$. Let $__2$ be a function from natural numbers $n$ and natural numbers $m$ and elements $__2$ of $R$ of $n$ and $m$ to elements of $R$ of $n + 1$ and $m + 1$. Let $n$ and $m$ be natural numbers. Then $R$ holds for $n$ and $m$.\nassistant\n", "label": "postulate nat_elim2 : (R : (_ : Nat) -> (__1 : Nat) -> Prop) -> (_ : (n : Nat) -> R 0 n) -> (__1 : (n : Nat) -> R (plus n 1) 0) -> (__2 : (n : Nat) -> (m : Nat) -> (__2 : R n m) -> R (plus n 1) (plus m 1)) -> (n : Nat) -> (m : Nat) -> R n m", "predict": "postulate nat_elim2 : (R : Nat -> Nat -> Prop) -> ($$ : Nat -> Elem (R 0) (nd 0)) -> ($1 : Nat -> Elem (R (plus n) 0) (plus n)) -> ($2 : Nat -> Nat -> Elem (R n m) (plus n) -> Elem (R (plus n) (plus m)) (plus n) -> Nat -> Prop) -> all Nat (\\ n -> all Nat (\\ m -> R n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPrimes_below_lop. Let $n \\in N$. Then $primes_below$ holds for $list_of_primes (n)$ and $n + 2$.\nassistant\n", "label": "Axiom primes_below_lop : forall n : nat, primes_below (list_of_primes n) (n + 2) .", "predict": "Axiom primes_below_lop : forall n : nat, (primes_below (list_of_primes n) n) /\\ (primes_below (list_of_primes (n + 2)) (n + 2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nPi_p_primeb. Let $n \\in N$. Then if $0$ is less than $n$, then $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to the exponentiation of $p$ and $ord$ applied to $n$ and $p$.\nassistant\n", "label": "Axiom pi_p_primeb : forall n : nat, forall x__ : (0 < n), n = bigop (n + 1) (fun p => primeb p) nat 1 times (fun p => pow p (ord n p)) .", "predict": "Axiom pi_p_primeb : forall n : nat, (0 < n -> n = bigop (n + 1) (fun p => primeb p Nat 1 times (fun p => pow p (ord n)) n p)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBigop_Sfalse. For all natural numbers $k$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to absurdity, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "axiom bigop_Sfalse (k : Nat) (p : (x__ : Nat) -> bool) (B : Set) (nil : B) (op : (x__ : B) -> (__1 : B) -> B) (f : (x__ : Nat) -> B) (x__ : p k = false) : bigop (k + 1) (λ i => p i) B nil op (λ i => f i) = bigop k (λ i => p i) B nil op (λ i => f i)", "predict": "axiom bigop_Sfalse (k : Nat) (p : ∀ n : Nat, Prop) (B : Set Nat) (nil : B) (op : ∀ b₁ b₂ : B, B) (f : ∀ n : Nat, B) (x : p k = absurd) : bigop (k + 1) (λ i, p i ∧ B ∧ nil ∧ op (f i)) = bigop k (λ i, p i ∧ B ∧ nil ∧ op (f i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nSame_bigop. Let $k \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ and $g$ be functions from natural numbers to elements of $B$. Let $__$ be an element of $sameF_upto$ of $k$ and $bool$ and $p1$ and $p2$. Let $__1$ be an element of $sameF_p$ of $k$ and $p1$ and $B$ and $f$ and $g$. Then $bigop$ applied to $k$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "same_bigop : k : Nat -> p1 : (__ : Nat -> bool) -> p2 : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> g : (__ : Nat -> B) -> __ : sameF_upto k bool p1 p2 -> __1 : sameF_p k p1 B f g -> Eq (bigop k (i : Nat => p1 i) B nil op (i : Nat => f i)) (bigop k (i : Nat => p2 i) B nil op (i : Nat => g i)) .", "predict": "same_bigop : (k : Elem Nat) -> (p1 : Elem (Nat -> Bool)) -> (p2 : Elem (Nat -> Bool)) -> (B : Elem Set) -> (nil : Elem B) -> (op : Elem (B -> B -> B)) -> (f : Elem (Nat -> B)) -> (g : Elem (Nat -> B)) -> Proof (Eq (bigop k (lambda (i) (p2 i)) B nil op (lambda (i) (g i))) (bigop k (lambda (i) (p1 i)) B nil op (lambda (i) (f i)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_O_f. Let $f$ be a function from natural numbers to booleans. Let $b \\in N$. Then $min (0 , b , f)= b$.\nassistant\n", "label": "axiom min_O_f (f : (x__ : Nat) -> bool) (b : Nat) : min 0 b f = b", "predict": "axiom min_O_f (f : Nat → Bool) (b : Nat) : min 0 b f = b"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1033. Let $p , n \\in N$. Assume that $1 < p$. Let $m$ and $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (lt1p : Lt 1 p) -> (m : Nat) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> assume (Lt 1 p) -> let (m : Nat) (x2515 : Nat) (x2516 : Nat) -> Eq x2515 x2516 (plus (times x2515 (div x2515 x2516)) (mod x2515 x2516))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_exists. Let $f$ be a function from natural numbers to booleans. Let $t , m \\in N$. Assume that $m < t$. Assume that $f (m)= true$. Let $k , b \\in N$. Assume that $b \\leq m$. Then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, if $t = k + b$, then $min (k , b , f)= m$.\nassistant\n", "label": "axiom min_exists (f : (x__ : Nat) -> bool) (t m : Nat) (x__ : m < t) (__1 : f m = true) (k b : Nat) (__2 : b ≤ m) (__3 : (i : Nat) -> (__3 : b ≤ i) -> (__4 : i < m) -> f i = false) (__4 : t = k + b) : min k b f = m", "predict": "axiom min_exists (f : Nat → Bool) (t m : Nat) (x : m < t) (y : f m = true) (k b : Nat) (z : b ≤ m) : ∀ i : Nat, ∀ x : Leq b i, ∀ y : Lt i m, ∀ z : Eq (f i) absurdity, (t = k + b) → min k b f = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x1 : a ≤ n ∧ f a = i ∧ a ≤ n) (x2 : f a = i) (b : Nat) (x3 : b ≤ n ∧ f b = j ∧ b ≤ n) (x4 : f b = j) : ∀ g : Nat → Leq i n → Leq (f i) n, ∀ injf : Permut f n, ∀ x : a = b → f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNot_divides_ord_rem. Let $m$ and $p$ be natural numbers. Assume that $0$ is less than $m$. Assume that $1$ is less than $p$. Then $p$ is not divisible by $ord_rem$ applied to $m$ and $p$.\nassistant\n", "label": "postulate not_divides_ord_rem : (m : Nat) -> (p : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 1 p) -> not (divisible p (ord_rem m p))", "predict": "postulate not_divides_ord_rem : (m : Nat) -> (p : Nat) -> (A : 0 < m) -> (B : 1 < p) -> not (divisible p (ord_rem m p))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_inv_rect_CProp2. Let $Hterm \\in N$. Let $P$ be a function from natural numbers $_z701$ to propositions. Let $_H1$ be a function from elements $_z702$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Let $_H2$ be a function from natural numbers $x_406$ and functions $_x_408$ from elements $_z702$ of $Eq$ of $Hterm$ and $x_406$ to elements of $P$ of $x_406$ and elements $_z702$ of $Eq$ of $Hterm$ and $x_406 + 1$ to elements of $P$ of $x_406 + 1$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "postulate nat_inv_rect_CProp2 : (Hterm : Nat) -> (P : (_z701 : Nat) -> Prop) -> (_H1 : (_z702 : Eq Hterm 0) -> P 0) -> (_H2 : (x_406 : Nat) -> (_x_408 : (_z702 : Eq Hterm x_406) -> P x_406) -> (_z702 : Eq Hterm (plus x_406 1)) -> P (plus x_406 1)) -> P Hterm", "predict": "postulate nat_inv_rect_CProp2 : (Hterm : Nat) -> (P : Nat -> Prop) -> (H1 : Eq Hterm 0 -> P 0) -> (H2 : (x : Nat) -> (f : Eq Hterm x -> P x) -> Eq Hterm (plus x 1) -> P (plus x 1)) -> P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))", "predict": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> and (Lt 0 p) (Eq 1 (gcd p m)) -> and (divisible p (times m n)) -> (c : Nat) -> Eq (times m n) (times p c) -> (a : Nat) -> ex (Nat -> Eq (or (and (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) (and (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> or (and (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) -> if (Eq (minus (times a p) (times b m)) 1) (Eq (minus (times p a) (times m b)) (gcd p m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_transpose. Let $i , j , n \\in N$. Then if $i \\leq n$, then if $j \\leq n$, then $permut$ holds for $transpose (i , j)$ and $n$.\nassistant\n", "label": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> permut (transpose i j) n", "predict": "postulate permut_transpose : (i : Nat) -> (j : Nat) -> (n : Nat) -> (x : i <= n) -> (y : j <= n) -> permut (transpose (i , j)) n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_951$ of $Dop$ of $A$ and $_nil$ to elements of $Type2$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_951$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_951$.\nassistant\n", "label": "Dop_rect_Type2_body : A : Set -> _nil : A -> Q_ : (_x_951 : Dop A _nil -> Type2) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_951 : Dop A _nil -> Q_ x_951 .", "predict": "dop_rect_Type2_body : (A : Elem Set) -> (_nil : Elem A) -> Proof (forall (Q_ : Elem (Dop A) -> Elem A -> Proof (forall (x_951 : Elem Dop) -> Proof (Q_ x_951))) -> forall (mk_Dop : Elem (ACop A) -> Elem A -> Proof (forall (x_951 : Elem Dop) -> Proof (Q_ x_951))) -> forall (prod : Elem A -> Elem A -> Proof (forall (x_951 : Elem Dop) -> Proof (Q_ x_951))) -> forall (null : Elem A -> Proof (forall (x_951 : Elem Dop) -> Proof (Q_ x_951))) -> forall (distr : Elem A -> Elem A -> Elem A -> Proof (forall (x_951 : Elem Dop) -> Proof (Q_ x_951))) -> forall (x_951 : Elem Dop) -> Proof (Q_ x_951)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1009. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Assume that $0 < n$. Assume that absurdity is equal to $f (n)$. Assume that $max (m , f)\\leq n$. Assume that $max (m , f)= n$. Then if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $m$ and the function that maps $__$ to $Eq$ applied to $f$ applied to $i$ and absurdity and $max (m , f)= 0$, then for all functions $auto$ from natural numbers $i$ and elements of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f (i)$ and absurdity, if $max (m , f)= 0$, then $0 = n$.\nassistant\n", "label": "Axiom let_clause_1009 : forall f : ((x__ : nat) -> bool), forall n : nat, forall m : nat, forall posn : (0 < n), forall Hfn : (f n = false), forall Hmax : Leq (max m f) n, forall Hmax0 : (max m f = n), forall _clearme : (prod Set Prop nat (fun i => prod Prop Prop (i < m) (fun x__ => f i = false)) /\\ max m f = 0), forall auto : ((i : nat) -> (x__ : i < m) -> f i = false), forall auto' : (max m f = 0), 0 = n .", "predict": "Axiom let_clause_1009 : forall f : nat -> bool, forall n : nat, (0 < n -> absurdity = f n -> max m f <= n -> max m f = n -> (prod Set Prop Nat (fun i => prod Prop Prop (Lt i m) (Eq (f i) absurdity)) -> 0 = n) -> forall auto : nat -> Lt -> Eq (f _) absurdity -> max m f = 0 -> 0 = n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDivides_fact_to_le. For all natural numbers $p$ and $n$, if $p$ is both prime and divisible by $n !$, then $p \\leq n$.\nassistant\n", "label": "Axiom divides_fact_to_le : forall p : nat, forall n : nat, forall x__ : prime p, forall __1 : divisible p (factorial n), Leq p n .", "predict": "Axiom divides_fact_to_le : forall p : nat, forall n : nat, (prime p /\\ p % n ! -> p <= n) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Then if $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$, then if $a$ is less than or equal to $n$, then if $f$ applied to $a$ is equal to $i$, then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) : a ≤ n ∧ f a = i → a ≤ n → f a = i → ∀ b : Nat, (b ≤ n ∧ f b = j) → b ≤ n → f b = j → ∀ g : Nat → Leq i n → Leq (f i n) → ∀ injf : Permut f n, ∀ k : Nat, ∀ l : Leq k n, g k l → injf k = a → f a = i"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_priml. Let $n$ be a natural number. Assume that $0$ is less than $n$. Then the product of $2$ and $n$ is less than or equal to the product of the sum of the logarithm of $2$ and the product of $2$ and $n$ and $1$ and the sum of $prim$ applied to the product of $2$ and $n$ and $1$.\nassistant\n", "label": "axiom le_priml (n : Nat) (x__ : 0 < n) : 2 * n ≤ (log 2 (2 * n) + 1) * (prim (2 * n) + 1)", "predict": "axiom le_priml (n : Nat) (x : 0 < n) : 2 * n ≤ (log 2 + 2 * n) * (prim (2 * n) + 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1607. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_1607 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_1607 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (and (Lt (nd 0) n) (Lt (nd 0) m) (Eq (Gcd n m) (nd 1))) -> c : Elem Nat -> Proof (and (Elem (ex (Nat)) _clearme) (forall Nat (d => Eq (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)))) _clearme)) -> Proof (forall Nat (d => if (or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) (if (Eq (minus (times d m) (times c n)) (nd 1)) (Eq (Gcd m n) (minus (times m d) (times n c)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nF_max_true. Let $f$ be a function from natural numbers to booleans. Let $n \\in N$. Let $__$ be an element of $ex$ of $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $Eq$ applied to $f$ applied to $i$ and $true$. Then $f$ applied to $max$ applied to $n$ and $f$ is equal to $true$.\nassistant\n", "label": "postulate f_max_true : (f : (_ : Nat) -> bool) -> (n : Nat) -> (_ : ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) -> Eq (f (max n f)) true", "predict": "postulate f_max_true : (f : Nat -> Bool) -> n : Nat -> Eq (f (max n) f) true"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nRange_inv_rect_Type1. Let $x1$ be a set. Let $Hterm$ be an element of $range$ of $x1$. Let $P$ be a function from elements $_z1656$ of $range$ of $x1$ to elements of $Type1$. Then for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1657$ of $Eq$ of $Hterm$ and $mk_range (x1 , _enum , _upto , _filter)$ to elements of $P$ of $mk_range (x1 , _enum , _upto , _filter)$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom range_inv_rect_Type1 (x1 : Set) (Hterm : range x1) (P : (_z1656 : range x1) -> Type1) (_H1 : (_enum : (x__ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (x__ : Nat) -> bool) -> (_z1657 : Hterm = mk_range x1 _enum _upto _filter) -> P (mk_range x1 _enum _upto _filter)) : P Hterm", "predict": "axiom range_inv_rect_Type1 (x1 : Set) (Hterm : range x1) (P : ∀ z1656 : range x1 → Type1) : ∀ H1 : ∀ n : Nat, x1 (enum n) → Nat → Boolean → Eq Hterm (mk_range x1 (enum n) (upto n) (filter n)) → P (mk_range x1 (enum n) (upto n) (filter n))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInjn_Sn_n. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $injn$ of $f$ and $n + 1$, $injn$ holds for $f$ and $n$.\nassistant\n", "label": "postulate injn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : injn f (plus n 1)) -> injn f n", "predict": "postulate injn_Sn_n : (f : Nat -> Nat) -> n : Nat -> all (injn f (plus n 1)) (injn f n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAssoc_body. For all sets $A$, for all elements $nil$ of $A$, for all elements $xxx$ of $Aop$ of $A$ and $nil$, for all elements $a$ and $b$ and $c$ of $A$, $op (A , nil , xxx , a , op (A , nil , xxx , b , c))= op (A , nil , xxx , op (A , nil , xxx , a , b), c)$.\nassistant\n", "label": "axiom assoc_body (A : Set) (nil : A) (xxx : Aop A nil) (a b c : A) : op A nil xxx a (op A nil xxx b c) = op A nil xxx (op A nil xxx a b) c", "predict": "axiom assoc_body (A : Set) (nil : A) (xxx : Aop A) (a b c : A) : op A nil xxx a (op A nil xxx b) c = op A nil xxx (op A nil xxx a b) c"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nFact_to_exp. Let $n$ be a natural number. Then $(2 n)! \\leq 2 ^ pred (2 n)n ! n !$.\nassistant\n", "label": "Axiom fact_to_exp : forall n : nat, Leq (factorial (2 * n)) (pow 2 (pred (2 * n)) * factorial n * factorial n) .", "predict": "Axiom fact_to_exp : forall n : nat, (2 * n) ! <= pow 2 (pred (pow 2 n)) * n ! * n ! ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$ and $n \\leq m$. Assume that $n \\leq q + 1$ and $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "Axiom let_clause_15441 : forall p : nat, forall q : nat, forall Hind : ((m : nat) -> (n : nat) -> (x__ : 0 < n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex nat (fun a => ex nat (fun b => a * n - b * m = gcd_aux q m n \\/ b * m - a * n = gcd_aux q m n))), forall m : nat, forall n : nat, forall posn : (0 < n), forall lenm : Leq n m, forall lenS : Leq n (q + 1), forall ndivnm : (~ divisible n m), forall a : nat, forall _clearme : ex nat (fun b => a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall b : nat, forall _clearme0 : (a * mod m n - b * n = gcd_aux q n (mod m n) \\/ b * n - a * mod m n = gcd_aux q n (mod m n)), forall H : (b * n - a * mod m n = gcd_aux q n (mod m n)), n * b - a * mod m n = gcd_aux q n (mod m n) .", "predict": "Axiom let_clause_15441 : forall p : nat, forall q : nat, (forall m : nat, forall n : nat, (0 < n /\\ n <= m /\\ n <= q + 1 /\\ ~ (n mod m = 0)) -> forall a : nat, (ex Nat -> forall b : nat, (Eq (a * n - b * m) (gcd_aux q m n)) \\/ Eq (b * n - a * m) (gcd_aux q m n))) -> n * b - a mod (m, n) = gcd_aux (q, n, mod (m, n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1572. Let $m$ and $n$ be natural numbers. Assume that $0 < n$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $m = 0$. Assume that $n = 0$. Then $m = 0$.\nassistant\n", "label": "Axiom let_clause_1572 : forall m : nat, forall n : nat, forall posn : (0 < n), forall H : (gcd m n = 0), forall auto : (m = 0), forall auto' : (n = 0), m = 0 .", "predict": "Axiom let_clause_1572 : forall m : nat, forall n : nat, (0 < n -> gcd m n = 0 -> m = 0 -> n = 0 -> m = 0) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAntisymmetric_divides. Let $n$ and $m$ be natural numbers. Assume that $n$ is divisible by $m$. Assume that $m$ is divisible by $n$. Then $n$ is equal to $m$.\nassistant\n", "label": "axiom antisymmetric_divides (n m : Nat) (x__ : divisible n m) (__1 : divisible m n) : n = m", "predict": "axiom antisymmetric_divides (n m : Nat) : divisible n m ∧ divisible m n → n = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nInvert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n , m \\in N$. Assume that $m \\leq n$. Let $__1$ be an element of $injn$ of $f$ and $n$. Then $invert_permut (n , f , f (m))= m$.\nassistant\n", "label": "Axiom invert_permut_f : forall f : ((x__ : nat) -> nat), forall n : nat, forall m : nat, forall x__ : Leq m n, forall __1 : injn f n, invert_permut n f (f m) = m .", "predict": "Axiom invert_permut_f : forall f : nat -> nat, forall n : nat, forall m : nat, (m <= n -> exists __1 : injn f n, invert_permut (n, f, f m) = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAxiom. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $__$ be a natural number. Then $min_spec (_n , _b , _f , __)$ is a proposition.\nassistant\n", "label": "min_spec : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> __ : Nat -> Prop .", "predict": "Axiom : (n : Elem Nat) -> (b : Elem Nat) -> (f : Elem (Nat -> Bool)) -> (x : Elem Nat) -> Prop (min_spec n b f x) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10331. Let $n$ be a natural number. Assume that $5 < n$. Let $m$ be a natural number. Assume that $6 \\leq m$. Assume that $(m + 1)^ 2 \\leq 2 ^ m$. Let $a$ be a natural number. Then if $6 \\leq a$, then if $2 (a + 1)+ 1 \\leq 2 ^ a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10331 : (n : Nat) -> 5 < n -> (m : Nat) -> 6 <= m -> pow (plus m 1) 2 <= pow m -> (a : Nat) -> 6 <= a -> (b : Nat) -> 2 * (plus a 1) + 1 <= pow a -> all Nat (\\ x -> if (and (Leq x2515 x2516) (Eq (plus (div x2515 x2516) (mod x2515 x2516)) x2515)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMax_spec_inv_ind. Let $x1 \\in N$. Let $x2$ be a function from natural numbers to booleans. Let $x3$ be a natural number. Let $_Hterm$ be an element of $max_spec$ of $x1$ and $x2$ and $x3$. Then for all functions $P$ from natural numbers $_z1769$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2$ applied to $m$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.\nassistant\n", "label": "max_spec_inv_ind : x1 : Nat -> x2 : (__ : Nat -> bool) -> x3 : Nat -> _Hterm : max_spec x1 x2 x3 -> P : (_z1769 : Nat -> Prop) -> _H1 : (m : Nat -> _x_975 : Lt m x1 -> _x_974 : Eq (x2 m) true -> _x_973 : (i : Nat -> __ : Lt m i -> __1 : Lt i x1 -> Eq (x2 i) false) -> _z1770 : Eq x3 m -> P m) -> _H2 : (_x_976 : (i : Nat -> __ : Lt i x1 -> Eq (x2 i) false) -> _z1770 : Eq x3 0 -> P 0) -> P x3 .", "predict": "max_spec_inv_ind : (x1 : Elem Nat) -> (x2 : Proof (forall Nat (x => Bool))) -> (x3 : Elem Nat) -> Proof (Eq (max_spec x1 x2 x3) (and (forall Nat (z => Prop)) (forall Nat (m => Lt m x1) => (x2 m => true) => (forall Nat (i => Lt i m) => (Lt i x1) => Eq (x2 i) absurdity) => (Eq x3 m) => P m) (forall Nat (i => Lt i x1) => (Eq (x2 i) absurdity) => (Eq x3 0) => P 0))) -> Proof (forall Nat (z => P z)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nInjective_invert_permut. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $permut$ of $f$ and $n$, $injn$ holds for $invert_permut$ applied to $n$ and $f$ and $n$.\nassistant\n", "label": "axiom injective_invert_permut (f : (x__ : Nat) -> Nat) (n : Nat) (x__ : permut f n) : injn (invert_permut n f) n", "predict": "axiom injective_invert_permut (f : Nat → Nat) (n : Nat) : ∀ p : permut f n, injn (invert_permut n f n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1572. Let $m$ and $n$ be natural numbers. Then if $0 < n$, then if $0$ is equal to the greatest common divisor of $m$ and $n$, then if $m = 0$, then if $n = 0$, then $m = 0$.\nassistant\n", "label": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0", "predict": "axiom let_clause_1572 (m n : Nat) : 0 < n → (0 = gcd m n → (m = 0 → (n = 0 → m = 0)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> all Nat (\\ c -> all Nat (\\ d -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nOrd_ord_rem. Let $p , q , m \\in N$. Assume that $0$ is less than $m$. Assume that $p$ is prime. Assume that $q$ is prime. Then if $q$ is less than $p$, then $ord$ applied to $ord_rem$ applied to $m$ and $p$ and $q$ is equal to $ord$ applied to $m$ and $q$.\nassistant\n", "label": "ord_ord_rem : p : Nat -> q : Nat -> m : Nat -> __ : Lt 0 m -> __1 : prime p -> __2 : prime q -> __3 : Lt q p -> Eq (ord (ord_rem m p) q) (ord m q) .", "predict": "ord_ord_rem : (p : Elem Nat) -> (q : Elem Nat) -> (m : Elem Nat) -> Proof (Lt 0 m) -> Proof (Prime p) -> Proof (Prime q) -> Proof (Lt q p) -> Proof (Eq (ord (ord_rem m p) q) (ord m q)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_16003. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, forall posn : (0 < n), forall posm : (0 < m), forall pnm : (gcd n m = 1), forall c : nat, forall _clearme : ex nat (fun d => c * n - d * m = 1 \\/ d * m - c * n = 1), forall d : nat, forall _clearme0 : (c * n - d * m = 1 \\/ d * m - c * n = 1), forall H : (d * m - c * n = 1), gcd m n = m * d - n * c .", "predict": "Axiom let_clause_16003 : forall m : nat, forall n : nat, forall a : nat, forall b : nat, (0 < n /\\ 0 < m /\\ Eq 1 (gcd n m)) -> forall c : nat, forall ex : nat -> Prop, forall d : nat, (Eq (c * n - d * m) 1 \\/ Eq (d * m - c * n) 1 -> (Eq (d * m - c * n) 1 -> Eq (m * d - n * c) (gcd m n))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> (a : Nat) -> (and (Leq a n) (Eq (f a) i)) -> (and (Leq a n) (Eq (f a) i)) -> all Nat (\\ b -> if (and (Leq b n) (Eq (f b) j)) (if (Leq b n) (Eq (f b) j)) (all (Nat -> Leq (f a) j) (\\ injf -> if (Eq a b) (Eq (f a) j)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_sn. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Then for all natural numbers $l$, for all elements $b$ and $b2$ of $B$, for all elements $__$ of $lstar_r$ of $B$ and $R$ and $l$ and $b$ and $b2$, for all elements $b1$ of $B$, for all elements $__1$ of $R$ of $b1$ and $b$, $lstar_r$ holds for $B$ and $R$ and the sum of $l$ and $1$ and $b1$ and $b2$.\nassistant\n", "label": "Axiom lstar_r_sn : forall B : Set, forall R : relation B, forall l : nat, forall b : B, forall b2 : B, forall x__ : lstar_r B R l b b2, forall b1 : B, forall __1 : R b1 b, lstar_r B R (l + 1) b1 b2 .", "predict": "Axiom lstar_r_sn : forall B : Set, forall R : relation B, forall l : nat, forall b : B, forall b2 : B, forall x : lstar_r B R l b b2, forall b1 : B, forall y : R b1 b, lstar_r B R (l + 1) b1 b2 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_951$ of $Dop$ of $A$ and $_nil$ to elements of $Type2$. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_951$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_951$.\nassistant\n", "label": "Dop_rect_Type2_body : A : Set -> _nil : A -> Q_ : (_x_951 : Dop A _nil -> Type2) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_951 : Dop A _nil -> Q_ x_951 .", "predict": "dop_rect_Type2_body : (A : Elem Set) -> (_nil : Elem A) -> Q_ : (x_951 : Elem (Dop A)) -> Elem (Type2) -> Proof (forall (H_mk_Dop : (sum : Elem (ACop A)) -> _nil -> Elem (Dop A)) -> forall (prod : (a : Elem A) -> Elem A -> Elem A) -> forall (null : (a : Elem A) -> Eq (prod a _nil) _nil) -> forall (distr : (a : Elem A) -> (b : Elem A) -> (c : Elem A) -> Eq (prod (a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c)))) -> Proof (forall (x_951 : Elem (Dop A)) -> _nil) -> Q_ x_951) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1575. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then for all natural numbers $x1029$, $x1029$ is equal to the product of $x1029$ and the difference of the product of $n$ and $c$ and the product of $m$ and $d$.\nassistant\n", "label": "axiom let_clause_1575 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) (x1029 : Nat) : x1029 = x1029 * (n * c - m * d)", "predict": "axiom let_clause_1575 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) (c : Nat) (clearme : ex (Nat := Nat) (λ d, disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1))) (d : Nat) : Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1 → Eq (c * n - d * m) 1 → ∀ x1029 : Nat, x1029 = x1029 * (n * c - m * d)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15621. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$. Then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.\nassistant\n", "label": "axiom let_clause_15621 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_15621 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : gcd n m = 1) (c : Nat) (clearme : ex Nat (d => or (Eq (diff (c * n) (d * m)) 1) (Eq (diff (d * m) (c * n)) 1))) (d : Nat) (x1 : or (Eq (diff (c * n) (d * m)) 1) (Eq (diff (d * m) (c * n)) 1)) (x2 : Eq (diff (c * n) (d * m)) 1) : Eq (diff (n * c) (m * d)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b \\in N$. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Elem Nat -> permf : Elem (Permut f n) -> i : Elem Nat -> j : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (if (and (Leq b n) (Eq (f b) j)) (forall (g : Elem (Nat -> Nat (and i (Leq (nd 0) n))) -> forall (injf : Elem (injn f n)) -> if (Eq a b) (Eq (f a) j))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSub_lt. Let $A$ be a set. Let $e$ be a function from natural numbers to elements of $A$. Let $p$ be a function from natural numbers to booleans. Let $n , m \\in N$. Assume that $n$ is less than or equal to $m$. Then $sub_hk$ holds for the function that maps $x$ to $x$ and the function that maps $x$ to $x$ and $A$ and $mk_range$ applied to $A$ and $e$ and $n$ and $p$ and $mk_range$ applied to $A$ and $e$ and $m$ and $p$.\nassistant\n", "label": "axiom sub_lt (A : Set) (e : (x__ : Nat) -> A) (p : (x__ : Nat) -> bool) (n m : Nat) (x__ : n ≤ m) : sub_hk (λ x => x) (λ x => x) A (mk_range A e n p) (mk_range A e m p)", "predict": "axiom sub_lt (A : Set) (e : Nat → A) (p : Nat → Boolean) (n m : Nat) (x : n ≤ m) : sub_hk (λ x : A, x) (λ x : A, x) A (mk_range A e n) p (mk_range A e m) p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_to_lt_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Assume that $n \\leq m$. Assume that $m < p$. Then $n < p$.\nassistant\n", "label": "axiom le_to_lt_to_lt (n m p : Nat) (x__ : n ≤ m) (__1 : m < p) : n < p", "predict": "axiom le_to_lt_to_lt (n m p : Nat) (x : n ≤ m) (y : m < p) : n < p"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_sigma_l. Let $n , a \\in N$. Then for all functions $p$ from natural numbers to booleans, for all functions $f$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $a$ and $f$ applied to $i$ is equal to the exponentiation of $a$ and $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow a (f i))) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> f i)))", "predict": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> all Nat (\\ p -> all Nat (\\ f -> Eq (bigop n (λ i -> p i) Nat 1 times (λ i -> pow a (f i))) (pow a (bigop n (λ i -> p i) Nat 0 plus (λ i -> f i))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_CProp2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1482$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_851$ of $Lt$ of $x4$ and $x2$ and elements $x_850$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1483$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_CProp2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1482 : div_mod_spec x1 x2 x3 x4) -> Prop) (_H1 : (x_851 : x4 < x2) -> (x_850 : x1 = x3 * x2 + x4) -> (_z1483 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_851 x_850) -> P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_CProp2 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : ∀ x : div_mod_spec x1 x2 x3 x4, Prop) (x_851 : Lt x4 x2) (x_850 : Eq x1 x3) : P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850) xterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10332. Let $n \\in N$. Assume that $2 ^ 6 \\leq n$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_10332 : (n : Nat) -> (le_n : Leq (pow 2 6) n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_10332 : (n : Nat) -> Leq (pow 2 6) n -> (x2515 : Nat) -> (x2516 : Nat) -> Eq (plus (times x2515 (div x2515 x2516)) (mod x2515 x2516)) x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10331. Let $n$ be a natural number. Then if $5 < n$, then for all natural numbers $m$, if $6 \\leq m$, then if $(m + 1)^ 2 \\leq 2 ^ m$, then for all natural numbers $a$, if $6 \\leq a$, then if $2 (a + 1)+ 1 \\leq 2 ^ a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (if (Lt (nd 5) n) (forall Nat (m => if (Leq (nd 6) m) (if (Leq (plus m (nd 1)) (pow (nd 2) m)) (forall Nat (a => if (Leq (nd 6) a) (if (Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a))))) (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 x2516 (plus (div x2515 x2516) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1562. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d = 1$.\nassistant\n", "label": "axiom let_clause_1562 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) : n * c - m * d = 1", "predict": "axiom let_clause_1562 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) : ∀ c : Nat, ∀ _clearme : ex : Nat, ∀ d : Nat, (c * n - d * m = 1 ∨ d * m - c * n = 1) → (c * n - d * m = 1 → n * c - m * d = 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15441. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to the sum of $q$ and $1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Assume that the difference of the product of $b$ and $n$ and the product of $a$ and $", "label": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))", "predict": "mod$ applied to $m$ and $n$ is less than or equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Assume that the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is greater than $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $x$ be an element of $ex$ of $Nat$ and the function that maps $y$ to the disjunction of $Eq$ applied to the difference of the product of $x$ and $n$ and the product of $y$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $y$ and $m$ and the product of $x$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $y$ be a natural number. Assume that the difference of the product of $x$ and $n$ and the product of $y$ and $m$ is equal to $gcd_aux$ applied to $q$ and $m$ and $n$ or the difference of the product of $y$ and $m$ and the product of $x$ and $n$ is equal to $gcd_aux$ applied to $q$ and $m$ and $n$. Assume that the difference of the product of $x$ and $n$ and the product of $y$ and $m$ is less than or equal to $gcd_aux$ applied to $q$ and $m$ and $n$. Assume that the difference of the product of $x$ and $n$ and the product of $y$ and $m$ is greater than $gcd_aux$ applied to $q$ and $m$ and $n$."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1033. Let $p , n , q , r \\in N$. Assume that $0 < p$ and $p$ is not divisible by $r$. Assume that $n = p ^ q r$. Let $q0 , q1 \\in N$. Assume that $q1 + 1 \\leq p ^ (q1 + 1)$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))", "predict": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> and (Lt 0 p) (not (divisible p r)) -> Eq n (pow p q * r) -> (q0 : Nat) -> (q1 : Nat) -> Leq (plus q1 1) (pow p (plus q1 1)) -> all Nat (\\ x2515 -> all Nat (\\ x2516 -> Eq x2515 (plus (div x2515 x2516) (mod x2515 x2516)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1545. Let $m , n \\in N$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $0$ is divisible by $n$. Let $q1$ be a natural number. Assume that $n = 0 q1$. Then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m = 0 q2$, then $m = 0$.\nassistant\n", "label": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0", "predict": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> Eq 0 (gcd m n) -> Div 0 n -> let q1 : Nat -> Eq n (times 0 q1) -> if (Div 0 m) (all Nat (\\ q2 -> if (Eq m (times 0 q2)) (Eq m 0)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_aux_Strue. Let $n$ and $m$ and $p$ and $q$ and $r$ be natural numbers. Assume that $mod (n , m)= 0$. Then if $p_ord_aux (p , n \\div m , m)= mk_Prod (Nat , Nat , q , r)$, then $p_ord_aux (p + 1 , n , m)= mk_Prod (Nat , Nat , q + 1 , r)$.\nassistant\n", "label": "Axiom p_ord_aux_Strue : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall r : nat, forall x__ : (mod n m = 0), forall __1 : (p_ord_aux p (n / m) m = mk_Prod nat nat q r), p_ord_aux (p + 1) n m = mk_Prod nat nat (q + 1) r .", "predict": "Axiom p_ord_aux_Strue : forall n : nat, forall m : nat, forall p : nat, forall q : nat, forall r : nat, (mod n m = 0 -> p_ord_aux p (n / m) m = mk_Prod Nat Nat q r -> p_ord_aux (p + 1) n m = mk_Prod Nat Nat (q + 1) r) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod. For all natural numbers $n$ and $m$, $n$ is equal to the sum of the product of the quotient of $n$ and $m$ and $m$ and $mod$ applied to $n$ and $m$.\nassistant\n", "label": "Axiom div_mod : forall n : nat, forall m : nat, n = n / m * m + mod n m .", "predict": "Axiom div_mod : forall n : nat, forall m : nat, n = (div n m * m) + (mod n m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMatch_le. Let $_n$ be a natural number. Let $return_sort$ be an element of $Sort$. Let $return_type$ be a function from natural numbers and elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_sort$. Let $case_le_n$ be an element of $return_type$ of $_n$ and $le_n (_n)$. Let $case_le_S$ be a function from natural numbers $m$ and elements of $Leq$ of $_n$ and $m$ to elements of $return_type$ of $m + 1$ and $le_S (_n , m , __)$. Let $__$ be a natural number. Then if $_n \\leq __$, then $return_type$ holds for $__$ and $z$.\nassistant\n", "label": "Axiom match_le : forall _n : nat, forall return_sort : Sort, forall return_type : ((x__ : nat) -> (z : Leq _n x__) -> return_sort), forall case_le_n : return_type _n (le_n _n), forall case_le_S : ((m : nat) -> (x__ : Leq _n m) -> return_type (m + 1) (le_S _n m x__)), forall x__ : nat, forall z : Leq _n x__, return_type x__ z .", "predict": "Axiom match_le : forall n : nat, forall return_sort : Sort, forall return_type : n -> Leq n -> nat -> return_sort, forall case_le_n : return_type n (Leq n n), forall case_le_S : forall m : nat, forall z : Leq n m, return_type (m + 1) (Leq n m), forall __ : nat, (n <= __ -> return_type __ z) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_div_S_S_div. For all natural numbers $n$ and $m$, if $0$ is less than $m$, then the quotient of the sum of $n$ and $1$ and $m$ is less than or equal to the sum of the quotient of $n$ and $m$ and $1$.\nassistant\n", "label": "le_div_S_S_div : n : Nat -> m : Nat -> __ : Lt 0 m -> Leq (div (plus n (nd 1)) m) (plus (div n m) (nd 1)) .", "predict": "le_div_S_S_div : n : Elem Nat -> m : Elem Nat -> Proof (if (Lt (nd 0) m) (Leq (div (plus n (nd 1)) m) (plus (div n m) (nd 1)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_exp_to_le. Let $b$ and $n$ and $m$ be natural numbers. Assume that $1 < b$. Then if $b ^ n \\leq b ^ m$, then $n \\leq m$.\nassistant\n", "label": "postulate le_exp_to_le : (b : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 b) -> (__1 : Leq (pow b n) (pow b m)) -> Leq n m", "predict": "postulate le_exp_to_le : (b : Nat) -> b > 1 -> (n : Nat) -> (m : Nat) -> Leq (pow b n) (pow b m) -> Leq n m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nMod_O_to_divides. Let $n , m \\in N$. Assume that $0 < n$. Then if $mod (m , n)= 0$, then $n$ is divisible by $m$.\nassistant\n", "label": "Axiom mod_O_to_divides : forall n : nat, forall m : nat, forall x__ : (0 < n), forall __1 : (mod m n = 0), divisible n m .", "predict": "Axiom mod_O_to_divides : forall n : nat, (0 < n -> forall m : nat, (mod m n = 0 -> n divides m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nB_SSSSSO. $B$ applied to $5$ is equal to $30$.\nassistant\n", "label": "postulate B_SSSSSO : Eq (B 5) 30", "predict": "postulate b_sssss_o : B 5 ≡ 30"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1728$ of $Dop$ of $x1$ and $x2$ to sets, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1729$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.\nassistant\n", "label": "axiom Dop_inv_rect_Type0 (x1 : Set) (x2 : x1) (Hterm : Dop x1 x2) (P : (_z1728 : Dop x1 x2) -> Set) (_H1 : (sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1729 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)) : P Hterm", "predict": "axiom dop_inv_rect_Type0 (x1 : Set) (x2 : x1) : ∀ Hterm : Dop x1 x2, ∀ P : ∀ _z1728 : Dop x1 x2 → Set, ∀ _H1 : sum (ACop x1 x2) → prod x1 (x1 → x1) → Eq (prod a x2) (x2 × x2) → distr (aop__o__op x1 x2) (sum (ACop x1 x2)) (prod a b) (prod a c) → Eq (Hterm _) (mk_Dop x1 x2 sum prod _null _distr) → P (mk_Dop x1 x2 sum prod _null _distr) Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nBc2. Let $n$ and $k$ be natural numbers. Assume that $k \\leq n$. Then $k ! \\times (n - k)!$ is divisible by $n !$.\nassistant\n", "label": "axiom bc2 (n k : Nat) (x__ : k ≤ n) : divisible (factorial k * factorial (n - k)) (factorial n)", "predict": "axiom b2 (n k : Nat) (x : k ≤ n) : div (fact k * fact (n - k)) (fact n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nMin_spec_ind. Let $_n$ and $_b$ be natural numbers. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$. Let $x_1075 \\in N$. Then for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "postulate min_spec_ind : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076", "predict": "postulate min_spec_ind : (n : Nat) -> (b : Nat) -> (f : Nat -> Bool) -> Induction (forall x : min_spec n b f) -> Prop (x -> Q_ n b f x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_Sfalse. Let $k \\in N$. Let $p$ be a function from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if absurdity is equal to $p (k)$, then $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.\nassistant\n", "label": "Axiom bigop_Sfalse : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall x__ : (p k = false), bigop (k + 1) (fun i => p i) B nil op (fun i => f i) = bigop k (fun i => p i) B nil op (fun i => f i) .", "predict": "Axiom bigop_Sfalse : forall k : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : B -> nat -> B, forall f : nat -> B, (p k -> bigop k (fun i => p i B nil op (fun i => f i)) = bigop (k + 1) (fun i => p i B nil op (fun i => f i))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type4_body. Let $Q_$ be a function from natural numbers $_x_369$ to elements of $Type4$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_370$ and elements $_x_372$ of $Q_$ of $x_370$ to elements of $Q_$ of $x_370 + 1$. Then for all natural numbers $x_369$, $Q_$ holds for $x_369$.\nassistant\n", "label": "postulate nat_rect_Type4_body : (Q_ : (_x_369 : Nat) -> Type4) -> (_H_O : Q_ 0) -> (_H_S : (x_370 : Nat) -> (_x_372 : Q_ x_370) -> Q_ (plus x_370 1)) -> (x_369 : Nat) -> Q_ x_369", "predict": "postulate nat_rect_Type4_body : (Q : Nat -> Type4) -> Q 0 -> (x : Nat) -> (q : Q x) -> all Nat (\\ x -> Q x)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.\nassistant\n", "label": "let_clause_1063 : f : (__ : Nat -> Nat) -> n : Nat -> permf : permut f n -> i : Nat -> j : Nat -> lein : Leq i n -> lejn : Leq j n -> a : Nat -> _clearme : and (Leq a n) (Eq (f a) i) -> lean : Leq a n -> fa : Eq (f a) i -> b : Nat -> _clearme0 : and (Leq b n) (Eq (f b) j) -> lebn : Leq b n -> fb : Eq (f b) j -> __ : (i0 : Nat -> __ : Leq i0 n -> Leq (f i0) n) -> injf : injn f n -> auto : Eq a b -> Eq (f a) j .", "predict": "let_clause_1063 : f : Elem (Nat -> Nat) -> n : Nat -> permf : Elem (Perm f n) -> i : Nat -> j : Nat -> Proof (and (Leq i n) (Eq (f a) i)) -> Proof (Leq a n) -> Proof (Eq (f a) i) -> b : Nat -> Proof (and (Leq b n) (Eq (f b) j)) -> Proof (Leq b n) -> Proof (Eq (f b) j) -> Proof (forall (f : Elem (Nat -> Nat) -> Elem (Nat -> Nat -> Leq)) -> forall (injf : Elem (Perm f n)) -> Proof (and (Eq a b) (Eq (f a) j))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLt_plus. For all natural numbers $n$ and $m$ and $p$ and $q$, if $n$ is less than $m$, then if $p$ is less than $q$, then the sum of $n$ and $p$ is less than the sum of $m$ and $q$.\nassistant\n", "label": "axiom lt_plus (n m p q : Nat) (x__ : n < m) (__1 : p < q) : n + p < m + q", "predict": "axiom lt_plus (n m p q : Nat) (x : n < m) (y : p < q) : n + p < m + q"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10336. Let $n , m \\in N$. Let $Hind$ be a function from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$. Let $a$ be a natural number. Assume that $m = 2 a$ or $m = 2 a + 1$. Assume that $m = 2 a + 1$. Assume that $1 < 2 a + 1$. Assume that $0 < a$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10336 : n : Nat -> m : Nat -> Hind : (p : Nat -> __ : Lt p m -> __1 : Lt (nd 1) p -> Leq (Psi p) (times (pred p) (pow (nd 2) (minus (times (nd 2) p) (nd 3))))) -> a : Nat -> _clearme : or (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1))) -> Hm : Eq m (plus (times (nd 2) a) (nd 1)) -> Hlt : Lt (nd 1) (plus (times (nd 2) a) (nd 1)) -> Ha : Lt 0 a -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10336 : n : Elem Nat -> m : Elem Nat -> Proof (Hind : (p : Elem Nat) -> Proof (and (Eq (Lt (p : Elem Lt) m) (Lt (m : Elem Lt) (plus (times (nd 2) a) (nd 1))))) -> Proof (and (Eq m (plus (times (nd 2) a) (nd 1))) (Lt (nd 1) (plus (times (nd 2) a) (nd 1))) (Lt (nd 0) a)) -> Proof (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (div x2515 x2516) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nPsidef. For all natural numbers $n$, $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $p$ is equal to $Psi' (n)$.\nassistant\n", "label": "axiom Psidef (n : Nat) : Psi' n = bigop (n + 1) (λ p => primeb p) Nat 1 times (λ p => bigop (log p n) (λ i => true) Nat 1 times (λ i => p))", "predict": "axiom psi_def (n : Nat) : bigop (n + 1) (λ p, primeb p) Nat 1 times (λ p, bigop (log p n) (Nat 1 times (λ i, true) Nat 1 times (λ i, p))) = Psi' n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nRange_rect_CProp0_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.\nassistant\n", "label": "Axiom range_rect_CProp0_body : forall _A : Set, forall Q_ : ((_x_939 : range _A) -> Prop), forall _H_mk_range : ((_enum : (x__ : nat) -> _A) -> (_upto : nat) -> (_filter : (x__ : nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)), forall x_939 : range _A, Q_ x_939 .", "predict": "Axiom range_rect_CProp0_body : forall A : Set, forall Q : range A -> Prop, forall H : enum nat -> A -> nat -> Prop, forall mk_range : enum nat -> A -> nat -> filter nat bool -> Q (mk_range A (enum nat) (nat 0)), forall x_939 : range A, Q x_939 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nSame_bigop. Let $k \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Then for all functions $f$ and $g$ from natural numbers to elements of $B$, for all elements $__$ of $sameF_upto$ of $k$ and $bool$ and $p1$ and $p2$, for all elements $__1$ of $sameF_p$ of $k$ and $p1$ and $B$ and $f$ and $g$, $bigop$ applied to $k$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$.\nassistant\n", "label": "Axiom same_bigop : forall k : nat, forall p1 : ((x__ : nat) -> bool), forall p2 : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), forall x__ : sameF_upto k bool p1 p2, forall __1 : sameF_p k p1 B f g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i) .", "predict": "Axiom same_bigop : forall k : nat, forall p1 : nat -> bool, forall p2 : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, (forall f : nat -> B, forall g : nat -> B, forall x : sameF_upto k bool p1 p2, forall x1 : sameF_p k p1 B f g, bigop k (fun i => p1 i) B nil op (fun i => f i) = bigop k (fun i => p2 i) B nil op (fun i => g i)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.\nassistant\n", "label": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j", "predict": "postulate let_clause_1063 : (f : Nat -> Nat) -> n : Nat -> permf : Permut f n -> i : Nat -> j : Nat -> (i' : Leq i n) -> (j' : Leq j n) -> a : Nat -> (a' : Leq a n) -> (f' : Eq (f a) i) -> (a'' : Leq a n) -> Eq (f a) i -> (b : Nat) -> (b' : Leq b n) -> (f'' : Eq (f b) j) -> b'' : Leq b n -> Eq (f b) j -> (i0 : Nat) -> (inj : Leq i0 n) -> (x : Leq (f i0) n) -> injnf : injn (f i0) n -> Eq a b -> Eq (f a) j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1047. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n$ is less than or equal to $k$. Let $j \\in N$. Assume that $n$ is less than or equal to $j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity. Let $x2571 , x2572 \\in N$. Then $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.\nassistant\n", "label": "let_clause_1047 : k : Nat -> n : Nat -> p : (__ : Nat -> bool) -> B : Set -> nil : B -> op : (__ : B -> __1 : B -> B) -> f : (__ : Nat -> B) -> lenk : Leq n k -> j : Nat -> leup : Leq n j -> Hind : (__ : (i : Nat -> __ : Leq n i -> __1 : Lt i j -> Eq (p i) false) -> Eq (bigop n (i : Nat => p i) B nil op (i : Nat => f i)) (bigop j (i : Nat => p i) B nil op (i : Nat => f i))) -> Hfalse : (i : Nat -> __ : Leq n i -> __1 : Lt i (plus j (nd 1)) -> Eq (p i) false) -> x2571 : Nat -> x2572 : Nat -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572)) .", "predict": "let_clause_1047 : k : Elem Nat -> n : Elem Nat -> p : ( Elem Nat -> Elem Bool ) -> B : Set -> nil : Elem B -> op : ( Elem B -> Elem B -> Elem B ) -> f : ( Elem Nat -> Elem B ) -> Proof ( Leq n k ) -> j : Elem Nat -> Proof ( Leq n j ) -> Hind : ( i : Elem Nat -> Proof ( Leq n i ) -> Proof ( Lt i j ) -> Proof ( Eq ( p i ) absurdity ) -> Proof ( Eq ( bigop n ( ( i => p i ) B nil op ( ( i => f i ) ) ) ) ( bigop j ( ( i => p i ) B nil op ( ( i => f i ) ) ) ) ) -> Hfalse : ( i : Elem Nat -> Proof ( Leq n i ) -> Proof ( Lt i ( plus j 1 ) ) -> Proof ( Eq ( p i ) absurdity ) ) -> Proof ( Eq x2571 ( plus ( times x2572 ( quotient x2571 x2572 ) ) ( mod x2571 x2572 ) ) ) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNot_found_max_spec. Let $n$ be a natural number. Then for all functions $f$ from natural numbers to booleans, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $max_spec$ holds for $n$ and $f$ and $0$.\nassistant\n", "label": "Axiom not_found_max_spec : forall n : nat, forall f : ((x__ : nat) -> bool), forall x__ : ((i : nat) -> (x__ : i < n) -> f i = false), max_spec n f 0 .", "predict": "Axiom not_found_max_spec : forall n : nat, forall f : nat -> bool, forall g : nat -> Lt -> Eq (f _), max_spec n f 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_15692. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.\nassistant\n", "label": "axiom let_clause_15692 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : d * m - c * n = 1) : m * d - n * c = 1", "predict": "axiom let_clause_15692 (m n a b : Nat) (x : 0 < n) (y : 0 < m) (z : 1 = gcd n m) (c : Nat) (x_clearme : ex : Nat → disj (Eq (c * n - d * m) 1) (Eq (d * m - c * n) 1)) : ∀ d : Nat, (Eq (c * n - d * m) 1 ∨ Eq (d * m - c * n) 1) → (Eq (d * m - c * n) 1 → Eq (m * d - n * c) 1)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_div. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1$ is less than $p$. Then if $0$ is less than $m$, then if $m$ is less than or equal to $n$, then the logarithm of $p$ and the quotient of $n$ and $m$ is less than or equal to the difference of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$.\nassistant\n", "label": "axiom log_div (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) (__2 : m ≤ n) : log p (n / m) ≤ log p n - log p m", "predict": "axiom log_div (p n m : Nat) (x : 1 < p) (y : 0 < m) (z : m ≤ n) : log p (n / m) ≤ log p n - log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nEq_minus_gcd. Let $m$ and $n$ be natural numbers. Then $ex$ holds for $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and the greatest common divisor of $n$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and the greatest common divisor of $n$ and $m$.\nassistant\n", "label": "postulate eq_minus_gcd : (m : Nat) -> (n : Nat) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd n m)) (Eq (minus (times b m) (times a n)) (gcd n m))))", "predict": "postulate eq_minus_gcd : (m : Nat) -> (n : Nat) -> Eq (ex (Nat , \\ a -> ex (Nat , \\ b -> or (Eq (minus (times a n) (times b m)) (gcd n m)) (Eq (minus (times b m) (times a n)) (gcd n m))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_10335. Let $n$ be a natural number. Assume that $0 < n$. Let $x2515 , x2516 \\in N$. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "Axiom let_clause_10335 : forall n : nat, forall posn : (0 < n), forall x2515 : nat, forall x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516 .", "predict": "Axiom let_clause_10335 : forall n : nat, (0 < n -> forall x2515, x2516 : nat, x2515 = x2516 * (x2515 / x2516) + mod (x2515, x2516)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1575. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $c n - d m = 1$. Then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.\nassistant\n", "label": "axiom let_clause_1575 (m n a b : Nat) (posn : 0 < n) (posm : 0 < m) (pnm : gcd n m = 1) (c : Nat) (_clearme : ex Nat (λ d => c * n - d * m = 1 ∨ d * m - c * n = 1)) (d : Nat) (_clearme0 : c * n - d * m = 1 ∨ d * m - c * n = 1) (H : c * n - d * m = 1) (x1029 : Nat) : x1029 = x1029 * (n * c - m * d)", "predict": "axiom let_clause_1575 (m n a b : Nat) (x : 0 < n ∧ 0 < m) (y : gcd n m = 1) (c : Nat) (x1029 : ex : Nat → Nat) (d : Nat) (z : c * n - d * m = 1 ∨ d * m - c * n = 1 ∧ c * n - d * m = 1) : ∀ x1029 : Nat, x1029 = x1029 (n * c - m * d)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16171. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))", "predict": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> and (Lt 0 p) (Eq 1 (gcd p m)) -> Divisible p (times m n) -> (c : Nat) -> Eq (times m n) (times p c) -> (a : Nat) -> ex (Nat -> if (and (Eq (gcd p m) (minus (times a p) (times b m))) (Eq (gcd p m) (minus (times b m) (times a p)))) (if (Eq (minus (times b m) (times a p)) 1) (Eq (minus (times m b) (times p a)) (gcd p m)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nAop_rect_CProp3. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_879$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $_nil$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $_nil$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ to elements of $Q_$ of $mk_Aop$ applied to $A$ and $_nil$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, for all elements $x_879$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_879$.\nassistant\n", "label": "axiom Aop_rect_CProp3 (A : Set) (_nil : A) (Q_ : (_x_879 : Aop A _nil) -> Prop) (_H_mk_Aop : (op : (x__ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> op _nil a = a) -> (_nilr : (a : A) -> op a _nil = a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> op a (op b c) = op (op a b) c) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) (x_879 : Aop A _nil) : Q_ x_879", "predict": "axiom aop_rect_CProp3 (A : Type) (nil : A) : ∀ Q : Aop A → A → Prop, ∀ H : ∀ a : A, ∀ b : A, Eq (op a b) (op (op a b) c) → ∀ mk : A → A → Aop A, ∀ nill : ∀ a : A, Eq (op nil a) (op (op nil a) a) → ∀ nilr : ∀ a : A, Eq (op a nil) (op (op a nil) a) → ∀ assoc : ∀ a : A, ∀ b : A, ∀ c : A, Eq (op a (op b c)) (op (op a b) c), ∀ x : Aop A, ∀ nil : A, Q x nil"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nP_ord_exp. Let $n , m , i \\in N$. Assume that $0 < m$. Assume that $mod (n , m)$ is not equal to $0$. Then for all natural numbers $p$, if $i \\leq p$, then $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.\nassistant\n", "label": "Axiom p_ord_exp : forall n : nat, forall m : nat, forall i : nat, forall x__ : (0 < m), forall __1 : (~ (mod n m = 0)), forall p : nat, forall __2 : Leq i p, p_ord_aux p (pow m i * n) m = mk_Prod nat nat i n .", "predict": "Axiom p_ord_exp : forall n : nat, forall m : nat, (0 < m -> ~ (mod n m = 0) -> forall i : nat, (i <= p -> p_ord_aux p (pow m i * n) m = mk_Prod Nat Nat i n)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10331. Let $n \\in N$. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Then if $6$ is less than or equal to $a$, then if the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_10331 : n : Nat -> lt4n : Lt (nd 5) n -> m : Nat -> le4m : Leq (nd 6) m -> Hind : Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m) -> a : Nat -> lea : Leq (nd 6) a -> Hinda : Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a) -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10331 : n : Elem Nat -> Proof (Lt (nd 5) n) -> m : Elem Nat -> Proof (Leq (nd 6) m) -> Proof (Leq (pow (plus m (nd 1)) (nd 2)) (pow (nd 2) m)) -> a : Elem Nat -> Proof (Leq (nd 6) a) -> Proof (Leq (plus (times (nd 2) (plus a (nd 1))) (nd 1)) (pow (nd 2) a)) -> Proof (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nMin_spec_ind_body. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$. Let $x_1075$ be a natural number. Let $x_1076$ be an element of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$. Then $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "axiom min_spec_ind_body (_n _b : Nat) (_f : (x__ : Nat) -> bool) (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) (_H_found_min_spec : (m : Nat) -> (x_1080 : _b ≤ m) -> (x_1079 : m < _n + _b) -> (x_1078 : _f m = true) -> (x_1077 : (i : Nat) -> (x__ : _b ≤ i) -> (__1 : i < m) -> _f i = false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (x__ : _b ≤ i) -> (__1 : i < _n + _b) -> _f i = false) -> Q_ (_n + _b) (not_found_min_spec _n _b _f x_1081)) (x_1075 : Nat) (x_1076 : min_spec _n _b _f x_1075) : Q_ x_1075 x_1076", "predict": "axiom min_spec_ind_body (n b : Nat) (f : Nat → Bool) (Q : ∀ x : min_spec n b f, ∀ m : Nat, m ∈ Leq b ∧ m ∈ Lt n → Prop) (H_found_min_spec : ∀ m : Nat, ∀ x : Leq b → Lt m → Eq (f m) true → ∀ i : Nat, Leq b i ∧ Lt i m → absurdity → Q m (found_min_spec n b f m x)) (H_not_found_min_spec : ∀ i : Nat, Leq b i ∧ Lt i (n + b) → Eq (f i) absurdity → Q (n + b) (not_found_min_spec n b f i)) (x_1075 : Nat) (x_1076 : min_spec n b f x_1075) : Q x_1075 x_1076"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_previous_prime5. Let $n$ and $m$ be natural numbers. Then if $nth_prime (n)< m$, then $Nat$.\nassistant\n", "label": "axiom let_previous_prime5 (n m : Nat) (ltml : nth_prime n < m) : Nat", "predict": "axiom let_previous_prime (n m : Nat) : nth_prime n < m → Nat"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nIso. For all sets $A$, $relation$ holds for $range$ applied to $A$.\nassistant\n", "label": "postulate iso : (A : Set) -> relation (range A)", "predict": "postulate iso : all Set (\\ A -> relation (range A))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nF3_ind. Let $A1$ and $A2$ and $A3$ be sets. Let $f$ be a function from elements of $A1$ and elements $__1$ of $A2$ and elements $__2$ of $A3$ to natural numbers. Let $P$ be an element of $relation3$ of $A1$ and $A2$ and $A3$. Let $__$ be a function from natural numbers $n$ and functions from elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements of $Lt$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$ and elements $a1$ of $A1$ and elements $a2$ of $A2$ and elements $a3$ of $A3$ and elements $__1$ of $Eq$ of $f$ applied to $a1$ and $a2$ and $a3$ and $n$ to elements of $P$ of $a1$ and $a2$ and $a3$. Let $a1$ be an element of $A1$. Then for all elements $a2$ of $A2$, for all elements $a3$ of $A3$, $P$ holds for $a1$ and $a2$ and $a3$.\nassistant\n", "label": "f3_ind : A1 : Set -> A2 : Set -> A3 : Set -> f : (__ : A1 -> __1 : A2 -> __2 : A3 -> Nat) -> P : relation3 A1 A2 A3 -> __ : (n : Nat -> __ : (a1 : A1 -> a2 : A2 -> a3 : A3 -> __ : Lt (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> __1 : Eq (f a1 a2 a3) n -> P a1 a2 a3) -> a1 : A1 -> a2 : A2 -> a3 : A3 -> P a1 a2 a3 .", "predict": "f3_ind : (A1 : Elem Sets) -> (A2 : Elem Sets) -> (A3 : Elem Sets) -> (f : Elem (A1 -> A2 -> A3 -> Nat)) -> (P : Elem (relation3 A1 A2 A3)) -> (n : Elem Nat) -> (a1 : Elem A1) -> (a2 : Elem A2) -> (a3 : Elem A3) -> (Lt : Elem (f a1 a2 a3 -> Nat)) -> (Eq : Elem (f a1 a2 a3 -> Nat)) -> Proof (forall (a2 : Elem A2) -> forall (a3 : Elem A3) -> P (a1, a2, a3)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_sigma. Let $n \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $g1$ and $g2$ be functions from natural numbers to natural numbers. Let $__$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $p2 (i)$ and $true$. Let $__1$ be a function from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Leq$ of $g1 (i)$ and $g2 (i)$. Then $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$ is less than or equal to $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$.\nassistant\n", "label": "postulate le_sigma : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))", "predict": "postulate le_sigma : (n : Nat) -> (p1 : Nat -> Bool) -> (p2 : Nat -> Bool) -> (g1 : Nat -> Nat) -> (g2 : Nat -> Nat) -> ($$ : Lt n i -> Eq (p1 i) true -> Eq (p2 i) true) -> ($$1 : Lt n i -> Eq (p1 i) true -> Leq (g1 i) (g2 i)) -> bigop n (fun i -> p2 i) Nat 0 plus (fun i -> g2 i) <= bigop n (fun i -> p1 i) Nat 0 plus (fun i -> g1 i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nNat_inv_rect_CProp1. Let $Hterm$ be a natural number. Let $P$ be a function from natural numbers $_z707$ to propositions. Let $_H1$ be a function from elements $_z708$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$. Then for all functions $_H2$ from natural numbers $x_410$ and functions $_x_412$ from elements $_z708$ of $Eq$ of $Hterm$ and $x_410$ to elements of $P$ of $x_410$ and elements $_z708$ of $Eq$ of $Hterm$ and the sum of $x_410$ and $1$ to elements of $P$ of the sum of $x_410$ and $1$, $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom nat_inv_rect_CProp1 : forall Hterm : nat, forall P : ((_z707 : nat) -> Prop), forall _H1 : ((_z708 : Hterm = 0) -> P 0), forall _H2 : ((x_410 : nat) -> (_x_412 : (_z708 : Hterm = x_410) -> P x_410) -> (_z708 : Hterm = x_410 + 1) -> P (x_410 + 1)), P Hterm .", "predict": "Axiom nat_inv_rect_CProp1 : forall Hterm : nat, forall P : nat -> Prop, (forall x : Eq Hterm 0, P 0 (Hterm, x)) -> forall x : nat, forall x' : Eq Hterm x, P x (Hterm, x) -> forall x : nat, forall x' : Eq Hterm (x + 1), P (x + 1) (Hterm, x + 1) -> P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1033. Let $n \\in N$. Assume that $0$ is less than $n$. Then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "let_clause_1033 : n : Nat -> posn : Lt 0 n -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_1033 : n : Elem Nat -> Proof (Lt (nd 0) n) -> Proof (forall Nat (x2515 => forall Nat (x2516 => Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1075. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $bijf$ be an element of $bijn$ of $f$ and $n + 1$. Assume that $f (n + 1)= n + 1$. Let $i$ be a natural number. Assume that $i \\leq n$. Let $a \\in N$. Assume that $a \\leq n + 1$ and $f (a)= i$. Assume that $a \\leq n + 1$. Assume that $f (a)= i$. Then if $a = n + 1$, then $i = a$.\nassistant\n", "label": "Axiom let_clause_1075 : forall f : ((x__ : nat) -> nat), forall n : nat, forall bijf : bijn f (n + 1), forall fS : (f (n + 1) = n + 1), forall i : nat, forall lein : Leq i n, forall a : nat, forall _clearme : (Leq a (n + 1) /\\ f a = i), forall lean : Leq a (n + 1), forall fa : (f a = i), forall Hc : (a = n + 1), i = a .", "predict": "Axiom let_clause_1075 : forall f : nat -> nat, forall n : nat, (bijf : f n + 1) -> f (n + 1) = n + 1 -> forall i : nat, (Leq i n -> forall a : nat, (Leq a (n + 1) /\\ f a = i) /\\ Leq a (n + 1)) -> (a = n + 1 -> i = a) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1573. Let $n , m \\in N$. Assume that $0 < n$. Assume that $m$ is divisible by $n$. Let $d$ be a natural number. Assume that $0 = m$. Then if $n = m d$, then $n = m$.\nassistant\n", "label": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq n m", "predict": "postulate let_clause_1573 : (n : Nat) -> (m : Nat) -> and (Lt 0 n) (divisible m n) -> and (Eq 0 m) (if (Eq n (times m d)) (Eq n m))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1034. Let $n$ and $m$ and $q$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515$ is equal to the sum of $mod$ applied to $x2515$ and $x2516$ and the product of $x2516$ and the quotient of $x2515$ and $x2516$.\nassistant\n", "label": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (q : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (div x2515 x2516)))", "predict": "postulate let_clause_1034 : (n : Nat) -> (m : Nat) -> (q : Nat) -> 0 < n -> 0 < m -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (mod x2515 x2516) (times x2516 (quot x2515 x2516)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1572. Let $m , n \\in N$. Assume that $0$ is less than $n$. Assume that the greatest common divisor of $m$ and $n$ is equal to $0$. Then if $m$ is equal to $0$, then if $n$ is equal to $0$, then $m$ is equal to $0$.\nassistant\n", "label": "axiom let_clause_1572 (m n : Nat) (posn : 0 < n) (H : gcd m n = 0) (auto : m = 0) (auto' : n = 0) : m = 0", "predict": "axiom let_clause_1572 (m n : Nat) (x : 0 < n) (y : gcd m n = 0) : m = 0 → n = 0 → m = 0"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nP_ord_to_exp1. Let $p , n , q , r \\in N$. Assume that $1$ is less than $p$. Assume that $0$ is less than $n$. Assume that $p_ord$ applied to $n$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $q$ and $r$. Then $p$ is not divisible by $r$ and $n$ is equal to the product of the exponentiation of $p$ and $q$ and $r$.\nassistant\n", "label": "axiom p_ord_to_exp1 (p n q r : Nat) (x__ : 1 < p) (__1 : 0 < n) (__2 : p_ord n p = mk_Prod Nat Nat q r) : ¬ divisible p r ∧ n = pow p q * r", "predict": "axiom p_ord_to_exp1 (p n q r : Nat) (x : 1 < p ∧ 0 < n ∧ p_ord n p = mk_Prod Nat Nat q r) : p % r ≠ 0 ∧ n = pow p q * r"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nInvert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n , m \\in N$. Assume that $m \\leq n$. Let $__1$ be an element of $injn$ of $f$ and $n$. Then $invert_permut (n , f , f (m))= m$.\nassistant\n", "label": "postulate invert_permut_f : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : injn f n) -> Eq (invert_permut n f (f m)) m", "predict": "postulate invert_permut_f : (f : Nat -> Nat) -> n : Nat -> m : Nat -> Leq m n -> injn f n -> Eq (invert_permut (n , f , f m)) m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_10471. Let $n1 , n2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Let $f1$ and $f2$ be functions from natural numbers to elements of $B$. Let $_clearme$ be an element of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Let $h$ be a function from natural numbers to natural numbers. Let $_clearme0$ be an element of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. Let $k$ be a function from natural numbers to natural numbers. Assume that $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied", "label": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (", "predict": " to $k$ applied to $i$ and $sub_kk$ applied to $k$ and $i$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_kk$ applied to $k$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. Assume that $Eq$ holds for $f1$ applied to $k$ and $f2$ applied to $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $Eq$ applied to $k$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. postulate x : Eq (f1 n1) (f2 (h n1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nUpto. Let $A$ be a set. Let $_xxx$ be an element of $range$ of $A$. Then $Nat$.\nassistant\n", "label": "upto : A : Set -> _xxx : range A -> Nat .", "predict": "upTo : (A : Elem Set) -> Elem (range A) -> Proof (Nat) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1047. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n$ is less than or equal to $k$. Let $j$ be a natural number. Assume that $n$ is less than or equal to $j$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$. Let $Hfalse$ be a function from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity. Then for all natural numbers $x2571$ and $x2572$, $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.\nassistant\n", "label": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ((x__ : B) -> (__1 : B) -> B), forall f : ((x__ : nat) -> B), forall lenk : Leq n k, forall j : nat, forall leup : Leq n j, forall Hind : ((x__ : (i : nat) -> (x__ : Leq n i) -> (__1 : i < j) -> p i = false) -> bigop n (fun i => p i) B nil op (fun i => f i) = bigop j (fun i => p i) B nil op (fun i => f i)), forall Hfalse : ((i : nat) -> (x__ : Leq n i) -> (__1 : i < j + 1) -> p i = false), forall x2571 : nat, forall x2572 : nat, x2571 = x2572 * (x2571 / x2572) + mod x2571 x2572 .", "predict": "Axiom let_clause_1047 : forall k : nat, forall n : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : B -> B -> B, forall f : nat -> B, (n <= k -> forall j : nat, (n <= j -> forall Hind : (nat -> bool) -> Leq n j -> Lt j (n + 1) -> Eq (p i absurdity) -> Eq (bigop n (fun i => p i B nil op (f i)) (n + 1) (fun i => p i B nil op (f i))) -> forall Hfalse : (nat -> Leq n i -> Lt i (n + 1) -> Eq (p i absurdity)) -> forall x2571 : nat, forall x2572 : nat, x2571 = (x2572 * (x2571 / x2572) + mod x2571 x2572)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDivides_to_lt_O. Let $n , m \\in N$. Then if $0 < m$ and $n$ is divisible by $m$, then $0 < n$.\nassistant\n", "label": "axiom divides_to_lt_O (n m : Nat) (x__ : 0 < m) (__1 : divisible n m) : 0 < n", "predict": "axiom divides_to_lt_O (n m : Nat) : 0 < m ∧ divisors n m → 0 < n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_Conf3. Let $A$ and $B$ be sets. Let $succ$ be an element of $relation2$ of $A$ and $B$. Let $R$ be an element of $relation$ of $A$. Let $__$ be an element of $Conf3$ of $A$ and $B$ and $succ$ and $R$. Let $l \\in N$. Then $Conf3$ holds for $A$ and $B$ and $succ$ and $lstar$ applied to $A$ and $R$ and $l$.\nassistant\n", "label": "Axiom lstar_Conf3 : forall A : Set, forall B : Set, forall succ : relation2 A B, forall R : relation A, forall x__ : Conf3 A B succ R, forall l : nat, Conf3 A B succ (lstar A R l) .", "predict": "Axiom lstar_Conf3 : forall A : Set, forall B : Set, forall succ : relation2 A B, forall R : relation A, forall $__ : Conf3 A B succ R, forall l : nat, Conf3 A B succ (lstar A R l) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nTech_log. Let $p$ and $n$ be natural numbers. Assume that $1$ is less than $p$. Then if $0$ is less than $n$, then the logarithm of $p$ and $n$ is equal to $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the exponentiation of $p$ and $x$ and $n$.\nassistant\n", "label": "postulate tech_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Eq (log p n) (max (plus n 1) (\\ x : Nat -> leb (pow p x) n))", "predict": "postulate tech_log : (p : Nat) -> (n : Nat) -> Lt 1 p -> Lt 0 n -> Eq (log p n) (max (plus n 1) (map (\\ x -> leb (pow p x) n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16002. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.\nassistant\n", "label": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) -> Eq 1 (gcd n m) -> c : Nat -> ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> all Nat (\\ d -> if (or (and (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (Eq (minus (times m d) (times n c)) (gcd m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1561. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (x : 0 < p) -> (y : gcd p m == 1) -> (z : p % (m * n)) -> (c : Nat) -> (d : m * n == p * c) -> (a : Nat) -> (clearme0 : ex (Nat -> Dis (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> b : Nat -> (Eq (minus (times a p) (times b m)) (or (Eq (gcd p m) (minus (times b m) (times a p))) (Eq (gcd p m) (minus (times a p) (times b m))))) -> (Eq (minus (times a p) (times b m)) (gcd p m)) -> (Eq (minus (times p a) (times m b)) 1) -> Eq (minus (times p a) (times m b)) 1"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nRange_inv_rect_Type4. Let $x1$ be a set. Then for all elements $Hterm$ of $range$ of $x1$, for all functions $P$ from elements $_z1638$ of $range$ of $x1$ to elements of $Type4$, for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1639$ of $Eq$ of $Hterm$ and $mk_range (x1 , _enum , _upto , _filter)$ to elements of $P$ of $mk_range (x1 , _enum , _upto , _filter)$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate range_inv_rect_Type4 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1638 : range x1) -> Type4) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1639 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm", "predict": "postulate range_inv_rect_Type4 : (x1 : Set) -> all (range x1) (\\ Hterm -> all (P : (z1638 : range x1) -> Set) -> all (H1 : (enum : Nat -> x1) -> upto : Nat -> Filter : Nat -> Bool -> Eq Hterm (mk_range x1 enum upto Filter)) -> P (mk_range x1 enum upto Filter))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1561. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b = 1$.\nassistant\n", "label": "axiom let_clause_1561 (p m n : Nat) (posn : 0 < p) (gcd1 : gcd p m = 1) (_clearme : divisible p (m * n)) (c : Nat) (nm : m * n = p * c) (a : Nat) (_clearme0 : ex Nat (λ b => a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m)) (b : Nat) (_clearme1 : a * p - b * m = gcd p m ∨ b * m - a * p = gcd p m) (H : a * p - b * m = gcd p m) (H0 : a * p - b * m = 1) : p * a - m * b = 1", "predict": "axiom let_clause_1561 (p m n : Nat) (x : 0 < p) (y : 1 = gcd p m) (z : p % m * n = 0) (c : Nat) (w : m * n = p * c) (a : Nat) (ex : Nat → ex) (b : Nat) (x1 : y = gcd p m) (x2 : y = a * p - b * m ∨ y = b * m - a * p) : x1 → (x2 → (y = 1 → p * a - m * b = 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0 < n$ and $n \\leq m$. Assume that $n \\leq q + 1$ and $n$ is not divisible by $m$. Let $a \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))", "predict": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> Hind -> Eq (let m n in if (and (Lt 0 n) (Leq n m)) (if (and (Leq n (plus q 1)) (not (divisible n m))) (forall Nat (a => if (or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q m n)) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q m n))) (Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLt_mod_m_m. Let $n$ and $m$ be natural numbers. Then if $0 < m$, then $mod (n , m)< m$.\nassistant\n", "label": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt (mod n m) m", "predict": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> 0 < m -> mod n m < m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_to_le_min. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then for all natural numbers $b$, $min$ applied to $n$ and $b$ and $f$ is less than or equal to $min$ applied to $m$ and $b$ and $f$.\nassistant\n", "label": "le_to_le_min : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> __ : Leq n m -> b : Nat -> Leq (min n b f) (min m b f) .", "predict": "le_to_le_min : (f : Elem Nat -> Bool) -> Nat -> Nat -> Proof (if (Leq n m) (forall Nat (b => Leq (min n b) (f)) (min m b) (f))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLe_prim_log. Let $n$ and $b$ be natural numbers. Then if $1 < b$, then $\\log_ b {Psi (n)}\\leq prim (n)(\\log_ b {n}+ 1)$.\nassistant\n", "label": "Axiom le_prim_log : forall n : nat, forall b : nat, forall x__ : (1 < b), Leq (log b (Psi n)) (prim n * (log b n + 1)) .", "predict": "Axiom le_prim_log : forall n : nat, forall b : nat, (1 < b -> log b (Psi n) <= prim n (log b n + 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nDop_rect_CProp4_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_957$ of $Dop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Dop$ be a function from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$. Then for all elements $x_957$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_957$.\nassistant\n", "label": "Dop_rect_CProp4_body : A : Set -> _nil : A -> Q_ : (_x_957 : Dop A _nil -> Prop) -> _H_mk_Dop : (sum : ACop A _nil -> prod : (__ : A -> __1 : A -> A) -> _null : (a : A -> Eq (prod a _nil) _nil) -> _distr : (a : A -> b : A -> c : A -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> x_957 : Dop A _nil -> Q_ x_957 .", "predict": "dop_rect_CProp4_body : (A : Elem Set) -> (_nil : Elem A) -> (Q_ : (x_957 : Elem (Dop A)) -> Prop) -> (H_mk_Dop : (sum : Elem (ACop A)) -> _nil -> (prod : (a : Elem A) -> _1 : Elem A) -> Elem A -> (null : (a : Elem A) -> Eq (prod a _nil) (aop__o__op A _nil sum b c (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod null distr)) -> Proof (forall (x_957 : Elem (Dop A)) -> _nil, Q_ x_957) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_1561. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1", "predict": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (x : Eq (times m n) (times p c)) -> Eq (times p a) (times m b) -> Eq (times m n) (times p c) -> Eq (times p a) (times m b)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLt_to_le_to_lt. Let $n$ and $m$ and $p$ be natural numbers. Assume that $n$ is less than $m$. Then if $m$ is less than or equal to $p$, then $n$ is less than $p$.\nassistant\n", "label": "lt_to_le_to_lt : n : Nat -> m : Nat -> p : Nat -> __ : Lt n m -> __1 : Leq m p -> Lt n p .", "predict": "lt_to_le_to_lt : (n : Elem Nat) -> (m : Elem Nat) -> (p : Elem Nat) -> Proof (Lt n m) -> Proof (Leq m p) -> Proof (Lt n p) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTo_max. Let $i$ and $n$ and $m$ be natural numbers. Assume that $n \\leq i$. Assume that $m \\leq i$. Then $max (n , m)\\leq i$.\nassistant\n", "label": "Axiom to_max : forall i : nat, forall n : nat, forall m : nat, forall x__ : Leq n i, forall __1 : Leq m i, Leq (max n m) i .", "predict": "Axiom to_max : forall i : nat, forall n : nat, forall m : nat, (n <= i /\\ m <= i -> max n m <= i) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nFilter_div_mod_spec. Let $_n , _m , _q , _r \\in N$. Let $return_sort$ be an element of $Sort$. Let $return_type$ be a function from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_sort$. Let $return$ be a function from elements $z$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $return_type$ of $z$. Let $z$ be an element of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$. Then $return_type$ holds for $z$.\nassistant\n", "label": "postulate filter_div_mod_spec : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (return_sort : Sort) -> (return_type : (z : div_mod_spec _n _m _q _r) -> return_sort) -> (return : (z : div_mod_spec _n _m _q _r) -> return_type z) -> (z : div_mod_spec _n _m _q _r) -> return_type z", "predict": "postulate filter_div_mod_spec : (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> return_sort : Sort -> return : (z : div_mod_spec n m q r) -> return_type (return z)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLog_exp. Let $p$ and $n$ and $m$ be natural numbers. Assume that $1 < p$. Then if $0 < m$, then $\\log_ p {(p ^ n m)}= n + \\log_ p {m}$.\nassistant\n", "label": "axiom log_exp (p n m : Nat) (x__ : 1 < p) (__1 : 0 < m) : log p (pow p n * m) = n + log p m", "predict": "axiom log_exp (p n m : Nat) (x : 1 < p) (y : 0 < m) : log p (pow p n * m) = n + log p m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDiv_mod_spec_rect_Type0_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to sets, for all functions $_H_div_mod_spec_intro$ from elements $x_835$ of $Lt$ of $_r$ and $_m$ and elements $x_834$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_835$ and $x_834$, for all elements $x_833$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_833$.\nassistant\n", "label": "Axiom div_mod_spec_rect_Type0_body : forall _n : nat, forall _m : nat, forall _q : nat, forall _r : nat, forall Q_ : ((_x_833 : div_mod_spec _n _m _q _r) -> Set), forall _H_div_mod_spec_intro : ((x_835 : _r < _m) -> (x_834 : _n = _q * _m + _r) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)), forall x_833 : div_mod_spec _n _m _q _r, Q_ x_833 .", "predict": "Axiom div_mod_spec_rect_Type0_body : forall n : nat, forall m : nat, forall q : nat, forall r : nat, forall Q : div_mod_spec n m q r -> nat -> Prop, forall H_div_mod_spec_intro : Lt r m /\\ Eq n (q * m + r) /\\ forall x_835 : Lt r m, forall x_834 : Eq n (q * m + r), forall x_833 : div_mod_spec n m q r, Q (div_mod_spec_intro n m q r x_835 x_834) x_833 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_ind_body. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1337$ and elements $x_1336$ of $B$ and elements $x_1335$ of $B$ and elements $_x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$ to propositions. Let $_H_lstar_r_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_r_S$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1340$ of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $x_1339$ of $_R$ of $b$ and $b2$ and elements $_x_1342$ of $Q_$ of $l$ and $b1$ and $b$ and $x_1340$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $x_1340$ and $b2$ and $x_1339$. Let $x_1337$ be a natural number. Let $x_1336$ and $x_1335$ be elements of $B$. Then for all elements $x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$, $Q_$ holds for $x_1337$ and $x_1336$ and $x_1335$ and $x_1338$.\nassistant\n", "label": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : ((x_1337 : nat) -> (x_1336 : B) -> (x_1335 : B) -> (_x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Prop), forall _H_lstar_r_O : ((b : B) -> Q_ 0 b b (lstar_r_O B _R b)), forall _H_lstar_r_S : ((l : nat) -> (b1 : B) -> (b : B) -> (x_1340 : lstar_r B _R l b1 b) -> (b2 : B) -> (x_1339 : _R b b2) -> (_x_1342 : Q_ l b1 b x_1340) -> Q_ (l + 1) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)), forall x_1337 : nat, forall x_1336 : B, forall x_1335 : B, forall x_1338 : lstar_r B _R x_1337 x_1336 x_1335, Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : nat -> B -> B -> B -> lstar _R B -> _R -> B -> B -> Prop -> forall x_1337 : nat, forall x_1336, x_1335 : B, forall x_1338 : lstar _R B, Q_ x_1337 x_1336 x_1335 x_1338 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nPi_p_primeb5. For all natural numbers $n$, if $1$ is less than $n$, then $bigop$ applied to the sum of the product of $2$ and $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and the product of $2$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and the product of $2$ and the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$.\nassistant\n", "label": "pi_p_primeb5 : n : Nat -> __ : Lt (nd 1) n -> Eq (bigop (plus (times (nd 2) n) (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p (times (nd 2) n)) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (times (nd 2) (div n (pow p (plus i (nd 1)))))))) (bigop (plus n (nd 1)) (p : Nat => primeb p) Nat (nd 1) times (p : Nat => bigop (log p n) (i : Nat => true) Nat (nd 1) times (i : Nat => pow p (times (nd 2) (div n (pow p (plus i (nd 1)))))))) .", "predict": "pi_p_primeb5 : (n : Elem Nat) -> Proof (if (Lt (nd 1) n) (Eq (bigop (plus (times (nd 2) n) (nd 1)) (lambda (p) (bigop (times (primeb p) (nd 1)) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (nd 1)) (nd 1) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (lambda (i) (nd 1)) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (nd 1)) (Eq (bigop (plus n (nd 1)) (lambda (p) (bigop (times (primeb p) (nd 1)) (nd 1) (nd 2)) (nd 1)) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (lambda (i) (nd 1)) (nd 1) (times (nd 2) (nd 1)) (nd 1)) (nd 1)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nDop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1728$ of $Dop$ of $x1$ and $x2$ to sets. Let $_H1$ be a function from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1729$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "Axiom Dop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : ((_z1728 : Dop x1 x2) -> Set), forall _H1 : ((sum : ACop x1 x2) -> (prod : (x__ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> prod a x2 = x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> prod a (aop__o__op x1 x2 sum b c) = aop__o__op x1 x2 sum (prod a b) (prod a c)) -> (_z1729 : Hterm = mk_Dop x1 x2 sum prod _null _distr) -> P (mk_Dop x1 x2 sum prod _null _distr)), P Hterm .", "predict": "Axiom dop_inv_rect_Type0 : forall x1 : Set, forall x2 : x1, forall Hterm : Dop x1 x2, forall P : forall z1728 : Dop x1 x2 -> Set, exists H1 : forall sum : ACop x1 x2, forall prod : x1 -> __1 -> x1, forall null : forall a : x1 -> Eq (prod a x2) (x2), forall distr : forall a : x1 -> b : x1 -> c : x1 -> Eq (prod a (aop__o__op x1 x2 sum) b c) (aop__o__op x1 x2 sum) (prod a b) (prod a c) -> Eq Hterm (mk_Dop x1 x2 sum prod null distr) -> P (mk_Dop x1 x2 sum prod null distr), P Hterm ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNot_prime_times_2. Let $n \\in N$. Assume that $1$ is less than $n$. Then the product of $2$ and $n$ is not prime.\nassistant\n", "label": "axiom not_prime_times_2 (n : Nat) (x__ : 1 < n) : ¬ prime (2 * n)", "predict": "axiom not_prime_times_2 (n : Nat) (x : 1 < n) : 2 * n ≠ prime"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_ind. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.\nassistant\n", "label": "postulate Dop_ind : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943", "predict": "postulate dop_ind : (A : Set) -> _nil : A -> (Q_ : Dop A _nil -> Prop) -> all (forall (H : ACop A _nil -> Prod (A _) (Eq (Prod _ _ _ _ _))) -> all (forall (x : Dop A _nil) -> Q_ x))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nSigma_p_dividesb. Let $m , n , p \\in N$. Then if $0 < n$ and $p$ is prime, then if $p$ is not divisible by $n$, then $bigop$ applied to $m$ and the function that maps $i$ to $dividesb$ applied to the exponentiation of $p$ and the sum of $i$ and $1$ and the product of the exponentiation of $p$ and $m$ and $n$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $1$ is equal to $m$.\nassistant\n", "label": "axiom sigma_p_dividesb (m n p : Nat) (x__ : 0 < n) (__1 : prime p) (__2 : ¬ divisible p n) : m = bigop m (λ i => dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (λ i => 1)", "predict": "axiom sigma_p_dividesb (m n p : Nat) (x : 0 < n ∧ p.prime ∧ ¬divisible p n) : bigop m (λ i, dividesb (pow p (i + 1)) (pow p m * n)) Nat 0 plus (λ i, 1) = m"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nBigop_op. Let $k \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Then for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f$ and $g$ from natural numbers to elements of $B$, $aop__o__op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $aop__o__op$ applied to $B$ and $nil$ and $op$ and $f$ applied to $i$ and $g$ applied to $i$.\nassistant\n", "label": "Axiom bigop_op : forall k : nat, forall p : ((x__ : nat) -> bool), forall B : Set, forall nil : B, forall op : ACop B nil, forall f : ((x__ : nat) -> B), forall g : ((x__ : nat) -> B), aop__o__op B nil op (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => f i)) (bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => g i)) = bigop k (fun i => p i) B nil (aop__o__op B nil op) (fun i => aop__o__op B nil op (f i) (g i)) .", "predict": "Axiom bigop_op : forall k : nat, forall p : nat -> bool, forall B : Set, forall nil : B, forall op : ACop B nil, forall f : nat -> B, forall g : nat -> B, (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil -> op) -> (B -> nil ->"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_10331. Let $n$ be a natural number. Assume that $5$ is less than $n$. Let $m \\in N$. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Assume that $6$ is less than or equal to $a$. Assume that the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.\nassistant\n", "label": "axiom let_clause_10331 (n : Nat) (lt4n : 5 < n) (m : Nat) (le4m : 6 ≤ m) (Hind : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (lea : 6 ≤ a) (Hinda : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * (x2515 / x2516) + mod x2515 x2516", "predict": "axiom let_clause_10331 (n : Nat) (x : 5 < n) (m : Nat) (y : 6 ≤ m) (z : pow (m + 1) 2 ≤ pow 2 m) (a : Nat) (w : 6 ≤ a) (v : 2 * (a + 1) + 1 ≤ pow 2 a) (x2515 x2516 : Nat) : x2515 = x2516 * div x2515 x2516 + mod x2515 x2516"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$ and $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b \\in N$. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$. Let $injf$ be an element of $injn$ of $f$ and $n$. Then if $a = b$, then $f (a)= j$.\nassistant\n", "label": "axiom let_clause_1063 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = j", "predict": "axiom let_clause_1063 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n ∧ j ≤ n) (a : Nat) (x' : a ≤ n ∧ f a = i ∧ a ≤ n) (x'' : f a = i) (b : Nat) (x''' : b ≤ n ∧ f b = j ∧ b ≤ n) (x'''' : f b = j) (g : Nat → Nat → Leq → Nat → Leq) (injf : Injn f n) : a = b → f a = j"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nExp_2. Let $n \\in N$. Then the exponentiation of $n$ and $2$ is equal to the product of $n$ and $n$.\nassistant\n", "label": "postulate exp_2 : (n : Nat) -> Eq (pow n 2) (times n n)", "predict": "postulate exp_2 : (n : Nat) -> pow n 2 == times n n"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLstar_dx. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $l$ be a natural number. Let $b1$ and $b$ be elements of $B$. Let $__$ be an element of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$. Let $b2$ be an element of $B$. Then for all elements $__1$ of $R$ of $b$ and $b2$, $lstar$ holds for $B$ and $R$ and $l + 1$ and $b1$ and $b2$.\nassistant\n", "label": "lstar_dx : B : Set -> R : relation B -> l : Nat -> b1 : B -> b : B -> __ : lstar B R l b1 b -> b2 : B -> __1 : R b b2 -> lstar B R (plus l (nd 1)) b1 b2 .", "predict": "lstar_dx : (B : Elem Set) -> (R : Elem (Relation B)) -> (l : Elem Nat) -> (b1 : Elem B) -> (b : Elem B) -> (x : Elem (lstar B R l b1 b)) -> (b2 : Elem B) -> Proof (forall (x1 : Elem (R b b2)) => lstar (B R (plus l 1) b1 b2)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nACop_rect_Type0_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_901$ of $ACop$ of $A$ and $_nil$ to sets. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$. Let $x_901$ be an element of $ACop$ of $A$ and $_nil$. Then $Q_$ holds for $x_901$.\nassistant\n", "label": "ACop_rect_Type0_body : A : Set -> _nil : A -> Q_ : (_x_901 : ACop A _nil -> Set) -> _H_mk_ACop : (aop : Aop A _nil -> _comm : (a : A -> b : A -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> x_901 : ACop A _nil -> Q_ x_901 .", "predict": "ACop_rect_Type0_body : (A : Elem Set) -> (_nil : Elem A) -> (Q_ : (x_901 : Elem (ACop A)) -> Elem (Set)) -> (H_mk_ACop : (aop : Elem (Aop A)) -> _nil -> (comm : (a : Elem A) -> (b : Elem A) -> Elem (Eq (op A) _nil)) -> mk_ACop A _nil aop a b (op A) _nil aop b a -> Elem (Q_ (mk_ACop A _nil aop))) -> (x_901 : Elem (ACop A) (A) _nil) -> Proof (Q_ x_901) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLstar_r_ind_body. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1337$ and elements $x_1336$ of $B$ and elements $x_1335$ of $B$ and elements $_x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$ to propositions. Let $_H_lstar_r_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_r_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_r_S$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1340$ of $lstar_r$ of $B$ and $_R$ and $l$ and $b1$ and $b$ and elements $b2$ of $B$ and elements $x_1339$ of $_R$ of $b$ and $b2$ and elements $_x_1342$ of $Q_$ of $l$ and $b1$ and $b$ and $x_1340$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_r_S$ applied to $B$ and $_R$ and $l$ and $b1$ and $b$ and $x_1340$ and $b2$ and $x_1339$. Let $x_1337$ be a natural number. Then for all elements $x_1336$ and $x_1335$ of $B$, for all elements $x_1338$ of $lstar_r$ of $B$ and $_R$ and $x_1337$ and $x_1336$ and $x_1335$, $Q_$ holds for $x_1337$ and $x_1336$ and $x_1335$ and $x_1338$.\nassistant\n", "label": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : ((x_1337 : nat) -> (x_1336 : B) -> (x_1335 : B) -> (_x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Prop), forall _H_lstar_r_O : ((b : B) -> Q_ 0 b b (lstar_r_O B _R b)), forall _H_lstar_r_S : ((l : nat) -> (b1 : B) -> (b : B) -> (x_1340 : lstar_r B _R l b1 b) -> (b2 : B) -> (x_1339 : _R b b2) -> (_x_1342 : Q_ l b1 b x_1340) -> Q_ (l + 1) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)), forall x_1337 : nat, forall x_1336 : B, forall x_1335 : B, forall x_1338 : lstar_r B _R x_1337 x_1336 x_1335, Q_ x_1337 x_1336 x_1335 x_1338 .", "predict": "Axiom lstar_r_ind_body : forall B : Set, forall _R : relation B, forall Q_ : nat -> B -> B -> B -> lstar _R B -> _R -> B -> B -> B -> Prop, forall H_lstar_r_O : B -> Q_ 0 B B (lstar _R B) _R B B, forall H_lstar_r_S : nat -> B -> B -> lstar _R B -> _R -> nat -> B -> B -> B -> Prop -> B -> Prop, forall x_1337 : nat, forall x_1336 : B, forall x_1335 : B, forall x_1338 : lstar _R B, Q_ x_1337 x_1336 x_1335 x_1338 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLe_fact_10. The factorial of the product of $2$ and $5$ is less than or equal to the product of the product of the exponentiation of $2$ and the difference of the product of $2$ and $5$ and $2$ and the factorial of $5$ and the factorial of $5$.\nassistant\n", "label": "postulate le_fact_10 : Leq (factorial (times 2 5)) (times (times (pow 2 (minus (times 2 5) 2)) (factorial 5)) (factorial 5))", "predict": "postulate le_fact_10 : (2 * 5) ! <= (2 ^ (2 * 5 - 2)) * (5 !) * (5 !)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1544. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Then if $n$ is not divisible by $m$, then for all natural numbers $a$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.\nassistant\n", "label": "axiom let_clause_1544 (p q : Nat) (Hind : (m : Nat) -> (n : Nat) -> (x__ : 0 < n) -> (__1 : n ≤ m) -> (__2 : n ≤ q) -> ex Nat (λ a => ex Nat (λ b => a * n - b * m = gcd_aux q m n ∨ b * m - a * n = gcd_aux q m n))) (m n : Nat) (posn : 0 < n) (lenm : n ≤ m) (lenS : n ≤ q + 1) (ndivnm : ¬ divisible n m) (a : Nat) (_clearme : ex Nat (λ b => a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n))) (b : Nat) (_clearme0 : a * mod m n - b * n = gcd_aux q n (mod m n) ∨ b * n - a * mod m n = gcd_aux q n (mod m n)) (H : a * mod m n - b * n = gcd_aux q n (mod m n)) : a * mod m n - n * b = gcd_aux q n (mod m n)", "predict": "axiom let_clause_1544 (p q : Nat) (Hind : ∀ m : Nat, ∀ n : Nat, 0 ≤ n ∧ n ≤ m ∧ n ≤ q + 1 → ¬ (n % m) → ∀ a : Nat, ∀ _clearme : ex Nat, ∀ b : Nat, (Eq (a * n - b * m) (gcd_aux q m n)) ∨ (Eq (b * n - a * (mod m n)) (gcd_aux q m n)) → Eq (a * (mod m n) - n * b) (gcd_aux q n (mod m n)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_15611. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Then for all natural numbers $c$, if the product of $m$ and $n$ is equal to the product of $p$ and $c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the difference of the product of $m$ and $b$ and the product of $p$ and $a$ is equal to $1$.\nassistant\n", "label": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1", "predict": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (0 < p) -> (gcd p m == 1) -> (p % (m * n)) -> all Nat (\\ c -> if (Eq (m * n) (p * c)) (all Nat (\\ a -> all (ex : Nat) -> if (Eq (gcd p m) (or (Eq (diff (a * p) (b * m)) (gcd p m)) (Eq (diff (b * m) (a * p)) (gcd p m))) (all Nat (\\ b -> if (Eq (diff (a * p) (b * m)) (gcd p m)) (if (Eq (diff (b * m) (a * p)) (gcd p m)) (if (Eq (diff (b * m) (a * p)) 1) (Eq (diff (m * b) (p * a)) 1))))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nAntisymmetric_divides. Let $n$ and $m$ be natural numbers. Assume that $n$ is divisible by $m$. Then if $m$ is divisible by $n$, then $n = m$.\nassistant\n", "label": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, forall x__ : divisible n m, forall __1 : divisible m n, n = m .", "predict": "Axiom antisymmetric_divides : forall n : nat, forall m : nat, (n | m -> m | n -> n = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nEq_transpose. Let $i , j , k , n \\in N$. Assume that $j$ is not equal to $i$. Assume that $i$ is not equal to $k$. Then if $j$ is not equal to $k$, then $transpose$ applied to $i$ and $j$ and $n$ is equal to $transpose$ applied to $i$ and $k$ and $transpose$ applied to $k$ and $j$ and $transpose$ applied to $i$ and $k$ and $n$.\nassistant\n", "label": "eq_transpose : i : Nat -> j : Nat -> k : Nat -> n : Nat -> __ : not (Eq j i) -> __1 : not (Eq i k) -> __2 : not (Eq j k) -> Eq (transpose i j n) (transpose i k (transpose k j (transpose i k n))) .", "predict": "eq_transpose : (i : Elem Nat) -> (j : Elem Nat) -> (k : Elem Nat) -> (n : Elem Nat) -> Proof (and (Neq j i) (Neq i k)) -> Proof (if (Neq j k) (Eq (transpose i j n) (transpose i k (transpose k j (transpose i k n))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nTimes_n_O. Let $n$ be a natural number. Then $0 = n 0$.\nassistant\n", "label": "Axiom times_n_O : forall n : nat, 0 = n * 0 .", "predict": "Axiom times_n_O : forall n : nat, 0 = n * 0 ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nChecker_abl. Let $a$ and $b$ be natural numbers. Let $l$ be a list of natural numbers. Assume that $checker (cons (Nat , a , cons (Nat , b , l)))= true$. Then $a < b$, $b \\leq 2 a$ and $checker (cons (Nat , b , l))= true$.\nassistant\n", "label": "postulate checker_abl : (a : Nat) -> (b : Nat) -> (l : list Nat) -> (_ : Eq (checker (cons Nat a (cons Nat b l))) true) -> and (and (Lt a b) (Leq b (times 2 a))) (Eq (checker (cons Nat b l)) true)", "predict": "postulate checker_abl : (a : Nat) -> (b : Nat) -> List Nat -> Eq (checker (cons (Nat , a , cons (Nat , b , l))) true) -> and (Lt a b) (Leq b (times 2 a)) (Eq (checker (cons (Nat , b , l))) true)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nPermut_n_to_eq_n. Let $h$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $__$ of $permut$ of $h$ and $n$, for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Lt$ of $m$ and $n$ to elements of $Eq$ of $h (m)$ and $m$, $h (n)= n$.\nassistant\n", "label": "postulate permut_n_to_eq_n : (h : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut h n) -> (__1 : (m : Nat) -> (__1 : Lt m n) -> Eq (h m) m) -> Eq (h n) n", "predict": "postulate permut_n_to_eq_n : (h : Nat -> Nat) -> n : Nat -> all (permut h n) (all (Eq h) n)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_1607. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "let_clause_1607 : m : Nat -> n : Nat -> a : Nat -> b : Nat -> posn : Lt 0 n -> posm : Lt 0 m -> pnm : Eq (gcd n m) (nd 1) -> c : Nat -> _clearme : ex Nat (d : Nat => or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1))) -> d : Nat -> _clearme0 : or (Eq (minus (times c n) (times d m)) (nd 1)) (Eq (minus (times d m) (times c n)) (nd 1)) -> H : Eq (minus (times d m) (times c n)) (nd 1) -> Eq (gcd m n) (minus (times m d) (times n c)) .", "predict": "let_clause_1607 : m : Elem Nat -> n : Elem Nat -> a : Elem Nat -> b : Elem Nat -> Proof (Lt Nat 0 n) -> Proof (Lt Nat 0 m) -> Proof (Eq Nat (Gcd n m) 1) -> c : Elem Nat -> Proof (ex Nat (Nat => Disj (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> d : Elem Nat -> Proof (if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (Gcd m n) (minus (times m d) (times n c)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nACop_rect_Type2_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_897$ of $ACop$ of $A$ and $_nil$ to elements of $Type2$. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$. Then for all elements $x_897$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_897$.\nassistant\n", "label": "postulate ACop_rect_Type2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_897 : ACop A _nil) -> Type2) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_897 : ACop A _nil) -> Q_ x_897", "predict": "postulate cop_rect_Type2_body : (A : Set) -> _nil : A -> (Q_ : (x : ACop A) -> _nil -> Type2) -> (aop : Aop A) -> _nil -> (comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Eq (Q_ (mk_ACop A _nil aop comm) x) (Q_ x _nil)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_times. For all natural numbers $n1$ and $n2$ and $m1$ and $m2$, if $n1 \\leq n2$ and $m1 \\leq m2$, then $n1 m1 \\leq n2 m2$.\nassistant\n", "label": "axiom le_times (n1 n2 m1 m2 : Nat) (x__ : n1 ≤ n2) (__1 : m1 ≤ m2) : n1 * m1 ≤ n2 * m2", "predict": "axiom le_times (n1 n2 m1 m2 : Nat) (x : n1 ≤ n2 ∧ m1 ≤ m2) : n1 * m1 ≤ n2 * m2"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nStart_lop. For all natural numbers $n$, if $1 \\leq n$, then $option_hd (Nat , list_of_primes (n))= Some (Nat , 2)$.\nassistant\n", "label": "axiom start_lop (n : Nat) (x__ : 1 ≤ n) : option_hd Nat (list_of_primes n) = Some Nat 2", "predict": "axiom start_lop (n : Nat) (x : 1 ≤ n) : option_hd (Nat, list_of_primes n) = some (Nat, 2)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nDop_inv_rect_Type2. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Then for all functions $P$ from elements $_z1716$ of $Dop$ of $x1$ and $x2$ to elements of $Type2$, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1717$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.\nassistant\n", "label": "postulate Dop_inv_rect_Type2 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1716 : Dop x1 x2) -> Type2) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1717 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm", "predict": "postulate dop_inv_rect_Type2 : (x1 : Set) -> x2 : x1 -> Hterm : Dop x1 x2 -> all (P : Dop x1 x2 -> Type2) (all (x : ACop x1 x2) -> all (prod : x1 -> x1 -> x1) -> all (a : x1) -> all (b : x1) -> all (c : x1) -> all (eq : Eq (prod a (xop x1 x2 x) (prod (a , b)) (prod (a , c))) (xop x1 x2 x (aop x1 x2 x) (sum x (prod (a , b)) (sum x (prod (a , c))))) -> all (eq : Eq Hterm (mk_Dop x1 x2 x (prod (a , b)) (null a) (distr b c))) -> P (mk_Dop x1 x2 x (prod (a , b)) (null a) (distr b c)))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10131. Let $f$ be a function from natural numbers to booleans. Let $n , m , n0 \\in N$. Assume that $max (n0 + 1 , f)= m$. Assume that absurdity is equal to $f (m)$. Let $i$ and $j$ be natural numbers. Assume that $j + 1 < n0 + 1$. Let $x7$ be a natural number. Then $x7 = m + x7$.\nassistant\n", "label": "let_clause_10131 : f : (__ : Nat -> bool) -> n : Nat -> m : Nat -> n0 : Nat -> eqm : Eq (max (plus n0 (nd 1)) f) m -> fm : Eq (f m) false -> i : Nat -> j : Nat -> ltj : Lt (plus j (nd 1)) (plus n0 (nd 1)) -> x7 : Nat -> Eq x7 (plus m x7) .", "predict": "let_clause_10131 : f : Elem (Nat -> Bool) -> n : Elem Nat -> m : Elem Nat -> n0 : Elem Nat -> Proof (Eq (max (plus n0 (nd 1)) (f)) m) -> Proof (Eq (nd 0) (f m)) -> i : Elem Nat -> j : Elem Nat -> Proof (Lt (plus j (nd 1)) (plus n0 (nd 1))) -> x7 : Elem Nat -> Proof (Eq x7 (plus m x7)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nDiv_mod_spec_inv_rect_CProp3. Let $x1 , x2 , x3 , x4 \\in N$. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Let $P$ be a function from elements $_z1476$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions. Let $_H1$ be a function from elements $x_847$ of $Lt$ of $x4$ and $x2$ and elements $x_846$ of $Eq$ of $x1$ and $x3 x2 + x4$ and elements $_z1477$ of $Eq$ of $Hterm$ and $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$ to elements of $P$ of $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$. Then $P$ holds for $Hterm$.\nassistant\n", "label": "axiom div_mod_spec_inv_rect_CProp3 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : (_z1476 : div_mod_spec x1 x2 x3 x4) -> Prop) (_H1 : (x_847 : x4 < x2) -> (x_846 : x1 = x3 * x2 + x4) -> (_z1477 : Hterm = div_mod_spec_intro x1 x2 x3 x4 x_847 x_846) -> P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846)) : P Hterm", "predict": "axiom div_mod_spec_inv_rect_CProp3 (x1 x2 x3 x4 : Nat) (Hterm : div_mod_spec x1 x2 x3 x4) (P : ∀ z : div_mod_spec x1 x2 x3 x4, Prop) (H1 : ∀ x847 : Lt x4 x2, ∀ x846 : Eq x1 (x3 * x2 + x4), ∀ z1477 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x847 x846), P (div_mod_spec_intro x1 x2 x3 x4 x847 x846)) : P Hterm"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nNat_rect_CProp3. Let $Q_$ be a function from natural numbers $_x_401$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_402$ and elements $_x_404$ of $Q_$ of $x_402$ to elements of $Q_$ of $x_402 + 1$. Then for all natural numbers $x_401$, $Q_$ holds for $x_401$.\nassistant\n", "label": "axiom nat_rect_CProp3 (Q_ : (_x_401 : Nat) -> Prop) (_H_O : Q_ 0) (_H_S : (x_402 : Nat) -> (_x_404 : Q_ x_402) -> Q_ (x_402 + 1)) (x_401 : Nat) : Q_ x_401", "predict": "axiom nat_rect_CProp3 (Q : Nat → Prop) (H_O : Q 0) (H_S : ∀ x : Nat, ∀ x_404 : Q x, Q (x + 1)) : ∀ x : Nat, Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nRange_rect_CProp2. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_935$ of $range$ of $_A$ to propositions. Let $_H_mk_range$ be a function from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range (_A , _enum , _upto , _filter)$. Then for all elements $x_935$ of $range$ of $_A$, $Q_$ holds for $x_935$.\nassistant\n", "label": "range_rect_CProp2 : _A : Set -> Q_ : (_x_935 : range _A -> Prop) -> _H_mk_range : (_enum : (__ : Nat -> _A) -> _upto : Nat -> _filter : (__ : Nat -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> x_935 : range _A -> Q_ x_935 .", "predict": "range_rect_CProp2 : (A : Elem Set) -> (Q : x : Elem (range A) -> Prop) -> (H : (enum : Elem (Nat -> Elem A)) -> upto : Elem Nat -> (filter : Elem (Nat -> Bool)) -> Prop) -> Proof (forall (x : Elem (range A)) (Q x)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nLet_clause_16004. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.\nassistant\n", "label": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))", "predict": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> and (Lt 0 n) (Lt 0 m) (Eq (gcd n m) 1) -> (c : Nat) -> (clearme : ex (Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> if (or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) (if (Eq (minus (times d m) (times c n)) 1) (Eq (gcd m n) (minus (times m d) (times n c))))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1553. Let $n$ and $n0$ be natural numbers. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$. Let $a \\in N$. Assume that $n0$ is equal to the product of $2$ and $a$ or $n0$ is equal to the sum of the product of $2$ and $a$ and $1$. Then if $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then $n0$ is equal to the sum of $a$ and the sum of $a$ and $1$.\nassistant\n", "label": "Axiom let_clause_1553 : forall n : nat, forall n0 : nat, forall _clearme : ex nat (fun a => n0 = 2 * a \\/ n0 = 2 * a + 1), forall a : nat, forall _clearme0 : (n0 = 2 * a \\/ n0 = 2 * a + 1), forall Hn : (n0 = 2 * a + 1), n0 = a + (a + 1) .", "predict": "Axiom let_clause_1553 : forall n : nat, forall n0 : nat, forall clearme : ex -> nat, (forall a : nat, Eq n0 (2 * a) \\/ Eq n0 (2 * a + 1)) -> (Eq n0 (2 * a + 1) -> Eq n0 (a + (a + 1))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLprim_invariant. Let $n , i \\in N$. Let $acc$ be a list of natural numbers. Then if $1$ is less than $i$, then for all elements $__1$ of $primes_below$ of $acc$ and $i$, $primes_below$ holds for $lprim$ applied to $n$ and $i$ and $acc$ and the sum of $n$ and $i$.\nassistant\n", "label": "lprim_invariant : n : Nat -> i : Nat -> acc : list Nat -> __ : Lt (nd 1) i -> __1 : primes_below acc i -> primes_below (lprim n i acc) (plus n i) .", "predict": "lprim_invariant : (n : Elem Nat) -> (i : Elem Nat) -> acc : List Nat -> Proof (if (Lt (nd 1) i) (forall (x : Elem (primes_below (nd 0) acc)) (and (primes_below (nd 0) (lprim n i acc)) (Eq (plus n i) x)))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_case. Let $n$ be a natural number. Let $P$ be a function from natural numbers to propositions. Let $__$ be a function from elements of $Eq$ of $n$ and $0$ to elements of $P$ of $0$. Then for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Eq$ of $n$ and the sum of $m$ and $1$ to elements of $P$ of the sum of $m$ and $1$, $P$ holds for $n$.\nassistant\n", "label": "postulate nat_case : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (_ : Eq n 0) -> P 0) -> (__1 : (m : Nat) -> (__1 : Eq n (plus m 1)) -> P (plus m 1)) -> P n", "predict": "postulate nat_case : (n : Nat) -> (P : Nat -> Prop) -> ($$ : Eq n 0 -> P 0) -> all Nat (\\ m -> all (Eq n (plus m 1)) -> P (plus m 1))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nAop_inv_rect_CProp1. Let $x1$ be a set. Let $x2$ be an element of $x1$. Then for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1554$ of $Aop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1555$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.\nassistant\n", "label": "Aop_inv_rect_CProp1 : x1 : Set -> x2 : x1 -> Hterm : Aop x1 x2 -> P : (_z1554 : Aop x1 x2 -> Prop) -> _H1 : (op : (__ : x1 -> __1 : x1 -> x1) -> _nill : (a : x1 -> Eq (op x2 a) a) -> _nilr : (a : x1 -> Eq (op a x2) a) -> _assoc : (a : x1 -> b : x1 -> c : x1 -> Eq (op a (op b c)) (op (op a b) c)) -> _z1555 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm .", "predict": "aop_inv_rect_CProp1 : (x1 : Elem Set) -> (x2 : Elem x1) -> Proof (forall (Hterm : Elem (Aop x1 x2)) -> forall (P : (op : Elem (Aop x1 x2)) -> Prop) -> forall (op : (z1554 : Elem x1) -> Elem x1) -> forall (nill : (a : Elem x1) -> Eq a x2) -> forall (nilr : (a : Elem x1) -> Eq a x2) -> forall (assoc : (a : Elem x1) -> (b : Elem x1) -> (c : Elem x1) -> Eq (op a) (op (op b c))) -> Proof (forall (z1555 : Eq Hterm (mk_Aop x1 x2 op nill nilr assoc)) -> P (mk_Aop x1 x2 op nill nilr assoc))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nF_invert_permut. Let $f$ be a function from natural numbers to natural numbers. Let $n$ and $m$ be natural numbers. Assume that $m$ is less than or equal to $n$. Let $__1$ be an element of $permut$ of $f$ and $n$. Then $f$ applied to $invert_permut$ applied to $n$ and $f$ and $m$ is equal to $m$.\nassistant\n", "label": "Axiom f_invert_permut : forall f : ((x__ : nat) -> nat), forall n : nat, forall m : nat, forall x__ : Leq m n, forall __1 : permut f n, f (invert_permut n f m) = m .", "predict": "Axiom f_invert_permut : forall f : nat -> nat, forall n : nat, forall m : nat, (m <= n -> exists p : permut f n, f (invert_permut n f m) = m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLe_sigma. Let $n \\in N$. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all functions $g1$ and $g2$ from natural numbers to natural numbers, for all functions $__$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n$ and elements $__1$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Eq$ of $p2$ applied to $i$ and $true$, for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Lt$ of $i$ and $n$ and elements $__2$ of $Eq$ of $p1$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$, $bigop$ applied to $n$ and the function that maps $i$ to $p1$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g1$ applied to $i$ is less than or equal to $bigop$ applied to $n$ and the function that maps $i$ to $p2$ applied to $i$ and $Nat$ and $0$ and $plus$ and the function that maps $i$ to $g2$ applied to $i$.\nassistant\n", "label": "axiom le_sigma (n : Nat) (p1 p2 : (x__ : Nat) -> bool) (g1 g2 : (x__ : Nat) -> Nat) (x__ : (i : Nat) -> (x__ : i < n) -> (__1 : p1 i = true) -> p2 i = true) (__1 : (i : Nat) -> (__1 : i < n) -> (__2 : p1 i = true) -> g1 i ≤ g2 i) : bigop n (λ i => p1 i) Nat 0 plus (λ i => g1 i) ≤ bigop n (λ i => p2 i) Nat 0 plus (λ i => g2 i)", "predict": "axiom le_sigma (n : Nat) : ∀ p1 : Nat → Bool, ∀ p2 : Nat → Bool, ∀ g1 : Nat → Nat, ∀ g2 : Nat → Nat, ∀ l : Lt n, ∀ eq : Eq p1 l true → Eq p2 l true, ∀ l : Lt n, ∀ eq : Eq p1 l true → Leq (bigop n (λ i, p1 i) Nat 0 plus (λ i, g1 i)) (bigop n (λ i, p2 i) Nat 0 plus (λ i, g2 i))"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nMin_spec_ind_body. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and $_n + _b$ and elements $x_1078$ of $Eq$ of $_f (m)$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec (_n , _b , _f , m , x_1080 , x_1079 , x_1078 , x_1077)$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n + _b$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $_n + _b$ and $not_found_min_spec (_n , _b , _f , x_1081)$. Let $x_1075 \\in N$. Then for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.\nassistant\n", "label": "min_spec_ind_body : _n : Nat -> _b : Nat -> _f : (__ : Nat -> bool) -> Q_ : (x_1075 : Nat -> _x_1076 : min_spec _n _b _f x_1075 -> Prop) -> _H_found_min_spec : (m : Nat -> x_1080 : Leq _b m -> x_1079 : Lt m (plus _n _b) -> x_1078 : Eq (_f m) true -> x_1077 : (i : Nat -> __ : Leq _b i -> __1 : Lt i m -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> _H_not_found_min_spec : (x_1081 : (i : Nat -> __ : Leq _b i -> __1 : Lt i (plus _n _b) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> x_1075 : Nat -> x_1076 : min_spec _n _b _f x_1075 -> Q_ x_1075 x_1076 .", "predict": "min_spec_ind_body : n : Elem Nat -> b : Elem Nat -> f : Nat -> Prop -> Q : (x : Elem (min_spec n b), x : Elem (min_spec n b) -> Prop) -> H_found_min_spec : (m : Elem Nat, x : Elem (Leq b m), x : Elem (Lt m n + b), x : Elem (Eq (f m) true), x : (i : Elem Nat) -> (x : Elem (Leq b i), x : Elem (Lt i m)) -> Eq (f i) absurdity) -> H_not_found_min_spec : (x : (i : Elem Nat) -> (x : Elem (Leq b i), x : Elem (Lt i (n + b)))) -> Prop -> x : Elem Nat -> Proof (forall (x : Elem (min_spec n b) -> Eq (Q x) (min_spec n b))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Agda.\nNat_rect_Type2_body. Let $Q_$ be a function from natural numbers $_x_381$ to elements of $Type2$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_382$ and elements $_x_384$ of $Q_$ of $x_382$ to elements of $Q_$ of the sum of $x_382$ and $1$. Let $x_381$ be a natural number. Then $Q_$ holds for $x_381$.\nassistant\n", "label": "postulate nat_rect_Type2_body : (Q_ : (_x_381 : Nat) -> Type2) -> (_H_O : Q_ 0) -> (_H_S : (x_382 : Nat) -> (_x_384 : Q_ x_382) -> Q_ (plus x_382 1)) -> (x_381 : Nat) -> Q_ x_381", "predict": "postulate nat_rect_Type2_body : (Q : Nat -> Type2) -> Q 0 -> (x : Nat) -> (x' : Q x) -> Q x"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Coq.\nLet_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Then for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.\nassistant\n", "label": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, forall posn : (0 < p), forall gcd1 : (gcd p m = 1), forall _clearme : divisible p (m * n), forall c : nat, forall nm : (m * n = p * c), forall a : nat, forall _clearme0 : ex nat (fun b => a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall b : nat, forall _clearme1 : (a * p - b * m = gcd p m \\/ b * m - a * p = gcd p m), forall H : (a * p - b * m = gcd p m), forall H0 : (a * p - b * m = 1), gcd p m = p * a - m * b .", "predict": "Axiom let_clause_1617 : forall p : nat, forall m : nat, forall n : nat, (0 < p /\\ gcd p m = 1 /\\ p mod (m * n) = 0) -> forall c : nat, (m * n = p * c) -> forall a : nat, forall ex : list nat, forall f : nat -> Prop, forall b : nat, (forall x : ex, f (b - p * x) /\\ f (b - m * x)) -> forall x : ex, (gcd p m = a * p - b * m \\/ gcd p m = b * m - a * p /\\ gcd p m = a * p - b * m) -> (a * p - b * m = 1 -> p * a - m * b = gcd p m) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLe_plus_to_le. Let $a , n , m \\in N$. Then if $a + n \\leq a + m$, then $n \\leq m$.\nassistant\n", "label": "le_plus_to_le : a : Nat -> n : Nat -> m : Nat -> __ : Leq (plus a n) (plus a m) -> Leq n m .", "predict": "le_plus_to_le : (a : Elem Nat) -> (n : Elem Nat) -> (m : Elem Nat) -> Proof (if (Leq (plus a n) (plus a m)) (Leq n m)) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Lean.\nLet_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a$ be a natural number. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.\nassistant\n", "label": "axiom let_clause_1068 (f : (x__ : Nat) -> Nat) (n : Nat) (permf : permut f n) (i j : Nat) (lein : i ≤ n) (lejn : j ≤ n) (a : Nat) (_clearme : a ≤ n ∧ f a = i) (lean : a ≤ n) (fa : f a = i) (b : Nat) (_clearme0 : b ≤ n ∧ f b = j) (lebn : b ≤ n) (fb : f b = j) (x__ : (i0 : Nat) -> (x__ : i0 ≤ n) -> f i0 ≤ n) (injf : injn f n) (auto : a = b) : f a = i", "predict": "axiom let_clause_1068 (f : Nat → Nat) (n : Nat) (permf : Permut f n) (i j : Nat) (x : i ≤ n) (y : j ≤ n) (a : Nat) (z : a ≤ n ∧ f a = i) (b : Nat) (w : b ≤ n ∧ f b = j) : b = j → ∀ g : Nat → i0 → Leq (f (i0)) n → ∀ injf : Permut f n, ∀ a : Nat, (a = b → f a = i)"}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nLet_clause_10336. For all natural numbers $n$ and $m$, for all functions $Hind$ from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$, for all natural numbers $a$, if $m = 2 a$ or $m = 2 a + 1$, then if $m = 2 a + 1$, then if $1 < 2 a + 1$, then if $0 < a$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.\nassistant\n", "label": "let_clause_10336 : n : Nat -> m : Nat -> Hind : (p : Nat -> __ : Lt p m -> __1 : Lt (nd 1) p -> Leq (Psi p) (times (pred p) (pow (nd 2) (minus (times (nd 2) p) (nd 3))))) -> a : Nat -> _clearme : or (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1))) -> Hm : Eq m (plus (times (nd 2) a) (nd 1)) -> Hlt : Lt (nd 1) (plus (times (nd 2) a) (nd 1)) -> Ha : Lt 0 a -> x2515 : Nat -> x2516 : Nat -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516)) .", "predict": "let_clause_10336 : (n : Elem Nat) -> (m : Elem Nat) -> (Hind : Elem (forall (p : Elem Nat) -> forall (x : Elem (Lt p m)) -> forall (y : Elem (Lt 1 p)) -> Elem (Leq (Psi p) (pred p) * (pow (nd 2) (minus (times (nd 2) p) (nd 3))))) -> Proof (forall (a : Elem Nat) -> (or (Eq m (times (nd 2) a)) (Eq m (plus (times (nd 2) a) (nd 1)))) -> (if (Eq m (plus (times (nd 2) a) (nd 1))) (if (Lt (nd 1) (plus (times (nd 2) a) (nd 1))) (if (Lt (nd 0) a) (forall (x2515 : Elem Nat) -> forall (x2516 : Elem Nat) -> Eq x2515 (plus (x2515 (div x2515 x2516)) (mod x2515 x2516)))))) ."}
{"prompt": "system\nYou are a helpful assistant.\nuser\nTranslate the following English statement into Dedukti.\nBijn_fg. Let $f$ and $g$ be functions from natural numbers to natural numbers. Then for all natural numbers $n$, for all elements $__$ of $bijn$ of $f$ and $n$, for all elements $__1$ of $bijn$ of $g$ and $n$, $bijn$ holds for the function that maps $p$ to $f (g (p))$ and $n$.\nassistant\n", "label": "bijn_fg : f : (__ : Nat -> Nat) -> g : (__ : Nat -> Nat) -> n : Nat -> __ : bijn f n -> __1 : bijn g n -> bijn (p : Nat => f (g p)) n .", "predict": "bijn_fg : (f : Elem (Nat -> Nat)) -> (g : Elem (Nat -> Nat)) -> Proof (forall Nat (n => forall (p : Elem (bijn (f n))) => forall (q : Elem (bijn (g n))) => bijn (map (fun p => f (g p)) n))) ."}