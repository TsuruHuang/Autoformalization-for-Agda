[
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $k , n \\in N$. Anta att $k$ är mindre än eller lika med $n$. Låt $__1$ vara ett element av $permut$ av $h$ och $n$. Låt $__2$ vara en funktion från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h$ applicerat på $m$ och $m$. Låt $j$ vara ett naturligt tal. Anta att $k$ är mindre än eller lika med $j$. Anta att $j$ är mindre än eller lika med $n$. Då är $k$ mindre än eller lika med $h$ applicerat på $j$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Decidable_divides. Soient $n$ et $m$ des nombres naturels. Alors $decidable$ tient pour $divisible$ appliqué à $n$ et $m$.",
    "output": "postulate decidable_divides : (n : Nat) -> (m : Nat) -> decidable (divisible n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1595. Soit $p , n , m \\in N$. Supposons que $0$ est inférieur à $n$. Alors si $0$ est inférieur à $m$, alors si le diviseur commun plus grand de $p$ et de $n$ est égal à $1$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $1$, alors si $1$ est inférieur au diviseur commun plus grand de $p$ et du produit de $n$ et de $m$, alors si $smallest_factor$ appliqué à le diviseur commun plus grand de $p$ et du produit de $n$ et de $m$ est divisible par $m$, alors le diviseur commun plus grand de $p$ et de $n$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Aop_rect_Type2_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Då för alla funktioner $Q_$ från element $_x_869$ av $Aop$ av $A$ och $_nil$ till element av $Type2$, för alla funktioner $_H_mk_Aop$ från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $_nil$ och $a$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $_nil$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $op$ applicerat på $b$ och $c$ och $op$ applicerat på $op$ applicerat på $a$ och $b$ och $c$ till element av $Q_$ av $mk_Aop$ applicerat på $A$ och $_nil$ och $op$ och $_nill$ och $_nilr$ och $_assoc$, för alla element $x_869$ av $Aop$ av $A$ och $_nil$, håller $Q_$ för $x_869$.",
    "output": "postulate Aop_rect_Type2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_869 : Aop A _nil) -> Type2) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_869 : Aop A _nil) -> Q_ x_869"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a \\in N$. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b \\in N$. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $b$ är lika med $j$. Då för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exists_forall_lt. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$, $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de $Eq$ appliqué à $f$ appliqué à $i$ et $true$ ou $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n$ et la fonction qui envoie $__$ à $Eq$ appliqué à $f$ appliqué à $i$ et contradiction.",
    "output": "postulate exists_forall_lt : (f : (_ : Nat) -> bool) -> (n : Nat) -> or (ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ _ : Lt i n -> Eq (f i) false)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Assume that $1$ is less than $n$. Let $x2515 , x2516 \\in N$. Then $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (lt1n : Lt 1 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Alors si $b \\leq n$ et $f (b)= j$, alors si $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lop_Strue. Let $m$ and $i$ be natural numbers. Let $acc$ be a list of natural numbers. Then if $list_divides (acc , i)= true$, then $lprim (m + 1 , i , acc)= lprim (m , i + 1 , acc)$.",
    "output": "postulate lop_Strue : (m : Nat) -> (i : Nat) -> (acc : list Nat) -> (_ : Eq (list_divides acc i) true) -> Eq (lprim (plus m 1) i acc) (lprim m (plus i 1) acc)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5$ est inférieur à $n$. Soit $m$ un nombre naturel. Supposons que $6$ est inférieur ou ágal à $m$. Supposons que la puissance de la somme de $m$ et de $1$ et de $2$ est inférieure ou ágale à la puissance de $2$ et de $m$. Soit $a \\in N$. Supposons que $6$ est inférieur ou ágal à $a$. Alors si la somme du produit de $2$ et de la somme de $a$ et de $1$ et de $1$ est inférieure ou ágale à la puissance de $2$ et de $a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10131. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , m , n0 \\in N$. Supposons que $max (n0 + 1 , f)= m$. Supposons que contradiction est égal à $f (m)$. Soit $i , j \\in N$. Supposons que $j + 1 < n0 + 1$. Soit $x7 \\in N$. Alors $x7 = m + x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_le. Let $n$ and $m$ be natural numbers. Assume that $0 < m$. Assume that $n$ is divisible by $m$. Then $n \\leq m$.",
    "output": "postulate divides_to_le : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Leq n m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Supposons que $0 < n$. Soient $x2515$ et $x2516$ des nombres naturels. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (posn : Lt 0 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10471. Soit $n1 , n2 \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$, $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$ et $sub_hk$ tient pour $k$ et $h$ et $B$ et $mk_range (B , f2 , n2 , p2)$ et $mk_range (B , f1 , n1 , p1)$ et $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$. Soit $same$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $f1 (i)$ et de $f2 (h (i))$. Soient $i$ et $m$ des nombres naturels. Soit $Hind$ une fonction des fonctions $f$ des nombres naturels à des valeurs booléennes et des éléments de $Leq$ de $0$ et de $n1$ et des éléments $__1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m , f)$ et des éléments $__2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m , f)$ et de $mk_range (B , f1 , 0 , p1)$ à des éléments de $Eq$ de $bigop$ appliqué à $0$ et la fonction qui envoie $i0$ à $p1$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f1$ appliqué à $i0$ et de $bigop$ appliqué à $m$ et la fonction qui envoie $i0$ à $f$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f2$ appliqué à $i0$. Alors pour toutes les fonctions $p20$ des nombres naturels à des valeurs booléennes, si $0 \\leq n1$, alors pour tous les éléments $sub1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m + 1 , p20)$, pour tous les éléments $sub2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m + 1 , p20)$ et de $mk_range (B , f1 , 0 , p1)$, pour tous les nombres naturels $x2571$ et $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1561. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b = 1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Match_lstar_r. Soit $B$ un ensemble. Soit $_R$ un élément de $relation$ de $B$. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des nombres naturels et des éléments $__1$ de $B$ et des éléments $__2$ de $B$ et des éléments $z$ de $lstar_r$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$ à des éléments de $return_sort$. Soit $case_lstar_r_O$ une fonction des éléments $b$ de $B$ à des éléments de $return_type$ de $0$ et de $b$ et de $b$ et de $lstar_r_O (B , _R , b)$. Alors pour toutes les fonctions $case_lstar_r_S$ des nombres naturels $l$ et des éléments $b1$ de $B$ et des éléments $b$ de $B$ et des éléments de $lstar_r$ de $B$ et de $_R$ et de $l$ et de $b1$ et de $b$ et des éléments $b2$ de $B$ et des éléments $__1$ de $_R$ de $b$ et de $b2$ à des éléments de $return_type$ de $l + 1$ et de $b1$ et de $b2$ et de $lstar_r_S (B , _R , l , b1 , b , __ , b2 , __1)$, pour tous les nombres naturels $__$, pour tous les éléments $__1$ et $__2$ de $B$, pour tous les éléments $z$ de $lstar_r$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$, $return_type$ tient pour $__$ et $__1$ et $__2$ et $z$.",
    "output": "postulate match_lstar_r : (B : Set) -> (_R : relation B) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar_r B _R __ __1 __2) -> return_sort) -> (case_lstar_r_O : (b : B) -> return_type 0 b b (lstar_r_O B _R b)) -> (case_lstar_r_S : (l : Nat) -> (b1 : B) -> (b : B) -> (_ : lstar_r B _R l b1 b) -> (b2 : B) -> (__1 : _R b b2) -> return_type (plus l 1) b1 b2 (lstar_r_S B _R l b1 b __ b2 __1)) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar_r B _R __ __1 __2) -> return_type __ __1 __2 z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Pi_p_primeb4. Soit $n \\in N$. Supposons que $1$ est inférieur à $n$. Alors $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ est égal à $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$.",
    "output": "postulate pi_p_primeb4 : (n : Nat) -> (_ : Lt 1 n) -> Eq (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1))))))) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1)))))))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_log_n_n. Låt $p$ och $n$ vara naturliga tal. Då om $1$ är mindre än $p$, så om $0$ är mindre än $n$, så är logaritmen av $p$ och $n$ mindre än $n$.",
    "output": "postulate lt_log_n_n : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Lt (log p n) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Permut_fg. Let $f$ and $g$ be functions from natural numbers to natural numbers. Let $n \\in N$. Let $__$ be an element of $permut$ of $f$ and $n$. Then for all elements $__1$ of $permut$ of $g$ and $n$, $permut$ holds for the function that maps $m$ to $f (g (m))$ and $n$.",
    "output": "postulate permut_fg : (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> (__1 : permut g n) -> permut (\\ m : Nat -> f (g m)) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_gcd_1. Låt $n , m \\in N$. Då om $n$ är primt och $n$ inte är delbart med $m$, så är $1$ lika med det största gemensama delaret av $n$ och $m$.",
    "output": "postulate prime_to_gcd_1 : (n : Nat) -> (m : Nat) -> (_ : prime n) -> (__1 : not (divisible n m)) -> Eq (gcd n m) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "P_ord_aux. Låt $__$ och $__1$ och $__2$ vara naturliga tal. Då håller $Prod$ för $Nat$ och $Nat$.",
    "output": "postulate p_ord_aux : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Prod Nat Nat"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_inv_ind. Låt $x1 \\in N$. Låt $x2$ vara en funktion från naturliga tal till sanningsvärden. Låt $x3 \\in N$. Låt $_Hterm$ vara ett element av $max_spec$ av $x1$ och $x2$ och $x3$. Låt $P$ vara en funktion från naturliga tal $_z1769$ till påståenden. Då för alla funktioner $_H1$ från naturliga tal $m$ och element $_x_975$ av $Lt$ av $m$ och $x1$ och element $_x_974$ av $Eq$ av $x2$ applicerat på $m$ och $true$ och funktioner $_x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2$ applicerat på $i$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $m$ till element av $P$ av $m$, för alla funktioner $_H2$ från funktioner $_x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2$ applicerat på $i$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $0$ till element av $P$ av $0$, håller $P$ för $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_to_not_zero. For all natural numbers $n$ and $m$, if $n$ is less than $m$, then $not_zero$ holds for $m$.",
    "output": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not_zero m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Enum_body. För alla mängder $A$, för alla element $_xxx$ av $range$ av $A$, för alla naturliga tal $_x_942$, $A$.",
    "output": "postulate enum_body : (A : Set) -> (_xxx : range A) -> (_x_942 : Nat) -> A"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15691. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$. Alors la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$ est égale à $1$.",
    "output": "postulate let_clause_15691 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_ind_body. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_809$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_811$ av $Lt$ av $_r$ och $_m$ och element $x_810$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_811 , x_810)$. Då för alla element $x_809$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_809$.",
    "output": "postulate div_mod_spec_ind_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_809 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_811 : Lt _r _m) -> (x_810 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> (x_809 : div_mod_spec _n _m _q _r) -> Q_ x_809"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Då om $b \\leq n$ och $f (b)= j$ och $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1258. Soit $b \\in N$. Supposons que $1 < b$. Soit $n \\in N$. Supposons que $b ^ n b = 1$. Alors $b (b ^ n)= 1$.",
    "output": "postulate let_clause_1258 : (b : Nat) -> (lt1b : Lt 1 b) -> (n : Nat) -> (H : Eq (times (pow b n) b) 1) -> Eq (times b (pow b n)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_to_lt_to_lt. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $n \\leq m$. Alors si $m < p$, alors $n < p$.",
    "output": "postulate le_to_lt_to_lt : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq n m) -> (__1 : Lt m p) -> Lt n p"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Gcd_n_n. Soit $n$ un nombre naturel. Alors $n$ est égal au diviseur commun plus grand de $n$ et de $n$.",
    "output": "postulate gcd_n_n : (n : Nat) -> Eq (gcd n n) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16004. Soit $m , n , a , b \\in N$. Alors si $0 < n$ et $0 < m$, alors si $1$ est égal au diviseur commun plus grand de $n$ et de $m$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a$ est égal à $b$. Alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_mod. Låt $p$ och $a$ vara naturliga tal. Då om $p$ är primt, så om $p$ inte är delbart med $a$, så håller $permut$ för funktionen som avbildar $n$ som $mod (a n , p)$ och $pred (p)$.",
    "output": "postulate permut_mod : (p : Nat) -> (a : Nat) -> (_ : prime p) -> (__1 : not (divisible p a)) -> permut (\\ n : Nat -> mod (times a n) p) (pred p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_S_S_to_lt. For all natural numbers $n$ and $m$, if the sum of $n$ and $1$ is less than the sum of $m$ and $1$, then $n$ is less than $m$.",
    "output": "postulate lt_S_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) (plus m 1)) -> Lt n m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15611. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Då för alla naturliga tal $b$, om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16171. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c$ vara ett naturligt tal. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med $1$. Då är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $m$ och $b$ och produkten av $p$ och $a$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$ och $n \\leq m$. Anta att $n \\leq q + 1$ och $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Anta att $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ och $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Då $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Eqb_sym. Soit $a , b \\in N$. Alors $eqb$ appliqué à $a$ et $b$ est égal à $eqb$ appliqué à $b$ et $a$.",
    "output": "postulate eqb_sym : (a : Nat) -> (b : Nat) -> Eq (eqb a b) (eqb b a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Min_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $t , m \\in N$. Supposons que $m < t$ et $f (m)= true$. Alors pour tous les nombres naturels $k$ et $b$, si $b \\leq m$, alors pour toutes les fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f (i)$ et de contradiction, si $t = k + b$, alors $min (k , b , f)= m$.",
    "output": "postulate min_exists : (f : (_ : Nat) -> bool) -> (t : Nat) -> (m : Nat) -> (_ : Lt m t) -> (__1 : Eq (f m) true) -> (k : Nat) -> (b : Nat) -> (__2 : Leq b m) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> (__4 : Eq t (plus k b)) -> Eq (min k b f) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_inv_rect_Type0. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $Dop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1728$ de $Dop$ de $x1$ et de $x2$ à des ensembles. Soit $_H1$ une fonction des éléments $sum$ de $ACop$ de $x1$ et de $x2$ et des fonctions $prod$ des éléments de $x1$ et des éléments $__1$ de $x1$ à des éléments de $x1$ et des fonctions $_null$ des éléments $a$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $x2$ et de $x2$ et des fonctions $_distr$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ et des éléments $c$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ et des éléments $_z1729$ de $Eq$ de $Hterm$ et de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$ à des éléments de $P$ de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate Dop_inv_rect_Type0 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1728 : Dop x1 x2) -> Set) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1729 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Congruent_n_mod_n. Let $n , p \\in N$. Then if $0$ is less than $p$, then $congruent$ holds for $n$ and $mod$ applied to $n$ and $p$ and $p$.",
    "output": "postulate congruent_n_mod_n : (n : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> congruent n (mod n p) p"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1033. Låt $n \\in N$. Anta att $2 ^ 7 \\leq n$. Låt $p$ vara ett naturligt tal. Anta att $\\sqrt{ (2 n)}+ 1 \\leq p$. Anta att $p < 2 n + 1$. Anta att $leb (2 , k (2 n , p))= true$. Anta att $2 n < p ^ 2$. Då för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Min_spec_to_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , b , m \\in N$. Låt $__$ vara ett element av $min_spec$ av $n$ och $b$ och $f$ och $m$. Då är $min$ applicerat på $n$ och $b$ och $f$ lika med $m$.",
    "output": "postulate min_spec_to_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (m : Nat) -> (_ : min_spec n b f m) -> Eq (min n b f) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15321. Let $n$ and $m$ be natural numbers. Assume that $0 < m$. Assume that $0 = n$. Then if $0$ is divisible by $m$, then for all natural numbers $q$, if $m = 0 q$, then $m = 0$.",
    "output": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Ord_times. Låt $p , m , n \\in N$. Anta att $0 < m$ och $0 < n$. Då om $p$ är primt, så $ord (m n , p)= ord (m , p)+ ord (n , p)$.",
    "output": "postulate ord_times : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 0 n) -> (__2 : prime p) -> Eq (ord (times m n) p) (plus (ord m p) (ord n p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bdef. Let $n \\in N$. Then $B$ applied to $n$ is equal to $bigop$ applied to the sum of $n$ and $1$ and the function that maps $p$ to $primeb$ applied to $p$ and $Nat$ and $1$ and $times$ and the function that maps $p$ to $bigop$ applied to the logarithm of $p$ and $n$ and the function that maps $i$ to $true$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $p$ and $mod$ applied to the quotient of $n$ and the exponentiation of $p$ and the sum of $i$ and $1$ and $2$.",
    "output": "postulate Bdef : (n : Nat) -> Eq (B n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (mod (div n (pow p (plus i 1))) 2))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_sigma_p. Soit $n \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $__$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$. Soit $__1$ une fonction des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$. Alors pour tous les éléments $__2$ de $ex$ de $Nat$ et de la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de la disjonction de la conjonction de $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et de $Lt$ appliqué à $g1$ appliqué à $i$ et $g2$ appliqué à $i$ et de la conjonction de la conjonction de $Eq$ appliqué à $p1$ appliqué à $i$ et contradiction et de $Eq$ appliqué à $p2$ appliqué à $i$ et $true$ et de $Lt$ appliqué à $0$ et $g2$ appliqué à $i$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$ est inférieur à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$.",
    "output": "postulate lt_sigma_p : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (__2 : ex Nat (\\ i : Nat -> and (Lt i n) (or (and (Eq (p1 i) true) (Lt (g1 i) (g2 i))) (and (and (Eq (p1 i) false) (Eq (p2 i) true)) (Lt 0 (g2 i)))))) -> Lt (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15611. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Då om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16002. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Alors si $0$ est inférieur à $n$, alors si $0$ est inférieur à $m$, alors si le diviseur commun plus grand de $n$ et de $m$ est égal à $1$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1549. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Anta att $0 = m$. Låt $x1106 \\in N$. Då $x1106 = x1106 - m$.",
    "output": "postulate let_clause_1549 : (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (eqm0 : Eq 0 m) -> (x1106 : Nat) -> Eq x1106 (minus x1106 m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_gcd_mod. Soit $m , n \\in N$. Alors si $0 < n$, alors le diviseur commun plus grand de $m$ et de $n$ est divisible par le diviseur commun plus grand de $n$ et de $mod$ appliqué à $m$ et $n$.",
    "output": "postulate divides_gcd_mod : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> divisible (gcd m n) (gcd n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $k , n \\in N$. Anta att $k \\leq n$. Låt $__1$ vara ett element av $permut$ av $h$ och $n$. Låt $__2$ vara en funktion från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h (m)$ och $m$. Låt $j \\in N$. Anta att $k \\leq j$. Då om $j \\leq n$, så $k \\leq h (j)$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_73. Låt $n , m , p \\in N$. Anta att $0 < p$. Låt $x134 , x135 , x136 \\in N$. Då $x134 + (x135 + x136)= x135 + (x134 + x136)$.",
    "output": "postulate let_clause_73 : (n : Nat) -> (m : Nat) -> (p : Nat) -> (posp : Lt 0 p) -> (x134 : Nat) -> (x135 : Nat) -> (x136 : Nat) -> Eq (plus x134 (plus x135 x136)) (plus x135 (plus x134 x136))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $bijf$ vara ett element av $bijn$ av $f$ och summan av $n$ och $1$. Anta att $f$ applicerat på summan av $n$ och $1$ är lika med summan av $n$ och $1$. Låt $i$ vara ett naturligt tal. Anta att $i$ är mindre än eller lika med $n$. Låt $a \\in N$. Då om $a$ är mindre än eller lika med summan av $n$ och $1$ och $f$ applicerat på $a$ är lika med $i$, så om $a$ är mindre än eller lika med summan av $n$ och $1$, så om $f$ applicerat på $a$ är lika med $i$, så om $a$ är lika med summan av $n$ och $1$, så är $i$ lika med $a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Anta att $b \\leq n$ och $f (b)= j$. Anta att $b \\leq n$. Anta att $f (b)= j$. Då för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15591. Låt $n , m \\in N$. Då om $0 < m$, så om $0 = n$, så om $0$ är delbart med $m$, så för alla naturliga tal $q$, om $m = 0 q$, så $m = n$.",
    "output": "postulate let_clause_15591 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "True_to_le_min. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, pour tous les nombres naturels $n$ et $m$ et $b$, si $b \\leq m$, alors si $f (m)= true$, alors $min (n , b , f)\\leq m$.",
    "output": "postulate true_to_le_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (b : Nat) -> (_ : Leq b m) -> (__1 : Eq (f m) true) -> Leq (min n b f) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Log_SO. För alla naturliga tal $n$, om $1$ är mindre än $n$, så är logaritmen av $n$ och $1$ lika med $0$.",
    "output": "postulate log_SO : (n : Nat) -> (_ : Lt 1 n) -> Eq (log n 1) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_inv_ind. Let $x1$ be a natural number. Let $x2$ be a function from natural numbers to booleans. Let $x3$ be a natural number. Let $_Hterm$ be an element of $max_spec$ of $x1$ and $x2$ and $x3$. Let $P$ be a function from natural numbers $_z1769$ to propositions. Then for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2 (m)$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2 (i)$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2 (i)$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "F3_ind. För alla mängder $A1$ och $A2$ och $A3$, för alla funktioner $f$ från element av $A1$ och element $__1$ av $A2$ och element $__2$ av $A3$ till naturliga tal, för alla element $P$ av $relation3$ av $A1$ och $A2$ och $A3$, för alla funktioner $__$ från naturliga tal $n$ och funktioner från element $a1$ av $A1$ och element $a2$ av $A2$ och element $a3$ av $A3$ och element av $Lt$ av $f (a1 , a2 , a3)$ och $n$ till element av $P$ av $a1$ och $a2$ och $a3$ och element $a1$ av $A1$ och element $a2$ av $A2$ och element $a3$ av $A3$ och element $__1$ av $Eq$ av $f (a1 , a2 , a3)$ och $n$ till element av $P$ av $a1$ och $a2$ och $a3$, för alla element $a1$ av $A1$, för alla element $a2$ av $A2$, för alla element $a3$ av $A3$, håller $P$ för $a1$ och $a2$ och $a3$.",
    "output": "postulate f3_ind : (A1 : Set) -> (A2 : Set) -> (A3 : Set) -> (f : (_ : A1) -> (__1 : A2) -> (__2 : A3) -> Nat) -> (P : relation3 A1 A2 A3) -> (_ : (n : Nat) -> (_ : (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (_ : Lt (f a1 a2 a3) n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> (__1 : Eq (f a1 a2 a3) n) -> P a1 a2 a3) -> (a1 : A1) -> (a2 : A2) -> (a3 : A3) -> P a1 a2 a3"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Pad_bigop_nil. Let $k , n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Then for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Leq$ of $n$ and $i$ and elements $__2$ of $Lt$ of $i$ and $k$ to elements of $or$ of $Eq$ applied to $p$ applied to $i$ and absurdity and $Eq$ applied to $f$ applied to $i$ and $nil$, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.",
    "output": "postulate pad_bigop_nil : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> or (Eq (p i) false) (Eq (f i) nil)) -> Eq (bigop n (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_inv_ind. Låt $Hterm \\in N$. Låt $P$ vara en funktion från naturliga tal $_z653$ till påståenden. Låt $_H1$ vara en funktion från element $_z654$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$. Låt $_H2$ vara en funktion från naturliga tal $x_366$ och funktioner $_x_368$ från element $_z654$ av $Eq$ av $Hterm$ och $x_366$ till element av $P$ av $x_366$ och element $_z654$ av $Eq$ av $Hterm$ och $x_366 + 1$ till element av $P$ av $x_366 + 1$. Då håller $P$ för $Hterm$.",
    "output": "postulate nat_inv_ind : (Hterm : Nat) -> (P : (_z653 : Nat) -> Prop) -> (_H1 : (_z654 : Eq Hterm 0) -> P 0) -> (_H2 : (x_366 : Nat) -> (_x_368 : (_z654 : Eq Hterm x_366) -> P x_366) -> (_z654 : Eq Hterm (plus x_366 1)) -> P (plus x_366 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Assume that $c n - d m = 1$. Then $n c - m d = 1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_SO_smallest_factor. Låt $n \\in N$. Anta att $1 < n$. Då $1 < smallest_factor (n)$.",
    "output": "postulate lt_SO_smallest_factor : (n : Nat) -> (_ : Lt 1 n) -> Lt 1 (smallest_factor n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_CProp1_body. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_965$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_965$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_965$.",
    "output": "postulate Dop_rect_CProp1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_965 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_965 : Dop A _nil) -> Q_ x_965"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Square_S. Pour tous les nombres naturels $a$, $(a + 1)^ 2 = a ^ 2 + 2 a + 1$.",
    "output": "postulate square_S : (a : Nat) -> Eq (pow (plus a 1) 2) (plus (plus (pow a 2) (times 2 a)) 1)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15625. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$. Then $m d - n c = 1$.",
    "output": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Minus_minus. Låt $n , m , p \\in N$. Anta att $p \\leq m$ och $m \\leq n$. Då $p + (n - m)= n - (m - p)$.",
    "output": "postulate minus_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq p m) -> (__1 : Leq m n) -> Eq (plus p (minus n m)) (minus n (minus m p))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Min_spec_ind. Låt $_n$ och $_b$ vara naturliga tal. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Låt $Q_$ vara en funktion från naturliga tal $x_1075$ och element $_x_1076$ av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$ till påståenden. Låt $_H_found_min_spec$ vara en funktion från naturliga tal $m$ och element $x_1080$ av $Leq$ av $_b$ och $m$ och element $x_1079$ av $Lt$ av $m$ och summan av $_n$ och $_b$ och element $x_1078$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $x_1077$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $m$ och $found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $m$ och $x_1080$ och $x_1079$ och $x_1078$ och $x_1077$. Då för alla funktioner $_H_not_found_min_spec$ från funktioner $x_1081$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $_n$ och $_b$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av summan av $_n$ och $_b$ och $not_found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $x_1081$, för alla naturliga tal $x_1075$, för alla element $x_1076$ av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$, håller $Q_$ för $x_1075$ och $x_1076$.",
    "output": "postulate min_spec_ind : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1033. Låt $n$ vara ett naturligt tal. Anta att $2 ^ 7 \\leq n$. Då för alla naturliga tal $p$, om $\\sqrt{ (2 n)}+ 1 \\leq p$ och $p < 2 n + 1$, så om $leb (2 , k (2 n , p))= true$ och $2 n < p ^ 2$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_sqrt_n. Låt $n \\in N$. Anta att $1$ är mindre än $n$. Då är kvadratroten av $n$ mindre än $n$.",
    "output": "postulate lt_sqrt_n : (n : Nat) -> (_ : Lt 1 n) -> Lt (sqrt n) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_congruent. För alla naturliga tal $n$ och $m$ och $p$, om $0 < p$, så om $m \\leq n$, så om $p$ är delbart med $n - m$, så håller $congruent$ för $n$ och $m$ och $p$.",
    "output": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_prime_times_2. Let $n$ be a natural number. Then if $1$ is less than $n$, then the product of $2$ and $n$ is not prime.",
    "output": "postulate not_prime_times_2 : (n : Nat) -> (_ : Lt 1 n) -> not (prime (times 2 n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp4_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_837$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_839$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_838$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_839$ et $x_838$. Soit $x_837$ un élément de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$. Alors $Q_$ tient pour $x_837$.",
    "output": "postulate div_mod_spec_rect_CProp4_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_837 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_839 : Lt _r _m) -> (x_838 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) -> (x_837 : div_mod_spec _n _m _q _r) -> Q_ x_837"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_p_ord_inv. Låt $p , m , x \\in N$. Anta att $ord (x , p)< m$. Då $p_ord_inv (p , m , x)\\div m = ord_rem (x , p)$.",
    "output": "postulate div_p_ord_inv : (p : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt (ord x p) m) -> Eq (div (p_ord_inv p m x) m) (ord_rem x p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Decidable_or. Låt $P$ och $Q$ vara påståenden. Låt $__$ vara ett element av $decidable$ av $P$. Låt $__1$ vara ett element av $decidable$ av $Q$. Då håller $decidable$ för disjunktionen av $P$ och $Q$.",
    "output": "postulate decidable_or : (P : Prop) -> (Q : Prop) -> (_ : decidable P) -> (__1 : decidable Q) -> decidable (or P Q)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5 < n$. Soit $m$ un nombre naturel. Supposons que $6 \\leq m$. Supposons que $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a \\in N$. Supposons que $6 \\leq a$. Alors si $2 (a + 1)+ 1 \\leq 2 ^ a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16003. Let $m , n , a , b \\in N$. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_2. Soit $n \\in N$. Alors $n ^ 2 = n n$.",
    "output": "postulate exp_2 : (n : Nat) -> Eq (pow n 2) (times n n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$ and $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$ and $a \\leq n$. Assume that $f (a)= i$. Let $b \\in N$. Assume that $b \\leq n$ and $f (b)= j$ and $b \\leq n$. Assume that $f (b)= j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$. Then for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Match_le. För alla naturliga tal $_n$, för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från naturliga tal och element $z$ av $Leq$ av $_n$ och $__$ till element av $return_sort$, för alla element $case_le_n$ av $return_type$ av $_n$ och $le_n$ applicerat på $_n$, för alla funktioner $case_le_S$ från naturliga tal $m$ och element av $Leq$ av $_n$ och $m$ till element av $return_type$ av summan av $m$ och $1$ och $le_S$ applicerat på $_n$ och $m$ och $__$, för alla naturliga tal $__$, om $_n$ är mindre än eller lika med $__$, så håller $return_type$ för $__$ och $z$.",
    "output": "postulate match_le : (_n : Nat) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : Leq _n __) -> return_sort) -> (case_le_n : return_type _n (le_n _n)) -> (case_le_S : (m : Nat) -> (_ : Leq _n m) -> return_type (plus m 1) (le_S _n m __)) -> (_ : Nat) -> (z : Leq _n __) -> return_type __ z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_inv_rect_CProp2. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1482$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_851$ of $Lt$ of $x4$ and $x2$ and elements $x_850$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1483$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_851$ and $x_850$, $P$ holds for $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_CProp2 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1482 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_851 : Lt x4 x2) -> (x_850 : Eq x1 (plus (times x3 x2) x4)) -> (_z1483 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_851 x_850)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_to_divides_ord_rem. Soient $p$ et $n$ et $m$ des nombres naturels. Alors si $0 < n$, alors si $0 < m$, alors si $p$ est premier, alors si $n$ est divisible par $m$, alors $ord_rem (n , p)$ est divisible par $ord_rem (m , p)$.",
    "output": "postulate divides_to_divides_ord_rem : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> divisible (ord_rem n p) (ord_rem m p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_gcd_aux. Let $p$ and $m$ and $n$ and $d$ be natural numbers. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to $p$. Then if $d$ is divisible by $m$, then if $d$ is divisible by $n$, then $d$ is divisible by $gcd_aux$ applied to $p$ and $m$ and $n$.",
    "output": "postulate divides_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (d : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n p) -> (__3 : divisible d m) -> (__4 : divisible d n) -> divisible d (gcd_aux p m n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1545. Let $m , n \\in N$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $0$ is divisible by $n$. Let $q1$ be a natural number. Assume that $n = 0 q1$. Then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m = 0 q2$, then $m = 0$.",
    "output": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Distr_body. Låt $A$ vara en mängd. Då för alla element $nil$ av $A$, för alla element $xxx$ av $Dop$ av $A$ och $nil$, för alla element $a$ och $b$ och $c$ av $A$, $prod (A , nil , xxx , a , aop__o__op (A , nil , sum (A , nil , xxx), b , c))= aop__o__op (A , nil , sum (A , nil , xxx), prod (A , nil , xxx , a , b), prod (A , nil , xxx , a , c))$.",
    "output": "postulate distr_body : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (prod A nil xxx a (aop__o__op A nil (sum A nil xxx) b c)) (aop__o__op A nil (sum A nil xxx) (prod A nil xxx a b) (prod A nil xxx a c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1013. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$ och $m$ och $i$, för alla funktioner $Hind$ från element av $Eq$ av $max (i , f)$ och $m$ och element $__1$ av $Eq$ av $f (m)$ och kontradiktion till element av $Eq$ av $m$ och $0$, om $f (i)= true$, så om $i = m$, så om kontradiktion är lika med $f (m)$, så är $true$ lika med kontradiktion.",
    "output": "postulate let_clause_1013 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (i : Nat) -> (Hind : (_ : Eq (max i f) m) -> (__1 : Eq (f m) false) -> Eq m 0) -> (fi : Eq (f i) true) -> (eqm : Eq i m) -> (fm : Eq (f m) false) -> Eq false true"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_commute. Soit $n , m \\in N$. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Soit $p22$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $ACop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, si $0 < n$, alors si $0 < m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb (p11 (i), p12 (i , j))$ et de $andb (p21 (j), p22 (i , j))$, $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$.",
    "output": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_log_S. Soit $p , n \\in N$. Supposons que $1$ est inférieur à $p$. Alors le logarithme de $p$ et de $n$ est inférieur ou ágal au logarithme de $p$ et de la somme de $n$ et de $1$.",
    "output": "postulate le_log_S : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Leq (log p n) (log p (plus n 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Eq_prim_prim_pred. Let $n$ be a natural number. Then if $1 < n$, then $prim (2 n)= prim (pred (2 n))$.",
    "output": "postulate eq_prim_prim_pred : (n : Nat) -> (_ : Lt 1 n) -> Eq (prim (times 2 n)) (prim (pred (times 2 n)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_CProp3. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z695$ à des propositions. Soit $_H1$ une fonction des éléments $_z696$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$. Soit $_H2$ une fonction des nombres naturels $x_402$ et des fonctions $_x_404$ des éléments $_z696$ de $Eq$ de $Hterm$ et de $x_402$ à des éléments de $P$ de $x_402$ et des éléments $_z696$ de $Eq$ de $Hterm$ et de la somme de $x_402$ et de $1$ à des éléments de $P$ de la somme de $x_402$ et de $1$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : (_z695 : Nat) -> Prop) -> (_H1 : (_z696 : Eq Hterm 0) -> P 0) -> (_H2 : (x_402 : Nat) -> (_x_404 : (_z696 : Eq Hterm x_402) -> P x_402) -> (_z696 : Eq Hterm (plus x_402 1)) -> P (plus x_402 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_n_O. Pour tous les nombres naturels $n$, si $0$ est inférieur à $n$, alors la puissance de $0$ et de $n$ est égale à $0$.",
    "output": "postulate exp_n_O : (n : Nat) -> (_ : Lt 0 n) -> Eq (pow 0 n) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Discr_minus_x_xy. Let $x , y \\in N$. Then if $x = x - y$, then $x = 0$ or $y = 0$.",
    "output": "postulate discr_minus_x_xy : (x : Nat) -> (y : Nat) -> (_ : Eq x (minus x y)) -> or (Eq x 0) (Eq y 0)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_rect_Type4_body. För alla funktioner $Q_$ från naturliga tal $_x_369$ till element av $Type4$, för alla element $_H_O$ av $Q_$ av $0$, för alla funktioner $_H_S$ från naturliga tal $x_370$ och element $_x_372$ av $Q_$ av $x_370$ till element av $Q_$ av $x_370 + 1$, för alla naturliga tal $x_369$, håller $Q_$ för $x_369$.",
    "output": "postulate nat_rect_Type4_body : (Q_ : (_x_369 : Nat) -> Type4) -> (_H_O : Q_ 0) -> (_H_S : (x_370 : Nat) -> (_x_372 : Q_ x_370) -> Q_ (plus x_370 1)) -> (x_369 : Nat) -> Q_ x_369"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Invert_permut_f. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n , m \\in N$. Anta att $m$ är mindre än eller lika med $n$. Låt $__1$ vara ett element av $injn$ av $f$ och $n$. Då är $invert_permut$ applicerat på $n$ och $f$ och $f$ applicerat på $m$ lika med $m$.",
    "output": "postulate invert_permut_f : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : injn f n) -> Eq (invert_permut n f (f m)) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Match_max_spec. Låt $_n$ vara ett naturligt tal. Då för alla funktioner $_f$ från naturliga tal till sanningsvärden, för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från naturliga tal och element $z$ av $max_spec$ av $_n$ och $_f$ och $__$ till element av $return_sort$, för alla funktioner $case_found_max_spec$ från naturliga tal $m$ och element av $Lt$ av $m$ och $_n$ och element $__1$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $return_type$ av $m$ och $found_max_spec$ applicerat på $_n$ och $_f$ och $m$ och $__$ och $__1$ och $__2$, för alla funktioner $case_not_found_max_spec$ från funktioner från naturliga tal $i$ och element av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $return_type$ av $0$ och $not_found_max_spec$ applicerat på $_n$ och $_f$ och $__$, för alla naturliga tal $__$, för alla element $z$ av $max_spec$ av $_n$ och $_f$ och $__$, håller $return_type$ för $__$ och $z$.",
    "output": "postulate match_max_spec : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : max_spec _n _f __) -> return_sort) -> (case_found_max_spec : (m : Nat) -> (_ : Lt m _n) -> (__1 : Eq (_f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i _n) -> Eq (_f i) false) -> return_type m (found_max_spec _n _f m __ __1 __2)) -> (case_not_found_max_spec : (_ : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> return_type 0 (not_found_max_spec _n _f __)) -> (_ : Nat) -> (z : max_spec _n _f __) -> return_type __ z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Strue. Soit $k$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Supposons que $p$ appliqué à $k$ est égal à $true$. Alors $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $op$ appliqué à $f$ appliqué à $k$ et $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_n_to_eq_n. För alla funktioner $h$ från naturliga tal till naturliga tal, för alla naturliga tal $n$, för alla element $__$ av $permut$ av $h$ och $n$, för alla funktioner $__1$ från naturliga tal $m$ och element $__1$ av $Lt$ av $m$ och $n$ till element av $Eq$ av $h (m)$ och $m$, $h (n)= n$.",
    "output": "postulate permut_n_to_eq_n : (h : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut h n) -> (__1 : (m : Nat) -> (__1 : Lt m n) -> Eq (h m) m) -> Eq (h n) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10471. Let $n1 , n2 \\in N$. Then for all functions $p1$ and $p2$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f1$ and $f2$ from natural numbers to elements of $B$, for all elements $_clearme$ of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, for all functions $h$ from natural numbers to natural numbers, for all elements $_clearme0$ of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, for all functions $k$ from natural numbers to natural numbers, if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$ and $sub_hk$ holds for $k$ and $h$ and $B$ and $mk_range (B , f2 , n2 , p2)$ and $mk_range (B , f1 , n1 , p1)$ and $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, then for all functions $same$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $f1 (i)$ and $f2 (h (i))$, for all natural numbers $i$ and $m$, for all functions $Hind$ from functions $f$ from natural numbers to booleans and elements of $Leq$ of $0$ and $n1$ and elements $__1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m , f)$ and elements $__2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m , f)$ and $mk_range (B , f1 , 0 , p1)$ to elements of $Eq$ of $bigop$ applied to $0$ and the function that maps $i0$ to $p1$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f1$ applied to $i0$ and $bigop$ applied to $m$ and the function that maps $i0$ to $f$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f2$ applied to $i0$, for all functions $p20$ from natural numbers to booleans, if $0 \\leq n1$, then for all elements $sub1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m + 1 , p20)$, for all elements $sub2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m + 1 , p20)$ and $mk_range (B , f1 , 0 , p1)$, for all natural numbers $x2571$ and $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Sub0_to_false. Låt $h$ och $k$ vara funktioner från naturliga tal till naturliga tal. Låt $A$ vara en mängd. Låt $I$ och $J$ vara element av $range$ av $A$. Anta att $upto (A , I)= 0$. Låt $__1$ vara ett element av $sub_hk$ av $h$ och $k$ och $A$ och $J$ och $I$. Låt $i$ vara ett naturligt tal. Anta att $i < upto (A , J)$. Då är kontradiktion lika med $filter (A , J , i)$.",
    "output": "postulate sub0_to_false : (h : (_ : Nat) -> Nat) -> (k : (_ : Nat) -> Nat) -> (A : Set) -> (I : range A) -> (J : range A) -> (_ : Eq (upto A I) 0) -> (__1 : sub_hk h k A J I) -> (i : Nat) -> (__2 : Lt i (upto A J)) -> Eq (filter A J i) false"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_p_ord. Låt $p$ och $a$ och $b$ och $c$ och $d$ och $n$ och $m$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $p$ är primt. Då om $n$ är delbart med $m$, så om $p_ord (n , p)= mk_Prod (Nat , Nat , a , b)$, så om $p_ord (m , p)= mk_Prod (Nat , Nat , c , d)$, så är $b$ delbart med $d$ och $a \\leq c$.",
    "output": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> (__4 : Eq (p_ord n p) (mk_Prod Nat Nat a b)) -> (__5 : Eq (p_ord m p) (mk_Prod Nat Nat c d)) -> and (divisible b d) (Leq a c)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Strue. Pour tous les nombres naturels $k$, pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $p$ appliqué à $k$ est égal à $true$, alors $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $op$ appliqué à $f$ appliqué à $k$ et $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_exists. For all functions $f$ from natural numbers to booleans, for all natural numbers $n$ and $m$, if $m < n$ and $f (m)= true$, then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max (n , f)= m$.",
    "output": "postulate max_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> Eq (max n f) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15321. Soient $n$ et $m$ des nombres naturels. Alors si $0 < m$ et $0 = n$, alors si $0$ est divisible par $m$, alors pour tous les nombres naturels $q$, si $m = 0 q$, alors $m = 0$.",
    "output": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_div_to_times. Soit $n , m , q \\in N$. Supposons que $0 < q$ et $n \\div q < m$. Alors $n < q m$.",
    "output": "postulate lt_div_to_times : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> (__1 : Lt (div n q) m) -> Lt n (times q m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16002. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_CProp0. Soit $Hterm$ un nombre naturel. Soit $P$ une fonction des nombres naturels $_z713$ à des propositions. Soit $_H1$ une fonction des éléments $_z714$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$. Alors pour toutes les fonctions $_H2$ des nombres naturels $x_414$ et des fonctions $_x_416$ des éléments $_z714$ de $Eq$ de $Hterm$ et de $x_414$ à des éléments de $P$ de $x_414$ et des éléments $_z714$ de $Eq$ de $Hterm$ et de la somme de $x_414$ et de $1$ à des éléments de $P$ de la somme de $x_414$ et de $1$, $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_CProp0 : (Hterm : Nat) -> (P : (_z713 : Nat) -> Prop) -> (_H1 : (_z714 : Eq Hterm 0) -> P 0) -> (_H2 : (x_414 : Nat) -> (_x_416 : (_z714 : Eq Hterm x_414) -> P x_414) -> (_z714 : Eq Hterm (plus x_414 1)) -> P (plus x_414 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Found_max_spec. Let $n$ be a natural number. Let $f$ be a function from natural numbers to booleans. Let $m$ be a natural number. Then if $m < n$, then if $f (m)= true$, then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max_spec$ holds for $n$ and $f$ and $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Aop_inv_rect_Type0. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Aop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1530$ of $Aop$ of $x1$ and $x2$ to sets. Then for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op (x2 , a)$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op (a , x2)$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ and elements $_z1531$ of $Eq$ of $Hterm$ and $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$ to elements of $P$ of $mk_Aop (x1 , x2 , op , _nill , _nilr , _assoc)$, $P$ holds for $Hterm$.",
    "output": "postulate Aop_inv_rect_Type0 : (x1 : Set) -> (x2 : x1) -> (Hterm : Aop x1 x2) -> (P : (_z1530 : Aop x1 x2) -> Set) -> (_H1 : (op : (_ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> Eq (op x2 a) a) -> (_nilr : (a : x1) -> Eq (op a x2) a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> Eq (op a (op b c)) (op (op a b) c)) -> (_z1531 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_minus. Låt $n , p , q \\in N$. Anta att $n$ är delbart med $p$. Då om $n$ är delbart med $q$, så är $n$ delbart med $p - q$.",
    "output": "postulate divides_minus : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible n q) -> divisible n (minus p q)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Injective_to_injn. För alla funktioner $f$ från naturliga tal till naturliga tal, för alla naturliga tal $n$, för alla element $__$ av $injective$ av $Nat$ och $Nat$ och $f$, håller $injn$ för $f$ och $n$.",
    "output": "postulate injective_to_injn : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : injective Nat Nat f) -> injn f n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_minus. Soient $n$ et $p$ et $q$ des nombres naturels. Supposons que $n$ est divisible par $p$. Alors si $n$ est divisible par $q$, alors $n$ est divisible par la différence de $p$ et de $q$.",
    "output": "postulate divides_minus : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible n q) -> divisible n (minus p q)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_minus. Låt $n , p , q \\in N$. Anta att $n$ är delbart med $p$. Anta att $n$ är delbart med $q$. Då är $n$ delbart med skillnaden mellan $p$ och $q$.",
    "output": "postulate divides_minus : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible n q) -> divisible n (minus p q)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_times_div_div_times. Pour tous les nombres naturels $a$ et $n$ et $m$, si $0$ est inférieur à $m$, alors le produit de $a$ et du quotient de $n$ et de $m$ est inférieur ou ágal au quotient du produit de $a$ et de $n$ et de $m$.",
    "output": "postulate le_times_div_div_times : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Leq (times a (div n m)) (div (times a n) m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1571. Let $m$ and $n$ be natural numbers. Assume that $0$ is less than $n$. Then if the greatest common divisor of $m$ and $n$ is equal to $0$, then if $m$ is equal to $0$, then if $n$ is equal to $0$, then $m$ is equal to $n$.",
    "output": "postulate let_clause_1571 : (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (H : Eq (gcd m n) 0) -> (auto : Eq m 0) -> (auto' : Eq n 0) -> Eq m n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_rect_CProp0_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_967$ av $Dop$ av $A$ och $_nil$ till påståenden. Låt $_H_mk_Dop$ vara en funktion från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$. Låt $x_967$ vara ett element av $Dop$ av $A$ och $_nil$. Då håller $Q_$ för $x_967$.",
    "output": "postulate Dop_rect_CProp0_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_967 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_967 : Dop A _nil) -> Q_ x_967"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "F_ind_aux. Let $A$ be a set. Let $f$ be a function from elements of $A$ to natural numbers. Let $P$ be an element of $predicate$ of $A$. Then for all functions $__$ from natural numbers $n$ and functions from elements $a$ of $A$ and elements of $Lt$ of $f$ applied to $a$ and $n$ to elements of $P$ of $a$ and elements $a$ of $A$ and elements $__1$ of $Eq$ of $f$ applied to $a$ and $n$ to elements of $P$ of $a$, for all natural numbers $n$, for all elements $a$ of $A$, if $f$ applied to $a$ is equal to $n$, then $P$ holds for $a$.",
    "output": "postulate f_ind_aux : (A : Set) -> (f : (_ : A) -> Nat) -> (P : predicate A) -> (_ : (n : Nat) -> (_ : (a : A) -> (_ : Lt (f a) n) -> P a) -> (a : A) -> (__1 : Eq (f a) n) -> P a) -> (n : Nat) -> (a : A) -> (__1 : Eq (f a) n) -> P a"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_squareS_exp. Soit $n \\in N$. Supposons que $5$ est inférieur à $n$. Alors la puissance de la somme de $n$ et de $1$ et de $2$ est inférieure ou ágale à la puissance de $2$ et de $n$.",
    "output": "postulate le_squareS_exp : (n : Nat) -> (_ : Lt 5 n) -> Leq (pow (plus n 1) 2) (pow 2 n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Alors pour toutes les fonctions $p1$ et $p2$ des nombres naturels à des valeurs booléennes, pour toutes les fonctions $g1$ et $g2$ des nombres naturels à des nombres naturels, pour tous les nombres naturels $n1$, pour toutes les fonctions $Hind$ des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$ et des fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n1$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$, pour toutes les fonctions $H1$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$, pour toutes les fonctions $H2$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, si $p2 (n1)= true$ et $p1 (n1)= true$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n1) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))) -> (H1 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (H2 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (Hp2 : Eq (p2 n1) true) -> (Hp1 : Eq (p1 n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soient $p$ et $n$ et $q$ et $r$ des nombres naturels. Supposons que $0$ est inférieur à $p$. Supposons que $p$ n'est pas divisible par $r$. Supposons que $n$ est égal au produit de la puissance de $p$ et de $q$ et de $r$. Soit $q0 , q1 \\in N$. Alors si la somme de $q1$ et de $1$ est inférieure ou ágale à la puissance de $p$ et de la somme de $q1$ et de $1$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bigop_Sfalse. Låt $k$ vara ett naturligt tal. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Då för alla element $nil$ av $B$, för alla funktioner $op$ från element av $B$ och element $__1$ av $B$ till element av $B$, för alla funktioner $f$ från naturliga tal till element av $B$, om kontradiktion är lika med $p (k)$, så är $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på summan av $k$ och $1$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.",
    "output": "postulate bigop_Sfalse : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) false) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15691. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Då om $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$, så $n c - m d = 1$.",
    "output": "postulate let_clause_15691 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_body. Let $__ \\in N$. Let $__1$ be a function from natural numbers $__1$ to booleans. Let $H$ be a set. Then for all elements $__2$ of $H$, for all functions $__3$ from elements $__3$ of $H$ and elements $__4$ of $H$ to elements of $H$, for all functions $__4$ from natural numbers $__4$ to elements of $H$, $H$.",
    "output": "postulate bigop_body : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (H : Set) -> (__2 : H) -> (__3 : (__3 : H) -> (__4 : H) -> H) -> (__4 : (__4 : Nat) -> H) -> H"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_CProp2_body. For all functions $Q_$ from natural numbers $_x_405$ to propositions, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_406$ and elements $_x_408$ of $Q_$ of $x_406$ to elements of $Q_$ of the sum of $x_406$ and $1$, for all natural numbers $x_405$, $Q_$ holds for $x_405$.",
    "output": "postulate nat_rect_CProp2_body : (Q_ : (_x_405 : Nat) -> Prop) -> (_H_O : Q_ 0) -> (_H_S : (x_406 : Nat) -> (_x_408 : Q_ x_406) -> Q_ (plus x_406 1)) -> (x_405 : Nat) -> Q_ x_405"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_Type1_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Alors pour toutes les fonctions $Q_$ des éléments $_x_899$ de $ACop$ de $A$ et de $_nil$ à des éléments de $Type1$, pour toutes les fonctions $_H_mk_ACop$ des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$, pour tous les éléments $x_899$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_899$.",
    "output": "postulate ACop_rect_Type1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_899 : ACop A _nil) -> Type1) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_899 : ACop A _nil) -> Q_ x_899"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Ex_prime. Soit $n$ un nombre naturel. Alors si $1 \\leq n$, alors $ex$ tient pour $Nat$ et la fonction qui envoie $m$ à la conjonction de la conjonction de $Lt$ appliqué à $n$ et $m$ et de $Leq$ appliqué à $m$ et la somme de la factorielle de $n$ et de $1$ et de $prime$ appliqué à $m$.",
    "output": "postulate ex_prime : (n : Nat) -> (_ : Leq 1 n) -> ex Nat (\\ m : Nat -> and (and (Lt n m) (Leq m (plus (factorial n) 1))) (prime m))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Transitive_congruent. Soit $p$ un nombre naturel. Alors $transitive$ tient pour $Nat$ et la fonction qui envoie $n$ et $m$ à $congruent$ appliqué à $n$ et $m$ et $p$.",
    "output": "postulate transitive_congruent : (p : Nat) -> transitive Nat (\\ n : Nat -> \\ m : Nat -> congruent n m p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15692. Let $m , n , a , b \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c = 1$.",
    "output": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Minus_to_plus. Pour tous les nombres naturels $n$ et $m$ et $p$, si $m \\leq n$, alors si $n - m = p$, alors $n = m + p$.",
    "output": "postulate minus_to_plus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq m n) -> (__1 : Eq (minus n m) p) -> Eq n (plus m p)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Alors si $f$ appliqué à $b$ est égal à $j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_false. Let $n$ be a natural number. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Then $bigop$ applied to $n$ and the function that maps $i$ to absurdity and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $nil$.",
    "output": "postulate bigop_false : (n : Nat) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> Eq (bigop n (\\ i : Nat -> false) B nil op (\\ i : Nat -> f i)) nil"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_O_to_le_theta_exp_theta. Soit $m$ un nombre naturel. Alors si $0 < m$, alors $theta (2 m + 1)< 2 ^ (2 m)theta (m + 1)$.",
    "output": "postulate lt_O_to_le_theta_exp_theta : (m : Nat) -> (_ : Lt 0 m) -> Lt (theta (plus (times 2 m) 1)) (times (pow 2 (times 2 m)) (theta (plus m 1)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_Type3_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_895$ de $ACop$ de $A$ et de $_nil$ à des éléments de $Type3$. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $A$ et $_nil$ et $aop$ et $a$ et $b$ et de $op$ appliqué à $A$ et $_nil$ et $aop$ et $b$ et $a$ à des éléments de $Q_$ de $mk_ACop$ appliqué à $A$ et $_nil$ et $aop$ et $_comm$. Soit $x_895$ un élément de $ACop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_895$.",
    "output": "postulate ACop_rect_Type3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_895 : ACop A _nil) -> Type3) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_895 : ACop A _nil) -> Q_ x_895"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Mod_S_fact. För alla naturliga tal $n$ och $i$, om $1$ är mindre än $i$, så om $i$ är mindre än eller lika med $n$, så är $mod$ applicerat på summan av fakulteten av $n$ och $1$ och $i$ lika med $1$.",
    "output": "postulate mod_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> Eq (mod (plus (factorial n) 1) i) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si $b m - a p = 1$, alors $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Anta att $b \\leq n$ och $f (b)= j$. Anta att $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Då för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $0 < n$. Alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (posn : Lt 0 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_dx. Soit $B$ un ensemble. Soit $R$ un élément de $relation$ de $B$. Soit $l$ un nombre naturel. Alors pour tous les éléments $b1$ et $b$ de $B$, pour tous les éléments $__$ de $lstar$ de $B$ et de $R$ et de $l$ et de $b1$ et de $b$, pour tous les éléments $b2$ de $B$, pour tous les éléments $__1$ de $R$ de $b$ et de $b2$, $lstar$ tient pour $B$ et $R$ et la somme de $l$ et de $1$ et $b1$ et $b2$.",
    "output": "postulate lstar_dx : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b : B) -> (_ : lstar B R l b1 b) -> (b2 : B) -> (__1 : R b b2) -> lstar B R (plus l 1) b1 b2"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16003. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to the sum of $q$ and $1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Then if the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then if the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $n$ and $b$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Mod_p_ord_inv. Låt $p , m , x \\in N$. Då om $ord$ applicerat på $x$ och $p$ är mindre än $m$, så är $mod$ applicerat på $p_ord_inv$ applicerat på $p$ och $m$ och $x$ och $m$ lika med $ord$ applicerat på $x$ och $p$.",
    "output": "postulate mod_p_ord_inv : (p : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt (ord x p) m) -> Eq (mod (p_ord_inv p m x) m) (ord x p)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_ind_l. Soit $B$ un ensemble. Soit $R$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des propositions. Soit $b2$ un élément de $B$. Soit $P$ un élément de $relation2$ de $Nat$ et de $B$. Soit $__$ un élément de $P$ de $0$ et de $b2$. Soit $__1$ une fonction des nombres naturels $l$ et des éléments $b1$ de $B$ et des éléments $b$ de $B$ et des éléments $__1$ de $R$ de $b1$ et de $b$ et des éléments $__2$ de $lstar$ de $B$ et de $R$ et de $l$ et de $b$ et de $b2$ et des éléments $__3$ de $P$ de $l$ et de $b$ à des éléments de $P$ de $l + 1$ et de $b1$. Soit $l$ un nombre naturel. Soit $b1$ un élément de $B$. Soit $__2$ un élément de $lstar$ de $B$ et de $R$ et de $l$ et de $b1$ et de $b2$. Alors $P$ tient pour $l$ et $b1$.",
    "output": "postulate lstar_ind_l : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (__2 : lstar B R l b1 b2) -> P l b1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Times_mod. Let $a$ and $b$ and $c$ be natural numbers. Then if $0$ is less than $c$, then if $0$ is less than $b$, then $mod$ applied to the product of $a$ and $c$ and the product of $b$ and $c$ is equal to the product of $c$ and $mod$ applied to $a$ and $b$.",
    "output": "postulate times_mod : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Lt 0 c) -> (__1 : Lt 0 b) -> Eq (mod (times a c) (times b c)) (times c (mod a b))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Då om $i \\leq n$ och $j \\leq n$, så för alla naturliga tal $a$, om $a \\leq n$ och $f (a)= i$ och $a \\leq n$, så om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$ och $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_sigma_l. Soit $n , a \\in N$. Alors pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, pour toutes les fonctions $f$ des nombres naturels à des nombres naturels, la puissance de $a$ et de $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égale à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $a$ et de $f$ appliqué à $i$.",
    "output": "postulate exp_sigma_l : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow a (f i))) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b$ un nombre naturel. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_ind_body. Låt $_n$ vara ett naturligt tal. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Låt $Q_$ vara en funktion från naturliga tal $x_971$ och element $_x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$ till påståenden. Låt $_H_found_max_spec$ vara en funktion från naturliga tal $m$ och element $x_975$ av $Lt$ av $m$ och $_n$ och element $x_974$ av $Eq$ av $_f (m)$ och $true$ och funktioner $x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f (i)$ och kontradiktion till element av $Q_$ av $m$ och $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$. Då för alla funktioner $_H_not_found_max_spec$ från funktioner $x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f (i)$ och kontradiktion till element av $Q_$ av $0$ och $not_found_max_spec (_n , _f , x_976)$, för alla naturliga tal $x_971$, för alla element $x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$, håller $Q_$ för $x_971$ och $x_972$.",
    "output": "postulate max_spec_ind_body : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15441. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $n$ est inférieur ou ágal à $m$. Alors si $n$ est inférieur ou ágal à la somme de $q$ et de $1$, alors si $n$ n'est pas divisible par $m$, alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, pour tous les nombres naturels $b$, si la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ ou la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, alors si la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, alors la différence du produit de $n$ et de $b$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_inv_rect_CProp3. Låt $x1$ och $x2$ och $x3$ och $x4$ vara naturliga tal. Låt $Hterm$ vara ett element av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$. Då för alla funktioner $P$ från element $_z1476$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till påståenden, för alla funktioner $_H1$ från element $x_847$ av $Lt$ av $x4$ och $x2$ och element $x_846$ av $Eq$ av $x1$ och $x3 x2 + x4$ och element $_z1477$ av $Eq$ av $Hterm$ och $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$ till element av $P$ av $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_847 , x_846)$, håller $P$ för $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_CProp3 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1476 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_847 : Lt x4 x2) -> (x_846 : Eq x1 (plus (times x3 x2) x4)) -> (_z1477 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_847 x_846)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Iter_iter. Låt $A$ vara en mängd. Låt $g$ vara en funktion från element av $A$ till element av $A$. Låt $a$ vara ett element av $A$. Låt $b , c \\in N$. Då $iter (A , g , c , iter (A , g , b , a))= iter (A , g , b + c , a)$.",
    "output": "postulate iter_iter : (A : Set) -> (g : (_ : A) -> A) -> (a : A) -> (b : Nat) -> (c : Nat) -> Eq (iter A g c (iter A g b a)) (iter A g (plus b c) a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_to_not_ord_O. Pour tous les nombres naturels $p$ et $m$, si $0$ est inférieur à $m$, alors si $p$ est premier, alors si $p$ est divisible par $m$, alors $ord$ appliqué à $m$ et $p$ n'est pas égal à $0$.",
    "output": "postulate divides_to_not_ord_O : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : divisible p m) -> not (Eq (ord m p) 0)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_prim_n1. Soit $n$ un nombre naturel. Alors si $4$ est inférieur ou ágal à $n$, alors $prim$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ est inférieur ou ágal à $n$.",
    "output": "postulate le_prim_n1 : (n : Nat) -> (_ : Leq 4 n) -> Leq (prim (plus (times 2 n) 1)) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_ind. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_809$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_811$ av $Lt$ av $_r$ och $_m$ och element $x_810$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_811$ och $x_810$. Låt $x_809$ vara ett element av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$. Då håller $Q_$ för $x_809$.",
    "output": "postulate div_mod_spec_ind : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_809 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_811 : Lt _r _m) -> (x_810 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> (x_809 : div_mod_spec _n _m _q _r) -> Q_ x_809"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_inv_ind. Let $x1$ and $x2$ be natural numbers. Assume that $x1 \\leq x2$. Then for all functions $P$ from natural numbers $_z724$ to propositions, for all functions $_H1$ from elements $_z725$ of $Eq$ of $x2$ and $x1$ to elements of $P$ of $x1$, for all functions $_H2$ from natural numbers $m$ and elements $_x_419$ of $Leq$ of $x1$ and $m$ and functions $_x_421$ from elements $_z725$ of $Eq$ of $x2$ and $m$ to elements of $P$ of $m$ and elements $_z725$ of $Eq$ of $x2$ and $m + 1$ to elements of $P$ of $m + 1$, $P$ holds for $x2$.",
    "output": "postulate le_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (_Hterm : Leq x1 x2) -> (P : (_z724 : Nat) -> Prop) -> (_H1 : (_z725 : Eq x2 x1) -> P x1) -> (_H2 : (m : Nat) -> (_x_419 : Leq x1 m) -> (_x_421 : (_z725 : Eq x2 m) -> P m) -> (_z725 : Eq x2 (plus m 1)) -> P (plus m 1)) -> P x2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Mod_S_fact. Låt $n , i \\in N$. Anta att $1 < i$ och $i \\leq n$. Då $mod (n ! + 1 , i)= 1$.",
    "output": "postulate mod_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> Eq (mod (plus (factorial n) 1) i) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_plus_mod. Låt $m , n , q \\in N$. Då om $0 < q$, så $mod (m + n , q)\\leq mod (m , q)+ mod (n , q)$.",
    "output": "postulate le_plus_mod : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> Leq (mod (plus m n) q) (plus (mod m q) (mod n q))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Iter_iter. Let $A$ be a set. Let $g$ be a function from elements of $A$ to elements of $A$. Then for all elements $a$ of $A$, for all natural numbers $b$ and $c$, $iter$ applied to $A$ and $g$ and $c$ and $iter$ applied to $A$ and $g$ and $b$ and $a$ is equal to $iter$ applied to $A$ and $g$ and the sum of $b$ and $c$ and $a$.",
    "output": "postulate iter_iter : (A : Set) -> (g : (_ : A) -> A) -> (a : A) -> (b : Nat) -> (c : Nat) -> Eq (iter A g c (iter A g b a)) (iter A g (plus b c) a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_commute. Soient $n$ et $m$ des nombres naturels. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Soit $p22$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $B$ un ensemble. Alors pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $ACop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, si $0 < n$ et $0 < m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb (p11 (i), p12 (i , j))$ et de $andb (p21 (j), p22 (i , j))$, $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$.",
    "output": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_ind. Låt $_n \\in N$. Låt $Q_$ vara en funktion från naturliga tal $x_417$ och element $_x_418$ av $Leq$ av $_n$ och $x_417$ till påståenden. Låt $_H_le_n$ vara ett element av $Q_$ av $_n$ och $le_n (_n)$. Låt $_H_le_S$ vara en funktion från naturliga tal $m$ och element $x_419$ av $Leq$ av $_n$ och $m$ och element $_x_421$ av $Q_$ av $m$ och $x_419$ till element av $Q_$ av $m + 1$ och $le_S (_n , m , x_419)$. Låt $x_417$ vara ett naturligt tal. Anta att $_n \\leq x_417$. Då håller $Q_$ för $x_417$ och $x_418$.",
    "output": "postulate le_ind : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1569. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $c n - d m = 1$, then $n c - m d = 1$.",
    "output": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "F_min_true. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $b$ des nombres naturels. Alors pour tous les éléments $__$ de $ex$ de $Nat$ et de la fonction qui envoie $i$ à la conjonction de la conjonction de $Leq$ appliqué à $b$ et $i$ et de $Lt$ appliqué à $i$ et la somme de $n$ et de $b$ et de $Eq$ appliqué à $f$ appliqué à $i$ et $true$, $f (min (n , b , f))= true$.",
    "output": "postulate f_min_true : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : ex Nat (\\ i : Nat -> and (and (Leq b i) (Lt i (plus n b))) (Eq (f i) true))) -> Eq (f (min n b f)) true"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Decidable_divides. Låt $n$ och $m$ vara naturliga tal. Då håller $decidable$ för $divisible (n , m)$.",
    "output": "postulate decidable_divides : (n : Nat) -> (m : Nat) -> decidable (divisible n m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_Type2. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_825$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till element av $Type2$. Då för alla funktioner $_H_div_mod_spec_intro$ från element $x_827$ av $Lt$ av $_r$ och $_m$ och element $x_826$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_827$ och $x_826$, för alla element $x_825$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_825$.",
    "output": "postulate div_mod_spec_rect_Type2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_825 : div_mod_spec _n _m _q _r) -> Type2) -> (_H_div_mod_spec_intro : (x_827 : Lt _r _m) -> (x_826 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826)) -> (x_825 : div_mod_spec _n _m _q _r) -> Q_ x_825"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Prime_to_divides_M. Soit $m , p \\in N$. Supposons que $p$ est premier et $m + 1 < p$. Alors si $p \\leq 2 m + 1$, alors $p$ est divisible par $M (m)$.",
    "output": "postulate prime_to_divides_M : (m : Nat) -> (p : Nat) -> (_ : prime p) -> (__1 : Lt (plus m 1) p) -> (__2 : Leq p (plus (times 2 m) 1)) -> divisible p (M m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Exp_2. Låt $n \\in N$. Då $n ^ 2 = n n$.",
    "output": "postulate exp_2 : (n : Nat) -> Eq (pow n 2) (times n n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Minus_Sn_n. For all natural numbers $n$, $1 = n + 1 - n$.",
    "output": "postulate minus_Sn_n : (n : Nat) -> Eq 1 (minus (plus n 1) n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_times_to_le. Let $a$ and $n$ and $m$ be natural numbers. Assume that $0$ is less than $a$. Assume that the product of $a$ and $n$ is less than or equal to the product of $a$ and $m$. Then $n$ is less than or equal to $m$.",
    "output": "postulate le_times_to_le : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 a) -> (__1 : Leq (times a n) (times a m)) -> Leq n m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Transpose_i_j_i. For all natural numbers $i$ and $j$, $transpose$ applied to $i$ and $j$ and $i$ is equal to $j$.",
    "output": "postulate transpose_i_j_i : (i : Nat) -> (j : Nat) -> Eq (transpose i j i) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_to_congruent. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $0 < p$ et $m \\leq n$. Supposons que $p$ est divisible par $n - m$. Alors $congruent$ tient pour $n$ et $m$ et $p$.",
    "output": "postulate divides_to_congruent : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq m n) -> (__2 : divisible p (minus n m)) -> congruent n m p"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_rect_CProp2_body. För alla funktioner $Q_$ från naturliga tal $_x_405$ till påståenden, för alla element $_H_O$ av $Q_$ av $0$, för alla funktioner $_H_S$ från naturliga tal $x_406$ och element $_x_408$ av $Q_$ av $x_406$ till element av $Q_$ av $x_406 + 1$, för alla naturliga tal $x_405$, håller $Q_$ för $x_405$.",
    "output": "postulate nat_rect_CProp2_body : (Q_ : (_x_405 : Nat) -> Prop) -> (_H_O : Q_ 0) -> (_H_S : (x_406 : Nat) -> (_x_408 : Q_ x_406) -> Q_ (plus x_406 1)) -> (x_405 : Nat) -> Q_ x_405"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Aop_rect_CProp3. Pour tous les ensembles $A$, pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_879$ de $Aop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Aop$ des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $_nil$ et $a$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $_nil$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $op$ appliqué à $b$ et $c$ et de $op$ appliqué à $op$ appliqué à $a$ et $b$ et $c$ à des éléments de $Q_$ de $mk_Aop$ appliqué à $A$ et $_nil$ et $op$ et $_nill$ et $_nilr$ et $_assoc$, pour tous les éléments $x_879$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_879$.",
    "output": "postulate Aop_rect_CProp3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_879 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_879 : Aop A _nil) -> Q_ x_879"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp4_body. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_837$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_839$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_838$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_839$ et $x_838$, pour tous les éléments $x_837$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_837$.",
    "output": "postulate div_mod_spec_rect_CProp4_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_837 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_839 : Lt _r _m) -> (x_838 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_839 x_838)) -> (x_837 : div_mod_spec _n _m _q _r) -> Q_ x_837"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_plus_to_minus_r. Soient $a$ et $b$ et $c$ des nombres naturels. Supposons que la somme de $a$ et de $b$ est inférieure ou ágale à $c$. Alors $a$ est inférieur ou ágal à la différence de $c$ et de $b$.",
    "output": "postulate le_plus_to_minus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq (plus a b) c) -> Leq a (minus c b)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_rect_Type5_body. Låt $A$ vara en mängd. Då för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_947$ av $Dop$ av $A$ och $_nil$ till element av $Type5$, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$, för alla element $x_947$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_947$.",
    "output": "postulate Dop_rect_Type5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_947 : Dop A _nil) -> Type5) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_947 : Dop A _nil) -> Q_ x_947"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1078. Let $a , b , q , r , q1 , r1 \\in N$. Let $_clearme$ be an element of $div_mod_spec$ of $a$ and $b$ and $q$ and $r$. Then if $r < b$, then if $a = q b + r$, then for all elements $_clearme0$ of $div_mod_spec$ of $a$ and $b$ and $q1$ and $r1$, if $r1 < b$, then if $a = q1 b + r1$, then if $q \\leq q1$, then if $q < q1$, then $a = r + b q$.",
    "output": "postulate let_clause_1078 : (a : Nat) -> (b : Nat) -> (q : Nat) -> (r : Nat) -> (q1 : Nat) -> (r1 : Nat) -> (_clearme : div_mod_spec a b q r) -> (ltrb : Lt r b) -> (spec : Eq a (plus (times q b) r)) -> (_clearme0 : div_mod_spec a b q1 r1) -> (ltr1b : Lt r1 b) -> (spec1 : Eq a (plus (times q1 b) r1)) -> (leqq1 : Leq q q1) -> (ltqq1 : Lt q q1) -> Eq a (plus r (times b q))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_ord_rem. Låt $n$ och $m$ vara naturliga tal. Anta att $n$ är primt och $0 < m$. Då om $n$ är delbart med $m$, så $ord_rem (m , n)< m$.",
    "output": "postulate lt_ord_rem : (n : Nat) -> (m : Nat) -> (_ : prime n) -> (__1 : Lt 0 m) -> (__2 : divisible n m) -> Lt (ord_rem m n) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_smallest_factor. Låt $n$ vara ett naturligt tal. Anta att $n$ är primt. Då $smallest_factor (n)= n$.",
    "output": "postulate prime_to_smallest_factor : (n : Nat) -> (_ : prime n) -> Eq (smallest_factor n) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Sub_hk. Let $__$ be a function from natural numbers to natural numbers. Then for all functions $__1$ from natural numbers $__1$ to natural numbers, for all sets $A$, $relation$ holds for $range$ applied to $A$.",
    "output": "postulate sub_hk : (_ : (_ : Nat) -> Nat) -> (__1 : (__1 : Nat) -> Nat) -> (A : Set) -> relation (range A)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Ord_times. För alla naturliga tal $p$ och $m$ och $n$, om $0 < m$ och $0 < n$, så om $p$ är primt, så $ord (m n , p)= ord (m , p)+ ord (n , p)$.",
    "output": "postulate ord_times : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 0 n) -> (__2 : prime p) -> Eq (ord (times m n) p) (plus (ord m p) (ord n p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1075. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $bijf$ be an element of $bijn$ of $f$ and $n + 1$. Then if $f (n + 1)= n + 1$, then for all natural numbers $i$, if $i \\leq n$, then for all natural numbers $a$, if $a \\leq n + 1$ and $f (a)= i$ and $a \\leq n + 1$, then if $f (a)= i$ and $a = n + 1$, then $i = a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_exp1. Pour tous les nombres naturels $n$ et $m$ et $a$, si $0$ est inférieur à $a$, alors si $n$ est inférieur ou ágal à $m$, alors la puissance de $n$ et de $a$ est inférieure ou ágale à la puissance de $m$ et de $a$.",
    "output": "postulate le_exp1 : (n : Nat) -> (m : Nat) -> (a : Nat) -> (_ : Lt 0 a) -> (__1 : Leq n m) -> Leq (pow n a) (pow m a)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c \\in N$. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Assume that the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the difference of the product of $m$ and $b$ and the product of $p$ and $a$ is equal to $1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1075. Soit $f$ une fonction des nombres naturels à des nombres naturels. Alors pour tous les nombres naturels $n$, pour tous les éléments $bijf$ de $bijn$ de $f$ et de $n + 1$, si $f (n + 1)= n + 1$, alors pour tous les nombres naturels $i$, si $i \\leq n$, alors pour tous les nombres naturels $a$, si $a \\leq n + 1$ et $f (a)= i$, alors si $a \\leq n + 1$, alors si $f (a)= i$, alors si $a = n + 1$, alors $i = a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Exp_exp_times. For all natural numbers $n$ and $p$ and $q$, $n ^ p ^ q = n ^ (p q)$.",
    "output": "postulate exp_exp_times : (n : Nat) -> (p : Nat) -> (q : Nat) -> Eq (pow (pow n p) q) (pow n (times p q))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Filter_lstar. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $__ \\in N$. Then for all elements $__1$ and $__2$ of $B$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$ to elements of $return_type$ of $z$, for all elements $z$ of $lstar$ of $B$ and $_R$ and $__$ and $__1$ and $__2$, $return_type$ holds for $z$.",
    "output": "postulate filter_lstar : (B : Set) -> (_R : relation B) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (return_sort : Sort) -> (return_type : (z : lstar B _R __ __1 __2) -> return_sort) -> (return : (z : lstar B _R __ __1 __2) -> return_type z) -> (z : lstar B _R __ __1 __2) -> return_type z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Commutative_gcd. Let $n$ and $m$ be natural numbers. Then the greatest common divisor of $m$ and $n$ is equal to the greatest common divisor of $n$ and $m$.",
    "output": "postulate commutative_gcd : (n : Nat) -> (m : Nat) -> Eq (gcd n m) (gcd m n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Found_max_spec. Låt $n \\in N$. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $m \\in N$. Anta att $m < n$ och $f (m)= true$. Låt $__2$ vara en funktion från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion. Då håller $max_spec$ för $n$ och $f$ och $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_inv_rect_CProp4. Pour tous les nombres naturels $x1$ et $x2$ et $x3$ et $x4$, pour tous les éléments $Hterm$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$, pour toutes les fonctions $P$ des éléments $_z1470$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des propositions, pour toutes les fonctions $_H1$ des éléments $x_839$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_838$ de $Eq$ de $x1$ et de la somme du produit de $x3$ et de $x2$ et de $x4$ et des éléments $_z1471$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro$ appliqué à $x1$ et $x2$ et $x3$ et $x4$ et $x_839$ et $x_838$ à des éléments de $P$ de $div_mod_spec_intro$ appliqué à $x1$ et $x2$ et $x3$ et $x4$ et $x_839$ et $x_838$, $P$ tient pour $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_CProp4 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1470 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_839 : Lt x4 x2) -> (x_838 : Eq x1 (plus (times x3 x2) x4)) -> (_z1471 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_839 x_838)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Assume that $f (b)= j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$. Then for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Sfalse. Soit $k$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Alors si contradiction est égal à $p (k)$, alors $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Sfalse : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) false) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1600. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_ind_body. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_915$ of $range$ of $_A$ to propositions. Let $_H_mk_range$ be a function from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range (_A , _enum , _upto , _filter)$. Let $x_915$ be an element of $range$ of $_A$. Then $Q_$ holds for $x_915$.",
    "output": "postulate range_ind_body : (_A : Set) -> (Q_ : (_x_915 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_915 : range _A) -> Q_ x_915"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16002. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15621. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$ est égale à $1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Gcd_1_to_divides_times_to_divides. Låt $p$ och $n$ och $m$ vara naturliga tal. Anta att $0$ är mindre än $p$. Då om det största gemensama delaret av $p$ och $n$ är lika med $1$, så om $p$ är delbart med produkten av $n$ och $m$, så är $p$ delbart med $m$.",
    "output": "postulate gcd_1_to_divides_times_to_divides : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 p) -> (__1 : Eq (gcd p n) 1) -> (__2 : divisible p (times n m)) -> divisible p m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lstar_r_S. För alla mängder $B$, för alla element $R$ av $relation$ av $B$, för alla naturliga tal $l$, för alla element $b1$ och $b$ av $B$, för alla element $__$ av $lstar_r$ av $B$ och $R$ och $l$ och $b1$ och $b$, för alla element $b2$ av $B$, för alla element $__1$ av $R$ av $b$ och $b2$, håller $lstar_r$ för $B$ och $R$ och summan av $l$ och $1$ och $b1$ och $b2$.",
    "output": "postulate lstar_r_S : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b : B) -> (_ : lstar_r B R l b1 b) -> (b2 : B) -> (__1 : R b b2) -> lstar_r B R (plus l 1) b1 b2"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Max_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$, si $m < n$, alors si $f (m)= true$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des éléments $__2$ de $Lt$ de $m$ et de $i$ et des éléments $__3$ de $Lt$ de $i$ et de $n$ à des éléments de $Eq$ de $f (i)$ et de contradiction, $max (n , f)= m$.",
    "output": "postulate max_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> Eq (max n f) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_inv_rect_CProp3. Let $x1$ be a set. Then for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1740$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1741$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.",
    "output": "postulate Dop_inv_rect_CProp3 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1740 : Dop x1 x2) -> Prop) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1741 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_n_Sm_elim. Let $n$ and $m$ be natural numbers. Assume that $n \\leq m + 1$. Let $P$ be a proposition. Let $__1$ be a function from elements $__1$ of $Leq$ of $n + 1$ and $m + 1$ to elements of $P$. Let $__2$ be a function from elements $__2$ of $Eq$ of $n$ and $m + 1$ to elements of $P$. Then $P$.",
    "output": "postulate le_n_Sm_elim : (n : Nat) -> (m : Nat) -> (_ : Leq n (plus m 1)) -> (P : Prop) -> (__1 : (__1 : Leq (plus n 1) (plus m 1)) -> P) -> (__2 : (__2 : Eq n (plus m 1)) -> P) -> P"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5 < n$. Soit $m \\in N$. Supposons que $6 \\leq m$. Supposons que $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a \\in N$. Supposons que $6 \\leq a$. Supposons que $2 (a + 1)+ 1 \\leq 2 ^ a$. Soient $x2515$ et $x2516$ des nombres naturels. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1575. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$. Assume that $c n - d m = 1$. Let $x1029 \\in N$. Then $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_ind. For all functions $Q_$ from natural numbers $_x_365$ to propositions, for all elements $_H_O$ of $Q_$ of $0$, for all functions $_H_S$ from natural numbers $x_366$ and elements $_x_368$ of $Q_$ of $x_366$ to elements of $Q_$ of the sum of $x_366$ and $1$, for all natural numbers $x_365$, $Q_$ holds for $x_365$.",
    "output": "postulate nat_ind : (Q_ : (_x_365 : Nat) -> Prop) -> (_H_O : Q_ 0) -> (_H_S : (x_366 : Nat) -> (_x_368 : Q_ x_366) -> Q_ (plus x_366 1)) -> (x_365 : Nat) -> Q_ x_365"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1600. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $c n - d m = 1$, så är $n c - m d$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Congruent_times. Let $n$ and $m$ and $n1$ and $m1$ and $p$ be natural numbers. Then if $0 < p$, then for all elements $__1$ of $congruent$ of $n$ and $n1$ and $p$, for all elements $__2$ of $congruent$ of $m$ and $m1$ and $p$, $congruent$ holds for $n \\times m$ and $n1 \\times m1$ and $p$.",
    "output": "postulate congruent_times : (n : Nat) -> (m : Nat) -> (n1 : Nat) -> (m1 : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : congruent n n1 p) -> (__2 : congruent m m1 p) -> congruent (times n m) (times n1 m1) p"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_sumI. For all natural numbers $a$ and $b$ and $c$, for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, if $a$ is less than or equal to $b$, then if $b$ is less than or equal to $c$, then $bigop$ applied to the difference of $c$ and $a$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $a$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $a$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $b$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $b$ and $bigop$ applied to the difference of $b$ and $a$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $a$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $a$.",
    "output": "postulate bigop_sumI : (a : Nat) -> (b : Nat) -> (c : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> (__1 : Leq b c) -> Eq (bigop (minus c a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (op B nil op (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i b)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b))) (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_inv_rect_CProp0. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Let $P$ be a function from elements $_z1494$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions. Then for all functions $_H1$ from elements $x_859$ of $Lt$ of $x4$ and $x2$ and elements $x_858$ of $Eq$ of $x1$ and the sum of the product of $x3$ and $x2$ and $x4$ and elements $_z1495$ of $Eq$ of $Hterm$ and $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_859$ and $x_858$ to elements of $P$ of $div_mod_spec_intro$ applied to $x1$ and $x2$ and $x3$ and $x4$ and $x_859$ and $x_858$, $P$ holds for $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_CProp0 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1494 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_859 : Lt x4 x2) -> (x_858 : Eq x1 (plus (times x3 x2) x4)) -> (_z1495 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_859 x_858)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_aop. Pour tous les nombres naturels $n$, pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $R$ de $Dop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, pour tous les éléments $a$ de $B$, $ACop$ tient pour $B$ et $nil$.",
    "output": "postulate let_aop : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (R : Dop B nil) -> (f : (_ : Nat) -> B) -> (a : B) -> ACop B nil"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_times_div_div_times. Soit $a , n , m \\in N$. Alors si $0$ est inférieur à $m$, alors le produit de $a$ et du quotient de $n$ et de $m$ est inférieur ou ágal au quotient du produit de $a$ et de $n$ et de $m$.",
    "output": "postulate le_times_div_div_times : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Leq (times a (div n m)) (div (times a n) m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_mop. Let $n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $R$ be an element of $Dop$ of $B$ and $nil$. Let $f$ be a function from natural numbers to elements of $B$. Let $a$ and $_x_969$ and $_x_970$ be elements of $B$. Then $B$.",
    "output": "postulate let_mop : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (R : Dop B nil) -> (f : (_ : Nat) -> B) -> (a : B) -> (_x_969 : B) -> (_x_970 : B) -> B"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1532. Soit $n , m \\in N$. Supposons que $n$ est divisible par $m$. Supposons que $0$ est égal à $n$. Soit $d$ un nombre naturel. Supposons que $m$ est égal au produit de $0$ et de $d$. Alors $m$ est égal à $0$.",
    "output": "postulate let_clause_1532 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Gcd_times_SO_to_gcd_SO. Soient $m$ et $n$ et $p$ des nombres naturels. Supposons que $0 < n$. Supposons que $0 < p$. Alors si $1$ est égal au diviseur commun plus grand de $m$ et du produit de $n$ et de $p$, alors $1$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate gcd_times_SO_to_gcd_SO : (m : Nat) -> (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 p) -> (__2 : Eq (gcd m (times n p)) 1) -> Eq (gcd m n) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_rect_CProp2_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Alors pour toutes les fonctions $Q_$ des éléments $_x_963$ de $Dop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Dop$ des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod (a , _nil)$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod (a , aop__o__op (A , _nil , sum , b , c))$ et de $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ à des éléments de $Q_$ de $mk_Dop (A , _nil , sum , prod , _null , _distr)$, pour tous les éléments $x_963$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_963$.",
    "output": "postulate Dop_rect_CProp2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_963 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_963 : Dop A _nil) -> Q_ x_963"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1551. Låt $m$ och $n$ vara naturliga tal. Anta att $0 = n$. Låt $x347 \\in N$. Då $n = x347 n$.",
    "output": "postulate let_clause_1551 : (m : Nat) -> (n : Nat) -> (eqn0 : Eq 0 n) -> (x347 : Nat) -> Eq n (times x347 n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16002. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "P_ord_to_not_eq_O. Låt $n , p , q , r \\in N$. Anta att $1 < n$. Då om $p_ord (n , nth_prime (p))= mk_Prod (Nat , Nat , q , r)$, så är $r$ inte lika med $0$.",
    "output": "postulate p_ord_to_not_eq_O : (n : Nat) -> (p : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (p_ord n (nth_prime p)) (mk_Prod Nat Nat q r)) -> not (Eq r 0)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Pi_p_primeb5. Pour tous les nombres naturels $n$, si $1 < n$, alors $bigop$ appliqué à la somme de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ est égal à $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$.",
    "output": "postulate pi_p_primeb5 : (n : Nat) -> (_ : Lt 1 n) -> Eq (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1))))))) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1)))))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_S_S. Soient $n$ et $m$ des nombres naturels. Supposons que $n \\leq m$. Alors $n + 1 \\leq m + 1$.",
    "output": "postulate le_S_S : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq (plus n 1) (plus m 1)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_sum. Soient $k1$ et $k2$ des nombres naturels. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ et $g$ des nombres naturels à des éléments de $B$, $bigop$ appliqué à la somme de $k1$ et de $k2$ et la fonction qui envoie $i$ à $match_bool$ appliqué à $Set$ et la fonction qui envoie $__$ à $bool$ et $p1$ appliqué à la différence de $i$ et de $k2$ et $p2$ appliqué à $i$ et $leb$ appliqué à $k2$ et $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $match_bool$ appliqué à $Set$ et la fonction qui envoie $__$ à $B$ et $f$ appliqué à la différence de $i$ et de $k2$ et $g$ appliqué à $i$ et $leb$ appliqué à $k2$ et $i$ est égal à $op$ appliqué à $B$ et $nil$ et $op$ et $bigop$ appliqué à $k1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $bigop$ appliqué à $k2$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $g$ appliqué à $i$.",
    "output": "postulate bigop_sum : (k1 : Nat) -> (k2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (g : (_ : Nat) -> B) -> Eq (op B nil op (bigop k1 (\\ i : Nat -> p1 i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k2 (\\ i : Nat -> p2 i) B nil (op B nil op) (\\ i : Nat -> g i))) (bigop (plus k1 k2) (\\ i : Nat -> match_bool Set (\\ _ : bool -> bool) (p1 (minus i k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (\\ i : Nat -> match_bool Set (\\ _ : bool -> B) (f (minus i k2)) (g i) (leb k2 i)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lprim. Låt $__$ och $__1$ vara naturliga tal. Då för alla listor $__2$ av naturliga tal, håller $list$ för $Nat$.",
    "output": "postulate lprim : (_ : Nat) -> (__1 : Nat) -> (__2 : list Nat) -> list Nat"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_Type5_body. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_817$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till element av $Type5$. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_819$ av $Lt$ av $_r$ och $_m$ och element $x_818$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_819 , x_818)$. Låt $x_817$ vara ett element av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$. Då håller $Q_$ för $x_817$.",
    "output": "postulate div_mod_spec_rect_Type5_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_817 : div_mod_spec _n _m _q _r) -> Type5) -> (_H_div_mod_spec_intro : (x_819 : Lt _r _m) -> (x_818 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_819 x_818)) -> (x_817 : div_mod_spec _n _m _q _r) -> Q_ x_817"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $bijf$ vara ett element av $bijn$ av $f$ och $n + 1$. Anta att $f (n + 1)= n + 1$. Låt $i \\in N$. Då om $i \\leq n$, så för alla naturliga tal $a$, om $a \\leq n + 1$ och $f (a)= i$, så om $a \\leq n + 1$, så om $f (a)= i$, så om $a = n + 1$, så $i = a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_O_smallest_factor. Soit $n$ un nombre naturel. Alors si $0 < n$, alors $0 < smallest_factor (n)$.",
    "output": "postulate lt_O_smallest_factor : (n : Nat) -> (_ : Lt 0 n) -> Lt 0 (smallest_factor n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_exp1. Soit $n , m , a \\in N$. Alors si $0 < a$, alors si $n \\leq m$, alors $n ^ a \\leq m ^ a$.",
    "output": "postulate le_exp1 : (n : Nat) -> (m : Nat) -> (a : Nat) -> (_ : Lt 0 a) -> (__1 : Leq n m) -> Leq (pow n a) (pow m a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_to_le_min. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $m$ des nombres naturels. Supposons que $n \\leq m$. Alors pour tous les nombres naturels $b$, $min (n , b , f)\\leq min (m , b , f)$.",
    "output": "postulate le_to_le_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> (b : Nat) -> Leq (min n b f) (min m b f)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233$ be a natural number. Then for all elements $x_1232$ and $x_1231$ of $B$, for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.",
    "output": "postulate lstar_ind : (B : Set) -> (_R : relation B) -> (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) -> (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) -> (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (plus l 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) -> (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Q_ x_1233 x_1232 x_1231 x_1234"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Invert_permut. Låt $__$ vara ett naturligt tal. Låt $__1$ vara en funktion från naturliga tal $__1$ till naturliga tal. Låt $__2$ vara ett naturligt tal. Då $Nat$.",
    "output": "postulate invert_permut : (_ : Nat) -> (__1 : (__1 : Nat) -> Nat) -> (__2 : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_commute. Soient $n$ et $m$ des nombres naturels. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Soit $p22$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Alors pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, si $0 < n$, alors si $0 < m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb (p11 (i), p12 (i , j))$ et de $andb (p21 (j), p22 (i , j))$, $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$.",
    "output": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Min_body. Pour tous les nombres naturels $__$ et $__1$, pour toutes les fonctions $__2$ des nombres naturels $__2$ à des valeurs booléennes, $Nat$.",
    "output": "postulate min_body : (_ : Nat) -> (__1 : Nat) -> (__2 : (__2 : Nat) -> bool) -> Nat"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Sub_lt. Let $A$ be a set. Let $e$ be a function from natural numbers to elements of $A$. Let $p$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Then if $n$ is less than or equal to $m$, then $sub_hk$ holds for the function that maps $x$ to $x$ and the function that maps $x$ to $x$ and $A$ and $mk_range$ applied to $A$ and $e$ and $n$ and $p$ and $mk_range$ applied to $A$ and $e$ and $m$ and $p$.",
    "output": "postulate sub_lt : (A : Set) -> (e : (_ : Nat) -> A) -> (p : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> sub_hk (\\ x : Nat -> x) (\\ x : Nat -> x) A (mk_range A e n p) (mk_range A e m p)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_inv_rect_CProp4. Pour tous les ensembles $x1$, pour tous les éléments $x2$ de $x1$, pour tous les éléments $Hterm$ de $Dop$ de $x1$ et de $x2$, pour toutes les fonctions $P$ des éléments $_z1734$ de $Dop$ de $x1$ et de $x2$ à des propositions, pour toutes les fonctions $_H1$ des éléments $sum$ de $ACop$ de $x1$ et de $x2$ et des fonctions $prod$ des éléments de $x1$ et des éléments $__1$ de $x1$ à des éléments de $x1$ et des fonctions $_null$ des éléments $a$ de $x1$ à des éléments de $Eq$ de $prod (a , x2)$ et de $x2$ et des fonctions $_distr$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ et des éléments $c$ de $x1$ à des éléments de $Eq$ de $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ et de $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ et des éléments $_z1735$ de $Eq$ de $Hterm$ et de $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ à des éléments de $P$ de $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ tient pour $Hterm$.",
    "output": "postulate Dop_inv_rect_CProp4 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1734 : Dop x1 x2) -> Prop) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1735 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Found_min_spec. Låt $n$ och $b$ vara naturliga tal. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $m \\in N$. Då om $b \\leq m$, så om $m < n + b$, så om $f (m)= true$, så för alla funktioner $__3$ från naturliga tal $i$ och element $__3$ av $Leq$ av $b$ och $i$ och element $__4$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $f (i)$ och kontradiktion, håller $min_spec$ för $n$ och $b$ och $f$ och $m$.",
    "output": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_gcd_times. Let $m , n , p \\in N$. Assume that $0 < p$. Then the greatest common divisor of $m$ and the product of $n$ and $p$ is less than or equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate le_gcd_times : (m : Nat) -> (n : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> Leq (gcd m n) (gcd m (times n p))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_n_O. Soit $n \\in N$. Alors $1$ est égal à la puissance de $n$ et de $0$.",
    "output": "postulate exp_n_O : (n : Nat) -> Eq 1 (pow n 0)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Aop_rect_CProp4. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_875$ av $Aop$ av $A$ och $_nil$ till påståenden. Då för alla funktioner $_H_mk_Aop$ från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op (_nil , a)$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op (a , _nil)$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op (a , op (b , c))$ och $op (op (a , b), c)$ till element av $Q_$ av $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, för alla element $x_875$ av $Aop$ av $A$ och $_nil$, håller $Q_$ för $x_875$.",
    "output": "postulate Aop_rect_CProp4 : (A : Set) -> (_nil : A) -> (Q_ : (_x_875 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_875 : Aop A _nil) -> Q_ x_875"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bertrand_down. För alla naturliga tal $n$, om $0 < n$, så om $n \\leq 2 ^ 8$, så håller $bertrand$ för $n$.",
    "output": "postulate bertrand_down : (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n (pow 2 8)) -> bertrand n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$. Supposons que $a p - b m = 1$. Alors $p a - m b = 1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Times_n_1. Let $n \\in N$. Then $n$ is equal to the product of $n$ and $1$.",
    "output": "postulate times_n_1 : (n : Nat) -> Eq n (times n 1)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n \\in N$. Assume that $2 ^ 7 \\leq n$. Let $p \\in N$. Assume that $\\sqrt{ (2 n)}+ 1 \\leq p$. Assume that $p < 2 n + 1$. Then if $leb (2 , k (2 n , p))= true$, then if $2 n < p ^ 2$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "True_to_le_max. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Assume that $m < n$ and $f (m)= true$. Then $m \\leq max (n , f)$.",
    "output": "postulate true_to_le_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> Leq m (max n f)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_ind_body. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_889$ av $ACop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op (A , _nil , aop , a , b)$ och $op (A , _nil , aop , b , a)$ till element av $Q_$ av $mk_ACop (A , _nil , aop , _comm)$, för alla element $x_889$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_889$.",
    "output": "postulate ACop_ind_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_889 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_889 : ACop A _nil) -> Q_ x_889"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Match_lstar_r. För alla mängder $B$, för alla element $_R$ av $relation$ av $B$, för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från naturliga tal och element $__1$ av $B$ och element $__2$ av $B$ och element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$ till element av $return_sort$, för alla funktioner $case_lstar_r_O$ från element $b$ av $B$ till element av $return_type$ av $0$ och $b$ och $b$ och $lstar_r_O (B , _R , b)$, för alla funktioner $case_lstar_r_S$ från naturliga tal $l$ och element $b1$ av $B$ och element $b$ av $B$ och element av $lstar_r$ av $B$ och $_R$ och $l$ och $b1$ och $b$ och element $b2$ av $B$ och element $__1$ av $_R$ av $b$ och $b2$ till element av $return_type$ av $l + 1$ och $b1$ och $b2$ och $lstar_r_S (B , _R , l , b1 , b , __ , b2 , __1)$, för alla naturliga tal $__$, för alla element $__1$ och $__2$ av $B$, för alla element $z$ av $lstar_r$ av $B$ och $_R$ och $__$ och $__1$ och $__2$, håller $return_type$ för $__$ och $__1$ och $__2$ och $z$.",
    "output": "postulate match_lstar_r : (B : Set) -> (_R : relation B) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar_r B _R __ __1 __2) -> return_sort) -> (case_lstar_r_O : (b : B) -> return_type 0 b b (lstar_r_O B _R b)) -> (case_lstar_r_S : (l : Nat) -> (b1 : B) -> (b : B) -> (_ : lstar_r B _R l b1 b) -> (b2 : B) -> (__1 : _R b b2) -> return_type (plus l 1) b1 b2 (lstar_r_S B _R l b1 b __ b2 __1)) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (z : lstar_r B _R __ __1 __2) -> return_type __ __1 __2 z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_n. Soit $n \\in N$. Alors $n \\leq n$.",
    "output": "postulate le_n : (n : Nat) -> Leq n n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Then if $0$ is less than $n$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (posn : Lt 0 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Eq_Psi_Psi'. Let $n$ be a natural number. Then $Psi$ applied to $n$ is equal to $Psi'$ applied to $n$.",
    "output": "postulate eq_Psi_Psi' : (n : Nat) -> Eq (Psi n) (Psi' n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $bijf$ vara ett element av $bijn$ av $f$ och $n + 1$. Anta att $f (n + 1)= n + 1$. Låt $i$ vara ett naturligt tal. Anta att $i \\leq n$. Låt $a \\in N$. Anta att $a \\leq n + 1$ och $f (a)= i$. Då om $a \\leq n + 1$, så om $f (a)= i$, så om $a = n + 1$, så $i = a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Eq_mod_to_divides. Låt $n$ och $m$ och $q$ vara naturliga tal. Anta att $0 < q$ och $mod (n , q)= mod (m , q)$. Då är $q$ delbart med $n - m$.",
    "output": "postulate eq_mod_to_divides : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> (__1 : Eq (mod n q) (mod m q)) -> divisible q (minus n m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1532. Let $n , m \\in N$. Assume that $n$ is divisible by $m$. Assume that $0 = n$. Then for all natural numbers $d$, if $m = 0 d$, then $m = 0$.",
    "output": "postulate let_clause_1532 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Ord_rem. For all natural numbers $__$ and $__1$, $Nat$.",
    "output": "postulate ord_rem : (_ : Nat) -> (__1 : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15625. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$ est égale à $1$.",
    "output": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Min_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $t , m \\in N$. Supposons que $m$ est inférieur à $t$. Supposons que $f$ appliqué à $m$ est égal à $true$. Soient $k$ et $b$ des nombres naturels. Supposons que $b$ est inférieur ou ágal à $m$. Soit $__3$ une fonction des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f$ appliqué à $i$ et de contradiction. Alors si $t$ est égal à la somme de $k$ et de $b$, alors $min$ appliqué à $k$ et $b$ et $f$ est égal à $m$.",
    "output": "postulate min_exists : (f : (_ : Nat) -> bool) -> (t : Nat) -> (m : Nat) -> (_ : Lt m t) -> (__1 : Eq (f m) true) -> (k : Nat) -> (b : Nat) -> (__2 : Leq b m) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> (__4 : Eq t (plus k b)) -> Eq (min k b f) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lstar_inv_ind. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $relation$ av $x1$. Låt $x3$ vara ett naturligt tal. Låt $x4$ och $x5$ vara element av $x1$. Låt $_Hterm$ vara ett element av $lstar$ av $x1$ och $x2$ och $x3$ och $x4$ och $x5$. Låt $P$ vara en funktion från naturliga tal $_z2089$ och element $_z2088$ av $x1$ och element $_z2087$ av $x1$ till påståenden. Då för alla funktioner $_H1$ från element $b$ av $x1$ och element $_z2092$ av $Eq$ av $x3$ och $0$ och element $_z2091$ av $Eq$ av $x4$ och $b$ och element $_z2090$ av $Eq$ av $x5$ och $b$ till element av $P$ av $0$ och $b$ och $b$, för alla funktioner $_H2$ från element $b1$ av $x1$ och element $b$ av $x1$ och element $_x_1236$ av $x2$ av $b1$ och $b$ och naturliga tal $l$ och element $b2$ av $x1$ och element $_x_1235$ av $lstar$ av $x1$ och $x2$ och $l$ och $b$ och $b2$ och funktioner $_x_1238$ från element $_z2092$ av $Eq$ av $x3$ och $l$ och element $_z2091$ av $Eq$ av $x4$ och $b$ och element $_z2090$ av $Eq$ av $x5$ och $b2$ till element av $P$ av $l$ och $b$ och $b2$ och element $_z2092$ av $Eq$ av $x3$ och $l + 1$ och element $_z2091$ av $Eq$ av $x4$ och $b1$ och element $_z2090$ av $Eq$ av $x5$ och $b2$ till element av $P$ av $l + 1$ och $b1$ och $b2$, håller $P$ för $x3$ och $x4$ och $x5$.",
    "output": "postulate lstar_inv_ind : (x1 : Set) -> (x2 : relation x1) -> (x3 : Nat) -> (x4 : x1) -> (x5 : x1) -> (_Hterm : lstar x1 x2 x3 x4 x5) -> (P : (_z2089 : Nat) -> (_z2088 : x1) -> (_z2087 : x1) -> Prop) -> (_H1 : (b : x1) -> (_z2092 : Eq x3 0) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b) -> P 0 b b) -> (_H2 : (b1 : x1) -> (b : x1) -> (_x_1236 : x2 b1 b) -> (l : Nat) -> (b2 : x1) -> (_x_1235 : lstar x1 x2 l b b2) -> (_x_1238 : (_z2092 : Eq x3 l) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b2) -> P l b b2) -> (_z2092 : Eq x3 (plus l 1)) -> (_z2091 : Eq x4 b1) -> (_z2090 : Eq x5 b2) -> P (plus l 1) b1 b2) -> P x3 x4 x5"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$. Assume that $j \\leq n$. Then for all natural numbers $a$, if $a \\leq n$ and $f (a)= i$, then if $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bijn_transpose_r. For all functions $f$ from natural numbers to natural numbers, for all natural numbers $n$ and $i$ and $j$, if $i \\leq n$, then if $j \\leq n$, then for all elements $__2$ of $bijn$ of $f$ and $n$, $bijn$ holds for the function that maps $p$ to $f (transpose (i , j , p))$ and $n$.",
    "output": "postulate bijn_transpose_r : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> (__2 : bijn f n) -> bijn (\\ p : Nat -> f (transpose i j p)) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_rect_CProp0_body. Låt $_A$ vara en mängd. Låt $Q_$ vara en funktion från element $_x_939$ av $range$ av $_A$ till påståenden. Låt $_H_mk_range$ vara en funktion från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range (_A , _enum , _upto , _filter)$. Då för alla element $x_939$ av $range$ av $_A$, håller $Q_$ för $x_939$.",
    "output": "postulate range_rect_CProp0_body : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16921. For all natural numbers $m$, if $0 < m$, then for all natural numbers $a$ and $x358$ and $x359$, $aop__o__op (Nat , 0 , plusAC , x358 , x358 x359)= x358 (x359 + 1)$.",
    "output": "postulate let_clause_16921 : (m : Nat) -> (posm : Lt 0 m) -> (a : Nat) -> (x358 : Nat) -> (x359 : Nat) -> Eq (aop__o__op Nat 0 plusAC x358 (times x358 x359)) (times x358 (plus x359 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Not_ord_O_to_divides. Låt $p$ och $m$ vara naturliga tal. Då om $0 < m$ och $p$ är primt, så om $ord (m , p)$ inte är lika med $0$, så är $p$ delbart med $m$.",
    "output": "postulate not_ord_O_to_divides : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : not (Eq (ord m p) 0)) -> divisible p m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Gcd_1_to_lt_n. For all natural numbers $i$ and $n$, if $1 < n$ and $i \\leq n$, then if $1$ is equal to the greatest common divisor of $i$ and $n$, then $i < n$.",
    "output": "postulate gcd_1_to_lt_n : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Leq i n) -> (__2 : Eq (gcd i n) 1) -> Lt i n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_gcd. Låt $m , n \\in N$. Anta att $0 < n$ och $n$ är delbart med $m$. Då är $n$ lika med det största gemensama delaret av $n$ och $m$.",
    "output": "postulate divides_to_gcd : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible n m) -> Eq (gcd n m) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Psi_4. $Psi (4)= 12$.",
    "output": "postulate Psi_4 : Eq (Psi 4) 12"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5 < n$. Soit $m$ un nombre naturel. Supposons que $6 \\leq m$ et $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a \\in N$. Alors si $6 \\leq a$ et $2 (a + 1)+ 1 \\leq 2 ^ a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_inv_rect_Type3. Let $x1$ and $x2$ and $x3$ and $x4$ be natural numbers. Let $Hterm$ be an element of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Let $P$ be a function from elements $_z1446$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to elements of $Type3$. Let $_H1$ be a function from elements $x_823$ of $Lt$ of $x4$ and $x2$ and elements $x_822$ of $Eq$ of $x1$ and $x3 x2 + x4$ and elements $_z1447$ of $Eq$ of $Hterm$ and $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_823 , x_822)$ to elements of $P$ of $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_823 , x_822)$. Then $P$ holds for $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_Type3 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1446 : div_mod_spec x1 x2 x3 x4) -> Type3) -> (_H1 : (x_823 : Lt x4 x2) -> (x_822 : Eq x1 (plus (times x3 x2) x4)) -> (_z1447 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_823 x_822)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Supposons que $1$ est inférieur à $n$. Soit $x2515 , x2516 \\in N$. Alors $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (lt1n : Lt 1 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_B_Psi4. Let $n$ be a natural number. Then if $0$ is less than $n$, then the product of $2$ and $B$ applied to the product of $4$ and $n$ is less than or equal to $Psi$ applied to the product of $4$ and $n$.",
    "output": "postulate le_B_Psi4 : (n : Nat) -> (_ : Lt 0 n) -> Leq (times 2 (B (times 4 n))) (Psi (times 4 n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_inv_rect_Type3. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Alors pour toutes les fonctions $P$ des éléments $_z1644$ de $range$ de $x1$ à des éléments de $Type3$, pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1645$ de $Eq$ de $Hterm$ et de $mk_range (x1 , _enum , _upto , _filter)$ à des éléments de $P$ de $mk_range (x1 , _enum , _upto , _filter)$, $P$ tient pour $Hterm$.",
    "output": "postulate range_inv_rect_Type3 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1644 : range x1) -> Type3) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1645 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_rect_CProp2. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_963$ de $Dop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Dop$ des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $_nil$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ à des éléments de $Q_$ de $mk_Dop$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ et $_null$ et $_distr$, pour tous les éléments $x_963$ de $Dop$ de $A$ et de $_nil$, $Q_$ tient pour $x_963$.",
    "output": "postulate Dop_rect_CProp2 : (A : Set) -> (_nil : A) -> (Q_ : (_x_963 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_963 : Dop A _nil) -> Q_ x_963"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1585. Låt $n$ och $m$ vara naturliga tal. Då om $0 < n$, så om $m$ är delbart med $n$, så för alla naturliga tal $d$, om $0 = m$, så om $n = m d$, så $0 = n$.",
    "output": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1595. Soit $p , n , m \\in N$. Supposons que $0 < n$. Supposons que $0 < m$. Alors si $1$ est égal au diviseur commun plus grand de $p$ et de $n$, alors si $1$ est égal au diviseur commun plus grand de $p$ et de $m$, alors si le diviseur commun plus grand de $p$ et du produit de $n$ et de $m$ est inférieur à $1$, alors si $smallest_factor$ appliqué à le diviseur commun plus grand de $p$ et du produit de $n$ et de $m$ est divisible par $m$, alors le diviseur commun plus grand de $p$ et de $m$ est égal au diviseur commun plus grand de $p$ et de $n$.",
    "output": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Assume that the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the difference of the product of $m$ and $b$ and the product of $p$ and $a$ is equal to $1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "To_min. Let $i$ and $n$ and $m$ be natural numbers. Assume that $i$ is less than or equal to $n$. Then if $i$ is less than or equal to $m$, then $i$ is less than or equal to $min$ applied to $n$ and $m$.",
    "output": "postulate to_min : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i n) -> (__1 : Leq i m) -> Leq i (min n m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Permut_S_to_permut. Let $f$ be a function from natural numbers to natural numbers. Let $m \\in N$. Let $__$ be an element of $permut$ of $f$ and $m + 1$. Then if $f (m + 1)= m + 1$, then $permut$ holds for $f$ and $m$.",
    "output": "postulate permut_S_to_permut : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (_ : permut f (plus m 1)) -> (__1 : Eq (f (plus m 1)) (plus m 1)) -> permut f m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15441. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Då för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så om skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så är skillnaden mellan produkten av $n$ och $b$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1562. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $c n - d m = 1$, alors $n c - m d = 1$.",
    "output": "postulate let_clause_1562 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_inv_rect_CProp2. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1614$ de $ACop$ de $x1$ et de $x2$ à des propositions. Alors pour toutes les fonctions $_H1$ des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op$ appliqué à $x1$ et $x2$ et $aop$ et $a$ et $b$ et de $op$ appliqué à $x1$ et $x2$ et $aop$ et $b$ et $a$ et des éléments $_z1615$ de $Eq$ de $Hterm$ et de $mk_ACop$ appliqué à $x1$ et $x2$ et $aop$ et $_comm$ à des éléments de $P$ de $mk_ACop$ appliqué à $x1$ et $x2$ et $aop$ et $_comm$, $P$ tient pour $Hterm$.",
    "output": "postulate ACop_inv_rect_CProp2 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1614 : ACop x1 x2) -> Prop) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1615 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_mod_m_m. Soient $n$ et $m$ des nombres naturels. Supposons que $0$ est inférieur à $m$. Alors $mod$ appliqué à $n$ et $m$ est inférieur à $m$.",
    "output": "postulate lt_mod_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt (mod n m) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Minus_plus_m_m. Let $n$ and $m$ be natural numbers. Then $n = n + m - m$.",
    "output": "postulate minus_plus_m_m : (n : Nat) -> (m : Nat) -> Eq n (minus (plus n m) m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_Type1. Pour tous les ensembles $A$, pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_899$ de $ACop$ de $A$ et de $_nil$ à des éléments de $Type1$, pour toutes les fonctions $_H_mk_ACop$ des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $A$ et $_nil$ et $aop$ et $a$ et $b$ et de $op$ appliqué à $A$ et $_nil$ et $aop$ et $b$ et $a$ à des éléments de $Q_$ de $mk_ACop$ appliqué à $A$ et $_nil$ et $aop$ et $_comm$, pour tous les éléments $x_899$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_899$.",
    "output": "postulate ACop_rect_Type1 : (A : Set) -> (_nil : A) -> (Q_ : (_x_899 : ACop A _nil) -> Type1) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_899 : ACop A _nil) -> Q_ x_899"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_transpose_r. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $m , i , j \\in N$. Anta att $i \\leq m$. Anta att $j \\leq m$. Då för alla element $__2$ av $permut$ av $f$ och $m$, håller $permut$ för funktionen som avbildar $n$ som $f (transpose (i , j , n))$ och $m$.",
    "output": "postulate permut_transpose_r : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i m) -> (__1 : Leq j m) -> (__2 : permut f m) -> permut (\\ n : Nat -> f (transpose i j n)) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "List_divides_false. Soit $l$ une liste de nombres naturels. Soit $n \\in N$. Supposons que contradiction est égal à $list_divides (l , n)$. Soit $p$ un nombre naturel. Soit $__1$ un élément de $mem$ de $Nat$ et de $p$ et de $l$. Alors $p$ n'est pas divisible par $n$.",
    "output": "postulate list_divides_false : (l : list Nat) -> (n : Nat) -> (_ : Eq (list_divides l n) false) -> (p : Nat) -> (__1 : mem Nat p l) -> not (divisible p n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_lt_to_le. Let $n$ and $m$ be natural numbers. Assume that $n$ is not less than $m$. Then $m \\leq n$.",
    "output": "postulate not_lt_to_le : (n : Nat) -> (m : Nat) -> (_ : not (Lt n m)) -> Leq m n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Max_spec_to_max. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, pour tous les nombres naturels $n$ et $m$, pour tous les éléments $__$ de $max_spec$ de $n$ et de $f$ et de $m$, $max (n , f)= m$.",
    "output": "postulate max_spec_to_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : max_spec n f m) -> Eq (max n f) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1531. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < m$ et $n$ est divisible par $m$. Soit $d$ un nombre naturel. Alors si $m = n 0$, alors $m = 0$.",
    "output": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_n_n. Soit $n \\in N$. Alors si $0$ est inférieur à $n$, alors le quotient de $n$ et de $n$ est égal à $1$.",
    "output": "postulate div_n_n : (n : Nat) -> (_ : Lt 0 n) -> Eq (div n n) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Max_O. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, $max$ appliqué à $0$ et $f$ est égal à $0$.",
    "output": "postulate max_O : (f : (_ : Nat) -> bool) -> Eq (max 0 f) 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_rect_CProp2_body. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_909$ av $ACop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op$ applicerat på $A$ och $_nil$ och $aop$ och $a$ och $b$ och $op$ applicerat på $A$ och $_nil$ och $aop$ och $b$ och $a$ till element av $Q_$ av $mk_ACop$ applicerat på $A$ och $_nil$ och $aop$ och $_comm$, för alla element $x_909$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_909$.",
    "output": "postulate ACop_rect_CProp2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_909 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_909 : ACop A _nil) -> Q_ x_909"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_inv_plus_l. Soient $x$ et $y$ et $z$ des nombres naturels. Supposons que $x + y \\leq z$. Alors $x \\leq z - y$ et $y \\leq z$.",
    "output": "postulate le_inv_plus_l : (x : Nat) -> (y : Nat) -> (z : Nat) -> (_ : Leq (plus x y) z) -> and (Leq x (minus z y)) (Leq y z)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "P_ord_O_to_not_divides. For all natural numbers $n$ and $i$ and $r$, if $0 < n$, then if $p_ord (n , nth_prime (i))= mk_Prod (Nat , Nat , 0 , r)$, then $nth_prime (i)$ is not divisible by $n$.",
    "output": "postulate p_ord_O_to_not_divides : (n : Nat) -> (i : Nat) -> (r : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (p_ord n (nth_prime i)) (mk_Prod Nat Nat 0 r)) -> not (divisible (nth_prime i) n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "True_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $b \\in N$. Då om $f$ applicerat på $b$ är lika med $true$, så för alla naturliga tal $n$, är $min$ applicerat på $n$ och $b$ och $f$ lika med $b$.",
    "output": "postulate true_min : (f : (_ : Nat) -> bool) -> (b : Nat) -> (_ : Eq (f b) true) -> (n : Nat) -> Eq (min n b f) b"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1559. Låt $n$ och $m$ vara naturliga tal. Anta att $n$ är delbart med $m$. Då om $0 = n$, så för alla naturliga tal $d$, om $m = 0 d$, så $m = n$.",
    "output": "postulate let_clause_1559 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10471. Låt $n1 , n2 \\in N$. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Då för alla element $op$ av $ACop$ av $B$ och $nil$, för alla funktioner $f1$ och $f2$ från naturliga tal till element av $B$, för alla element $_clearme$ av $iso$ av $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$, för alla funktioner $h$ från naturliga tal till naturliga tal, för alla element $_clearme0$ av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$, för alla funktioner $k$ från naturliga tal till naturliga tal, om $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$, $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ håller för $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$, så om $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$, så för alla funktioner $same$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n1$ och element $__1$ av $Eq$ av $p1$ applicerat på $i$ och $true$ till element av $Eq$ av $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$, för alla naturliga tal $i$ och $m$, för alla funktioner $Hind$ från funktioner $f$ från naturliga tal till sanningsvärden och element av $Leq$ av $0$ och $n1$ och element $__1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $m$ och $f$ och element $__2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $m$ och $f$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ till element av $Eq$ av $bigop$ applicerat på $0$ och funktionen som avbildar $i0$ som $p1$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f1$ applicerat på $i0$ och $bigop$ applicerat på $m$ och funktionen som avbildar $i0$ som $f$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f2$ applicerat på $i0$, för alla funktioner $p20$ från naturliga tal till sanningsvärden, om $0$ är mindre än eller lika med $n1$, så för alla element $sub1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och summan av $m$ och $1$ och $p20$, för alla element $sub2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och summan av $m$ och $1$ och $p20$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$, för alla naturliga tal $x2571$ och $x2572$, är $x2571$ lika med summan av produkten av $x2572$ och kvoten av $x2571$ och $x2572$ och $mod$ applicerat på $x2571$ och $x2572$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1575. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que $c n - d m = 1$ ou $d m - c n = 1$ et $c n - d m = 1$. Soit $x1029$ un nombre naturel. Alors $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1047. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara en funktion från element av $B$ och element $__1$ av $B$ till element av $B$. Låt $f$ vara en funktion från naturliga tal till element av $B$. Anta att $n \\leq k$. Låt $j$ vara ett naturligt tal. Anta att $n \\leq j$. Låt $Hind$ vara en funktion från funktioner från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och $j$ till element av $Eq$ av $p (i)$ och kontradiktion till element av $Eq$ av $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $bigop$ applicerat på $j$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$. Låt $Hfalse$ vara en funktion från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och $j + 1$ till element av $Eq$ av $p (i)$ och kontradiktion. Låt $x2571 , x2572 \\in N$. Då $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_1047 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (lenk : Leq n k) -> (j : Nat) -> (leup : Leq n j) -> (Hind : (_ : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i j) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop j (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))) -> (Hfalse : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i (plus j 1)) -> Eq (p i) false) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10336. Let $n , m \\in N$. Let $Hind$ be a function from natural numbers $p$ and elements of $Lt$ of $p$ and $m$ and elements $__1$ of $Lt$ of $1$ and $p$ to elements of $Leq$ of $Psi (p)$ and $pred (p)\\times (2 ^ (2 p - 3))$. Let $a$ be a natural number. Assume that $m = 2 a$ or $m = 2 a + 1$. Assume that $m = 2 a + 1$. Assume that $1 < 2 a + 1$. Assume that $0 < a$. Let $x2515 , x2516 \\in N$. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10336 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_gcd_mod. Soit $m , n \\in N$. Alors si $0$ est inférieur à $n$, alors le diviseur commun plus grand de $m$ et de $n$ est divisible par le diviseur commun plus grand de $n$ et de $mod$ appliqué à $m$ et $n$.",
    "output": "postulate divides_gcd_mod : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> divisible (gcd m n) (gcd n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_O_log. Let $p$ and $n$ be natural numbers. Then if $1$ is less than $n$, then if $p$ is less than or equal to $n$, then $0$ is less than the logarithm of $p$ and $n$.",
    "output": "postulate lt_O_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Leq p n) -> Lt 0 (log p n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1544. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Då om skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så är skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $n$ och $b$ lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_minus_to_plus. For all natural numbers $n$ and $m$ and $p$, if the difference of $n$ and $m$ is less than or equal to $p$, then $n$ is less than or equal to the sum of $p$ and $m$.",
    "output": "postulate le_minus_to_plus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq (minus n m) p) -> Leq n (plus p m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_max_to_pi_p_primeb. Låt $q$ och $m$ vara naturliga tal. Anta att $0 < m$. Då om $q$ är mindre än $max$ applicerat på summan av $m$ och $1$ och funktionen som avbildar $i$ som $andb$ applicerat på $primeb$ applicerat på $i$ och $dividesb$ applicerat på $i$ och $m$, så är $bigop$ applicerat på $q$ och funktionen som avbildar $p$ som $andb$ applicerat på $primeb$ applicerat på $p$ och $dividesb$ applicerat på $p$ och $m$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som potensen av $p$ och $ord$ applicerat på $m$ och $p$ lika med $m$.",
    "output": "postulate lt_max_to_pi_p_primeb : (q : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt (max (plus m 1) (\\ i : Nat -> andb (primeb i) (dividesb i m))) q) -> Eq m (bigop q (\\ p : Nat -> andb (primeb p) (dividesb p m)) Nat 1 times (\\ p : Nat -> pow p (ord m p)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_inv_rect_Type4. Soit $x1$ un ensemble. Alors pour tous les éléments $x2$ de $x1$, pour tous les éléments $Hterm$ de $Dop$ de $x1$ et de $x2$, pour toutes les fonctions $P$ des éléments $_z1704$ de $Dop$ de $x1$ et de $x2$ à des éléments de $Type4$, pour toutes les fonctions $_H1$ des éléments $sum$ de $ACop$ de $x1$ et de $x2$ et des fonctions $prod$ des éléments de $x1$ et des éléments $__1$ de $x1$ à des éléments de $x1$ et des fonctions $_null$ des éléments $a$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $x2$ et de $x2$ et des fonctions $_distr$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ et des éléments $c$ de $x1$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ et des éléments $_z1705$ de $Eq$ de $Hterm$ et de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$ à des éléments de $P$ de $mk_Dop$ appliqué à $x1$ et $x2$ et $sum$ et $prod$ et $_null$ et $_distr$, $P$ tient pour $Hterm$.",
    "output": "postulate Dop_inv_rect_Type4 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1704 : Dop x1 x2) -> Type4) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1705 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Supposons que $0$ est inférieur à $n$. Soit $x2515 , x2516 \\in N$. Alors $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (posn : Lt 0 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_O_log. Låt $p , n \\in N$. Då om $1 < n$ och $p \\leq n$, så $0 < \\log_ p {n}$.",
    "output": "postulate lt_O_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Leq p n) -> Lt 0 (log p n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Plus_to_minus. For all natural numbers $n$ and $m$ and $p$, if $n = m + p$, then $n - m = p$.",
    "output": "postulate plus_to_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Eq n (plus m p)) -> Eq (minus n m) p"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_CProp2_body. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_849$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_851$ av $Lt$ av $_r$ och $_m$ och element $x_850$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_851$ och $x_850$. Då för alla element $x_849$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_849$.",
    "output": "postulate div_mod_spec_rect_CProp2_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1062. Låt $a$ och $b$ och $q$ och $r$ och $q1$ och $r1$ vara naturliga tal. Låt $_clearme$ vara ett element av $div_mod_spec$ av $a$ och $b$ och $q$ och $r$. Då om $r < b$ och $a = q b + r$, så för alla element $_clearme0$ av $div_mod_spec$ av $a$ och $b$ och $q1$ och $r1$, om $r1 < b$ och $a = q1 b + r1$, så om $q$ inte är mindre än eller lika med $q1$, så $a = r1 + b q1$.",
    "output": "postulate let_clause_1062 : (a : Nat) -> (b : Nat) -> (q : Nat) -> (r : Nat) -> (q1 : Nat) -> (r1 : Nat) -> (_clearme : div_mod_spec a b q r) -> (ltrb : Lt r b) -> (spec : Eq a (plus (times q b) r)) -> (_clearme0 : div_mod_spec a b q1 r1) -> (ltr1b : Lt r1 b) -> (spec1 : Eq a (plus (times q1 b) r1)) -> (leqq1 : not (Leq q q1)) -> Eq a (plus r1 (times b q1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_log. Låt $p$ och $n$ och $m$ vara naturliga tal. Då om $1 < p$, så om $n \\leq m$, så $\\log_ p {n}\\leq \\log_ p {m}$.",
    "output": "postulate le_log : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Leq n m) -> Leq (log p n) (log p m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_sigma. Pour tous les nombres naturels $n$ et $a$, pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $a$ est égal à la puissance de $a$ et de $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $1$.",
    "output": "postulate exp_sigma : (n : Nat) -> (a : Nat) -> (p : (_ : Nat) -> bool) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> a)) (pow a (bigop n (\\ i : Nat -> p i) Nat 0 plus (\\ i : Nat -> 1)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_sumI. Let $a$ and $b$ and $c$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Then for all elements $nil$ of $B$, for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers to elements of $B$, if $a \\leq b$, then if $b \\leq c$, then $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $b$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $b$ and $bigop$ applied to the difference of $b$ and $a$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $a$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $a$ is equal to $bigop$ applied to the difference of $c$ and $a$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $a$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $a$.",
    "output": "postulate bigop_sumI : (a : Nat) -> (b : Nat) -> (c : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> (__1 : Leq b c) -> Eq (bigop (minus c a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (op B nil op (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i b)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b))) (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Min_spec_inv_ind. Låt $x1$ och $x2$ vara naturliga tal. Låt $x3$ vara en funktion från naturliga tal till sanningsvärden. Låt $x4 \\in N$. Låt $_Hterm$ vara ett element av $min_spec$ av $x1$ och $x2$ och $x3$ och $x4$. Då för alla funktioner $P$ från naturliga tal $_z1890$ till påståenden, för alla funktioner $_H1$ från naturliga tal $m$ och element $_x_1080$ av $Leq$ av $x2$ och $m$ och element $_x_1079$ av $Lt$ av $m$ och summan av $x1$ och $x2$ och element $_x_1078$ av $Eq$ av $x3$ applicerat på $m$ och $true$ och funktioner $_x_1077$ från naturliga tal $i$ och element av $Leq$ av $x2$ och $i$ och element $__1$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $x3$ applicerat på $i$ och kontradiktion och element $_z1891$ av $Eq$ av $x4$ och $m$ till element av $P$ av $m$, för alla funktioner $_H2$ från funktioner $_x_1081$ från naturliga tal $i$ och element av $Leq$ av $x2$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $x1$ och $x2$ till element av $Eq$ av $x3$ applicerat på $i$ och kontradiktion och element $_z1891$ av $Eq$ av $x4$ och summan av $x1$ och $x2$ till element av $P$ av summan av $x1$ och $x2$, håller $P$ för $x4$.",
    "output": "postulate min_spec_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (x3 : (_ : Nat) -> bool) -> (x4 : Nat) -> (_Hterm : min_spec x1 x2 x3 x4) -> (P : (_z1890 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : Lt m (plus x1 x2)) -> (_x_1078 : Eq (x3 m) true) -> (_x_1077 : (i : Nat) -> (_ : Leq x2 i) -> (__1 : Lt i m) -> Eq (x3 i) false) -> (_z1891 : Eq x4 m) -> P m) -> (_H2 : (_x_1081 : (i : Nat) -> (_ : Leq x2 i) -> (__1 : Lt i (plus x1 x2)) -> Eq (x3 i) false) -> (_z1891 : Eq x4 (plus x1 x2)) -> P (plus x1 x2)) -> P x4"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Assoc_body. Låt $A$ vara en mängd. Låt $nil$ vara ett element av $A$. Låt $xxx$ vara ett element av $Aop$ av $A$ och $nil$. Låt $a$ och $b$ och $c$ vara element av $A$. Då är $op$ applicerat på $A$ och $nil$ och $xxx$ och $a$ och $op$ applicerat på $A$ och $nil$ och $xxx$ och $b$ och $c$ lika med $op$ applicerat på $A$ och $nil$ och $xxx$ och $op$ applicerat på $A$ och $nil$ och $xxx$ och $a$ och $b$ och $c$.",
    "output": "postulate assoc_body : (A : Set) -> (nil : A) -> (xxx : Aop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_times_mod. Let $n , m , p \\in N$. Then if $0$ is less than $p$, then if $0$ is less than $m$, then $mod$ applied to $n$ and $p$ is equal to $mod$ applied to $mod$ applied to $n$ and the product of $m$ and $p$ and $p$.",
    "output": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_ord_O_to_divides. Let $p , m \\in N$. Assume that $0 < m$ and $p$ is prime. Assume that $ord (m , p)$ is not equal to $0$. Then $p$ is divisible by $m$.",
    "output": "postulate not_ord_O_to_divides : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : not (Eq (ord m p) 0)) -> divisible p m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "F_false_to_le_max. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , p \\in N$. Soit $__$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de $Eq$ appliqué à $f$ appliqué à $i$ et $true$. Alors pour toutes les fonctions $__1$ des nombres naturels $m$ et des éléments $__1$ de $Lt$ de $p$ et de $m$ à des éléments de $Eq$ de $f$ appliqué à $m$ et de contradiction, $max$ appliqué à $n$ et $f$ est inférieur ou ágal à $p$.",
    "output": "postulate f_false_to_le_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (p : Nat) -> (_ : ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) -> (__1 : (m : Nat) -> (__1 : Lt p m) -> Eq (f m) false) -> Leq (max n f) p"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_Psil. Pour tous les nombres naturels $n$, $Psi (n)\\leq n ^ prim (n)$.",
    "output": "postulate le_Psil : (n : Nat) -> Leq (Psi n) (pow n (prim n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_to_p_ord. Pour tous les nombres naturels $p$ et $a$ et $b$ et $c$ et $d$ et $n$ et $m$, si $0$ est inférieur à $n$, alors si $0$ est inférieur à $m$, alors si $p$ est premier, alors si $n$ est divisible par $m$, alors si $p_ord$ appliqué à $n$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $a$ et $b$, alors si $p_ord$ appliqué à $m$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $c$ et $d$, alors $b$ est divisible par $d$ et $a$ est inférieur ou ágal à $c$.",
    "output": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> (__4 : Eq (p_ord n p) (mk_Prod Nat Nat a b)) -> (__5 : Eq (p_ord m p) (mk_Prod Nat Nat c d)) -> and (divisible b d) (Leq a c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_spec_ind. Let $_n$ and $_b$ be natural numbers. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and the sum of $_n$ and $_b$ and elements $x_1078$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $m$ and $x_1080$ and $x_1079$ and $x_1078$ and $x_1077$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $_n$ and $_b$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of the sum of $_n$ and $_b$ and $not_found_min_spec$ applied to $_n$ and $_b$ and $_f$ and $x_1081$. Let $x_1075$ be a natural number. Let $x_1076$ be an element of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$. Then $Q_$ holds for $x_1075$ and $x_1076$.",
    "output": "postulate min_spec_ind : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_CProp3_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_933$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_933$ of $range$ of $_A$, $Q_$ holds for $x_933$.",
    "output": "postulate range_rect_CProp3_body : (_A : Set) -> (Q_ : (_x_933 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_933 : range _A) -> Q_ x_933"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Minus_n_O. Pour tous les nombres naturels $n$, $n$ est égal à la différence de $n$ et de $0$.",
    "output": "postulate minus_n_O : (n : Nat) -> Eq n (minus n 0)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Sqrt_bound. Soit $n \\in N$. Alors si la puissance de $2$ et de $8$ est inférieure ou ágale à $n$, alors le produit de $2$ et de la somme du logarithme de $2$ et du produit de $2$ et de $n$ et de $1$ est inférieur ou ágal à la racine carrée du produit de $2$ et de $n$.",
    "output": "postulate sqrt_bound : (n : Nat) -> (_ : Leq (pow 2 8) n) -> Leq (times 2 (plus (log 2 (times 2 n)) 1)) (sqrt (times 2 n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Decidable_mem_nat. För alla naturliga tal $n$, för alla listor $l$ av naturliga tal, håller $decidable$ för $mem (Nat , n , l)$.",
    "output": "postulate decidable_mem_nat : (n : Nat) -> (l : list Nat) -> decidable (mem Nat n l)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to the sum of $q$ and $1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b$ be a natural number. Assume that the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Then if the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then the difference of the product of $n$ and $b$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Log_exp. Låt $p , n , m \\in N$. Anta att $1$ är mindre än $p$. Då om $0$ är mindre än $m$, så är logaritmen av $p$ och produkten av potensen av $p$ och $n$ och $m$ lika med summan av $n$ och logaritmen av $p$ och $m$.",
    "output": "postulate log_exp : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 m) -> Eq (log p (times (pow p n) m)) (plus n (log p m))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Not_eq_to_le_to_lt. Låt $n$ och $m$ vara naturliga tal. Då om $n$ inte är lika med $m$, så om $n \\leq m$, så $n < m$.",
    "output": "postulate not_eq_to_le_to_lt : (n : Nat) -> (m : Nat) -> (_ : not (Eq n m)) -> (__1 : Leq n m) -> Lt n m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_Type4. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Alors pour toutes les fonctions $Q_$ des éléments $_x_813$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des éléments de $Type4$, pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_815$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_814$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_815$ et $x_814$, pour tous les éléments $x_813$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_813$.",
    "output": "postulate div_mod_spec_rect_Type4 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_813 : div_mod_spec _n _m _q _r) -> Type4) -> (_H_div_mod_spec_intro : (x_815 : Lt _r _m) -> (x_814 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_815 x_814)) -> (x_813 : div_mod_spec _n _m _q _r) -> Q_ x_813"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_not_ord_O. Let $p , m \\in N$. Then if $0$ is less than $m$, then if $p$ is prime, then if $p$ is divisible by $m$, then $ord$ applied to $m$ and $p$ is not equal to $0$.",
    "output": "postulate divides_to_not_ord_O : (p : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : divisible p m) -> not (Eq (ord m p) 0)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15624. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.",
    "output": "postulate let_clause_15624 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Iter_iter. Soit $A$ un ensemble. Soit $g$ une fonction des éléments de $A$ à des éléments de $A$. Soit $a$ un élément de $A$. Soient $b$ et $c$ des nombres naturels. Alors $iter (A , g , c , iter (A , g , b , a))= iter (A , g , b + c , a)$.",
    "output": "postulate iter_iter : (A : Set) -> (g : (_ : A) -> A) -> (a : A) -> (b : Nat) -> (c : Nat) -> Eq (iter A g c (iter A g b a)) (iter A g (plus b c) a)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_gcd_mod. Let $m$ and $n$ be natural numbers. Then if $0 < n$, then the greatest common divisor of $m$ and $n$ is divisible by the greatest common divisor of $n$ and $mod$ applied to $m$ and $n$.",
    "output": "postulate divides_gcd_mod : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> divisible (gcd m n) (gcd n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15611. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c$ vara ett naturligt tal. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Då för alla naturliga tal $b$, om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16171. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si $b m - a p = 1$, alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Not_le_to_lt. Soit $n , m \\in N$. Supposons que $n$ n'est pas inférieur ou ágal à $m$. Alors $m$ est inférieur à $n$.",
    "output": "postulate not_le_to_lt : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> Lt m n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_discr. Låt $a1$ vara en mängd. Då för alla element $a2$ av $a1$, för alla element $x$ och $y$ av $ACop$ av $a1$ och $a2$, om $x = y$, så håller $match_ACop$ för $a1$ och $a2$ och $Type2 + 1$ och funktionen som avbildar $__$ som $univ (Type2)$ och funktionen som avbildar $t0$ och $t1$ som $match_ACop$ applicerat på $a1$ och $a2$ och summan av $Type2$ och $1$ och funktionen som avbildar $__$ som $univ$ applicerat på $Type2$ och funktionen som avbildar $u0$ och $u1$ som $prod$ applicerat på summan av $Type1$ och $1$ och $Type1$ och $univ$ applicerat på $Type1$ och funktionen som avbildar $P$ som $prod$ applicerat på $Type1$ och $Type1$ och $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R0$ applicerat på $Aop$ applicerat på $a1$ och $a2$ och $t0$ och $u0$ och funktionen som avbildar $e0$ som $prod$ applicerat på $Prop$ och $Type1$ och $Eq$ applicerat på $R1$ applicerat på $Aop$ applicerat på $a1$ och $a2$ och $t0$ och funktionen som avbildar $x_19$ och $_x_20$ som funktionen som avbildar $x0$ och $p0$ som $prod$ applicerat på $Set$ och $Prop$ och $a1$ och funktionen som avbildar $a$ som $prod$ applicerat på $Set$ och $Prop$ och $a1$ och funktionen som avbildar $b$ som $Eq$ applicerat på $op$ applicerat på $a1$ och $a2$ och $x0$ och $a$ och $b$ och $op$ applicerat på $a1$ och $a2$ och $x0$ och $b$ och $a$ applicerat på $x_19$ och $_x_20$ och $t1$ och $u0$ och $e0$ och $u1$ och funktionen som avbildar $_e1$ som $P$ och funktionen som avbildar $_z57$ som $P$ och $y$ och $x$.",
    "output": "postulate ACop_discr : (a1 : Set) -> (a2 : a1) -> (x : ACop a1 a2) -> (y : ACop a1 a2) -> (_e : Eq x y) -> match_ACop a1 a2 (plus Type2 1) (\\ _ : ACop a1 a2 -> univ Type2) (\\ t0 : Aop a1 a2 -> \\ t1 : ((a : a1) -> (b : a1) -> Eq (op a1 a2 t0 a b) (op a1 a2 t0 b a)) -> match_ACop a1 a2 (plus Type2 1) (\\ _ : ACop a1 a2 -> univ Type2) (\\ u0 : Aop a1 a2 -> \\ u1 : ((a : a1) -> (b : a1) -> Eq (op a1 a2 u0 a b) (op a1 a2 u0 b a)) -> prod (plus Type1 1) Type1 (univ Type1) (\\ P : Type1 -> prod Type1 Type1 (prod Prop Type1 (Eq (R0 (Aop a1 a2) t0) u0) (\\ e0 : Eq (R0 (Aop a1 a2) t0) u0 -> prod Prop Type1 (Eq (R1 (Aop a1 a2) t0 (\\ x_19 : Aop a1 a2 -> \\ _x_20 : Eq t0 x_19 -> (\\ x0 : Aop a1 a2 -> \\ p0 : Eq t0 x0 -> prod Set Prop a1 (\\ a : a1 -> prod Set Prop a1 (\\ b : a1 -> Eq (op a1 a2 x0 a b) (op a1 a2 x0 b a)))) x_19 _x_20) t1 u0 e0) u1) (\\ _e1 : Eq (R1 (Aop a1 a2) t0 (\\ x_19 : Aop a1 a2 -> \\ _x_20 : Eq t0 x_19 -> (\\ x0 : Aop a1 a2 -> \\ p0 : Eq t0 x0 -> prod Set Prop a1 (\\ a : a1 -> prod Set Prop a1 (\\ b : a1 -> Eq (op a1 a2 x0 a b) (op a1 a2 x0 b a)))) x_19 _x_20) t1 u0 e0) u1 -> P))) (\\ _z57 : ((e0 : Eq (R0 (Aop a1 a2) t0) u0) -> (_e1 : Eq (R1 (Aop a1 a2) t0 (\\ x_19 : Aop a1 a2 -> \\ _x_20 : Eq t0 x_19 -> (\\ x0 : Aop a1 a2 -> \\ p0 : Eq t0 x0 -> prod Set Prop a1 (\\ a : a1 -> prod Set Prop a1 (\\ b : a1 -> Eq (op a1 a2 x0 a b) (op a1 a2 x0 b a)))) x_19 _x_20) t1 u0 e0) u1) -> P) -> P))) y) x"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_singlevalued. Let $B$ be a set. Let $R$ be an element of $relation2$ of $B$ and $B$. Let $__$ be an element of $singlevalued$ of $B$ and $B$ and $R$. Then for all natural numbers $l$, $singlevalued$ holds for $B$ and $B$ and $lstar$ applied to $B$ and $R$ and $l$.",
    "output": "postulate lstar_singlevalued : (B : Set) -> (R : relation2 B B) -> (_ : singlevalued B B R) -> (l : Nat) -> singlevalued B B (lstar B R l)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Pi_p_primeb4. Låt $n \\in N$. Anta att $1 < n$. Då är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $bigop$ applicerat på logaritmen av $p$ och produkten av $2$ och $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $p$ och produkten av $2$ och kvoten av $n$ och potensen av $p$ och summan av $i$ och $1$ lika med $bigop$ applicerat på summan av produkten av $2$ och $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $bigop$ applicerat på logaritmen av $p$ och produkten av $2$ och $n$ och funktionen som avbildar $i$ som $true$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som potensen av $p$ och produkten av $2$ och kvoten av $n$ och potensen av $p$ och summan av $i$ och $1$.",
    "output": "postulate pi_p_primeb4 : (n : Nat) -> (_ : Lt 1 n) -> Eq (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1))))))) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1)))))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$. Supposons que $b \\leq n$. Supposons que $f (b)= j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_inv_rect_CProp4. Låt $Hterm$ vara ett naturligt tal. Då för alla funktioner $P$ från naturliga tal $_z689$ till påståenden, för alla funktioner $_H1$ från element $_z690$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$, för alla funktioner $_H2$ från naturliga tal $x_394$ och funktioner $_x_396$ från element $_z690$ av $Eq$ av $Hterm$ och $x_394$ till element av $P$ av $x_394$ och element $_z690$ av $Eq$ av $Hterm$ och summan av $x_394$ och $1$ till element av $P$ av summan av $x_394$ och $1$, håller $P$ för $Hterm$.",
    "output": "postulate nat_inv_rect_CProp4 : (Hterm : Nat) -> (P : (_z689 : Nat) -> Prop) -> (_H1 : (_z690 : Eq Hterm 0) -> P 0) -> (_H2 : (x_394 : Nat) -> (_x_396 : (_z690 : Eq Hterm x_394) -> P x_394) -> (_z690 : Eq Hterm (plus x_394 1)) -> P (plus x_394 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "P_ord_to_not_eq_O. Låt $n$ och $p$ och $q$ och $r$ vara naturliga tal. Då om $1 < n$, så om $p_ord (n , nth_prime (p))= mk_Prod (Nat , Nat , q , r)$, så är $r$ inte lika med $0$.",
    "output": "postulate p_ord_to_not_eq_O : (n : Nat) -> (p : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (p_ord n (nth_prime p)) (mk_Prod Nat Nat q r)) -> not (Eq r 0)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16005. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_inv_rect_Type0. Låt $x1$ och $x2$ och $x3$ och $x4$ vara naturliga tal. Låt $Hterm$ vara ett element av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$. Låt $P$ vara en funktion från element $_z1464$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till mängder. Låt $_H1$ vara en funktion från element $x_835$ av $Lt$ av $x4$ och $x2$ och element $x_834$ av $Eq$ av $x1$ och summan av produkten av $x3$ och $x2$ och $x4$ och element $_z1465$ av $Eq$ av $Hterm$ och $div_mod_spec_intro$ applicerat på $x1$ och $x2$ och $x3$ och $x4$ och $x_835$ och $x_834$ till element av $P$ av $div_mod_spec_intro$ applicerat på $x1$ och $x2$ och $x3$ och $x4$ och $x_835$ och $x_834$. Då håller $P$ för $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_Type0 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1464 : div_mod_spec x1 x2 x3 x4) -> Set) -> (_H1 : (x_835 : Lt x4 x2) -> (x_834 : Eq x1 (plus (times x3 x2) x4)) -> (_z1465 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bigop_prod. Låt $k1 , k2 \\in N$. Låt $p1$ vara en funktion från naturliga tal till sanningsvärden. Låt $p2$ vara en funktion från naturliga tal och naturliga tal $__1$ till sanningsvärden. Låt $B$ vara en mängd. Då för alla element $nil$ av $B$, för alla element $op$ av $Aop$ av $B$ och $nil$, för alla funktioner $f$ från naturliga tal och naturliga tal $__1$ till element av $B$, är $bigop$ applicerat på $k1$ och funktionen som avbildar $x$ som $p1$ applicerat på $x$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $x$ som $bigop$ applicerat på $k2$ och funktionen som avbildar $i$ som $p2$ applicerat på $x$ och $i$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $x$ och $i$ lika med $bigop$ applicerat på produkten av $k1$ och $k2$ och funktionen som avbildar $i$ som $andb$ applicerat på $p1$ applicerat på kvoten av $i$ och $k2$ och $p2$ applicerat på kvoten av $i$ och $k2$ och $mod$ applicerat på $i$ och $k2$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på kvoten av $i$ och $k2$ och $mod$ applicerat på $i$ och $k2$.",
    "output": "postulate bigop_prod : (k1 : Nat) -> (k2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> Eq (bigop k1 (\\ x : Nat -> p1 x) B nil (op B nil op) (\\ x : Nat -> bigop k2 (\\ i : Nat -> p2 x i) B nil (op B nil op) (\\ i : Nat -> f x i))) (bigop (times k1 k2) (\\ i : Nat -> andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (\\ i : Nat -> f (div i k2) (mod i k2)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nill_body. Soit $A$ un ensemble. Soit $nil$ un élément de $A$. Soit $xxx$ un élément de $Aop$ de $A$ et de $nil$. Soit $a$ un élément de $A$. Alors $op (A , nil , xxx , nil , a)= a$.",
    "output": "postulate nill_body : (A : Set) -> (nil : A) -> (xxx : Aop A nil) -> (a : A) -> Eq (op A nil xxx nil a) a"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n$ un nombre naturel. Supposons que la puissance de $2$ et de $8$ est inférieure ou ágale à $n$. Soit $m \\in N$. Supposons que $3$ est inférieur ou ágal à $m$. Alors si la somme du logarithme de $2$ et de $m$ et de $2$ est inférieure ou ágale à $m$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (len : Leq (pow 2 8) n) -> (m : Nat) -> (lt2m : Leq 3 m) -> (Hind : Leq (plus (log 2 m) 2) m) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "P_ord_exp. Let $n , m , i \\in N$. Assume that $0$ is less than $m$. Assume that $mod$ applied to $n$ and $m$ is not equal to $0$. Then for all natural numbers $p$, if $i$ is less than or equal to $p$, then $p_ord_aux$ applied to $p$ and the product of the exponentiation of $m$ and $i$ and $n$ and $m$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $i$ and $n$.",
    "output": "postulate p_ord_exp : (n : Nat) -> (m : Nat) -> (i : Nat) -> (_ : Lt 0 m) -> (__1 : not (Eq (mod n m) 0)) -> (p : Nat) -> (__2 : Leq i p) -> Eq (p_ord_aux p (times (pow m i) n) m) (mk_Prod Nat Nat i n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "False_to_lt_max. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Då om $0 < n$, så om kontradiktion är lika med $f (n)$, så om $max (m , f)\\leq n$, så $max (m , f)< n$.",
    "output": "postulate false_to_lt_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (f n) false) -> (__2 : Leq (max m f) n) -> Lt (max m f) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_rect_Type4. Pour toutes les fonctions $Q_$ des nombres naturels $_x_369$ à des éléments de $Type4$, pour tous les éléments $_H_O$ de $Q_$ de $0$, pour toutes les fonctions $_H_S$ des nombres naturels $x_370$ et des éléments $_x_372$ de $Q_$ de $x_370$ à des éléments de $Q_$ de $x_370 + 1$, pour tous les nombres naturels $x_369$, $Q_$ tient pour $x_369$.",
    "output": "postulate nat_rect_Type4 : (Q_ : (_x_369 : Nat) -> Type4) -> (_H_O : Q_ 0) -> (_H_S : (x_370 : Nat) -> (_x_372 : Q_ x_370) -> Q_ (plus x_370 1)) -> (x_369 : Nat) -> Q_ x_369"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Not_divides_S_fact. Låt $n$ och $i$ vara naturliga tal. Då om $1 < i$ och $i \\leq n$, så är $i$ inte delbart med $n ! + 1$.",
    "output": "postulate not_divides_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> not (divisible i (plus (factorial n) 1))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Permut_n_to_le. Pour toutes les fonctions $h$ des nombres naturels à des nombres naturels, pour tous les nombres naturels $k$ et $n$, si $k \\leq n$, alors pour tous les éléments $__1$ de $permut$ de $h$ et de $n$, pour toutes les fonctions $__2$ des nombres naturels $m$ et des éléments $__2$ de $Lt$ de $m$ et de $k$ à des éléments de $Eq$ de $h (m)$ et de $m$, pour tous les nombres naturels $j$, si $k \\leq j$, alors si $j \\leq n$, alors $k \\leq h (j)$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Permut_transpose_l. Let $f$ be a function from natural numbers to natural numbers. Let $m$ and $i$ and $j$ be natural numbers. Assume that $i \\leq m$. Then if $j \\leq m$, then for all elements $__2$ of $permut$ of $f$ and $m$, $permut$ holds for the function that maps $n$ to $transpose (i , j , f (n))$ and $m$.",
    "output": "postulate permut_transpose_l : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i m) -> (__1 : Leq j m) -> (__2 : permut f m) -> permut (\\ n : Nat -> transpose i j (f n)) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10131. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $m$ och $n0$ vara naturliga tal. Anta att $max (n0 + 1 , f)= m$. Anta att kontradiktion är lika med $f (m)$. Låt $i$ och $j$ vara naturliga tal. Anta att $j + 1 < n0 + 1$. Låt $x7 \\in N$. Då $x7 = m + x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_mod_O. För alla naturliga tal $n$ och $m$, om $0 < n$, så om $n$ är delbart med $m$, så $mod (m , n)= 0$.",
    "output": "postulate divides_to_mod_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : divisible n m) -> Eq (mod m n) 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1545. Pour tous les nombres naturels $m$ et $n$, si le diviseur commun plus grand de $m$ et de $n$ est égal à $0$, alors si $0$ est divisible par $n$, alors pour tous les nombres naturels $q1$, si $n$ est égal au produit de $0$ et de $q1$, alors si $0$ est divisible par $m$, alors pour tous les nombres naturels $q2$, si $m$ est égal au produit de $0$ et de $q2$, alors $m$ est égal à $0$.",
    "output": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "P_ord_exp. Let $n$ and $m$ and $i$ be natural numbers. Then if $0 < m$ and $mod (n , m)$ is not equal to $0$, then for all natural numbers $p$, if $i \\leq p$, then $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.",
    "output": "postulate p_ord_exp : (n : Nat) -> (m : Nat) -> (i : Nat) -> (_ : Lt 0 m) -> (__1 : not (Eq (mod n m) 0)) -> (p : Nat) -> (__2 : Leq i p) -> Eq (p_ord_aux p (times (pow m i) n) m) (mk_Prod Nat Nat i n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1 \\in N$. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p$ appliqué à $i$ et de $true$ à des éléments de $Leq$ de $g1$ appliqué à $i$ et de $g2$ appliqué à $i$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$. Soit $Hle$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de la somme de $n1$ et de $1$ et des éléments $__1$ de $Eq$ de $p$ appliqué à $i$ et de $true$ à des éléments de $Leq$ de $g1$ appliqué à $i$ et de $g2$ appliqué à $i$. Supposons que $p$ appliqué à $n1$ est égal à $true$. Soient $x2515$ et $x2516$ des nombres naturels. Alors $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))) -> (Hle : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> (Hcase : Eq (p n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16005. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Då om $1$ är lika med det största gemensama delaret av $n$ och $m$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a$ vara ett naturligt tal. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Då om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Match_le. Låt $_n \\in N$. Då för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från naturliga tal och element $z$ av $Leq$ av $_n$ och $__$ till element av $return_sort$, för alla element $case_le_n$ av $return_type$ av $_n$ och $le_n (_n)$, för alla funktioner $case_le_S$ från naturliga tal $m$ och element av $Leq$ av $_n$ och $m$ till element av $return_type$ av $m + 1$ och $le_S (_n , m , __)$, för alla naturliga tal $__$, om $_n \\leq __$, så håller $return_type$ för $__$ och $z$.",
    "output": "postulate match_le : (_n : Nat) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : Leq _n __) -> return_sort) -> (case_le_n : return_type _n (le_n _n)) -> (case_le_S : (m : Nat) -> (_ : Leq _n m) -> return_type (plus m 1) (le_S _n m __)) -> (_ : Nat) -> (z : Leq _n __) -> return_type __ z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_ind. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_809$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_811$ of $Lt$ of $_r$ and $_m$ and elements $x_810$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_811 , x_810)$. Let $x_809$ be an element of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$. Then $Q_$ holds for $x_809$.",
    "output": "postulate div_mod_spec_ind : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_809 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_811 : Lt _r _m) -> (x_810 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> (x_809 : div_mod_spec _n _m _q _r) -> Q_ x_809"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15622. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $d m - c n = 1$, then $m d - n c = 1$.",
    "output": "postulate let_clause_15622 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_max_to_false. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $m$ vara naturliga tal. Anta att $m$ är mindre än $n$. Då om $max$ applicerat på $n$ och $f$ är mindre än $m$, så är $f$ applicerat på $m$ lika med kontradiktion.",
    "output": "postulate lt_max_to_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Lt (max n f) m) -> Eq (f m) false"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Start_lop. Låt $n$ vara ett naturligt tal. Anta att $1$ är mindre än eller lika med $n$. Då är $option_hd$ applicerat på $Nat$ och $list_of_primes$ applicerat på $n$ lika med $Some$ applicerat på $Nat$ och $2$.",
    "output": "postulate start_lop : (n : Nat) -> (_ : Leq 1 n) -> Eq (option_hd Nat (list_of_primes n)) (Some Nat 2)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1009. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Anta att $0 < n$. Anta att kontradiktion är lika med $f (n)$. Anta att $max (m , f)\\leq n$. Anta att $max (m , f)= n$. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $m$ och funktionen som avbildar $__$ som $Eq$ applicerat på $f$ applicerat på $i$ och kontradiktion och $max (m , f)= 0$. Låt $auto$ vara en funktion från naturliga tal $i$ och element av $Lt$ av $i$ och $m$ till element av $Eq$ av $f (i)$ och kontradiktion. Då om $max (m , f)= 0$, så $0 = n$.",
    "output": "postulate let_clause_1009 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (Hfn : Eq (f n) false) -> (Hmax : Leq (max m f) n) -> (Hmax0 : Eq (max m f) n) -> (_clearme : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i m) (\\ _ : Lt i m -> Eq (f i) false))) (Eq (max m f) 0)) -> (auto : (i : Nat) -> (_ : Lt i m) -> Eq (f i) false) -> (auto' : Eq (max m f) 0) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "True_to_le_max. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ be natural numbers. Then if $m$ is less than $n$, then if $f$ applied to $m$ is equal to $true$, then $m$ is less than or equal to $max$ applied to $n$ and $f$.",
    "output": "postulate true_to_le_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> Leq m (max n f)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp0. Soit $_n , _m , _q , _r \\in N$. Soit $Q_$ une fonction des éléments $_x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_859$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_858$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_859$ et $x_858$. Alors pour tous les éléments $x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_857$.",
    "output": "postulate div_mod_spec_rect_CProp0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_857 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_859 : Lt _r _m) -> (x_858 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> (x_857 : div_mod_spec _n _m _q _r) -> Q_ x_857"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_le_to_leb_false. Let $n$ and $m$ be natural numbers. Then if $n$ is not less than or equal to $m$, then absurdity is equal to $leb (n , m)$.",
    "output": "postulate not_le_to_leb_false : (n : Nat) -> (m : Nat) -> (_ : not (Leq n m)) -> Eq (leb n m) false"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "ACop_rect_Type1_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_899$ of $ACop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$, for all elements $x_899$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_899$.",
    "output": "postulate ACop_rect_Type1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_899 : ACop A _nil) -> Type1) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_899 : ACop A _nil) -> Q_ x_899"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_n_n. Let $n$ be a natural number. Then if $0$ is less than $n$, then $mod$ applied to $n$ and $n$ is equal to $0$.",
    "output": "postulate mod_n_n : (n : Nat) -> (_ : Lt 0 n) -> Eq (mod n n) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_4_to_fact. Let $n$ be a natural number. Then if $4 < n$, then $(2 n)! \\leq 2 ^ (2 n - 2)n ! n !$.",
    "output": "postulate lt_4_to_fact : (n : Nat) -> (_ : Lt 4 n) -> Leq (factorial (times 2 n)) (times (times (pow 2 (minus (times 2 n) 2)) (factorial n)) (factorial n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_inv_rect_Type3. Let $x1$ be a set. Let $Hterm$ be an element of $range$ of $x1$. Let $P$ be a function from elements $_z1644$ of $range$ of $x1$ to elements of $Type3$. Then for all functions $_H1$ from functions $_enum$ from natural numbers to elements of $x1$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans and elements $_z1645$ of $Eq$ of $Hterm$ and $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$ to elements of $P$ of $mk_range$ applied to $x1$ and $_enum$ and $_upto$ and $_filter$, $P$ holds for $Hterm$.",
    "output": "postulate range_inv_rect_Type3 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1644 : range x1) -> Type3) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1645 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Eq_length_to_mem. Soit $n \\in N$. Soit $l$ une liste de nombres naturels. Supposons que $length$ appliqué à $Nat$ et $l$ est égal à la somme de $n$ et de $1$. Alors pour tous les éléments $__1$ de $unique$ de $Nat$ et de $l$, pour toutes les fonctions $__2$ des nombres naturels $x$ et des éléments $__2$ de $mem$ de $Nat$ et de $x$ et de $l$ à des éléments de $Leq$ de $x$ et de $n$, $mem$ tient pour $Nat$ et $n$ et $l$.",
    "output": "postulate eq_length_to_mem : (n : Nat) -> (l : list Nat) -> (_ : Eq (length Nat l) (plus n 1)) -> (__1 : unique Nat l) -> (__2 : (x : Nat) -> (__2 : mem Nat x l) -> Leq x n) -> mem Nat n l"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_times_n_to_lt_r. Låt $n$ och $p$ och $q$ vara naturliga tal. Anta att $n p < n q$. Då $p < q$.",
    "output": "postulate lt_times_n_to_lt_r : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : Lt (times n p) (times n q)) -> Lt p q"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_O_n. Let $n$ be a natural number. Then $mod (0 , n)= 0$.",
    "output": "postulate mod_O_n : (n : Nat) -> Eq (mod 0 n) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0 < n$ and $n \\leq m$. Assume that $n \\leq q + 1$ and $n$ is not divisible by $m$. Let $a \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b$ be a natural number. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ and $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_CProp2_body. Låt $_n , _m , _q , _r \\in N$. Då för alla funktioner $Q_$ från element $_x_849$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden, för alla funktioner $_H_div_mod_spec_intro$ från element $x_851$ av $Lt$ av $_r$ och $_m$ och element $x_850$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_851 , x_850)$, för alla element $x_849$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_849$.",
    "output": "postulate div_mod_spec_rect_CProp2_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $k , n \\in N$. Anta att $k \\leq n$. Låt $__1$ vara ett element av $permut$ av $h$ och $n$. Låt $__2$ vara en funktion från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h (m)$ och $m$. Låt $j$ vara ett naturligt tal. Anta att $k \\leq j$. Anta att $j \\leq n$. Då $k \\leq h (j)$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16004. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Antisymmetric_divides. Soient $n$ et $m$ des nombres naturels. Alors si $n$ est divisible par $m$, alors si $m$ est divisible par $n$, alors $n$ est égal à $m$.",
    "output": "postulate antisymmetric_divides : (n : Nat) -> (m : Nat) -> (_ : divisible n m) -> (__1 : divisible m n) -> Eq n m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_ind_body. Låt $_n , _m \\in N$. Låt $Q_$ vara en funktion från element $_x_1192$ av $divisible$ av $_n$ och $_m$ till påståenden. Då för alla funktioner $_H_quotient$ från naturliga tal $q$ och element $x_1193$ av $Eq$ av $_m$ och $_n \\times q$ till element av $Q_$ av $quotient (_n , _m , q , x_1193)$, om $_n$ är delbart med $_m$, så håller $Q_$ för $x_1192$.",
    "output": "postulate divides_ind_body : (_n : Nat) -> (_m : Nat) -> (Q_ : (_x_1192 : divisible _n _m) -> Prop) -> (_H_quotient : (q : Nat) -> (x_1193 : Eq _m (times _n q)) -> Q_ (quotient _n _m q x_1193)) -> (x_1192 : divisible _n _m) -> Q_ x_1192"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Exp_pi. Let $n$ and $m$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Then for all functions $f$ from natural numbers to natural numbers, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $f$ applied to $i$ and $m$ is equal to the exponentiation of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $m$.",
    "output": "postulate exp_pi : (n : Nat) -> (m : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow (f i) m)) (pow (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> f i)) m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Soit $n1$ un nombre naturel. Soit $Hind$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$ et des fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Lt$ de $i$ et de $n1$ et des éléments $__2$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$ à des éléments de $Leq$ de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$ et de $bigop$ appliqué à $n1$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$. Soit $H1$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $p2 (i)$ et de $true$. Alors pour toutes les fonctions $H2$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1 + 1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, si $p2 (n1)= true$, alors si $p1 (n1)= true$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n1) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))) -> (H1 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (H2 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (Hp2 : Eq (p2 n1) true) -> (Hp1 : Eq (p1 n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Exp_pi. Let $n , m \\in N$. Then for all functions $p$ from natural numbers to booleans, for all functions $f$ from natural numbers to natural numbers, the exponentiation of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $f$ applied to $i$ and $m$ is equal to $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the exponentiation of $f$ applied to $i$ and $m$.",
    "output": "postulate exp_pi : (n : Nat) -> (m : Nat) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> Nat) -> Eq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> pow (f i) m)) (pow (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> f i)) m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_times. Soit $n , m , p , q \\in N$. Alors si $n$ est divisible par $p$, alors si $m$ est divisible par $q$, alors le produit de $n$ et de $m$ est divisible par le produit de $p$ et de $q$.",
    "output": "postulate divides_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible m q) -> divisible (times n m) (times p q)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_inv_rect_CProp2. Låt $x1$ vara en mängd. Låt $Hterm$ vara ett element av $range$ av $x1$. Då för alla funktioner $P$ från element $_z1680$ av $range$ av $x1$ till påståenden, för alla funktioner $_H1$ från funktioner $_enum$ från naturliga tal till element av $x1$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden och element $_z1681$ av $Eq$ av $Hterm$ och $mk_range (x1 , _enum , _upto , _filter)$ till element av $P$ av $mk_range (x1 , _enum , _upto , _filter)$, håller $P$ för $Hterm$.",
    "output": "postulate range_inv_rect_CProp2 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1680 : range x1) -> Prop) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1681 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_ord. Soient $p$ et $n$ des nombres naturels. Alors si $1 < p$, alors si $0 < n$, alors $n = p ^ ord (n , p)ord_rem (n , p)$.",
    "output": "postulate exp_ord : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Eq n (times (pow p (ord n p)) (ord_rem n p))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_d_times_gcd. Pour tous les nombres naturels $m$ et $n$ et $d$ et $c$, si $0 < c$ et $d$ est divisible par $c \\times m$, alors si $d$ est divisible par $c \\times n$, alors $d$ est divisible par le produit de $c$ et du diviseur commun plus grand de $n$ et de $m$.",
    "output": "postulate divides_d_times_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> (c : Nat) -> (_ : Lt 0 c) -> (__1 : divisible d (times c m)) -> (__2 : divisible d (times c n)) -> divisible d (times c (gcd n m))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_ind. Låt $_n \\in N$. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla funktioner $Q_$ från naturliga tal $x_971$ och element $_x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$ till påståenden, för alla funktioner $_H_found_max_spec$ från naturliga tal $m$ och element $x_975$ av $Lt$ av $m$ och $_n$ och element $x_974$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $m$ och $found_max_spec$ applicerat på $_n$ och $_f$ och $m$ och $x_975$ och $x_974$ och $x_973$, för alla funktioner $_H_not_found_max_spec$ från funktioner $x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $0$ och $not_found_max_spec$ applicerat på $_n$ och $_f$ och $x_976$, för alla naturliga tal $x_971$, för alla element $x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$, håller $Q_$ för $x_971$ och $x_972$.",
    "output": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1561. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$. Supposons que $a p - b m = 1$. Alors $p a - m b = 1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_exp_to_lt1. För alla naturliga tal $a$ och $n$ och $m$, om $0 < a$, så om $n ^ a < m ^ a$, så $n < m$.",
    "output": "postulate lt_exp_to_lt1 : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 a) -> (__1 : Lt (pow n a) (pow m a)) -> Lt n m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10471. Låt $n1$ och $n2$ vara naturliga tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $_clearme0$ vara ett element av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Låt $k$ vara en funktion från naturliga tal till naturliga tal. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$, $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ håller för $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$. Anta att $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$. Låt $same$ vara en funktion från naturliga tal $i$ och element av $Lt$ av $i$ och $n1$ och element $__1$ av $Eq$ av $p1$ applicerat på $i$ och $true$ till element av $Eq$ av $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$. Låt $i$ och $m$ vara naturliga tal. Låt $Hind$ vara en funktion från funktioner $f$ från naturliga tal till sanningsvärden och element av $Leq$ av $0$ och $n1$ och element $__1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $m$ och $f$ och element $__2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $m$ och $f$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ till element av $Eq$ av $bigop$ applicerat på $0$ och funktionen som avbildar $i0$ som $p1$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f1$ applicerat på $i0$ och $bigop$ applicerat på $m$ och funktionen som avbildar $i0$ som $f$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f2$ applicerat på $i0$. Då för alla funktioner $p20$ från naturliga tal till sanningsvärden, om $0$ är mindre än eller lika med $n1$, så för alla element $sub1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och summan av $m$ och $1$ och $p20$, för alla element $sub2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och summan av $m$ och $1$ och $p20$ och $mk_range$ applicerat på $B$ och $f1$ och $0$ och $p1$, för alla naturliga tal $x2571$ och $x2572$, är $x2571$ lika med summan av produkten av $x2572$ och kvoten av $x2571$ och $x2572$ och $mod$ applicerat på $x2571$ och $x2572$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1569. Let $m , n , a , b \\in N$. Then if $0$ is less than $n$, then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.",
    "output": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_aux_body. Let $_p , _m , _n \\in N$. Then $Nat$.",
    "output": "postulate mod_aux_body : (_p : Nat) -> (_m : Nat) -> (_n : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_le_Sn_n. For all natural numbers $n$, $n + 1$ is not less than or equal to $n$.",
    "output": "postulate not_le_Sn_n : (n : Nat) -> not (Leq (plus n 1) n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bijn_transpose_r. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n , i , j \\in N$. Alors si $i \\leq n$, alors si $j \\leq n$, alors pour tous les éléments $__2$ de $bijn$ de $f$ et de $n$, $bijn$ tient pour la fonction qui envoie $p$ à $f (transpose (i , j , p))$ et $n$.",
    "output": "postulate bijn_transpose_r : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> (__2 : bijn f n) -> bijn (\\ p : Nat -> f (transpose i j p)) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_inv_rect_CProp2. Låt $Hterm$ vara ett naturligt tal. Låt $P$ vara en funktion från naturliga tal $_z701$ till påståenden. Då för alla funktioner $_H1$ från element $_z702$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$, för alla funktioner $_H2$ från naturliga tal $x_406$ och funktioner $_x_408$ från element $_z702$ av $Eq$ av $Hterm$ och $x_406$ till element av $P$ av $x_406$ och element $_z702$ av $Eq$ av $Hterm$ och $x_406 + 1$ till element av $P$ av $x_406 + 1$, håller $P$ för $Hterm$.",
    "output": "postulate nat_inv_rect_CProp2 : (Hterm : Nat) -> (P : (_z701 : Nat) -> Prop) -> (_H1 : (_z702 : Eq Hterm 0) -> P 0) -> (_H2 : (x_406 : Nat) -> (_x_408 : (_z702 : Eq Hterm x_406) -> P x_406) -> (_z702 : Eq Hterm (plus x_406 1)) -> P (plus x_406 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_exp_priml. Låt $n$ vara ett naturligt tal. Då om $0 < n$, så $2 ^ (2 n)\\leq 2 n ^ (prim (2 n)+ 1)$.",
    "output": "postulate le_exp_priml : (n : Nat) -> (_ : Lt 0 n) -> Leq (pow 2 (times 2 n)) (pow (times 2 n) (plus (prim (times 2 n)) 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_log_n_n. For all natural numbers $p$ and $n$, if $1$ is less than $p$, then the logarithm of $p$ and $n$ is less than or equal to $n$.",
    "output": "postulate le_log_n_n : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Leq (log p n) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_fwd_plus_plus_ge. Soit $m1 , m2 \\in N$. Alors si $m2 \\leq m1$, alors pour tous les nombres naturels $n1$ et $n2$, si $m1 + n1 \\leq m2 + n2$, alors $n1 \\leq n2$.",
    "output": "postulate le_fwd_plus_plus_ge : (m1 : Nat) -> (m2 : Nat) -> (_ : Leq m2 m1) -> (n1 : Nat) -> (n2 : Nat) -> (__1 : Leq (plus m1 n1) (plus m2 n2)) -> Leq n1 n2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$ och $j \\leq n$. Låt $a$ vara ett naturligt tal. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b$ vara ett naturligt tal. Anta att $b \\leq n$ och $f (b)= j$ och $b \\leq n$. Då om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1575. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_smallest_factor_n. Låt $n$ vara ett naturligt tal. Då om $0$ är mindre än $n$, så är $smallest_factor$ applicerat på $n$ delbart med $n$.",
    "output": "postulate divides_smallest_factor_n : (n : Nat) -> (_ : Lt 0 n) -> divisible (smallest_factor n) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_ind_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_943$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_943$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_943$.",
    "output": "postulate Dop_ind_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "K1. For all natural numbers $n$ and $p$, if $18 \\leq n$, then if $p \\leq n$, then if $2 n \\div 3 < p$, then $k (2 n , p)= 0$.",
    "output": "postulate k1 : (n : Nat) -> (p : Nat) -> (_ : Leq 18 n) -> (__1 : Leq p n) -> (__2 : Lt (div (times 2 n) 3) p) -> Eq (k (times 2 n) p) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15491. Let $m$ and $n$ be natural numbers. Assume that $0 = n$. Then for all natural numbers $x1106$, $x1106 = x1106 - n$.",
    "output": "postulate let_clause_15491 : (m : Nat) -> (n : Nat) -> (eqn0 : Eq 0 n) -> (x1106 : Nat) -> Eq x1106 (minus x1106 n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_Psil. For all natural numbers $n$, $Psi$ applied to $n$ is less than or equal to the exponentiation of $n$ and $prim$ applied to $n$.",
    "output": "postulate le_Psil : (n : Nat) -> Leq (Psi n) (pow n (prim n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10131. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ and $n0$ be natural numbers. Assume that $max (n0 + 1 , f)= m$ and absurdity is equal to $f (m)$. Let $i$ and $j$ be natural numbers. Then if $j + 1 < n0 + 1$, then for all natural numbers $x7$, $x7 = m + x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10471. Let $n1$ and $n2$ be natural numbers. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Let $f1$ and $f2$ be functions from natural numbers to elements of $B$. Let $_clearme$ be an element of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Let $h$ be a function from natural numbers to natural numbers. Let $_clearme0$ be an element of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$. Let $k$ be a function from natural numbers to natural numbers. Assume that $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$ and $sub_hk$ holds for $k$ and $h$ and $B$ and $mk_range (B , f2 , n2 , p2)$ and $mk_range (B , f1 , n1 , p1)$ and $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$. Let $same$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $f1 (i)$ and $f2 (h (i))$. Let $i$ and $m$ be natural numbers. Let $Hind$ be a function from functions $f$ from natural numbers to booleans and elements of $Leq$ of $0$ and $n1$ and elements $__1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m , f)$ and elements $__2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m , f)$ and $mk_range (B , f1 , 0 , p1)$ to elements of $Eq$ of $bigop$ applied to $0$ and the function that maps $i0$ to $p1$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f1$ applied to $i0$ and $bigop$ applied to $m$ and the function that maps $i0$ to $f$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f2$ applied to $i0$. Then for all functions $p20$ from natural numbers to booleans, if $0 \\leq n1$, then for all elements $sub1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m + 1 , p20)$, for all elements $sub2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m + 1 , p20)$ and $mk_range (B , f1 , 0 , p1)$, for all natural numbers $x2571$ and $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bijn_transpose_r. Let $f$ be a function from natural numbers to natural numbers. Let $n$ and $i$ and $j$ be natural numbers. Then if $i$ is less than or equal to $n$, then if $j$ is less than or equal to $n$, then for all elements $__2$ of $bijn$ of $f$ and $n$, $bijn$ holds for the function that maps $p$ to $f$ applied to $transpose$ applied to $i$ and $j$ and $p$ and $n$.",
    "output": "postulate bijn_transpose_r : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> (__2 : bijn f n) -> bijn (\\ p : Nat -> f (transpose i j p)) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_upper_bound6. Soit $n , m \\in N$. Supposons que $nth_prime$ appliqué à $n$ est inférieur à $m$. Soit $x \\in N$. Alors $Nat$.",
    "output": "postulate let_upper_bound6 : (n : Nat) -> (m : Nat) -> (ltml : Lt (nth_prime n) m) -> (x : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_ind. Let $_n \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions. Let $_H_found_max_spec$ be a function from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f (m)$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$. Then for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec (_n , _f , x_976)$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.",
    "output": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15441. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soit $m , n \\in N$. Supposons que $0 < n$. Supposons que $n \\leq m$. Supposons que $n \\leq q + 1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b \\in N$. Supposons que $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Supposons que $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Alors $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_rect_CProp2_body. För alla mängder $_A$, för alla funktioner $Q_$ från element $_x_935$ av $range$ av $_A$ till påståenden, för alla funktioner $_H_mk_range$ från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range (_A , _enum , _upto , _filter)$, för alla element $x_935$ av $range$ av $_A$, håller $Q_$ för $x_935$.",
    "output": "postulate range_rect_CProp2_body : (_A : Set) -> (Q_ : (_x_935 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_935 : range _A) -> Q_ x_935"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_rect_Type3_body. Soit $_A$ un ensemble. Soit $Q_$ une fonction des éléments $_x_921$ de $range$ de $_A$ à des éléments de $Type3$. Soit $_H_mk_range$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range (_A , _enum , _upto , _filter)$. Alors pour tous les éléments $x_921$ de $range$ de $_A$, $Q_$ tient pour $x_921$.",
    "output": "postulate range_rect_Type3_body : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_divides_S_fact. Let $n$ and $i$ be natural numbers. Assume that $1$ is less than $i$. Assume that $i$ is less than or equal to $n$. Then $i$ is not divisible by the sum of the factorial of $n$ and $1$.",
    "output": "postulate not_divides_S_fact : (n : Nat) -> (i : Nat) -> (_ : Lt 1 i) -> (__1 : Leq i n) -> not (divisible i (plus (factorial n) 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1561. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Då om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$, så om $a p - b m = 1$, så $p a - m b = 1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1532. Låt $n$ och $m$ vara naturliga tal. Anta att $n$ är delbart med $m$. Anta att $0$ är lika med $n$. Låt $d$ vara ett naturligt tal. Anta att $m$ är lika med produkten av $0$ och $d$. Då är $m$ lika med $0$.",
    "output": "postulate let_clause_1532 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233$ be a natural number. Let $x_1232$ and $x_1231$ be elements of $B$. Let $x_1234$ be an element of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$. Then $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.",
    "output": "postulate lstar_ind : (B : Set) -> (_R : relation B) -> (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) -> (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) -> (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (plus l 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) -> (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Q_ x_1233 x_1232 x_1231 x_1234"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_ind. Let $_n \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_971$ and elements $_x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$ to propositions. Then for all functions $_H_found_max_spec$ from natural numbers $m$ and elements $x_975$ of $Lt$ of $m$ and $_n$ and elements $x_974$ of $Eq$ of $_f$ applied to $m$ and $true$ and functions $x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $m$ and $found_max_spec$ applied to $_n$ and $_f$ and $m$ and $x_975$ and $x_974$ and $x_973$, for all functions $_H_not_found_max_spec$ from functions $x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $_n$ to elements of $Eq$ of $_f$ applied to $i$ and absurdity to elements of $Q_$ of $0$ and $not_found_max_spec$ applied to $_n$ and $_f$ and $x_976$, for all natural numbers $x_971$, for all elements $x_972$ of $max_spec$ of $_n$ and $_f$ and $x_971$, $Q_$ holds for $x_971$ and $x_972$.",
    "output": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_CProp3. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.",
    "output": "postulate Dop_rect_CProp3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_961 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_961 : Dop A _nil) -> Q_ x_961"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1617. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Then if $m n = p c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$, then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_inv_rect_CProp0. Låt $Hterm \\in N$. Låt $P$ vara en funktion från naturliga tal $_z713$ till påståenden. Låt $_H1$ vara en funktion från element $_z714$ av $Eq$ av $Hterm$ och $0$ till element av $P$ av $0$. Låt $_H2$ vara en funktion från naturliga tal $x_414$ och funktioner $_x_416$ från element $_z714$ av $Eq$ av $Hterm$ och $x_414$ till element av $P$ av $x_414$ och element $_z714$ av $Eq$ av $Hterm$ och summan av $x_414$ och $1$ till element av $P$ av summan av $x_414$ och $1$. Då håller $P$ för $Hterm$.",
    "output": "postulate nat_inv_rect_CProp0 : (Hterm : Nat) -> (P : (_z713 : Nat) -> Prop) -> (_H1 : (_z714 : Eq Hterm 0) -> P 0) -> (_H2 : (x_414 : Nat) -> (_x_416 : (_z714 : Eq Hterm x_414) -> P x_414) -> (_z714 : Eq Hterm (plus x_414 1)) -> P (plus x_414 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_inv_rect_Type3. Soit $x1$ un ensemble. Alors pour tous les éléments $Hterm$ de $range$ de $x1$, pour toutes les fonctions $P$ des éléments $_z1644$ de $range$ de $x1$ à des éléments de $Type3$, pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1645$ de $Eq$ de $Hterm$ et de $mk_range (x1 , _enum , _upto , _filter)$ à des éléments de $P$ de $mk_range (x1 , _enum , _upto , _filter)$, $P$ tient pour $Hterm$.",
    "output": "postulate range_inv_rect_Type3 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1644 : range x1) -> Type3) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1645 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Plus_minus_m_m. Låt $n$ och $m$ vara naturliga tal. Anta att $m \\leq n$. Då $n = (n - m)+ m$.",
    "output": "postulate plus_minus_m_m : (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> Eq n (plus (minus n m) m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16002. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_times_mod. For all natural numbers $n$ and $m$ and $p$, if $0 < p$ and $0 < m$, then $mod (n , p)= mod (mod (n , m p), p)$.",
    "output": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16171. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c$ vara ett naturligt tal. Anta att $m n = p c$. Låt $a \\in N$. Då för alla element $_clearme0$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$, för alla naturliga tal $b$, om det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10336. Låt $n , m \\in N$. Låt $Hind$ vara en funktion från naturliga tal $p$ och element av $Lt$ av $p$ och $m$ och element $__1$ av $Lt$ av $1$ och $p$ till element av $Leq$ av $Psi (p)$ och $pred (p)\\times (2 ^ (2 p - 3))$. Låt $a$ vara ett naturligt tal. Anta att $m = 2 a$ eller $m = 2 a + 1$. Anta att $m = 2 a + 1$. Anta att $1 < 2 a + 1$. Då om $0 < a$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10336 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15624. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$ est égale à $1$.",
    "output": "postulate let_clause_15624 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_inv_ind. Låt $x1 \\in N$. Låt $x2$ vara en funktion från naturliga tal till sanningsvärden. Låt $x3 \\in N$. Låt $_Hterm$ vara ett element av $max_spec$ av $x1$ och $x2$ och $x3$. Låt $P$ vara en funktion från naturliga tal $_z1769$ till påståenden. Låt $_H1$ vara en funktion från naturliga tal $m$ och element $_x_975$ av $Lt$ av $m$ och $x1$ och element $_x_974$ av $Eq$ av $x2$ applicerat på $m$ och $true$ och funktioner $_x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2$ applicerat på $i$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $m$ till element av $P$ av $m$. Då för alla funktioner $_H2$ från funktioner $_x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2$ applicerat på $i$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $0$ till element av $P$ av $0$, håller $P$ för $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Ord_eq. Låt $n$ och $p$ vara naturliga tal. Då $ord (n , p)= fst (Nat , Nat , p_ord (n , p))$.",
    "output": "postulate ord_eq : (n : Nat) -> (p : Nat) -> Eq (ord n p) (fst Nat Nat (p_ord n p))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nth_primeS. Låt $n$ vara ett naturligt tal. Då $nth_prime (n + 1)= min (let_upper_bound1 (n), let_previous_prime1 (n)+ 1 , primeb)$.",
    "output": "postulate nth_primeS : (n : Nat) -> Eq (nth_prime (plus n 1)) (min (let_upper_bound1 n) (plus (let_previous_prime1 n) 1) primeb)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15623. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.",
    "output": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Minus_Sn_m. Soient $m$ et $n$ des nombres naturels. Alors si $m$ est inférieur ou ágal à $n$, alors la différence de la somme de $n$ et de $1$ et de $m$ est égale à la somme de la différence de $n$ et de $m$ et de $1$.",
    "output": "postulate minus_Sn_m : (m : Nat) -> (n : Nat) -> (_ : Leq m n) -> Eq (minus (plus n 1) m) (plus (minus n m) 1)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dividesb_true_to_lt_O. Låt $n , m \\in N$. Anta att $0$ är mindre än $n$. Anta att $m$ är delbart med $n$. Då är $0$ mindre än $m$.",
    "output": "postulate dividesb_true_to_lt_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : divisible m n) -> Lt 0 m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1047. Soient $k$ et $n$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $n \\leq k$, alors pour tous les nombres naturels $j$, si $n \\leq j$, alors pour toutes les fonctions $Hind$ des fonctions des nombres naturels $i$ et des éléments de $Leq$ de $n$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $j$ à des éléments de $Eq$ de $p (i)$ et de contradiction à des éléments de $Eq$ de $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et de $bigop$ appliqué à $j$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$, pour toutes les fonctions $Hfalse$ des nombres naturels $i$ et des éléments de $Leq$ de $n$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $j + 1$ à des éléments de $Eq$ de $p (i)$ et de contradiction, pour tous les nombres naturels $x2571$ et $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_1047 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (lenk : Leq n k) -> (j : Nat) -> (leup : Leq n j) -> (Hind : (_ : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i j) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop j (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))) -> (Hfalse : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i (plus j 1)) -> Eq (p i) false) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to the sum of $q$ and $1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ or the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then if the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, then the difference of the product of $n$ and $b$ and the product of $a$ and $mod$ applied to $m$ and $n$ is equal to $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Monotonic_iter. Låt $g$ vara en funktion från naturliga tal till naturliga tal. Låt $a$ och $b$ och $i$ vara naturliga tal. Då för alla element $__$ av $monotonic$ av $Nat$ och $Leq$ och $g$, om $a$ är mindre än eller lika med $b$, så är $iter$ applicerat på $Nat$ och $g$ och $i$ och $a$ mindre än eller lika med $iter$ applicerat på $Nat$ och $g$ och $i$ och $b$.",
    "output": "postulate monotonic_iter : (g : (_ : Nat) -> Nat) -> (a : Nat) -> (b : Nat) -> (i : Nat) -> (_ : monotonic Nat Leq g) -> (__1 : Leq a b) -> Leq (iter Nat g i a) (iter Nat g i b)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1545. Låt $m$ och $n$ vara naturliga tal. Anta att det största gemensama delaret av $m$ och $n$ är lika med $0$. Anta att $0$ är delbart med $n$. Låt $q1$ vara ett naturligt tal. Anta att $n$ är lika med produkten av $0$ och $q1$. Anta att $0$ är delbart med $m$. Låt $q2$ vara ett naturligt tal. Då om $m$ är lika med produkten av $0$ och $q2$, så är $m$ lika med $0$.",
    "output": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15692. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så $m d - n c = 1$.",
    "output": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Nat_ind_plus. Låt $R$ vara ett element av $predicate$ av $Nat$. Låt $__$ vara ett element av $R$ av $0$. Låt $__1$ vara en funktion från naturliga tal $n$ och element $__1$ av $R$ av $n$ till element av $R$ av $n + 1$. Då för alla naturliga tal $n$, håller $R$ för $n$.",
    "output": "postulate nat_ind_plus : (R : predicate Nat) -> (_ : R 0) -> (__1 : (n : Nat) -> (__1 : R n) -> R (plus n 1)) -> (n : Nat) -> R n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Gcd_O_l. Soit $m \\in N$. Alors $m$ est égal au diviseur commun plus grand de $0$ et de $m$.",
    "output": "postulate gcd_O_l : (m : Nat) -> Eq (gcd 0 m) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1560. Pour tous les nombres naturels $n$ et $m$, si $n$ est divisible par $m$ et $0 = n$, alors pour tous les nombres naturels $d$, si $m = 0 d$, alors $n = 0$.",
    "output": "postulate let_clause_1560 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq n 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16003. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Då för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "F_ind_aux. Soit $A$ un ensemble. Soit $f$ une fonction des éléments de $A$ à des nombres naturels. Soit $P$ un élément de $predicate$ de $A$. Soit $__$ une fonction des nombres naturels $n$ et des fonctions des éléments $a$ de $A$ et des éléments de $Lt$ de $f (a)$ et de $n$ à des éléments de $P$ de $a$ et des éléments $a$ de $A$ et des éléments $__1$ de $Eq$ de $f (a)$ et de $n$ à des éléments de $P$ de $a$. Alors pour tous les nombres naturels $n$, pour tous les éléments $a$ de $A$, si $f (a)= n$, alors $P$ tient pour $a$.",
    "output": "postulate f_ind_aux : (A : Set) -> (f : (_ : A) -> Nat) -> (P : predicate A) -> (_ : (n : Nat) -> (_ : (a : A) -> (_ : Lt (f a) n) -> P a) -> (a : A) -> (__1 : Eq (f a) n) -> P a) -> (n : Nat) -> (a : A) -> (__1 : Eq (f a) n) -> P a"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1575. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors pour tous les nombres naturels $x1029$, $x1029$ est égal au produit de $x1029$ et de la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_2_fact. Let $n \\in N$. Then if $1$ is less than $n$, then $2$ is less than or equal to the factorial of $n$.",
    "output": "postulate le_2_fact : (n : Nat) -> (_ : Lt 1 n) -> Leq 2 (factorial n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_rect_CProp1. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Let $Q_$ be a function from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions. Let $_H_div_mod_spec_intro$ be a function from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and $_q _m + _r$ to elements of $Q_$ of $div_mod_spec_intro (_n , _m , _q , _r , x_855 , x_854)$. Then for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.",
    "output": "postulate div_mod_spec_rect_CProp1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_855 : Lt _r _m) -> (x_854 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> (x_853 : div_mod_spec _n _m _q _r) -> Q_ x_853"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16003. Soit $m , n , a , b \\in N$. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Supposons que $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$. Alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1569. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.",
    "output": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b \\in N$. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $b$ är lika med $j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$. Låt $injf$ vara ett element av $injn$ av $f$ och $n$. Anta att $a$ är lika med $b$. Då är $f$ applicerat på $a$ lika med $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_S_S. For all natural numbers $n$ and $m$, if $n \\leq m$, then $n + 1 \\leq m + 1$.",
    "output": "postulate le_S_S : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq (plus n 1) (plus m 1)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1559. Låt $n , m \\in N$. Anta att $n$ är delbart med $m$ och $0 = n$. Låt $d \\in N$. Då om $m = 0 d$, så $m = n$.",
    "output": "postulate let_clause_1559 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Aop_rect_CProp0_body. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_885$ de $Aop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_Aop$ des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $_nil$ et $a$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $_nil$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $op$ appliqué à $b$ et $c$ et de $op$ appliqué à $op$ appliqué à $a$ et $b$ et $c$ à des éléments de $Q_$ de $mk_Aop$ appliqué à $A$ et $_nil$ et $op$ et $_nill$ et $_nilr$ et $_assoc$, pour tous les éléments $x_885$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_885$.",
    "output": "postulate Aop_rect_CProp0_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_885 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_885 : Aop A _nil) -> Q_ x_885"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1562. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$ och $0 < m$. Då om $1$ är lika med det största gemensama delaret av $n$ och $m$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$, så $n c - m d = 1$.",
    "output": "postulate let_clause_1562 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $bijf$ vara ett element av $bijn$ av $f$ och summan av $n$ och $1$. Anta att $f$ applicerat på summan av $n$ och $1$ är lika med summan av $n$ och $1$. Låt $i$ vara ett naturligt tal. Då om $i$ är mindre än eller lika med $n$, så för alla naturliga tal $a$, om $a$ är mindre än eller lika med summan av $n$ och $1$ och $f$ applicerat på $a$ är lika med $i$, så om $a$ är mindre än eller lika med summan av $n$ och $1$, så om $f$ applicerat på $a$ är lika med $i$, så om $a$ är lika med summan av $n$ och $1$, så är $i$ lika med $a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$ et $j \\leq n$. Alors pour tous les nombres naturels $a$, si $a \\leq n$ et $f (a)= i$ et $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$ et $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p , m , n \\in N$. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c$ be a natural number. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Then for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to $1$, then the difference of the product of $m$ and $b$ and the product of $p$ and $a$ is equal to $1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_iter. Soit $g$ une fonction des nombres naturels à des nombres naturels. Soit $a$ un nombre naturel. Alors pour toutes les fonctions $__$ des nombres naturels $x$ à des éléments de $Leq$ de $x$ et de $g$ appliqué à $x$, pour tous les nombres naturels $i$, $a$ est inférieur ou ágal à $iter$ appliqué à $Nat$ et $g$ et $i$ et $a$.",
    "output": "postulate le_iter : (g : (_ : Nat) -> Nat) -> (a : Nat) -> (_ : (x : Nat) -> Leq x (g x)) -> (i : Nat) -> Leq a (iter Nat g i a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10471. Soient $n1$ et $n2$ des nombres naturels. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$, $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$ et $sub_hk$ tient pour $k$ et $h$ et $B$ et $mk_range (B , f2 , n2 , p2)$ et $mk_range (B , f1 , n1 , p1)$. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$. Soit $same$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $f1 (i)$ et de $f2 (h (i))$. Soit $i , m \\in N$. Soit $Hind$ une fonction des fonctions $f$ des nombres naturels à des valeurs booléennes et des éléments de $Leq$ de $0$ et de $n1$ et des éléments $__1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m , f)$ et des éléments $__2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m , f)$ et de $mk_range (B , f1 , 0 , p1)$ à des éléments de $Eq$ de $bigop$ appliqué à $0$ et la fonction qui envoie $i0$ à $p1$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f1$ appliqué à $i0$ et de $bigop$ appliqué à $m$ et la fonction qui envoie $i0$ à $f$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f2$ appliqué à $i0$. Soit $p20$ une fonction des nombres naturels à des valeurs booléennes. Supposons que $0 \\leq n1$. Soit $sub1$ un élément de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m + 1 , p20)$. Soit $sub2$ un élément de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m + 1 , p20)$ et de $mk_range (B , f1 , 0 , p1)$. Soit $x2571 , x2572 \\in N$. Alors $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Times_2_pred. Soit $n \\in N$. Alors $2 pred (n)\\leq pred (2 n)$.",
    "output": "postulate times_2_pred : (n : Nat) -> Leq (times 2 (pred n)) (pred (times 2 n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_rect_Type3. Låt $_A$ vara en mängd. Låt $Q_$ vara en funktion från element $_x_921$ av $range$ av $_A$ till element av $Type3$. Låt $_H_mk_range$ vara en funktion från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range (_A , _enum , _upto , _filter)$. Då för alla element $x_921$ av $range$ av $_A$, håller $Q_$ för $x_921$.",
    "output": "postulate range_rect_Type3 : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a$ vara ett naturligt tal. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Då om $f (a)= i$, så för alla naturliga tal $b$, om $b \\leq n$ och $f (b)= j$, så om $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15624. Låt $m , n , a , b \\in N$. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att $c n - d m = 1$ eller $d m - c n = 1$. Anta att $d m - c n = 1$. Då $m d - n c = 1$.",
    "output": "postulate let_clause_15624 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_gcd_nm. Låt $n , m \\in N$. Då är det största gemensama delaret av $n$ och $m$ både delbart med $m$ och delbart med $n$.",
    "output": "postulate divides_gcd_nm : (n : Nat) -> (m : Nat) -> and (divisible (gcd n m) m) (divisible (gcd n m) n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_inv_ind. Let $x1 \\in N$. Let $x2$ be a function from natural numbers to booleans. Let $x3 \\in N$. Let $_Hterm$ be an element of $max_spec$ of $x1$ and $x2$ and $x3$. Then for all functions $P$ from natural numbers $_z1769$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2$ applied to $m$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16005. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$ och $0 < m$. Då om $1$ är lika med det största gemensama delaret av $n$ och $m$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om $c n - d m = 1$ eller $d m - c n = 1$ och $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind_l_aux. Let $B$ be a set. Let $R$ be a function from elements of $B$ and elements $__1$ of $B$ to propositions. Let $b2$ be an element of $B$. Let $P$ be an element of $relation2$ of $Nat$ and $B$. Let $__$ be an element of $P$ of $0$ and $b2$. Let $__1$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$. Let $l \\in N$. Then for all elements $b1$ and $b$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$, if $b$ is equal to $b2$, then $P$ holds for $l$ and $b1$.",
    "output": "postulate lstar_ind_l_aux : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (b : B) -> (__2 : lstar B R l b1 b) -> (__3 : Eq b b2) -> P l b1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Not_divides_ord_rem. För alla naturliga tal $m$ och $p$, om $0 < m$, så om $1 < p$, så är $p$ inte delbart med $ord_rem (m , p)$.",
    "output": "postulate not_divides_ord_rem : (m : Nat) -> (p : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 1 p) -> not (divisible p (ord_rem m p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Aop_inv_rect_Type1. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Aop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1524$ of $Aop$ of $x1$ and $x2$ to elements of $Type1$, for all functions $_H1$ from functions $op$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_nill$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $x2$ and $a$ and $a$ and functions $_nilr$ from elements $a$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $x2$ and $a$ and functions $_assoc$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $op$ applied to $a$ and $op$ applied to $b$ and $c$ and $op$ applied to $op$ applied to $a$ and $b$ and $c$ and elements $_z1525$ of $Eq$ of $Hterm$ and $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$ to elements of $P$ of $mk_Aop$ applied to $x1$ and $x2$ and $op$ and $_nill$ and $_nilr$ and $_assoc$, $P$ holds for $Hterm$.",
    "output": "postulate Aop_inv_rect_Type1 : (x1 : Set) -> (x2 : x1) -> (Hterm : Aop x1 x2) -> (P : (_z1524 : Aop x1 x2) -> Type1) -> (_H1 : (op : (_ : x1) -> (__1 : x1) -> x1) -> (_nill : (a : x1) -> Eq (op x2 a) a) -> (_nilr : (a : x1) -> Eq (op a x2) a) -> (_assoc : (a : x1) -> (b : x1) -> (c : x1) -> Eq (op a (op b c)) (op (op a b) c)) -> (_z1525 : Eq Hterm (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P (mk_Aop x1 x2 op _nill _nilr _assoc)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp1. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_853$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_855$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_854$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_855 , x_854)$, pour tous les éléments $x_853$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_853$.",
    "output": "postulate div_mod_spec_rect_CProp1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_855 : Lt _r _m) -> (x_854 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> (x_853 : div_mod_spec _n _m _q _r) -> Q_ x_853"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $n$ be a natural number. Assume that $5 < n$. Let $m$ be a natural number. Assume that $6 \\leq m$ and $(m + 1)^ 2 \\leq 2 ^ m$. Let $a$ be a natural number. Assume that $6 \\leq a$ and $2 (a + 1)+ 1 \\leq 2 ^ a$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_p_ord. Let $p , a , b , c , d , n , m \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that $p$ is prime. Then if $n$ is divisible by $m$, then if $p_ord$ applied to $n$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $a$ and $b$, then if $p_ord$ applied to $m$ and $p$ is equal to $mk_Prod$ applied to $Nat$ and $Nat$ and $c$ and $d$, then $b$ is divisible by $d$ and $a$ is less than or equal to $c$.",
    "output": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> (__4 : Eq (p_ord n p) (mk_Prod Nat Nat a b)) -> (__5 : Eq (p_ord m p) (mk_Prod Nat Nat c d)) -> and (divisible b d) (Leq a c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_exp. Let $n$ and $m$ and $p$ be natural numbers. Assume that $0$ is less than $p$. Assume that $n$ is less than or equal to $m$. Then the exponentiation of $p$ and $n$ is less than or equal to the exponentiation of $p$ and $m$.",
    "output": "postulate le_exp : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Leq n m) -> Leq (pow p n) (pow p m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Eq_ord_sigma_p. Soit $n , m , x \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $x$ est premier. Supposons que la puissance de $x$ et de $m$ est inférieure ou ágale à $n$. Supposons que $n$ est inférieur à la puissance de $x$ et de la somme de $m$ et de $1$. Alors $ord$ appliqué à $n$ et $x$ est égal à $bigop$ appliqué à $m$ et la fonction qui envoie $i$ à $dividesb$ appliqué à la puissance de $x$ et de la somme de $i$ et de $1$ et $n$ et $Nat$ et $0$ et $plus$ et la fonction qui envoie $i$ à $1$.",
    "output": "postulate eq_ord_sigma_p : (n : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt 0 n) -> (__1 : prime x) -> (__2 : Leq (pow x m) n) -> (__3 : Lt n (pow x (plus m 1))) -> Eq (ord n x) (bigop m (\\ i : Nat -> dividesb (pow x (plus i 1)) n) Nat 0 plus (\\ i : Nat -> 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Permut_transpose_r. Let $f$ be a function from natural numbers to natural numbers. Let $m$ and $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $m$. Assume that $j$ is less than or equal to $m$. Then for all elements $__2$ of $permut$ of $f$ and $m$, $permut$ holds for the function that maps $n$ to $f$ applied to $transpose$ applied to $i$ and $j$ and $n$ and $m$.",
    "output": "postulate permut_transpose_r : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i m) -> (__1 : Leq j m) -> (__2 : permut f m) -> permut (\\ n : Nat -> f (transpose i j n)) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15625. Soit $m , n , a , b \\in N$. Supposons que $0 < n$. Supposons que $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que $c n - d m = 1$ ou $d m - c n = 1$. Supposons que $d m - c n = 1$. Alors $m d - n c = 1$.",
    "output": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1531. För alla naturliga tal $n$ och $m$, om $0 < m$, så om $n$ är delbart med $m$, så för alla naturliga tal $d$, om $m = n 0$, så $m = 0$.",
    "output": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Found_min_spec. Soit $n , b \\in N$. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $m \\in N$. Supposons que $b$ est inférieur ou ágal à $m$. Supposons que $m$ est inférieur à la somme de $n$ et de $b$. Supposons que $f$ appliqué à $m$ est égal à $true$. Soit $__3$ une fonction des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f$ appliqué à $i$ et de contradiction. Alors $min_spec$ tient pour $n$ et $b$ et $f$ et $m$.",
    "output": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Then for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$. Anta att $j \\leq n$. Låt $a$ vara ett naturligt tal. Anta att $a \\leq n$ och $f (a)= i$. Anta att $a \\leq n$. Anta att $f (a)= i$. Låt $b$ vara ett naturligt tal. Anta att $b \\leq n$ och $f (b)= j$. Anta att $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Då för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_log2_sqrt. Låt $n$ vara ett naturligt tal. Anta att potensen av $2$ och $4$ är mindre än eller lika med $n$. Då är logaritmen av $2$ och $n$ mindre än eller lika med kvadratroten av $n$.",
    "output": "postulate le_log2_sqrt : (n : Nat) -> (_ : Leq (pow 2 4) n) -> Leq (log 2 n) (sqrt n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10336. Soit $n , m \\in N$. Soit $Hind$ une fonction des nombres naturels $p$ et des éléments de $Lt$ de $p$ et de $m$ et des éléments $__1$ de $Lt$ de $1$ et de $p$ à des éléments de $Leq$ de $Psi (p)$ et de $pred (p)\\times (2 ^ (2 p - 3))$. Soit $a$ un nombre naturel. Alors si $m = 2 a$ ou $m = 2 a + 1$, alors si $m = 2 a + 1$, alors si $1 < 2 a + 1$, alors si $0 < a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10336 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_exists_to_forall. Let $P$ be a function from natural numbers to propositions. Let $n \\in N$. Then if it is not the case that $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $P$ applied to $i$, then for all natural numbers $i$, if $i < n$, then it is not the case that $P$ holds for $i$.",
    "output": "postulate not_exists_to_forall : (P : (_ : Nat) -> Prop) -> (n : Nat) -> (_ : not (ex Nat (\\ i : Nat -> and (Lt i n) (P i)))) -> (i : Nat) -> (__1 : Lt i n) -> not (P i)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10471. Soit $n1 , n2 \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$, $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$ et $sub_hk$ tient pour $k$ et $h$ et $B$ et $mk_range (B , f2 , n2 , p2)$ et $mk_range (B , f1 , n1 , p1)$. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$. Soit $same$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $f1 (i)$ et de $f2 (h (i))$. Soit $i , m \\in N$. Alors pour toutes les fonctions $Hind$ des fonctions $f$ des nombres naturels à des valeurs booléennes et des éléments de $Leq$ de $0$ et de $n1$ et des éléments $__1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m , f)$ et des éléments $__2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m , f)$ et de $mk_range (B , f1 , 0 , p1)$ à des éléments de $Eq$ de $bigop$ appliqué à $0$ et la fonction qui envoie $i0$ à $p1$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f1$ appliqué à $i0$ et de $bigop$ appliqué à $m$ et la fonction qui envoie $i0$ à $f$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f2$ appliqué à $i0$, pour toutes les fonctions $p20$ des nombres naturels à des valeurs booléennes, si $0 \\leq n1$, alors pour tous les éléments $sub1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m + 1 , p20)$, pour tous les éléments $sub2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m + 1 , p20)$ et de $mk_range (B , f1 , 0 , p1)$, pour tous les nombres naturels $x2571$ et $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1571. Låt $m , n \\in N$. Anta att $0 < n$. Anta att $0$ är lika med det största gemensama delaret av $m$ och $n$. Anta att $m = 0$. Anta att $n = 0$. Då $m = n$.",
    "output": "postulate let_clause_1571 : (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (H : Eq (gcd m n) 0) -> (auto : Eq m 0) -> (auto' : Eq n 0) -> Eq m n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "P_ord_aux_to_not_mod_O. Soit $p , n , m , q , r \\in N$. Alors si $1 < m$, alors si $0 < n$, alors si $n \\leq p$, alors si $p_ord_aux (p , n , m)= mk_Prod (Nat , Nat , q , r)$, alors $mod (r , m)$ n'est pas égal à $0$.",
    "output": "postulate p_ord_aux_to_not_mod_O : (p : Nat) -> (n : Nat) -> (m : Nat) -> (q : Nat) -> (r : Nat) -> (_ : Lt 1 m) -> (__1 : Lt 0 n) -> (__2 : Leq n p) -> (__3 : Eq (p_ord_aux p n m) (mk_Prod Nat Nat q r)) -> not (Eq (mod r m) 0)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16004. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Monotonic_lt_plus_r. For all natural numbers $n$, $monotonic$ holds for $Nat$ and $Lt$ and the function that maps $m$ to $n + m$.",
    "output": "postulate monotonic_lt_plus_r : (n : Nat) -> monotonic Nat Lt (\\ m : Nat -> plus n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b$ be a natural number. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Assume that $b$ is less than or equal to $n$. Assume that $f$ applied to $b$ is equal to $j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$. Then for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bijn_transpose_r. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soient $n$ et $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Alors si $j$ est inférieur ou ágal à $n$, alors pour tous les éléments $__2$ de $bijn$ de $f$ et de $n$, $bijn$ tient pour la fonction qui envoie $p$ à $f$ appliqué à $transpose$ appliqué à $i$ et $j$ et $p$ et $n$.",
    "output": "postulate bijn_transpose_r : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> (__2 : bijn f n) -> bijn (\\ p : Nat -> f (transpose i j p)) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15623. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $d m - c n = 1$, then $m d - n c = 1$.",
    "output": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5 < n$. Soit $m \\in N$. Supposons que $6 \\leq m$ et $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a$ un nombre naturel. Alors si $6 \\leq a$ et $2 (a + 1)+ 1 \\leq 2 ^ a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "ACop_rect_CProp2. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_909$ of $ACop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op (A , _nil , aop , a , b)$ and $op (A , _nil , aop , b , a)$ to elements of $Q_$ of $mk_ACop (A , _nil , aop , _comm)$, for all elements $x_909$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_909$.",
    "output": "postulate ACop_rect_CProp2 : (A : Set) -> (_nil : A) -> (Q_ : (_x_909 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_909 : ACop A _nil) -> Q_ x_909"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_plus_to_minus_r. Let $a$ and $b$ and $c$ be natural numbers. Then if $a + b \\leq c$, then $a \\leq c - b$.",
    "output": "postulate le_plus_to_minus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Leq (plus a b) c) -> Leq a (minus c b)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_CProp0. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z713$ à des propositions. Soit $_H1$ une fonction des éléments $_z714$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$. Soit $_H2$ une fonction des nombres naturels $x_414$ et des fonctions $_x_416$ des éléments $_z714$ de $Eq$ de $Hterm$ et de $x_414$ à des éléments de $P$ de $x_414$ et des éléments $_z714$ de $Eq$ de $Hterm$ et de la somme de $x_414$ et de $1$ à des éléments de $P$ de la somme de $x_414$ et de $1$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_CProp0 : (Hterm : Nat) -> (P : (_z713 : Nat) -> Prop) -> (_H1 : (_z714 : Eq Hterm 0) -> P 0) -> (_H2 : (x_414 : Nat) -> (_x_416 : (_z714 : Eq Hterm x_414) -> P x_414) -> (_z714 : Eq Hterm (plus x_414 1)) -> P (plus x_414 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10131. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$ et $n0$, si $max (n0 + 1 , f)= m$ et contradiction est égal à $f (m)$, alors pour tous les nombres naturels $i$ et $j$, si $j + 1 < n0 + 1$, alors pour tous les nombres naturels $x7$, $x7 = m + x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , b \\in N$. Då för alla element $__$ av $ex$ av $Nat$ och funktionen som avbildar $i$ som konjunktionen av konjunktionen av $Leq$ applicerat på $b$ och $i$ och $Lt$ applicerat på $i$ och summan av $n$ och $b$ och $Eq$ applicerat på $f$ applicerat på $i$ och $true$, $min (n , b , f)< n + b$.",
    "output": "postulate lt_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : ex Nat (\\ i : Nat -> and (and (Leq b i) (Lt i (plus n b))) (Eq (f i) true))) -> Lt (min n b f) (plus n b)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_ord_log. Let $n , p \\in N$. Assume that $0$ is less than $n$. Assume that $1$ is less than $p$. Then $ord$ applied to $n$ and $p$ is less than or equal to the logarithm of $p$ and $n$.",
    "output": "postulate le_ord_log : (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 1 p) -> Leq (ord n p) (log p n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Exp_pi_bc. Let $a , b , c \\in N$. Then for all functions $f$ from natural numbers to natural numbers, $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $true$ applied to the sum of $i$ and $b$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the function that maps $i0$ to the product of $a$ and $f$ applied to $i0$ applied to the sum of $i$ and $b$ is equal to the product of $a ^ (c - b)$ and $bigop$ applied to the difference of $c$ and $b$ and the function that maps $i$ to the function that maps $i0$ to $true$ applied to the sum of $i$ and $b$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $b$.",
    "output": "postulate exp_pi_bc : (a : Nat) -> (b : Nat) -> (c : Nat) -> (f : (_ : Nat) -> Nat) -> Eq (times (pow a (minus c b)) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b)))) (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> true) (plus i b)) Nat 1 times (\\ i : Nat -> (\\ i0 : Nat -> times a (f i0)) (plus i b)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15622. Soit $m , n , a , b \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$ est égale à $1$.",
    "output": "postulate let_clause_15622 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1569. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Then if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d = 1$.",
    "output": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Found_min_spec. Let $n$ and $b$ be natural numbers. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Then if $b$ is less than or equal to $m$, then if $m$ is less than the sum of $n$ and $b$, then if $f$ applied to $m$ is equal to $true$, then for all functions $__3$ from natural numbers $i$ and elements $__3$ of $Leq$ of $b$ and $i$ and elements $__4$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $f$ applied to $i$ and absurdity, $min_spec$ holds for $n$ and $b$ and $f$ and $m$.",
    "output": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Length_unique_le. Soit $n$ un nombre naturel. Soit $l$ une liste de nombres naturels. Soit $__$ un élément de $unique$ de $Nat$ et de $l$. Alors pour toutes les fonctions $__1$ des nombres naturels $x$ et des éléments $__1$ de $mem$ de $Nat$ et de $x$ et de $l$ à des éléments de $Lt$ de $x$ et de $n$, $length$ appliqué à $Nat$ et $l$ est inférieur ou ágal à $n$.",
    "output": "postulate length_unique_le : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> Leq (length Nat l) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1617. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Assume that $a p - b m = 1$. Then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10471. Låt $n1 , n2 \\in N$. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $ACop$ av $B$ och $nil$. Låt $f1$ och $f2$ vara funktioner från naturliga tal till element av $B$. Låt $_clearme$ vara ett element av $iso$ av $B$ och $mk_range (B , f1 , n1 , p1)$ och $mk_range (B , f2 , n2 , p2)$. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Då för alla element $_clearme0$ av $ex$ av $prod$ applicerat på $Set$ och $Set$ och $Nat$ och funktionen som avbildar $__$ som $Nat$ och funktionen som avbildar $k$ som konjunktionen av konjunktionen av $prod$ applicerat på $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ applicerat på $h$ och $k$ och $B$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $sub_hk$ applicerat på $k$ och $h$ och $B$ och $mk_range$ applicerat på $B$ och $f2$ och $n2$ och $p2$ och $mk_range$ applicerat på $B$ och $f1$ och $n1$ och $p1$, för alla funktioner $k$ från naturliga tal till naturliga tal, om $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$, $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range (B , f1 , n1 , p1)$ och $mk_range (B , f2 , n2 , p2)$ och $sub_hk$ håller för $k$ och $h$ och $B$ och $mk_range (B , f2 , n2 , p2)$ och $mk_range (B , f1 , n1 , p1)$ och $prod$ håller för $Set$ och $Prop$ och $Nat$ och funktionen som avbildar $i$ som $prod$ applicerat på $Prop$ och $Prop$ och $Lt$ applicerat på $i$ och $n1$ och funktionen som avbildar $__$ som $prod$ applicerat på $Prop$ och $Prop$ och $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och funktionen som avbildar $__1$ som $Eq$ applicerat på $f1$ applicerat på $i$ och $f2$ applicerat på $h$ applicerat på $i$ och $sub_hk$ håller för $h$ och $k$ och $B$ och $mk_range (B , f1 , n1 , p1)$ och $mk_range (B , f2 , n2 , p2)$, så för alla funktioner $same$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n1$ och element $__1$ av $Eq$ av $p1 (i)$ och $true$ till element av $Eq$ av $f1 (i)$ och $f2 (h (i))$, för alla naturliga tal $i$ och $m$, för alla funktioner $Hind$ från funktioner $f$ från naturliga tal till sanningsvärden och element av $Leq$ av $0$ och $n1$ och element $__1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range (B , f1 , 0 , p1)$ och $mk_range (B , f2 , m , f)$ och element $__2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range (B , f2 , m , f)$ och $mk_range (B , f1 , 0 , p1)$ till element av $Eq$ av $bigop$ applicerat på $0$ och funktionen som avbildar $i0$ som $p1$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f1$ applicerat på $i0$ och $bigop$ applicerat på $m$ och funktionen som avbildar $i0$ som $f$ applicerat på $i0$ och $B$ och $nil$ och $aop__o__op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i0$ som $f2$ applicerat på $i0$, för alla funktioner $p20$ från naturliga tal till sanningsvärden, om $0 \\leq n1$, så för alla element $sub1$ av $sub_hk$ av $h$ och $k$ och $B$ och $mk_range (B , f1 , 0 , p1)$ och $mk_range (B , f2 , m + 1 , p20)$, för alla element $sub2$ av $sub_hk$ av $k$ och $h$ och $B$ och $mk_range (B , f2 , m + 1 , p20)$ och $mk_range (B , f1 , 0 , p1)$, för alla naturliga tal $x2571$ och $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_inv_rect_CProp1. Soient $x1$ et $x2$ et $x3$ et $x4$ des nombres naturels. Soit $Hterm$ un élément de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$. Alors pour toutes les fonctions $P$ des éléments $_z1488$ de $div_mod_spec$ de $x1$ et de $x2$ et de $x3$ et de $x4$ à des propositions, pour toutes les fonctions $_H1$ des éléments $x_855$ de $Lt$ de $x4$ et de $x2$ et des éléments $x_854$ de $Eq$ de $x1$ et de $x3 x2 + x4$ et des éléments $_z1489$ de $Eq$ de $Hterm$ et de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_855 , x_854)$ à des éléments de $P$ de $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_855 , x_854)$, $P$ tient pour $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_CProp1 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1488 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_855 : Lt x4 x2) -> (x_854 : Eq x1 (plus (times x3 x2) x4)) -> (_z1489 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_855 x_854)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_sqrt_n. Låt $n \\in N$. Anta att $1 < n$. Då $\\sqrt{ n}< n$.",
    "output": "postulate lt_sqrt_n : (n : Nat) -> (_ : Lt 1 n) -> Lt (sqrt n) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_mod_to_divides. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < n$. Assume that $p$ is divisible by $mod (m , n)$. Then if $p$ is divisible by $n$, then $p$ is divisible by $m$.",
    "output": "postulate divides_mod_to_divides : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : divisible p (mod m n)) -> (__2 : divisible p n) -> divisible p m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_plus. Pour tous les nombres naturels $n1$ et $n2$ et $m1$ et $m2$, si $n1$ est inférieur ou ágal à $n2$, alors si $m1$ est inférieur ou ágal à $m2$, alors la somme de $n1$ et de $m1$ est inférieure ou ágale à la somme de $n2$ et de $m2$.",
    "output": "postulate le_plus : (n1 : Nat) -> (n2 : Nat) -> (m1 : Nat) -> (m2 : Nat) -> (_ : Leq n1 n2) -> (__1 : Leq m1 m2) -> Leq (plus n1 m1) (plus n2 m2)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_CProp5. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_959$ of $Dop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_959$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_959$.",
    "output": "postulate Dop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_959 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_959 : Dop A _nil) -> Q_ x_959"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16171. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1686. Låt $n$ och $m$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $p$ och element av $Lt$ av $p$ och $m$ och element $__1$ av $Lt$ av $1$ och $p$ till element av $Leq$ av $Psi (p)$ och $pred (p)\\times (2 ^ (2 p - 3))$. Låt $a \\in N$. Då om $m = 2 a$ eller $m = 2 a + 1$ och $m = 2 a + 1$, så om $1 < 2 a + 1$ och $0 < a$, så $pred (m)= a + a$.",
    "output": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> Eq (pred m) (plus a a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_Type0_body. Soit $_n , _m , _q , _r \\in N$. Soit $Q_$ une fonction des éléments $_x_833$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des ensembles. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_835$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_834$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_835 , x_834)$, pour tous les éléments $x_833$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_833$.",
    "output": "postulate div_mod_spec_rect_Type0_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) -> (_H_div_mod_spec_intro : (x_835 : Lt _r _m) -> (x_834 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) -> (x_833 : div_mod_spec _n _m _q _r) -> Q_ x_833"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_le. Låt $n$ och $m$ vara naturliga tal. Då om $0 < m$, så om $n$ är delbart med $m$, så $n \\leq m$.",
    "output": "postulate divides_to_le : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Leq n m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Assume that $0 < n$. Let $x2515$ and $x2516$ be natural numbers. Then $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (posn : Lt 0 n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_not_divides_fact. Låt $p \\in N$. Anta att $p$ är primt. Låt $n$ vara ett naturligt tal. Anta att $n < p$. Då är $p$ inte delbart med $n !$.",
    "output": "postulate prime_to_not_divides_fact : (p : Nat) -> (_ : prime p) -> (n : Nat) -> (__1 : Lt n p) -> not (divisible p (factorial n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_log2_sqrt. Pour tous les nombres naturels $n$, si la puissance de $2$ et de $6$ est inférieure ou ágale à $n$, alors le logarithme de $2$ et de $n$ est inférieur à la racine carrée de $n$.",
    "output": "postulate lt_log2_sqrt : (n : Nat) -> (_ : Leq (pow 2 6) n) -> Lt (log 2 n) (sqrt n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1078. Soit $a , b , q , r , q1 , r1 \\in N$. Soit $_clearme$ un élément de $div_mod_spec$ de $a$ et de $b$ et de $q$ et de $r$. Supposons que $r$ est inférieur à $b$. Supposons que $a$ est égal à la somme du produit de $q$ et de $b$ et de $r$. Soit $_clearme0$ un élément de $div_mod_spec$ de $a$ et de $b$ et de $q1$ et de $r1$. Supposons que $r1$ est inférieur à $b$. Supposons que $a$ est égal à la somme du produit de $q1$ et de $b$ et de $r1$. Supposons que $q$ est inférieur ou ágal à $q1$. Supposons que $q$ est inférieur à $q1$. Alors $a$ est égal à la somme de $r$ et du produit de $b$ et de $q$.",
    "output": "postulate let_clause_1078 : (a : Nat) -> (b : Nat) -> (q : Nat) -> (r : Nat) -> (q1 : Nat) -> (r1 : Nat) -> (_clearme : div_mod_spec a b q r) -> (ltrb : Lt r b) -> (spec : Eq a (plus (times q b) r)) -> (_clearme0 : div_mod_spec a b q1 r1) -> (ltr1b : Lt r1 b) -> (spec1 : Eq a (plus (times q1 b) r1)) -> (leqq1 : Leq q q1) -> (ltqq1 : Lt q q1) -> Eq a (plus r (times b q))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_lt_O. For all natural numbers $n$ and $m$, if $0 < m$, then if $n$ is divisible by $m$, then $0 < n$.",
    "output": "postulate divides_to_lt_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Lt 0 n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $g1$ and $g2$ be functions from natural numbers to natural numbers. Let $n1 \\in N$. Let $Hind$ be a function from functions from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$ to elements of $Leq$ of $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g1$ applied to $i$ and $bigop$ applied to $n1$ and the function that maps $i$ to $p$ applied to $i$ and $Nat$ and $1$ and $times$ and the function that maps $i$ to $g2$ applied to $i$. Let $Hle$ be a function from natural numbers $i$ and elements of $Lt$ of $i$ and the sum of $n1$ and $1$ and elements $__1$ of $Eq$ of $p$ applied to $i$ and $true$ to elements of $Leq$ of $g1$ applied to $i$ and $g2$ applied to $i$. Then if $p$ applied to $n1$ is equal to $true$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))) -> (Hle : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> (Hcase : Eq (p n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "F_max_true. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, pour tous les nombres naturels $n$, pour tous les éléments $__$ de $ex$ de $Nat$ et de la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de $Eq$ appliqué à $f$ appliqué à $i$ et $true$, $f (max (n , f))= true$.",
    "output": "postulate f_max_true : (f : (_ : Nat) -> bool) -> (n : Nat) -> (_ : ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) -> Eq (f (max n f)) true"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_plus_n_r. Låt $n , m \\in N$. Då $m \\leq m + n$.",
    "output": "postulate le_plus_n_r : (n : Nat) -> (m : Nat) -> Leq m (plus m n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_4_to_le_Psi_exp. Let $n \\in N$. Then if $4$ is less than $n$, then $Psi$ applied to the product of $2$ and $n$ is less than or equal to the product of the exponentiation of $2$ and the difference of the product of $2$ and $n$ and $2$ and $Psi$ applied to $n$.",
    "output": "postulate lt_4_to_le_Psi_exp : (n : Nat) -> (_ : Lt 4 n) -> Leq (Psi (times 2 n)) (times (pow 2 (minus (times 2 n) 2)) (Psi n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_sigma_p. Låt $n$ vara ett naturligt tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Då för alla funktioner $g1$ och $g2$ från naturliga tal till naturliga tal, för alla funktioner $__$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n$ och element $__1$ av $Eq$ av $p1$ applicerat på $i$ och $true$ till element av $Eq$ av $p2$ applicerat på $i$ och $true$, för alla funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Lt$ av $i$ och $n$ och element $__2$ av $Eq$ av $p1$ applicerat på $i$ och $true$ till element av $Leq$ av $g1$ applicerat på $i$ och $g2$ applicerat på $i$, för alla element $__2$ av $ex$ av $Nat$ och funktionen som avbildar $i$ som konjunktionen av $Lt$ applicerat på $i$ och $n$ och disjunktionen av konjunktionen av $Eq$ applicerat på $p1$ applicerat på $i$ och $true$ och $Lt$ applicerat på $g1$ applicerat på $i$ och $g2$ applicerat på $i$ och konjunktionen av konjunktionen av $Eq$ applicerat på $p1$ applicerat på $i$ och kontradiktion och $Eq$ applicerat på $p2$ applicerat på $i$ och $true$ och $Lt$ applicerat på $0$ och $g2$ applicerat på $i$, är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p1$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g1$ applicerat på $i$ mindre än $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p2$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g2$ applicerat på $i$.",
    "output": "postulate lt_sigma_p : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (__2 : ex Nat (\\ i : Nat -> and (Lt i n) (or (and (Eq (p1 i) true) (Lt (g1 i) (g2 i))) (and (and (Eq (p1 i) false) (Eq (p2 i) true)) (Lt 0 (g2 i)))))) -> Lt (bigop n (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_Type3. Let $Q_$ be a function from natural numbers $_x_377$ to elements of $Type3$. Let $_H_O$ be an element of $Q_$ of $0$. Then for all functions $_H_S$ from natural numbers $x_378$ and elements $_x_380$ of $Q_$ of $x_378$ to elements of $Q_$ of the sum of $x_378$ and $1$, for all natural numbers $x_377$, $Q_$ holds for $x_377$.",
    "output": "postulate nat_rect_Type3 : (Q_ : (_x_377 : Nat) -> Type3) -> (_H_O : Q_ 0) -> (_H_S : (x_378 : Nat) -> (_x_380 : Q_ x_378) -> Q_ (plus x_378 1)) -> (x_377 : Nat) -> Q_ x_377"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp2. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Soit $Q_$ une fonction des éléments $_x_849$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Soit $_H_div_mod_spec_intro$ une fonction des éléments $x_851$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_850$ de $Eq$ de $_n$ et de la somme du produit de $_q$ et de $_m$ et de $_r$ à des éléments de $Q_$ de $div_mod_spec_intro$ appliqué à $_n$ et $_m$ et $_q$ et $_r$ et $x_851$ et $x_850$. Alors pour tous les éléments $x_849$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_849$.",
    "output": "postulate div_mod_spec_rect_CProp2 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_849 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_851 : Lt _r _m) -> (x_850 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_851 x_850)) -> (x_849 : div_mod_spec _n _m _q _r) -> Q_ x_849"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_inv_rect_Type1. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Soit $P$ une fonction des éléments $_z1656$ de $range$ de $x1$ à des éléments de $Type1$. Alors pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1657$ de $Eq$ de $Hterm$ et de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$ à des éléments de $P$ de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$, $P$ tient pour $Hterm$.",
    "output": "postulate range_inv_rect_Type1 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1656 : range x1) -> Type1) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1657 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Dop_rect_CProp0. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_967$ de $Dop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_Dop$ une fonction des éléments $sum$ de $ACop$ de $A$ et de $_nil$ et des fonctions $prod$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_null$ des éléments $a$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $_nil$ et de $_nil$ et des fonctions $_distr$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $prod$ appliqué à $a$ et $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $b$ et $c$ et de $aop__o__op$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ appliqué à $a$ et $b$ et $prod$ appliqué à $a$ et $c$ à des éléments de $Q_$ de $mk_Dop$ appliqué à $A$ et $_nil$ et $sum$ et $prod$ et $_null$ et $_distr$. Soit $x_967$ un élément de $Dop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_967$.",
    "output": "postulate Dop_rect_CProp0 : (A : Set) -> (_nil : A) -> (Q_ : (_x_967 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_967 : Dop A _nil) -> Q_ x_967"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_case. Let $n$ be a natural number. Let $P$ be a function from natural numbers to propositions. Then for all functions $__$ from elements of $Eq$ of $n$ and $0$ to elements of $P$ of $0$, for all functions $__1$ from natural numbers $m$ and elements $__1$ of $Eq$ of $n$ and $m + 1$ to elements of $P$ of $m + 1$, $P$ holds for $n$.",
    "output": "postulate nat_case : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (_ : Eq n 0) -> P 0) -> (__1 : (m : Nat) -> (__1 : Eq n (plus m 1)) -> P (plus m 1)) -> P n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Assume that $2 ^ 7 \\leq n$. Let $p \\in N$. Assume that $\\sqrt{ (2 n)}+ 1 \\leq p$ and $p < 2 n + 1$. Assume that $leb (2 , k (2 n , p))= true$ and $2 n < p ^ 2$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_CProp4. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z689$ à des propositions. Alors pour toutes les fonctions $_H1$ des éléments $_z690$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$, pour toutes les fonctions $_H2$ des nombres naturels $x_394$ et des fonctions $_x_396$ des éléments $_z690$ de $Eq$ de $Hterm$ et de $x_394$ à des éléments de $P$ de $x_394$ et des éléments $_z690$ de $Eq$ de $Hterm$ et de $x_394 + 1$ à des éléments de $P$ de $x_394 + 1$, $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_CProp4 : (Hterm : Nat) -> (P : (_z689 : Nat) -> Prop) -> (_H1 : (_z690 : Eq Hterm 0) -> P 0) -> (_H2 : (x_394 : Nat) -> (_x_396 : (_z690 : Eq Hterm x_394) -> P x_394) -> (_z690 : Eq Hterm (plus x_394 1)) -> P (plus x_394 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_times. Låt $n1 , n2 , m1 , m2 \\in N$. Då om $n1 \\leq n2$ och $m1 \\leq m2$, så $n1 m1 \\leq n2 m2$.",
    "output": "postulate le_times : (n1 : Nat) -> (n2 : Nat) -> (m1 : Nat) -> (m2 : Nat) -> (_ : Leq n1 n2) -> (__1 : Leq m1 m2) -> Leq (times n1 m1) (times n2 m2)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Min_spec_ind. Låt $_n , _b \\in N$. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Låt $Q_$ vara en funktion från naturliga tal $x_1075$ och element $_x_1076$ av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$ till påståenden. Låt $_H_found_min_spec$ vara en funktion från naturliga tal $m$ och element $x_1080$ av $Leq$ av $_b$ och $m$ och element $x_1079$ av $Lt$ av $m$ och summan av $_n$ och $_b$ och element $x_1078$ av $Eq$ av $_f$ applicerat på $m$ och $true$ och funktioner $x_1077$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och $m$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av $m$ och $found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $m$ och $x_1080$ och $x_1079$ och $x_1078$ och $x_1077$. Låt $_H_not_found_min_spec$ vara en funktion från funktioner $x_1081$ från naturliga tal $i$ och element av $Leq$ av $_b$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $_n$ och $_b$ till element av $Eq$ av $_f$ applicerat på $i$ och kontradiktion till element av $Q_$ av summan av $_n$ och $_b$ och $not_found_min_spec$ applicerat på $_n$ och $_b$ och $_f$ och $x_1081$. Låt $x_1075 \\in N$. Låt $x_1076$ vara ett element av $min_spec$ av $_n$ och $_b$ och $_f$ och $x_1075$. Då håller $Q_$ för $x_1075$ och $x_1076$.",
    "output": "postulate min_spec_ind : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1033. Låt $n$ vara ett naturligt tal. Anta att potensen av $2$ och $7$ är mindre än eller lika med $n$. Låt $p \\in N$. Anta att summan av kvadratroten av produkten av $2$ och $n$ och $1$ är mindre än eller lika med $p$. Anta att $p$ är mindre än summan av produkten av $2$ och $n$ och $1$. Anta att $leb$ applicerat på $2$ och $k$ applicerat på produkten av $2$ och $n$ och $p$ är lika med $true$. Anta att produkten av $2$ och $n$ är mindre än potensen av $p$ och $2$. Låt $x2515 , x2516 \\in N$. Då är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16171. Låt $p , m , n \\in N$. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c$ vara ett naturligt tal. Anta att $m n = p c$. Låt $a \\in N$. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Då om det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$, så om $b m - a p = 1$, så är $m b - p a$ lika med det största gemensama delaret av $p$ och $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1009. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $n$ et $m$ des nombres naturels. Supposons que $0 < n$ et contradiction est égal à $f (n)$. Supposons que $max (m , f)\\leq n$ et $max (m , f)= n$. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $m$ et la fonction qui envoie $__$ à $Eq$ appliqué à $f$ appliqué à $i$ et contradiction et $max (m , f)= 0$. Soit $auto$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f (i)$ et de contradiction. Supposons que $max (m , f)= 0$. Alors $0 = n$.",
    "output": "postulate let_clause_1009 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (Hfn : Eq (f n) false) -> (Hmax : Leq (max m f) n) -> (Hmax0 : Eq (max m f) n) -> (_clearme : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i m) (\\ _ : Lt i m -> Eq (f i) false))) (Eq (max m f) 0)) -> (auto : (i : Nat) -> (_ : Lt i m) -> Eq (f i) false) -> (auto' : Eq (max m f) 0) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_plus_to_lt_r. Låt $n$ och $p$ och $q$ vara naturliga tal. Då om $n + p < n + q$, så $p < q$.",
    "output": "postulate lt_plus_to_lt_r : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : Lt (plus n p) (plus n q)) -> Lt p q"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_prim_log. Soient $n$ et $b$ des nombres naturels. Alors si $1$ est inférieur à $b$, alors le logarithme de $b$ et de $Psi$ appliqué à $n$ est inférieur ou ágal au produit de $prim$ appliqué à $n$ et de la somme du logarithme de $b$ et de $n$ et de $1$.",
    "output": "postulate le_prim_log : (n : Nat) -> (b : Nat) -> (_ : Lt 1 b) -> Leq (log b (Psi n)) (times (prim n) (plus (log b n) 1))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Increasing_to_le. Soit $f$ une fonction des nombres naturels à des nombres naturels. Alors pour tous les éléments $__$ de $increasing$ de $f$, pour tous les nombres naturels $m$, $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à $Leq (m , f (i))$.",
    "output": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1561. Låt $p , m , n \\in N$. Anta att $0 < p$ och $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c \\in N$. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller lika med $b m - a p$ och det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$. Anta att $a p - b m = 1$. Då $p a - m b = 1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Monotonic_lt_minus_l. Låt $p$ och $q$ och $n$ vara naturliga tal. Anta att $n$ är mindre än eller lika med $q$. Anta att $q$ är mindre än $p$. Då är skillnaden mellan $q$ och $n$ mindre än skillnaden mellan $p$ och $n$.",
    "output": "postulate monotonic_lt_minus_l : (p : Nat) -> (q : Nat) -> (n : Nat) -> (_ : Leq n q) -> (__1 : Lt q p) -> Lt (minus q n) (minus p n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_min_to_false. Let $f$ be a function from natural numbers to booleans. Let $n , m , b \\in N$. Then if $b$ is less than or equal to $m$, then if $m$ is less than $min$ applied to $n$ and $b$ and $f$, then $f$ applied to $m$ is equal to absurdity.",
    "output": "postulate lt_min_to_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (b : Nat) -> (_ : Leq b m) -> (__1 : Lt m (min n b f)) -> Eq (f m) false"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Times_div. Låt $a$ och $b$ och $c$ vara naturliga tal. Då om $0$ är mindre än $b$, så om $c$ är delbart med $b$, så är produkten av $a$ och kvoten av $b$ och $c$ lika med kvoten av produkten av $a$ och $b$ och $c$.",
    "output": "postulate times_div : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Lt 0 b) -> (__1 : divisible c b) -> Eq (times a (div b c)) (div (times a b) c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Aop_rect_CProp5. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_877$ of $Aop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Aop$ be a function from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op (_nil , a)$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op (a , _nil)$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ to elements of $Q_$ of $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Then for all elements $x_877$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_877$.",
    "output": "postulate Aop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_877 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_877 : Aop A _nil) -> Q_ x_877"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1047. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be a function from elements of $B$ and elements $__1$ of $B$ to elements of $B$. Let $f$ be a function from natural numbers to elements of $B$. Assume that $n$ is less than or equal to $k$. Let $j \\in N$. Then if $n$ is less than or equal to $j$, then for all functions $Hind$ from functions from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and $j$ to elements of $Eq$ of $p$ applied to $i$ and absurdity to elements of $Eq$ of $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $j$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$, for all functions $Hfalse$ from natural numbers $i$ and elements of $Leq$ of $n$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $j$ and $1$ to elements of $Eq$ of $p$ applied to $i$ and absurdity, for all natural numbers $x2571$ and $x2572$, $x2571$ is equal to the sum of the product of $x2572$ and the quotient of $x2571$ and $x2572$ and $mod$ applied to $x2571$ and $x2572$.",
    "output": "postulate let_clause_1047 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (lenk : Leq n k) -> (j : Nat) -> (leup : Leq n j) -> (Hind : (_ : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i j) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop j (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))) -> (Hfalse : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i (plus j 1)) -> Eq (p i) false) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15441. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soit $m , n \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $n$ est inférieur ou ágal à $m$. Supposons que $n$ est inférieur ou ágal à la somme de $q$ et de $1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b \\in N$. Alors si la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ ou la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, alors si la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, alors la différence du produit de $n$ et de $b$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_dividesb_true1. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $n$ is divisible by $m$. Then $dividesb$ applied to $n$ and $m$ is equal to $true$.",
    "output": "postulate divides_to_dividesb_true1 : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : divisible n m) -> Eq (dividesb n m) true"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b \\in N$. Then if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16001. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Then if $0$ is less than $m$, then if the greatest common divisor of $n$ and $m$ is equal to $1$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n \\in N$. Supposons que $5$ est inférieur à $n$. Soit $m$ un nombre naturel. Supposons que $6$ est inférieur ou ágal à $m$. Supposons que la puissance de la somme de $m$ et de $1$ et de $2$ est inférieure ou ágale à la puissance de $2$ et de $m$. Soit $a$ un nombre naturel. Alors si $6$ est inférieur ou ágal à $a$, alors si la somme du produit de $2$ et de la somme de $a$ et de $1$ et de $1$ est inférieure ou ágale à la puissance de $2$ et de $a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515$ est égal à la somme du produit de $x2516$ et du quotient de $x2515$ et de $x2516$ et de $mod$ appliqué à $x2515$ et $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Gcd_mod. Soit $m , n \\in N$. Supposons que $0$ est inférieur à $n$. Alors le diviseur commun plus grand de $n$ et de $mod$ appliqué à $m$ et $n$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate gcd_mod : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> Eq (gcd n (mod m n)) (gcd m n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_times_div_m_m. Let $n$ and $m$ be natural numbers. Assume that $0 < m$. Then $n \\div m m \\leq n$.",
    "output": "postulate le_times_div_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Leq (times (div n m) m) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1561. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0$ is less than $p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $1$. Assume that $p$ is divisible by the product of $m$ and $n$. Let $c \\in N$. Assume that the product of $m$ and $n$ is equal to the product of $p$ and $c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$ or the difference of the product of $b$ and $m$ and the product of $a$ and $p$ is equal to the greatest common divisor of $p$ and $m$. Then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to the greatest common divisor of $p$ and $m$, then if the difference of the product of $a$ and $p$ and the product of $b$ and $m$ is equal to $1$, then the difference of the product of $p$ and $a$ and the product of $m$ and $b$ is equal to $1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Iter. Låt $H$ vara en mängd. Låt $__$ vara en funktion från element av $H$ till element av $H$. Då för alla naturliga tal $__1$, för alla element $__2$ av $H$, $H$.",
    "output": "postulate iter : (H : Set) -> (_ : (_ : H) -> H) -> (__1 : Nat) -> (__2 : H) -> H"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1544. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soit $m , n \\in N$. Supposons que $0 < n$ et $n \\leq m$. Supposons que $n \\leq q + 1$ et $n$ n'est pas divisible par $m$. Soit $a$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b$ un nombre naturel. Alors si $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ et $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, alors $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Prime_to_lt_O. Let $p$ be a natural number. Assume that $p$ is prime. Then $0$ is less than $p$.",
    "output": "postulate prime_to_lt_O : (p : Nat) -> (_ : prime p) -> Lt 0 p"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Pad_bigop. Let $k , n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Then for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $_0$ to $bool$ and absurdity and $p$ applied to $i$ and $leb$ applied to $n$ and $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.",
    "output": "postulate pad_bigop : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> match_bool Set (\\ _0 : bool -> bool) false (p i) (leb n i)) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Primes_below_to_bertrand. Låt $pm$ vara ett naturligt tal. Låt $l$ vara en lista av naturliga tal. Anta att $pm$ är primt. Låt $__1$ vara ett element av $primes_below$ av $l$ och summan av $pm$ och $1$. Låt $__2$ vara en funktion från naturliga tal $p$ och element $__2$ av $mem$ av $Nat$ och $p$ och $l$ och element $__3$ av $Lt$ av $2$ och $p$ till element av $ex$ av $Nat$ och funktionen som avbildar $pp$ som konjunktionen av konjunktionen av $mem$ applicerat på $Nat$ och $pp$ och $l$ och $Lt$ applicerat på $pp$ och $p$ och $Leq$ applicerat på $p$ och produkten av $2$ och $pp$. Låt $n$ vara ett naturligt tal. Då om $0$ är mindre än $n$, så om $n$ är mindre än $pm$, så håller $bertrand$ för $n$.",
    "output": "postulate primes_below_to_bertrand : (pm : Nat) -> (l : list Nat) -> (_ : prime pm) -> (__1 : primes_below l (plus pm 1)) -> (__2 : (p : Nat) -> (__2 : mem Nat p l) -> (__3 : Lt 2 p) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))) -> (n : Nat) -> (__3 : Lt 0 n) -> (__4 : Lt n pm) -> bertrand n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_exp_priml. For all natural numbers $n$, if $0 < n$, then $2 ^ (2 n)\\leq 2 n ^ (prim (2 n)+ 1)$.",
    "output": "postulate le_exp_priml : (n : Nat) -> (_ : Lt 0 n) -> Leq (pow 2 (times 2 n)) (pow (times 2 n) (plus (prim (times 2 n)) 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_Psil. För alla naturliga tal $n$, $Psi (n)\\leq n ^ prim (n)$.",
    "output": "postulate le_Psil : (n : Nat) -> Leq (Psi n) (pow n (prim n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1013. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les nombres naturels $n$ et $m$ et $i$, pour toutes les fonctions $Hind$ des éléments de $Eq$ de $max (i , f)$ et de $m$ et des éléments $__1$ de $Eq$ de $f (m)$ et de contradiction à des éléments de $Eq$ de $m$ et de $0$, si $f (i)= true$ et $i = m$, alors si contradiction est égal à $f (m)$, alors $true$ est égal à contradiction.",
    "output": "postulate let_clause_1013 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (i : Nat) -> (Hind : (_ : Eq (max i f) m) -> (__1 : Eq (f m) false) -> Eq m 0) -> (fi : Eq (f i) true) -> (eqm : Eq i m) -> (fm : Eq (f m) false) -> Eq false true"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16001. Soit $m , n , a , b \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$. Alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10471. Let $n1 , n2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $ACop$ of $B$ and $nil$. Then for all functions $f1$ and $f2$ from natural numbers to elements of $B$, for all elements $_clearme$ of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, for all functions $h$ from natural numbers to natural numbers, for all elements $_clearme0$ of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, for all functions $k$ from natural numbers to natural numbers, if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$ and $sub_hk$ holds for $k$ and $h$ and $B$ and $mk_range (B , f2 , n2 , p2)$ and $mk_range (B , f1 , n1 , p1)$ and $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, then for all functions $same$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $f1 (i)$ and $f2 (h (i))$, for all natural numbers $i$ and $m$, for all functions $Hind$ from functions $f$ from natural numbers to booleans and elements of $Leq$ of $0$ and $n1$ and elements $__1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m , f)$ and elements $__2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m , f)$ and $mk_range (B , f1 , 0 , p1)$ to elements of $Eq$ of $bigop$ applied to $0$ and the function that maps $i0$ to $p1$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f1$ applied to $i0$ and $bigop$ applied to $m$ and the function that maps $i0$ to $f$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f2$ applied to $i0$, for all functions $p20$ from natural numbers to booleans, if $0 \\leq n1$, then for all elements $sub1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m + 1 , p20)$, for all elements $sub2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m + 1 , p20)$ and $mk_range (B , f1 , 0 , p1)$, for all natural numbers $x2571$ and $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_Psi_exp5. Soit $n \\in N$. Alors $Psi (n)\\leq 2 ^ (2 n - 3)$.",
    "output": "postulate le_Psi_exp5 : (n : Nat) -> Leq (Psi n) (pow 2 (minus (times 2 n) 3))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Not_not_bertrand_to_bertrand1. Soit $n \\in N$. Supposons qu'il n'est pas le cas que $not_bertrand$ tienne pour $n$. Soit $x$ un nombre naturel. Supposons que $n$ est inférieur ou ágal à $x$. Supposons que $x$ est inférieur ou ágal au produit de $2$ et de $n$. Alors pour toutes les fonctions $__3$ des nombres naturels $p$ et des éléments $__3$ de $Lt$ de $x$ et de $p$ et des éléments $__4$ de $Leq$ de $p$ et du produit de $2$ et de $n$ à des éléments de $not$ de $prime$ appliqué à $p$, $ex$ tient pour $Nat$ et la fonction qui envoie $p$ à la conjonction de la conjonction de $Lt$ appliqué à $n$ et $p$ et de $Leq$ appliqué à $p$ et $x$ et de $prime$ appliqué à $p$.",
    "output": "postulate not_not_bertrand_to_bertrand1 : (n : Nat) -> (_ : not (not_bertrand n)) -> (x : Nat) -> (__1 : Leq n x) -> (__2 : Leq x (times 2 n)) -> (__3 : (p : Nat) -> (__3 : Lt x p) -> (__4 : Leq p (times 2 n)) -> not (prime p)) -> ex Nat (\\ p : Nat -> and (and (Lt n p) (Leq p x)) (prime p))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_p_ord. Låt $p , a , b , c , d , n , m \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $p$ är primt och $n$ är delbart med $m$. Anta att $p_ord (n , p)= mk_Prod (Nat , Nat , a , b)$ och $p_ord (m , p)= mk_Prod (Nat , Nat , c , d)$. Då är $b$ delbart med $d$ och $a \\leq c$.",
    "output": "postulate divides_to_p_ord : (p : Nat) -> (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> (__4 : Eq (p_ord n p) (mk_Prod Nat Nat a b)) -> (__5 : Eq (p_ord m p) (mk_Prod Nat Nat c d)) -> and (divisible b d) (Leq a c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_O_to_divides. Let $n$ and $m$ be natural numbers. Assume that $0 < n$. Then if $mod (m , n)= 0$, then $n$ is divisible by $m$.",
    "output": "postulate mod_O_to_divides : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (mod m n) 0) -> divisible n m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_ind. Let $_n , _m \\in N$. Let $Q_$ be a function from elements $_x_1192$ of $divisible$ of $_n$ and $_m$ to propositions. Then for all functions $_H_quotient$ from natural numbers $q$ and elements $x_1193$ of $Eq$ of $_m$ and the product of $_n$ and $q$ to elements of $Q_$ of $quotient$ applied to $_n$ and $_m$ and $q$ and $x_1193$, if $_n$ is divisible by $_m$, then $Q_$ holds for $x_1192$.",
    "output": "postulate divides_ind : (_n : Nat) -> (_m : Nat) -> (Q_ : (_x_1192 : divisible _n _m) -> Prop) -> (_H_quotient : (q : Nat) -> (x_1193 : Eq _m (times _n q)) -> Q_ (quotient _n _m q x_1193)) -> (x_1192 : divisible _n _m) -> Q_ x_1192"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Eqb_body. Låt $__ , __1 \\in N$. Då $bool$.",
    "output": "postulate eqb_body : (_ : Nat) -> (__1 : Nat) -> bool"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_d_gcd. Let $m , n , d \\in N$. Assume that $d$ is divisible by $m$. Then if $d$ is divisible by $n$, then $d$ is divisible by the greatest common divisor of $n$ and $m$.",
    "output": "postulate divides_d_gcd : (m : Nat) -> (n : Nat) -> (d : Nat) -> (_ : divisible d m) -> (__1 : divisible d n) -> divisible d (gcd n m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "ACop_rect_Type1_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_899$ of $ACop$ of $A$ and $_nil$ to elements of $Type1$. Let $_H_mk_ACop$ be a function from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$. Let $x_899$ be an element of $ACop$ of $A$ and $_nil$. Then $Q_$ holds for $x_899$.",
    "output": "postulate ACop_rect_Type1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_899 : ACop A _nil) -> Type1) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_899 : ACop A _nil) -> Q_ x_899"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "To_max. Låt $i , n , m \\in N$. Anta att $n \\leq i$. Anta att $m \\leq i$. Då $max (n , m)\\leq i$.",
    "output": "postulate to_max : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq n i) -> (__1 : Leq m i) -> Leq (max n m) i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Not_not_bertrand_to_bertrand1. Let $n \\in N$. Assume that it is not the case that $not_bertrand$ holds for $n$. Then for all natural numbers $x$, if $n$ is less than or equal to $x$, then if $x$ is less than or equal to the product of $2$ and $n$, then for all functions $__3$ from natural numbers $p$ and elements $__3$ of $Lt$ of $x$ and $p$ and elements $__4$ of $Leq$ of $p$ and the product of $2$ and $n$ to elements of $not$ of $prime$ applied to $p$, $ex$ holds for $Nat$ and the function that maps $p$ to the conjunction of the conjunction of $Lt$ applied to $n$ and $p$ and $Leq$ applied to $p$ and $x$ and $prime$ applied to $p$.",
    "output": "postulate not_not_bertrand_to_bertrand1 : (n : Nat) -> (_ : not (not_bertrand n)) -> (x : Nat) -> (__1 : Leq n x) -> (__2 : Leq x (times 2 n)) -> (__3 : (p : Nat) -> (__3 : Lt x p) -> (__4 : Leq p (times 2 n)) -> not (prime p)) -> ex Nat (\\ p : Nat -> and (and (Lt n p) (Leq p x)) (prime p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Tech_log. For all natural numbers $p$ and $n$, if $1$ is less than $p$, then if $0$ is less than $n$, then the logarithm of $p$ and $n$ is equal to $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the exponentiation of $p$ and $x$ and $n$.",
    "output": "postulate tech_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Eq (log p n) (max (plus n 1) (\\ x : Nat -> leb (pow p x) n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_S_to_lt. Soit $n , m \\in N$. Alors si $n + 1 < m$, alors $n < m$.",
    "output": "postulate lt_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) m) -> Lt n m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_singlevalued. Let $B$ be a set. Let $R$ be an element of $relation2$ of $B$ and $B$. Let $__$ be an element of $singlevalued$ of $B$ and $B$ and $R$. Let $l \\in N$. Then $singlevalued$ holds for $B$ and $B$ and $lstar$ applied to $B$ and $R$ and $l$.",
    "output": "postulate lstar_singlevalued : (B : Set) -> (R : relation2 B B) -> (_ : singlevalued B B R) -> (l : Nat) -> singlevalued B B (lstar B R l)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1600. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $c n - d m = 1$, then $n c - m d$ is equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Eq_minus_S_pred. Pour tous les nombres naturels $n$ et $m$, la différence de $n$ et de la somme de $m$ et de $1$ est égale à $pred$ appliqué à la différence de $n$ et de $m$.",
    "output": "postulate eq_minus_S_pred : (n : Nat) -> (m : Nat) -> Eq (minus n (plus m 1)) (pred (minus n m))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1544. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Då om $n \\leq m$, så om $n \\leq q + 1$, så om $n$ inte är delbart med $m$, så för alla naturliga tal $a$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, för alla naturliga tal $b$, om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, så $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Match_min_spec. Soient $_n$ et $_b$ des nombres naturels. Soit $_f$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les éléments $return_sort$ de $Sort$, pour toutes les fonctions $return_type$ des nombres naturels et des éléments $z$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $__$ à des éléments de $return_sort$, pour toutes les fonctions $case_found_min_spec$ des nombres naturels $m$ et des éléments de $Leq$ de $_b$ et de $m$ et des éléments $__1$ de $Lt$ de $m$ et de la somme de $_n$ et de $_b$ et des éléments $__2$ de $Eq$ de $_f$ appliqué à $m$ et de $true$ et des fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $_b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de $m$ et de $found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $m$ et $__$ et $__1$ et $__2$ et $__3$, pour toutes les fonctions $case_not_found_min_spec$ des fonctions des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de la somme de $_n$ et de $_b$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de la somme de $_n$ et de $_b$ et de $not_found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $__$, pour tous les nombres naturels $__$, pour tous les éléments $z$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $__$, $return_type$ tient pour $__$ et $z$.",
    "output": "postulate match_min_spec : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : min_spec _n _b _f __) -> return_sort) -> (case_found_min_spec : (m : Nat) -> (_ : Leq _b m) -> (__1 : Lt m (plus _n _b)) -> (__2 : Eq (_f m) true) -> (__3 : (i : Nat) -> (__3 : Leq _b i) -> (__4 : Lt i m) -> Eq (_f i) false) -> return_type m (found_min_spec _n _b _f m __ __1 __2 __3)) -> (case_not_found_min_spec : (_ : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> return_type (plus _n _b) (not_found_min_spec _n _b _f __)) -> (_ : Nat) -> (z : min_spec _n _b _f __) -> return_type __ z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_Type1. Soit $Hterm \\in N$. Alors pour toutes les fonctions $P$ des nombres naturels $_z677$ à des éléments de $Type1$, pour toutes les fonctions $_H1$ des éléments $_z678$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$, pour toutes les fonctions $_H2$ des nombres naturels $x_386$ et des fonctions $_x_388$ des éléments $_z678$ de $Eq$ de $Hterm$ et de $x_386$ à des éléments de $P$ de $x_386$ et des éléments $_z678$ de $Eq$ de $Hterm$ et de $x_386 + 1$ à des éléments de $P$ de $x_386 + 1$, $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_Type1 : (Hterm : Nat) -> (P : (_z677 : Nat) -> Type1) -> (_H1 : (_z678 : Eq Hterm 0) -> P 0) -> (_H2 : (x_386 : Nat) -> (_x_388 : (_z678 : Eq Hterm x_386) -> P x_386) -> (_z678 : Eq Hterm (plus x_386 1)) -> P (plus x_386 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_div_S. Soit $n , m \\in N$. Alors si $0 < m$, alors $n < (n \\div m + 1)m$.",
    "output": "postulate lt_div_S : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Lt n (times (plus (div n m) 1) m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1600. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att $c n - d m = 1$ eller $d m - c n = 1$ och $c n - d m = 1$. Då är $n c - m d$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15621. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$ est égale à $1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "ACop_rect_Type5. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_893$ of $ACop$ of $A$ and $_nil$ to elements of $Type5$. Then for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_893$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_893$.",
    "output": "postulate ACop_rect_Type5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_893 : ACop A _nil) -> Type5) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_893 : ACop A _nil) -> Q_ x_893"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Eqb_false_to_not_eq. Låt $n$ och $m$ vara naturliga tal. Anta att kontradiktion är lika med $eqb (n , m)$. Då är $n$ inte lika med $m$.",
    "output": "postulate eqb_false_to_not_eq : (n : Nat) -> (m : Nat) -> (_ : Eq (eqb n m) false) -> not (Eq n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1561. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$. Alors la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$ est égale à $1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1575. Låt $m , n , a , b \\in N$. Då om $0$ är mindre än $n$, så om $0$ är mindre än $m$, så om det största gemensama delaret av $n$ och $m$ är lika med $1$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så för alla naturliga tal $x1029$, är $x1029$ lika med produkten av $x1029$ och skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16003. For all natural numbers $m$ and $n$ and $a$ and $b$, if $0 < n$ and $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$ and $d m - c n = 1$, then $m d - n c$ is equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "SameF_p_le. Let $A$ be a set. Let $p$ be a function from natural numbers to booleans. Let $f$ and $g$ be functions from natural numbers to elements of $A$. Let $n$ and $m$ be natural numbers. Assume that $n$ is less than or equal to $m$. Then for all elements $__1$ of $sameF_p$ of $m$ and $p$ and $A$ and $f$ and $g$, $sameF_p$ holds for $n$ and $p$ and $A$ and $f$ and $g$.",
    "output": "postulate sameF_p_le : (A : Set) -> (p : (_ : Nat) -> bool) -> (f : (_ : Nat) -> A) -> (g : (_ : Nat) -> A) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> (__1 : sameF_p m p A f g) -> sameF_p n p A f g"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_p_ord_inv. Let $p , m , x \\in N$. Then if $ord$ applied to $x$ and $p$ is less than $m$, then $mod$ applied to $p_ord_inv$ applied to $p$ and $m$ and $x$ and $m$ is equal to $ord$ applied to $x$ and $p$.",
    "output": "postulate mod_p_ord_inv : (p : Nat) -> (m : Nat) -> (x : Nat) -> (_ : Lt (ord x p) m) -> Eq (mod (p_ord_inv p m x) m) (ord x p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_fg. Låt $f$ och $g$ vara funktioner från naturliga tal till naturliga tal. Då för alla naturliga tal $n$, för alla element $__$ av $permut$ av $f$ och $n$, för alla element $__1$ av $permut$ av $g$ och $n$, håller $permut$ för funktionen som avbildar $m$ som $f (g (m))$ och $n$.",
    "output": "postulate permut_fg : (f : (_ : Nat) -> Nat) -> (g : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> (__1 : permut g n) -> permut (\\ m : Nat -> f (g m)) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_inv_rect_CProp1. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1752$ of $Dop$ of $x1$ and $x2$ to propositions, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1753$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.",
    "output": "postulate Dop_inv_rect_CProp1 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1752 : Dop x1 x2) -> Prop) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1753 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "B_SSSSSSSO. $B (7)= 140$.",
    "output": "postulate B_SSSSSSSO : Eq (B 7) 140"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Fact_pi_p3. Soit $n$ un nombre naturel. Alors le produit de $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et du produit de $2$ et du quotient de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ et de $bigop$ appliqué à la somme du produit de $2$ et de $n$ et de $1$ et la fonction qui envoie $p$ à $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $bigop$ appliqué à le logarithme de $p$ et du produit de $2$ et de $n$ et la fonction qui envoie $i$ à $true$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à la puissance de $p$ et de $mod$ appliqué à le quotient du produit de $2$ et de $n$ et de la puissance de $p$ et de la somme de $i$ et de $1$ et $2$ est égal à $(2 n)!$.",
    "output": "postulate fact_pi_p3 : (n : Nat) -> Eq (factorial (times 2 n)) (times (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (times 2 (div n (pow p (plus i 1))))))) (bigop (plus (times 2 n) 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p (times 2 n)) (\\ i : Nat -> true) Nat 1 times (\\ i : Nat -> pow p (mod (div (times 2 n) (pow p (plus i 1))) 2)))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10471. Soit $n1 , n2 \\in N$. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Supposons que $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$, $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$ et $sub_hk$ tient pour $k$ et $h$ et $B$ et $mk_range (B , f2 , n2 , p2)$ et $mk_range (B , f1 , n1 , p1)$ et $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$. Soit $same$ une fonction des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $f1 (i)$ et de $f2 (h (i))$. Soient $i$ et $m$ des nombres naturels. Alors pour toutes les fonctions $Hind$ des fonctions $f$ des nombres naturels à des valeurs booléennes et des éléments de $Leq$ de $0$ et de $n1$ et des éléments $__1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m , f)$ et des éléments $__2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m , f)$ et de $mk_range (B , f1 , 0 , p1)$ à des éléments de $Eq$ de $bigop$ appliqué à $0$ et la fonction qui envoie $i0$ à $p1$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f1$ appliqué à $i0$ et de $bigop$ appliqué à $m$ et la fonction qui envoie $i0$ à $f$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f2$ appliqué à $i0$, pour toutes les fonctions $p20$ des nombres naturels à des valeurs booléennes, si $0 \\leq n1$, alors pour tous les éléments $sub1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m + 1 , p20)$, pour tous les éléments $sub2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m + 1 , p20)$ et de $mk_range (B , f1 , 0 , p1)$, pour tous les nombres naturels $x2571$ et $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Sub0_to_false. Let $h$ and $k$ be functions from natural numbers to natural numbers. Let $A$ be a set. Let $I$ and $J$ be elements of $range$ of $A$. Then if $upto$ applied to $A$ and $I$ is equal to $0$, then for all elements $__1$ of $sub_hk$ of $h$ and $k$ and $A$ and $J$ and $I$, for all natural numbers $i$, if $i$ is less than $upto$ applied to $A$ and $J$, then $filter$ applied to $A$ and $J$ and $i$ is equal to absurdity.",
    "output": "postulate sub0_to_false : (h : (_ : Nat) -> Nat) -> (k : (_ : Nat) -> Nat) -> (A : Set) -> (I : range A) -> (J : range A) -> (_ : Eq (upto A I) 0) -> (__1 : sub_hk h k A J I) -> (i : Nat) -> (__2 : Lt i (upto A J)) -> Eq (filter A J i) false"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15611. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < p$. Anta att $1$ är lika med det största gemensama delaret av $p$ och $m$. Anta att $p$ är delbart med $m \\times n$. Låt $c$ vara ett naturligt tal. Anta att $m n = p c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $a p - b m$ eller det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $b m - a p$. Då om $b m - a p = 1$, så $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1532. Let $n , m \\in N$. Assume that $n$ is divisible by $m$. Assume that $0$ is equal to $n$. Let $d \\in N$. Then if $m$ is equal to the product of $0$ and $d$, then $m$ is equal to $0$.",
    "output": "postulate let_clause_1532 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Eq_minus_O. Let $n , m \\in N$. Then if $n \\leq m$, then $n - m = 0$.",
    "output": "postulate eq_minus_O : (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Eq (minus n m) 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp0. Soient $_n$ et $_m$ et $_q$ et $_r$ des nombres naturels. Alors pour toutes les fonctions $Q_$ des éléments $_x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions, pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_859$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_858$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_859 , x_858)$, pour tous les éléments $x_857$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_857$.",
    "output": "postulate div_mod_spec_rect_CProp0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_857 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_859 : Lt _r _m) -> (x_858 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> (x_857 : div_mod_spec _n _m _q _r) -> Q_ x_857"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_M. Låt $m \\in N$. Anta att $0$ är mindre än $m$. Då är $M$ applicerat på $m$ mindre än potensen av $2$ och produkten av $2$ och $m$.",
    "output": "postulate lt_M : (m : Nat) -> (_ : Lt 0 m) -> Lt (M m) (pow 2 (times 2 m))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Log_i_2n. Låt $n$ och $i$ vara naturliga tal. Anta att $1$ är mindre än $n$. Anta att $n$ är mindre än $i$. Då om $i$ är mindre än eller lika med produkten av $2$ och $n$, så är logaritmen av $i$ och produkten av $2$ och $n$ lika med $1$.",
    "output": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> (_ : Lt 1 n) -> (__1 : Lt n i) -> (__2 : Leq i (times 2 n)) -> Eq (log i (times 2 n)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16004. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1595. Let $p , n , m \\in N$. Assume that $0 < n$ and $0 < m$. Assume that $1$ is both equal to the greatest common divisor of $p$ and $n$ and equal to the greatest common divisor of $p$ and $m$. Then if the greatest common divisor of $p$ and the product of $n$ and $m$ is less than $1$ and $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $m$ is equal to the greatest common divisor of $p$ and $n$.",
    "output": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_inv_S. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Let $l \\in N$. Let $b1$ and $b2$ be elements of $B$. Let $__$ be an element of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$. Let $l0 \\in N$. Then if the sum of $l0$ and $1$ is equal to $l$, then $ex2$ holds for $B$ and the function that maps $b$ to $R$ applied to $b1$ and $b$ and the function that maps $b$ to $lstar$ applied to $B$ and $R$ and $l0$ and $b$ and $b2$.",
    "output": "postulate lstar_inv_S : (B : Set) -> (R : relation B) -> (l : Nat) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R l b1 b2) -> (l0 : Nat) -> (__1 : Eq (plus l0 1) l) -> ex2 B (\\ b : B -> R b1 b) (\\ b : B -> lstar B R l0 b b2)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1560. Låt $n$ och $m$ vara naturliga tal. Anta att $n$ är delbart med $m$ och $0 = n$. Då för alla naturliga tal $d$, om $m = 0 d$, så $n = 0$.",
    "output": "postulate let_clause_1560 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq n 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bijn_Sn_n. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $__$ vara ett element av $bijn$ av $f$ och $n + 1$. Då om $f (n + 1)= n + 1$, så håller $bijn$ för $f$ och $n$.",
    "output": "postulate bijn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : bijn f (plus n 1)) -> (__1 : Eq (f (plus n 1)) (plus n 1)) -> bijn f n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_to_le_max. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, pour tous les nombres naturels $n$ et $m$, si $n$ est inférieur ou ágal à $m$, alors $max$ appliqué à $n$ et $f$ est inférieur ou ágal à $max$ appliqué à $m$ et $f$.",
    "output": "postulate le_to_le_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq (max n f) (max m f)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Mod_times_mod. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $0 < p$ et $0 < m$. Alors $mod (n , p)= mod (mod (n , m p), p)$.",
    "output": "postulate mod_times_mod : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> Eq (mod n p) (mod (mod n (times m p)) p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15622. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.",
    "output": "postulate let_clause_15622 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_rect_CProp2_body. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_963$ av $Dop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod (a , _nil)$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod (a , aop__o__op (A , _nil , sum , b , c))$ och $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ till element av $Q_$ av $mk_Dop (A , _nil , sum , prod , _null , _distr)$, för alla element $x_963$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_963$.",
    "output": "postulate Dop_rect_CProp2_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_963 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_963 : Dop A _nil) -> Q_ x_963"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_plus_div. Pour tous les nombres naturels $m$ et $n$ et $q$, si $0 < q$, alors $m \\div q + n \\div q \\leq (m + n)\\div q$.",
    "output": "postulate le_plus_div : (m : Nat) -> (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> Leq (plus (div m q) (div n q)) (div (plus m n) q)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Monotonic_lt_times_l. Let $c \\in N$. Then if $0$ is less than $c$, then $monotonic$ holds for $Nat$ and $Lt$ and the function that maps $t$ to the product of $t$ and $c$.",
    "output": "postulate monotonic_lt_times_l : (c : Nat) -> (_ : Lt 0 c) -> monotonic Nat Lt (\\ t : Nat -> times t c)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "FactS. Soit $n \\in N$. Alors la factorielle de la somme de $n$ et de $1$ est égale au produit de la somme de $n$ et de $1$ et de la factorielle de $n$.",
    "output": "postulate factS : (n : Nat) -> Eq (factorial (plus n 1)) (times (plus n 1) (factorial n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_I_gen. Let $a , b \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $Aop$ of $B$ and $nil$. Then for all functions $f$ from natural numbers to elements of $B$, if $a \\leq b$, then $bigop$ applied to $b$ and the function that maps $i$ to $andb$ applied to $leb$ applied to $a$ and $i$ and $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to the difference of $b$ and $a$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $a$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $a$.",
    "output": "postulate bigop_I_gen : (a : Nat) -> (b : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> Eq (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (bigop b (\\ i : Nat -> andb (leb a i) (p i)) B nil (op B nil op) (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lprim_invariant. Let $n$ and $i$ be natural numbers. Let $acc$ be a list of natural numbers. Assume that $1$ is less than $i$. Then for all elements $__1$ of $primes_below$ of $acc$ and $i$, $primes_below$ holds for $lprim$ applied to $n$ and $i$ and $acc$ and the sum of $n$ and $i$.",
    "output": "postulate lprim_invariant : (n : Nat) -> (i : Nat) -> (acc : list Nat) -> (_ : Lt 1 i) -> (__1 : primes_below acc i) -> primes_below (lprim n i acc) (plus n i)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Minus_to_plus. Let $n$ and $m$ and $p$ be natural numbers. Assume that $m \\leq n$. Then if $n - m = p$, then $n = m + p$.",
    "output": "postulate minus_to_plus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq m n) -> (__1 : Eq (minus n m) p) -> Eq n (plus m p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Filter_le. Let $_n , __ \\in N$. Then for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $Leq$ of $_n$ and $__$ to elements of $return_type$ of $z$, if $_n \\leq __$, then $return_type$ holds for $z$.",
    "output": "postulate filter_le : (_n : Nat) -> (_ : Nat) -> (return_sort : Sort) -> (return_type : (z : Leq _n __) -> return_sort) -> (return : (z : Leq _n __) -> return_type z) -> (z : Leq _n __) -> return_type z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Assoc_body. Let $A$ be a set. Let $nil$ be an element of $A$. Let $xxx$ be an element of $Aop$ of $A$ and $nil$. Then for all elements $a$ and $b$ and $c$ of $A$, $op (A , nil , xxx , a , op (A , nil , xxx , b , c))= op (A , nil , xxx , op (A , nil , xxx , a , b), c)$.",
    "output": "postulate assoc_body : (A : Set) -> (nil : A) -> (xxx : Aop A nil) -> (a : A) -> (b : A) -> (c : A) -> Eq (op A nil xxx a (op A nil xxx b c)) (op A nil xxx (op A nil xxx a b) c)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Pad_bigop1. Let $k$ and $n$ be natural numbers. Let $p$ be a function from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $n$ is less than or equal to $k$, then for all functions $__1$ from natural numbers $i$ and elements $__1$ of $Leq$ of $n$ and $i$ and elements $__2$ of $Lt$ of $i$ and $k$ to elements of $Eq$ of $p$ applied to $i$ and absurdity, $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.",
    "output": "postulate pad_bigop1 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_plus_a. Pour tous les nombres naturels $a$ et $n$ et $m$, si $n \\leq m$, alors $n \\leq a + m$.",
    "output": "postulate le_plus_a : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq n (plus a m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_ind_body. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_943$ av $Dop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$, för alla element $x_943$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_943$.",
    "output": "postulate Dop_ind_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_943 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_943 : Dop A _nil) -> Q_ x_943"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Strue. Soit $k \\in N$. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Alors pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $p (k)= true$, alors $op$ appliqué à $f$ appliqué à $k$ et $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_div. Soient $d$ et $n$ des nombres naturels. Alors si $d$ est divisible par $n$, alors $n \\div d$ est divisible par $n$.",
    "output": "postulate divides_div : (d : Nat) -> (n : Nat) -> (_ : divisible d n) -> divisible (div n d) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_ind. Låt $_n \\in N$. Låt $_f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla funktioner $Q_$ från naturliga tal $x_971$ och element $_x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$ till påståenden, för alla funktioner $_H_found_max_spec$ från naturliga tal $m$ och element $x_975$ av $Lt$ av $m$ och $_n$ och element $x_974$ av $Eq$ av $_f (m)$ och $true$ och funktioner $x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f (i)$ och kontradiktion till element av $Q_$ av $m$ och $found_max_spec (_n , _f , m , x_975 , x_974 , x_973)$, för alla funktioner $_H_not_found_max_spec$ från funktioner $x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $_n$ till element av $Eq$ av $_f (i)$ och kontradiktion till element av $Q_$ av $0$ och $not_found_max_spec (_n , _f , x_976)$, för alla naturliga tal $x_971$, för alla element $x_972$ av $max_spec$ av $_n$ och $_f$ och $x_971$, håller $Q_$ för $x_971$ och $x_972$.",
    "output": "postulate max_spec_ind : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_971 : Nat) -> (_x_972 : max_spec _n _f x_971) -> Prop) -> (_H_found_max_spec : (m : Nat) -> (x_975 : Lt m _n) -> (x_974 : Eq (_f m) true) -> (x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i _n) -> Eq (_f i) false) -> Q_ m (found_max_spec _n _f m x_975 x_974 x_973)) -> (_H_not_found_max_spec : (x_976 : (i : Nat) -> (_ : Lt i _n) -> Eq (_f i) false) -> Q_ 0 (not_found_max_spec _n _f x_976)) -> (x_971 : Nat) -> (x_972 : max_spec _n _f x_971) -> Q_ x_971 x_972"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233 \\in N$. Let $x_1232$ and $x_1231$ be elements of $B$. Then for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.",
    "output": "postulate lstar_ind : (B : Set) -> (_R : relation B) -> (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) -> (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) -> (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (plus l 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) -> (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Q_ x_1233 x_1232 x_1231 x_1234"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_inv_rect_CProp1. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1620$ de $ACop$ de $x1$ et de $x2$ à des propositions. Soit $_H1$ une fonction des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op$ appliqué à $x1$ et $x2$ et $aop$ et $a$ et $b$ et de $op$ appliqué à $x1$ et $x2$ et $aop$ et $b$ et $a$ et des éléments $_z1621$ de $Eq$ de $Hterm$ et de $mk_ACop$ appliqué à $x1$ et $x2$ et $aop$ et $_comm$ à des éléments de $P$ de $mk_ACop$ appliqué à $x1$ et $x2$ et $aop$ et $_comm$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate ACop_inv_rect_CProp1 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1620 : ACop x1 x2) -> Prop) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1621 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Found_min_spec. Soit $n , b \\in N$. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $m$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $m$. Supposons que $m$ est inférieur à la somme de $n$ et de $b$. Supposons que $f$ appliqué à $m$ est égal à $true$. Alors pour toutes les fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f$ appliqué à $i$ et de contradiction, $min_spec$ tient pour $n$ et $b$ et $f$ et $m$.",
    "output": "postulate found_min_spec : (n : Nat) -> (b : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Leq b m) -> (__1 : Lt m (plus n b)) -> (__2 : Eq (f m) true) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> min_spec n b f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_length_to_not_mem. Soit $n \\in N$. Soit $l$ une liste de nombres naturels. Alors pour tous les éléments $__$ de $unique$ de $Nat$ et de $l$, pour toutes les fonctions $__1$ des nombres naturels $x$ et des éléments $__1$ de $mem$ de $Nat$ et de $x$ et de $l$ à des éléments de $Lt$ de $x$ et de $n$, si $length$ appliqué à $Nat$ et $l$ est inférieur à $n$, alors $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à la conjonction de $Lt$ appliqué à $i$ et $n$ et de la négation de $mem$ appliqué à $Nat$ et $i$ et $l$.",
    "output": "postulate lt_length_to_not_mem : (n : Nat) -> (l : list Nat) -> (_ : unique Nat l) -> (__1 : (x : Nat) -> (__1 : mem Nat x l) -> Lt x n) -> (__2 : Lt (length Nat l) n) -> ex Nat (\\ i : Nat -> and (Lt i n) (not (mem Nat i l)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_to_eq2. Soient $a$ et $b$ et $q$ et $r$ et $q1$ et $r1$ des nombres naturels. Soit $__$ un élément de $div_mod_spec$ de $a$ et de $b$ et de $q$ et de $r$. Alors pour tous les éléments $__1$ de $div_mod_spec$ de $a$ et de $b$ et de $q1$ et de $r1$, $r$ est égal à $r1$.",
    "output": "postulate div_mod_spec_to_eq2 : (a : Nat) -> (b : Nat) -> (q : Nat) -> (r : Nat) -> (q1 : Nat) -> (r1 : Nat) -> (_ : div_mod_spec a b q r) -> (__1 : div_mod_spec a b q1 r1) -> Eq r r1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Anta att $b \\leq n$ och $f (b)= j$ och $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Låt $injf$ vara ett element av $injn$ av $f$ och $n$. Då om $a = b$, så $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_exp_log. Soient $p$ et $n$ des nombres naturels. Supposons que $1 < p$. Alors $n < p ^ ((\\log_ p {n})+ 1)$.",
    "output": "postulate lt_exp_log : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Lt n (pow p (plus (log p n) 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16002. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Sigma_p_dividesb. Låt $m$ och $n$ och $p$ vara naturliga tal. Då om $0 < n$ och $p$ är primt, så om $p$ inte är delbart med $n$, så är $bigop$ applicerat på $m$ och funktionen som avbildar $i$ som $dividesb$ applicerat på potensen av $p$ och summan av $i$ och $1$ och produkten av potensen av $p$ och $m$ och $n$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $1$ lika med $m$.",
    "output": "postulate sigma_p_dividesb : (m : Nat) -> (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : prime p) -> (__2 : not (divisible p n)) -> Eq m (bigop m (\\ i : Nat -> dividesb (pow p (plus i 1)) (times (pow p m) n)) Nat 0 plus (\\ i : Nat -> 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_Type3_body. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_921$ of $range$ of $_A$ to elements of $Type3$. Then for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_921$ of $range$ of $_A$, $Q_$ holds for $x_921$.",
    "output": "postulate range_rect_Type3_body : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "True_to_le_max. Pour toutes les fonctions $f$ des nombres naturels à des valeurs booléennes, pour tous les nombres naturels $n$ et $m$, si $m < n$, alors si $f (m)= true$, alors $m \\leq max (n , f)$.",
    "output": "postulate true_to_le_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> Leq m (max n f)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_div_S_div. Let $n , m \\in N$. Assume that $0 < m$ and $m ^ 2 \\leq n$. Then $n \\div (m + 1)< n \\div m$.",
    "output": "postulate lt_div_S_div : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Leq (pow m 2) n) -> Lt (div n (plus m 1)) (div n m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Plus_plus_comm_23. Let $x$ and $y$ and $z$ be natural numbers. Then $x + y + z = x + z + y$.",
    "output": "postulate plus_plus_comm_23 : (x : Nat) -> (y : Nat) -> (z : Nat) -> Eq (plus (plus x y) z) (plus (plus x z) y)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Leq_sqrt_n. Soit $n$ un nombre naturel. Alors le produit de la racine carrée de $n$ et de la racine carrée de $n$ est inférieur ou ágal à $n$.",
    "output": "postulate leq_sqrt_n : (n : Nat) -> Leq (times (sqrt n) (sqrt n)) n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Log_times1. Let $p , n , m \\in N$. Then if $1$ is less than $p$, then if $0$ is less than $n$, then if $0$ is less than $m$, then the logarithm of $p$ and the product of $n$ and $m$ is less than or equal to the sum of the sum of the logarithm of $p$ and $n$ and the logarithm of $p$ and $m$ and $1$.",
    "output": "postulate log_times1 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> (__2 : Lt 0 m) -> Leq (log p (times n m)) (plus (plus (log p n) (log p m)) 1)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Smallest_factor_to_prime. Låt $n \\in N$. Då om $1 < n$ och $smallest_factor (n)= n$, så är $n$ primt.",
    "output": "postulate smallest_factor_to_prime : (n : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (smallest_factor n) n) -> prime n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_ind. Let $_n$ be a natural number. Let $Q_$ be a function from natural numbers $x_417$ and elements $_x_418$ of $Leq$ of $_n$ and $x_417$ to propositions. Let $_H_le_n$ be an element of $Q_$ of $_n$ and $le_n (_n)$. Let $_H_le_S$ be a function from natural numbers $m$ and elements $x_419$ of $Leq$ of $_n$ and $m$ and elements $_x_421$ of $Q_$ of $m$ and $x_419$ to elements of $Q_$ of $m + 1$ and $le_S (_n , m , x_419)$. Let $x_417$ be a natural number. Then if $_n \\leq x_417$, then $Q_$ holds for $x_417$ and $x_418$.",
    "output": "postulate le_ind : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_sqrt_n. Let $n$ be a natural number. Then the square root of $n$ is less than or equal to $n$.",
    "output": "postulate le_sqrt_n : (n : Nat) -> Leq (sqrt n) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15625. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c = 1$.",
    "output": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_exp_to_eq. För alla naturliga tal $p$ och $q$ och $m$, om $p$ är primt, så om $q$ är primt, så om $p$ är delbart med $q ^ m$, så $p = q$.",
    "output": "postulate divides_exp_to_eq : (p : Nat) -> (q : Nat) -> (m : Nat) -> (_ : prime p) -> (__1 : prime q) -> (__2 : divisible p (pow q m)) -> Eq p q"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Min_spec_ind_body. Soient $_n$ et $_b$ des nombres naturels. Soit $_f$ une fonction des nombres naturels à des valeurs booléennes. Soit $Q_$ une fonction des nombres naturels $x_1075$ et des éléments $_x_1076$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $x_1075$ à des propositions. Soit $_H_found_min_spec$ une fonction des nombres naturels $m$ et des éléments $x_1080$ de $Leq$ de $_b$ et de $m$ et des éléments $x_1079$ de $Lt$ de $m$ et de la somme de $_n$ et de $_b$ et des éléments $x_1078$ de $Eq$ de $_f$ appliqué à $m$ et de $true$ et des fonctions $x_1077$ des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $Q_$ de $m$ et de $found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $m$ et $x_1080$ et $x_1079$ et $x_1078$ et $x_1077$. Soit $_H_not_found_min_spec$ une fonction des fonctions $x_1081$ des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de la somme de $_n$ et de $_b$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $Q_$ de la somme de $_n$ et de $_b$ et de $not_found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $x_1081$. Soit $x_1075 \\in N$. Soit $x_1076$ un élément de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $x_1075$. Alors $Q_$ tient pour $x_1075$ et $x_1076$.",
    "output": "postulate min_spec_ind_body : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$ et $j \\leq n$. Alors pour tous les nombres naturels $a$, si $a \\leq n$ et $f (a)= i$ et $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$ et $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_to_mod. Soient $n$ et $m$ des nombres naturels. Supposons que $n < m$. Alors $n = mod (n , m)$.",
    "output": "postulate le_to_mod : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> Eq n (mod n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16171. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Alors pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_inv_rect_CProp3. Soit $Hterm \\in N$. Soit $P$ une fonction des nombres naturels $_z695$ à des propositions. Soit $_H1$ une fonction des éléments $_z696$ de $Eq$ de $Hterm$ et de $0$ à des éléments de $P$ de $0$. Soit $_H2$ une fonction des nombres naturels $x_402$ et des fonctions $_x_404$ des éléments $_z696$ de $Eq$ de $Hterm$ et de $x_402$ à des éléments de $P$ de $x_402$ et des éléments $_z696$ de $Eq$ de $Hterm$ et de $x_402 + 1$ à des éléments de $P$ de $x_402 + 1$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate nat_inv_rect_CProp3 : (Hterm : Nat) -> (P : (_z695 : Nat) -> Prop) -> (_H1 : (_z696 : Eq Hterm 0) -> P 0) -> (_H2 : (x_402 : Nat) -> (_x_404 : (_z696 : Eq Hterm x_402) -> P x_402) -> (_z696 : Eq Hterm (plus x_402 1)) -> P (plus x_402 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_rect_CProp5. Låt $_A$ vara en mängd. Låt $Q_$ vara en funktion från element $_x_931$ av $range$ av $_A$ till påståenden. Då för alla funktioner $_H_mk_range$ från funktioner $_enum$ från naturliga tal till element av $_A$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden till element av $Q_$ av $mk_range (_A , _enum , _upto , _filter)$, för alla element $x_931$ av $range$ av $_A$, håller $Q_$ för $x_931$.",
    "output": "postulate range_rect_CProp5 : (_A : Set) -> (Q_ : (_x_931 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_931 : range _A) -> Q_ x_931"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16001. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Plus_div. Let $n , m , d \\in N$. Assume that $0$ is less than $d$. Assume that $d$ is divisible by $n$. Assume that $d$ is divisible by $m$. Then the quotient of the sum of $n$ and $m$ and $d$ is equal to the sum of the quotient of $n$ and $d$ and the quotient of $m$ and $d$.",
    "output": "postulate plus_div : (n : Nat) -> (m : Nat) -> (d : Nat) -> (_ : Lt 0 d) -> (__1 : divisible d n) -> (__2 : divisible d m) -> Eq (div (plus n m) d) (plus (div n d) (div m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "True_to_le_min. Let $f$ be a function from natural numbers to booleans. Let $n$ and $m$ and $b$ be natural numbers. Then if $b$ is less than or equal to $m$, then if $f$ applied to $m$ is equal to $true$, then $min$ applied to $n$ and $b$ and $f$ is less than or equal to $m$.",
    "output": "postulate true_to_le_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (b : Nat) -> (_ : Leq b m) -> (__1 : Eq (f m) true) -> Leq (min n b f) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind_l. Let $B$ be a set. Let $R$ be a function from elements of $B$ and elements $__1$ of $B$ to propositions. Let $b2$ be an element of $B$. Let $P$ be an element of $relation2$ of $Nat$ and $B$. Let $__$ be an element of $P$ of $0$ and $b2$. Let $__1$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of $l + 1$ and $b1$. Let $l$ be a natural number. Then for all elements $b1$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, $P$ holds for $l$ and $b1$.",
    "output": "postulate lstar_ind_l : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (__2 : lstar B R l b1 b2) -> P l b1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Then if $p$ is divisible by $m \\times n$, then for all natural numbers $c$, if $m n = p c$, then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_to_div. Låt $n , m \\in N$. Då om $n$ är delbart med $m$, så är produkten av kvoten av $m$ och $n$ och $n$ lika med $m$.",
    "output": "postulate divides_to_div : (n : Nat) -> (m : Nat) -> (_ : divisible n m) -> Eq (times (div m n) n) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Sqrt_def. Let $n$ be a natural number. Then $max$ applied to the sum of $n$ and $1$ and the function that maps $x$ to $leb$ applied to the product of $x$ and $x$ and $n$ is equal to $\\sqrt{ n}$.",
    "output": "postulate sqrt_def : (n : Nat) -> Eq (sqrt n) (max (plus n 1) (\\ x : Nat -> leb (times x x) n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dividesb. For all natural numbers $__$ and $__1$, $bool$.",
    "output": "postulate dividesb : (_ : Nat) -> (__1 : Nat) -> bool"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10332. Låt $n$ vara ett naturligt tal. Då om $2 ^ 6 \\leq n$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10332 : (n : Nat) -> (le_n : Leq (pow 2 6) n) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1585. För alla naturliga tal $n$ och $m$, om $0 < n$, så om $m$ är delbart med $n$, så för alla naturliga tal $d$, om $0 = m$, så om $n = m d$, så $0 = n$.",
    "output": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Log_exp2. Let $p , n , m \\in N$. Assume that $1 < p$ and $0 < n$. Then $m \\log_ p {n}\\leq \\log_ p {(n ^ m)}$.",
    "output": "postulate log_exp2 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 1 p) -> (__1 : Lt 0 n) -> Leq (times m (log p n)) (log p (pow n m))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i$ and $j$ be natural numbers. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a$ be a natural number. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Then for all natural numbers $b$, if $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$, then if $b$ is less than or equal to $n$, then if $f$ applied to $b$ is equal to $j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a$ is equal to $b$, then $f$ applied to $a$ is equal to $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Same_bigop. Pour tous les nombres naturels $k$, pour toutes les fonctions $p1$ et $p2$ des nombres naturels à des valeurs booléennes, pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ et $g$ des nombres naturels à des éléments de $B$, pour tous les éléments $__$ de $sameF_upto$ de $k$ et de $bool$ et de $p1$ et de $p2$, pour tous les éléments $__1$ de $sameF_p$ de $k$ et de $p1$ et de $B$ et de $f$ et de $g$, $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p1$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p2$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $g$ appliqué à $i$.",
    "output": "postulate same_bigop : (k : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (g : (_ : Nat) -> B) -> (_ : sameF_upto k bool p1 p2) -> (__1 : sameF_p k p1 B f g) -> Eq (bigop k (\\ i : Nat -> p1 i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p2 i) B nil op (\\ i : Nat -> g i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1704. Låt $m$ vara ett naturligt tal. Då om $0 < m$, så för alla naturliga tal $a$ och $x1029$, $x1029 = aop__o__op (Nat , 0 , plusAC , x1029 , 0)$.",
    "output": "postulate let_clause_1704 : (m : Nat) -> (posm : Lt 0 m) -> (a : Nat) -> (x1029 : Nat) -> Eq x1029 (aop__o__op Nat 0 plusAC x1029 0)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15441. Let $p$ and $q$ be natural numbers. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Then for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_exp1. Let $n$ and $m$ and $a$ be natural numbers. Assume that $0$ is less than $a$. Assume that $n$ is less than or equal to $m$. Then the exponentiation of $n$ and $a$ is less than or equal to the exponentiation of $m$ and $a$.",
    "output": "postulate le_exp1 : (n : Nat) -> (m : Nat) -> (a : Nat) -> (_ : Lt 0 a) -> (__1 : Leq n m) -> Leq (pow n a) (pow m a)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Sub0_to_false. Let $h$ and $k$ be functions from natural numbers to natural numbers. Let $A$ be a set. Then for all elements $I$ and $J$ of $range$ of $A$, if $upto (A , I)= 0$, then for all elements $__1$ of $sub_hk$ of $h$ and $k$ and $A$ and $J$ and $I$, for all natural numbers $i$, if $i < upto (A , J)$, then absurdity is equal to $filter (A , J , i)$.",
    "output": "postulate sub0_to_false : (h : (_ : Nat) -> Nat) -> (k : (_ : Nat) -> Nat) -> (A : Set) -> (I : range A) -> (J : range A) -> (_ : Eq (upto A I) 0) -> (__1 : sub_hk h k A J I) -> (i : Nat) -> (__2 : Lt i (upto A J)) -> Eq (filter A J i) false"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_Strue. Let $k$ be a natural number. Then for all functions $p$ from natural numbers to booleans, for all sets $B$, for all elements $nil$ of $B$, for all functions $op$ from elements of $B$ and elements $__1$ of $B$ to elements of $B$, for all functions $f$ from natural numbers to elements of $B$, if $p$ applied to $k$ is equal to $true$, then $bigop$ applied to the sum of $k$ and $1$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $op$ applied to $f$ applied to $k$ and $bigop$ applied to $k$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_spec_ind_body. Let $_n , _b \\in N$. Let $_f$ be a function from natural numbers to booleans. Let $Q_$ be a function from natural numbers $x_1075$ and elements $_x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$ to propositions. Let $_H_found_min_spec$ be a function from natural numbers $m$ and elements $x_1080$ of $Leq$ of $_b$ and $m$ and elements $x_1079$ of $Lt$ of $m$ and $_n + _b$ and elements $x_1078$ of $Eq$ of $_f (m)$ and $true$ and functions $x_1077$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $m$ and $found_min_spec (_n , _b , _f , m , x_1080 , x_1079 , x_1078 , x_1077)$. Let $_H_not_found_min_spec$ be a function from functions $x_1081$ from natural numbers $i$ and elements of $Leq$ of $_b$ and $i$ and elements $__1$ of $Lt$ of $i$ and $_n + _b$ to elements of $Eq$ of $_f (i)$ and absurdity to elements of $Q_$ of $_n + _b$ and $not_found_min_spec (_n , _b , _f , x_1081)$. Let $x_1075 \\in N$. Then for all elements $x_1076$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $x_1075$, $Q_$ holds for $x_1075$ and $x_1076$.",
    "output": "postulate min_spec_ind_body : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (Q_ : (x_1075 : Nat) -> (_x_1076 : min_spec _n _b _f x_1075) -> Prop) -> (_H_found_min_spec : (m : Nat) -> (x_1080 : Leq _b m) -> (x_1079 : Lt m (plus _n _b)) -> (x_1078 : Eq (_f m) true) -> (x_1077 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i m) -> Eq (_f i) false) -> Q_ m (found_min_spec _n _b _f m x_1080 x_1079 x_1078 x_1077)) -> (_H_not_found_min_spec : (x_1081 : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> Q_ (plus _n _b) (not_found_min_spec _n _b _f x_1081)) -> (x_1075 : Nat) -> (x_1076 : min_spec _n _b _f x_1075) -> Q_ x_1075 x_1076"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_CProp3_body. Let $A$ be a set. Let $_nil$ be an element of $A$. Then for all functions $Q_$ from elements $_x_961$ of $Dop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $_nil$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $A$ and $_nil$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ to elements of $Q_$ of $mk_Dop$ applied to $A$ and $_nil$ and $sum$ and $prod$ and $_null$ and $_distr$, for all elements $x_961$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_961$.",
    "output": "postulate Dop_rect_CProp3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_961 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_961 : Dop A _nil) -> Q_ x_961"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_ord_log. Pour tous les nombres naturels $n$ et $p$, si $0$ est inférieur à $n$, alors si $1$ est inférieur à $p$, alors $ord$ appliqué à $n$ et $p$ est inférieur ou ágal au logarithme de $p$ et de $n$.",
    "output": "postulate le_ord_log : (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 1 p) -> Leq (ord n p) (log p n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_rect_CProp3. Soit $_A$ un ensemble. Soit $Q_$ une fonction des éléments $_x_933$ de $range$ de $_A$ à des propositions. Soit $_H_mk_range$ une fonction des fonctions $_enum$ des nombres naturels à des éléments de $_A$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes à des éléments de $Q_$ de $mk_range$ appliqué à $_A$ et $_enum$ et $_upto$ et $_filter$. Alors pour tous les éléments $x_933$ de $range$ de $_A$, $Q_$ tient pour $x_933$.",
    "output": "postulate range_rect_CProp3 : (_A : Set) -> (Q_ : (_x_933 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_933 : range _A) -> Q_ x_933"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $p$ and $n$ and $n1$ and $q$ and $p1$ and $p2$ and $qa$ and $ra$ be natural numbers. Assume that $p_ord_aux (n1 + 1 , n1 + 1 , p2 + 2)= mk_Prod (Nat , Nat , qa , ra)$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (p : Nat) -> (n : Nat) -> (n1 : Nat) -> (q : Nat) -> (p1 : Nat) -> (p2 : Nat) -> (qa : Nat) -> (ra : Nat) -> (H : Eq (p_ord_aux (plus n1 1) (plus n1 1) (plus p2 2)) (mk_Prod Nat Nat qa ra)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Found_max_spec. Låt $n \\in N$. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $m$, om $m < n$, så om $f (m)= true$, så för alla funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, håller $max_spec$ för $n$ och $f$ och $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16004. Soit $m , n , a , b \\in N$. Supposons que $0 < n$. Supposons que $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$, alors si $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16004 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_CProp1. Let $Q_$ be a function from natural numbers $_x_409$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_410$ and elements $_x_412$ of $Q_$ of $x_410$ to elements of $Q_$ of the sum of $x_410$ and $1$. Let $x_409$ be a natural number. Then $Q_$ holds for $x_409$.",
    "output": "postulate nat_rect_CProp1 : (Q_ : (_x_409 : Nat) -> Prop) -> (_H_O : Q_ 0) -> (_H_S : (x_410 : Nat) -> (_x_412 : Q_ x_410) -> Q_ (plus x_410 1)) -> (x_409 : Nat) -> Q_ x_409"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_rect_CProp5_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_905$ av $ACop$ av $A$ och $_nil$ till påståenden. Då för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op (A , _nil , aop , a , b)$ och $op (A , _nil , aop , b , a)$ till element av $Q_$ av $mk_ACop (A , _nil , aop , _comm)$, för alla element $x_905$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_905$.",
    "output": "postulate ACop_rect_CProp5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_905 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_905 : ACop A _nil) -> Q_ x_905"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $n$ be a natural number. Assume that $2 ^ 8 \\leq n$. Let $m \\in N$. Then if $3 \\leq m$, then if $\\log_ 2 {m}+ 2 \\leq m$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (len : Leq (pow 2 8) n) -> (m : Nat) -> (lt2m : Leq 3 m) -> (Hind : Leq (plus (log 2 m) 2) m) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Invert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n$ and $m$ be natural numbers. Assume that $m \\leq n$. Then for all elements $__1$ of $injn$ of $f$ and $n$, $invert_permut (n , f , f (m))= m$.",
    "output": "postulate invert_permut_f : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : injn f n) -> Eq (invert_permut n f (f m)) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Minus_to_plus. Soient $n$ et $m$ et $p$ des nombres naturels. Supposons que $m \\leq n$ et $n - m = p$. Alors $n = m + p$.",
    "output": "postulate minus_to_plus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq m n) -> (__1 : Eq (minus n m) p) -> Eq n (plus m p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_priml1. Låt $n \\in N$. Då om $0$ är mindre än $n$, så är skillnaden mellan kvoten av produkten av $2$ och $n$ och summan av logaritmen av $2$ och $n$ och $2$ och $1$ mindre än eller lika med $prim$ applicerat på produkten av $2$ och $n$.",
    "output": "postulate le_priml1 : (n : Nat) -> (_ : Lt 0 n) -> Leq (minus (div (times 2 n) (plus (log 2 n) 2)) 1) (prim (times 2 n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_fact_to_divides. Let $p , n \\in N$. Then if $p$ is both prime and divisible by $n !$, then $ex$ holds for $Nat$ and the function that maps $m$ to the conjunction of the conjunction of $Lt$ applied to $0$ and $m$ and $Leq$ applied to $m$ and $n$ and $divisible$ applied to $p$ and $m$.",
    "output": "postulate divides_fact_to_divides : (p : Nat) -> (n : Nat) -> (_ : prime p) -> (__1 : divisible p (factorial n)) -> ex Nat (\\ m : Nat -> and (and (Lt 0 m) (Leq m n)) (divisible p m))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15692. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Då för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.",
    "output": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_exp_log. Pour tous les nombres naturels $p$ et $n$, si $0 < n$, alors $p ^ (\\log_ p {n})\\leq n$.",
    "output": "postulate le_exp_log : (p : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> Leq (pow p (log p n)) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1607. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Supposons que le diviseur commun plus grand de $n$ et de $m$ est égal à $1$. Soit $c$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d \\in N$. Supposons que la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$. Alors si la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à la différence du produit de $m$ et de $d$ et du produit de $n$ et de $c$.",
    "output": "postulate let_clause_1607 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bertrand. Låt $n \\in N$. Då om $0 < n$, så håller $bertrand$ för $n$.",
    "output": "postulate bertrand : (n : Nat) -> (_ : Lt 0 n) -> bertrand n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15692. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0 < n$. Anta att $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Då om $c n - d m = 1$ eller $d m - c n = 1$, så om $d m - c n = 1$, så $m d - n c = 1$.",
    "output": "postulate let_clause_15692 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Alors si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_divides_M. Låt $m , p \\in N$. Anta att $p$ är primt. Anta att $m + 1 < p$. Då om $p \\leq 2 m + 1$, så är $p$ delbart med $M (m)$.",
    "output": "postulate prime_to_divides_M : (m : Nat) -> (p : Nat) -> (_ : prime p) -> (__1 : Lt (plus m 1) p) -> (__2 : Leq p (plus (times 2 m) 1)) -> divisible p (M m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1553. Låt $n$ och $n0$ vara naturliga tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $a$ som disjunktionen av $Eq$ applicerat på $n0$ och produkten av $2$ och $a$ och $Eq$ applicerat på $n0$ och summan av produkten av $2$ och $a$ och $1$. Låt $a$ vara ett naturligt tal. Då om $n0 = 2 a$ eller $n0 = 2 a + 1$, så om $n0 = 2 a + 1$, så $n0 = a + (a + 1)$.",
    "output": "postulate let_clause_1553 : (n : Nat) -> (n0 : Nat) -> (_clearme : ex Nat (\\ a : Nat -> or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1)))) -> (a : Nat) -> (_clearme0 : or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1))) -> (Hn : Eq n0 (plus (times 2 a) 1)) -> Eq n0 (plus a (plus a 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Checker_spec. Let $tl$ be a list of natural numbers. Let $a$ be a natural number. Let $l$ be a list of natural numbers. Assume that $checker (l)= true$ and $l = cons (Nat , a , tl)$. Then for all natural numbers $p$, for all elements $__2$ of $mem$ of $Nat$ and $p$ and $tl$, $ex$ holds for $Nat$ and the function that maps $pp$ to the conjunction of the conjunction of $mem$ applied to $Nat$ and $pp$ and $l$ and $Lt$ applied to $pp$ and $p$ and $Leq$ applied to $p$ and the product of $2$ and $pp$.",
    "output": "postulate checker_spec : (tl : list Nat) -> (a : Nat) -> (l : list Nat) -> (_ : Eq (checker l) true) -> (__1 : Eq l (cons Nat a tl)) -> (p : Nat) -> (__2 : mem Nat p tl) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_Type3_body. Let $Q_$ be a function from natural numbers $_x_377$ to elements of $Type3$. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_378$ and elements $_x_380$ of $Q_$ of $x_378$ to elements of $Q_$ of $x_378 + 1$. Let $x_377 \\in N$. Then $Q_$ holds for $x_377$.",
    "output": "postulate nat_rect_Type3_body : (Q_ : (_x_377 : Nat) -> Type3) -> (_H_O : Q_ 0) -> (_H_S : (x_378 : Nat) -> (_x_380 : Q_ x_378) -> Q_ (plus x_378 1)) -> (x_377 : Nat) -> Q_ x_377"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_rect_Type0_body. För alla mängder $A$, för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_901$ av $ACop$ av $A$ och $_nil$ till mängder, för alla funktioner $_H_mk_ACop$ från element $aop$ av $Aop$ av $A$ och $_nil$ och funktioner $_comm$ från element $a$ av $A$ och element $b$ av $A$ till element av $Eq$ av $op (A , _nil , aop , a , b)$ och $op (A , _nil , aop , b , a)$ till element av $Q_$ av $mk_ACop (A , _nil , aop , _comm)$, för alla element $x_901$ av $ACop$ av $A$ och $_nil$, håller $Q_$ för $x_901$.",
    "output": "postulate ACop_rect_Type0_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_901 : ACop A _nil) -> Set) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_901 : ACop A _nil) -> Q_ x_901"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15321. Låt $n$ och $m$ vara naturliga tal. Anta att $0 < m$. Då om $0 = n$, så om $0$ är delbart med $m$, så för alla naturliga tal $q$, om $m = 0 q$, så $m = 0$.",
    "output": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $n \\in N$. Assume that $5$ is less than $n$. Let $m$ be a natural number. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Assume that $6$ is less than or equal to $a$. Assume that the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$. Then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Alors pour tous les nombres naturels $a$, si $a \\leq n$ et $f (a)= i$, alors si $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$, alors si $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_rect_Type3_body. Let $_n$ and $_m$ and $_q$ and $_r$ be natural numbers. Then for all functions $Q_$ from elements $_x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to elements of $Type3$, for all functions $_H_div_mod_spec_intro$ from elements $x_823$ of $Lt$ of $_r$ and $_m$ and elements $x_822$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_823$ and $x_822$, for all elements $x_821$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_821$.",
    "output": "postulate div_mod_spec_rect_Type3_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_821 : div_mod_spec _n _m _q _r) -> Type3) -> (_H_div_mod_spec_intro : (x_823 : Lt _r _m) -> (x_822 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) -> (x_821 : div_mod_spec _n _m _q _r) -> Q_ x_821"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Exp_to_fact2. Soit $n$ un nombre naturel. Supposons que $0 < n$. Alors $2 ^ (2 n)(n ! ^ 2)\\leq 2 n (2 n)!$.",
    "output": "postulate exp_to_fact2 : (n : Nat) -> (_ : Lt 0 n) -> Leq (times (pow 2 (times 2 n)) (pow (factorial n) 2)) (times (times 2 n) (factorial (times 2 n)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Ord_ord_rem. Let $p , q , m \\in N$. Then if $0$ is less than $m$, then if $p$ is prime, then if $q$ is prime, then if $q$ is less than $p$, then $ord$ applied to $ord_rem$ applied to $m$ and $p$ and $q$ is equal to $ord$ applied to $m$ and $q$.",
    "output": "postulate ord_ord_rem : (p : Nat) -> (q : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : prime p) -> (__2 : prime q) -> (__3 : Lt q p) -> Eq (ord (ord_rem m p) q) (ord m q)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_inv_ind. Låt $x1$ och $x2$ vara naturliga tal. Anta att $x1$ är delbart med $x2$. Låt $P$ vara en funktion från element $_z2006$ av $divisible$ av $x1$ och $x2$ till påståenden. Låt $_H1$ vara en funktion från naturliga tal $q$ och element $x_1193$ av $Eq$ av $x2$ och produkten av $x1$ och $q$ och element $_z2007$ av $Eq$ av $Hterm$ och $quotient$ applicerat på $x1$ och $x2$ och $q$ och $x_1193$ till element av $P$ av $quotient$ applicerat på $x1$ och $x2$ och $q$ och $x_1193$. Då håller $P$ för $Hterm$.",
    "output": "postulate divides_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (Hterm : divisible x1 x2) -> (P : (_z2006 : divisible x1 x2) -> Prop) -> (_H1 : (q : Nat) -> (x_1193 : Eq x2 (times x1 q)) -> (_z2007 : Eq Hterm (quotient x1 x2 q x_1193)) -> P (quotient x1 x2 q x_1193)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Found_max_spec. Let $n$ be a natural number. Let $f$ be a function from natural numbers to booleans. Let $m$ be a natural number. Assume that $m < n$. Then if $f (m)= true$, then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max_spec$ holds for $n$ and $f$ and $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Max_spec_inv_ind. Soit $x1 \\in N$. Soit $x2$ une fonction des nombres naturels à des valeurs booléennes. Soit $x3$ un nombre naturel. Soit $_Hterm$ un élément de $max_spec$ de $x1$ et de $x2$ et de $x3$. Soit $P$ une fonction des nombres naturels $_z1769$ à des propositions. Soit $_H1$ une fonction des nombres naturels $m$ et des éléments $_x_975$ de $Lt$ de $m$ et de $x1$ et des éléments $_x_974$ de $Eq$ de $x2 (m)$ et de $true$ et des fonctions $_x_973$ des nombres naturels $i$ et des éléments de $Lt$ de $m$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de $x1$ à des éléments de $Eq$ de $x2 (i)$ et de contradiction et des éléments $_z1770$ de $Eq$ de $x3$ et de $m$ à des éléments de $P$ de $m$. Alors pour toutes les fonctions $_H2$ des fonctions $_x_976$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $x1$ à des éléments de $Eq$ de $x2 (i)$ et de contradiction et des éléments $_z1770$ de $Eq$ de $x3$ et de $0$ à des éléments de $P$ de $0$, $P$ tient pour $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Then for all natural numbers $a$, for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10131. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n$ och $m$ och $n0$ vara naturliga tal. Anta att $max$ applicerat på summan av $n0$ och $1$ och $f$ är lika med $m$. Anta att $f$ applicerat på $m$ är lika med kontradiktion. Då för alla naturliga tal $i$ och $j$, om summan av $j$ och $1$ är mindre än summan av $n0$ och $1$, så för alla naturliga tal $x7$, är $x7$ lika med summan av $m$ och $x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15491. Soient $m$ et $n$ des nombres naturels. Supposons que $0$ est égal à $n$. Alors pour tous les nombres naturels $x1106$, $x1106$ est égal à la différence de $x1106$ et de $n$.",
    "output": "postulate let_clause_15491 : (m : Nat) -> (n : Nat) -> (eqn0 : Eq 0 n) -> (x1106 : Nat) -> Eq x1106 (minus x1106 n)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1561. Pour tous les nombres naturels $p$ et $m$ et $n$, si $0$ est inférieur à $p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $1$, alors si $p$ est divisible par le produit de $m$ et de $n$, alors pour tous les nombres naturels $c$, si le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$, alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$, alors la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$ est égale à $1$.",
    "output": "postulate let_clause_1561 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (minus (times p a) (times m b)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Found_max_spec. Let $n$ be a natural number. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Assume that $m < n$ and $f (m)= true$. Let $__2$ be a function from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity. Then $max_spec$ holds for $n$ and $f$ and $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1075. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Then for all elements $bijf$ of $bijn$ of $f$ and the sum of $n$ and $1$, if $f$ applied to the sum of $n$ and $1$ is equal to the sum of $n$ and $1$, then for all natural numbers $i$, if $i$ is less than or equal to $n$, then for all natural numbers $a$, if $a$ is less than or equal to the sum of $n$ and $1$ and $f$ applied to $a$ is equal to $i$, then if $a$ is less than or equal to the sum of $n$ and $1$, then if $f$ applied to $a$ is equal to $i$, then if $a$ is equal to the sum of $n$ and $1$, then $i$ is equal to $a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16005. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Assume that the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $m$ and $d$ and the product of $n$ and $c$.",
    "output": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1544. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m , n \\in N$. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Anta att $n$ inte är delbart med $m$. Låt $a$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Anta att $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Anta att $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Då $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1545. Let $m , n \\in N$. Assume that $0$ is equal to the greatest common divisor of $m$ and $n$. Assume that $0$ is divisible by $n$. Let $q1$ be a natural number. Then if $n = 0 q1$, then if $0$ is divisible by $m$, then for all natural numbers $q2$, if $m = 0 q2$, then $m = 0$.",
    "output": "postulate let_clause_1545 : (m : Nat) -> (n : Nat) -> (H : Eq (gcd m n) 0) -> (_clearme : divisible 0 n) -> (q1 : Nat) -> (H1 : Eq n (times 0 q1)) -> (_clearme0 : divisible 0 m) -> (q2 : Nat) -> (H2 : Eq m (times 0 q2)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Then if $1 < n$ and $2 \\times n$ is prime, then if $1 < 2 n$, then for all functions $H1$ from natural numbers $m$ and elements of $divisible$ of $m$ and $2 \\times n$ and elements $__1$ of $Lt$ of $1$ and $m$ to elements of $Eq$ of $m$ and $2 \\times n$, for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (ltn : Lt 1 n) -> (_clearme : prime (times 2 n)) -> (H : Lt 1 (times 2 n)) -> (H1 : (m : Nat) -> (_ : divisible m (times 2 n)) -> (__1 : Lt 1 m) -> Eq m (times 2 n)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Aop_rect_Type5. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_865$ de $Aop$ de $A$ et de $_nil$ à des éléments de $Type5$. Soit $_H_mk_Aop$ une fonction des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $_nil$ et $a$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $_nil$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op$ appliqué à $a$ et $op$ appliqué à $b$ et $c$ et de $op$ appliqué à $op$ appliqué à $a$ et $b$ et $c$ à des éléments de $Q_$ de $mk_Aop$ appliqué à $A$ et $_nil$ et $op$ et $_nill$ et $_nilr$ et $_assoc$. Alors pour tous les éléments $x_865$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_865$.",
    "output": "postulate Aop_rect_Type5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_865 : Aop A _nil) -> Type5) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_865 : Aop A _nil) -> Q_ x_865"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Fmin_false. För alla funktioner $f$ från naturliga tal till sanningsvärden, för alla naturliga tal $n$ och $b$, håller $prod$ för $Prop$ och $Prop$ och $Eq$ applicerat på $f$ applicerat på $let_m$ applicerat på $f$ och $n$ och $b$ och kontradiktion och funktionen som avbildar $__$ som $Eq (let_m (f , n , b), n + b)$.",
    "output": "postulate fmin_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> prod Prop Prop (Eq (f (let_m f n b)) false) (\\ _ : Eq (f (let_m f n b)) false -> Eq (let_m f n b) (plus n b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15611. Let $p , m , n \\in N$. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $bijf$ vara ett element av $bijn$ av $f$ och summan av $n$ och $1$. Anta att $f$ applicerat på summan av $n$ och $1$ är lika med summan av $n$ och $1$. Låt $i$ vara ett naturligt tal. Anta att $i$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med summan av $n$ och $1$ och $f$ applicerat på $a$ är lika med $i$. Då om $a$ är mindre än eller lika med summan av $n$ och $1$, så om $f$ applicerat på $a$ är lika med $i$, så om $a$ är lika med summan av $n$ och $1$, så är $i$ lika med $a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_div_to_times. Låt $n , m , q \\in N$. Då om $0 < q$, så om $n \\div q < m$, så $n < q m$.",
    "output": "postulate lt_div_to_times : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> (__1 : Lt (div n q) m) -> Lt n (times q m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Match_divides. Låt $_n$ och $_m$ vara naturliga tal. Då för alla element $return_sort$ av $Sort$, för alla funktioner $return_type$ från element $z$ av $divisible$ av $_n$ och $_m$ till element av $return_sort$, för alla funktioner $case_quotient$ från naturliga tal $q$ och element av $Eq$ av $_m$ och produkten av $_n$ och $q$ till element av $return_type$ av $quotient$ applicerat på $_n$ och $_m$ och $q$ och $__$, om $_n$ är delbart med $_m$, så håller $return_type$ för $z$.",
    "output": "postulate match_divides : (_n : Nat) -> (_m : Nat) -> (return_sort : Sort) -> (return_type : (z : divisible _n _m) -> return_sort) -> (case_quotient : (q : Nat) -> (_ : Eq _m (times _n q)) -> return_type (quotient _n _m q __)) -> (z : divisible _n _m) -> return_type z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Permut_S_to_permut. Soit $f$ une fonction des nombres naturels à des nombres naturels. Alors pour tous les nombres naturels $m$, pour tous les éléments $__$ de $permut$ de $f$ et de $m + 1$, si $f (m + 1)= m + 1$, alors $permut$ tient pour $f$ et $m$.",
    "output": "postulate permut_S_to_permut : (f : (_ : Nat) -> Nat) -> (m : Nat) -> (_ : permut f (plus m 1)) -> (__1 : Eq (f (plus m 1)) (plus m 1)) -> permut f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15321. Let $n , m \\in N$. Assume that $0 < m$ and $0 = n$. Assume that $0$ is divisible by $m$. Let $q$ be a natural number. Assume that $m = 0 q$. Then $m = 0$.",
    "output": "postulate let_clause_15321 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 m) -> (eqn0 : Eq 0 n) -> (_clearme : divisible 0 m) -> (q : Nat) -> (eqm : Eq m (times 0 q)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "TimesAC. $ACop$ holds for $Nat$ and $1$.",
    "output": "postulate timesAC : ACop Nat 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_inv_rect_CProp1. Let $x1$ be a set. Let $x2$ be an element of $x1$. Let $Hterm$ be an element of $Dop$ of $x1$ and $x2$. Let $P$ be a function from elements $_z1752$ of $Dop$ of $x1$ and $x2$ to propositions. Then for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod (a , x2)$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod (a , aop__o__op (x1 , x2 , sum , b , c))$ and $aop__o__op (x1 , x2 , sum , prod (a , b), prod (a , c))$ and elements $_z1753$ of $Eq$ of $Hterm$ and $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$ to elements of $P$ of $mk_Dop (x1 , x2 , sum , prod , _null , _distr)$, $P$ holds for $Hterm$.",
    "output": "postulate Dop_inv_rect_CProp1 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1752 : Dop x1 x2) -> Prop) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1753 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15441. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Anta att $n$ inte är delbart med $m$. Låt $a$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Då om $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så om $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_n_fn. Let $f$ be a function from natural numbers to natural numbers. Then for all elements $__$ of $increasing$ of $f$, for all natural numbers $n$, $n$ is less than or equal to $f$ applied to $n$.",
    "output": "postulate le_n_fn : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (n : Nat) -> Leq n (f n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1553. For all natural numbers $n$ and $n0$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$, for all natural numbers $a$, if $n0$ is equal to the product of $2$ and $a$ or $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then if $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then $n0$ is equal to the sum of $a$ and the sum of $a$ and $1$.",
    "output": "postulate let_clause_1553 : (n : Nat) -> (n0 : Nat) -> (_clearme : ex Nat (\\ a : Nat -> or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1)))) -> (a : Nat) -> (_clearme0 : or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1))) -> (Hn : Eq n0 (plus (times 2 a) 1)) -> Eq n0 (plus a (plus a 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $n$ be a natural number. Assume that the exponentiation of $2$ and $7$ is less than or equal to $n$. Let $p \\in N$. Then if the sum of the square root of the product of $2$ and $n$ and $1$ is less than or equal to $p$, then if $p$ is less than the sum of the product of $2$ and $n$ and $1$, then if $leb$ applied to $2$ and $k$ applied to the product of $2$ and $n$ and $p$ is equal to $true$, then if the product of $2$ and $n$ is less than the exponentiation of $p$ and $2$, then for all natural numbers $x2515$ and $x2516$, $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_CProp0_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_913$ de $ACop$ de $A$ et de $_nil$ à des propositions. Soit $_H_mk_ACop$ une fonction des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$. Soit $x_913$ un élément de $ACop$ de $A$ et de $_nil$. Alors $Q_$ tient pour $x_913$.",
    "output": "postulate ACop_rect_CProp0_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_913 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_913 : ACop A _nil) -> Q_ x_913"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Not_not_bertrand_to_bertrand1. Soit $n \\in N$. Supposons qu'il n'est pas le cas que $not_bertrand$ tienne pour $n$. Soit $x \\in N$. Supposons que $n \\leq x$. Supposons que $x \\leq 2 n$. Soit $__3$ une fonction des nombres naturels $p$ et des éléments $__3$ de $Lt$ de $x$ et de $p$ et des éléments $__4$ de $Leq$ de $p$ et de $2 \\times n$ à des éléments de $not$ de $prime (p)$. Alors $ex$ tient pour $Nat$ et la fonction qui envoie $p$ à la conjonction de la conjonction de $Lt$ appliqué à $n$ et $p$ et de $Leq$ appliqué à $p$ et $x$ et de $prime$ appliqué à $p$.",
    "output": "postulate not_not_bertrand_to_bertrand1 : (n : Nat) -> (_ : not (not_bertrand n)) -> (x : Nat) -> (__1 : Leq n x) -> (__2 : Leq x (times 2 n)) -> (__3 : (p : Nat) -> (__3 : Lt x p) -> (__4 : Leq p (times 2 n)) -> not (prime p)) -> ex Nat (\\ p : Nat -> and (and (Lt n p) (Leq p x)) (prime p))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_rect_CProp3_body. Soit $_n , _m , _q , _r \\in N$. Soit $Q_$ une fonction des éléments $_x_845$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions. Alors pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_847$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_846$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_847 , x_846)$, pour tous les éléments $x_845$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_845$.",
    "output": "postulate div_mod_spec_rect_CProp3_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_845 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_847 : Lt _r _m) -> (x_846 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_847 x_846)) -> (x_845 : div_mod_spec _n _m _q _r) -> Q_ x_845"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15691. Låt $m , n , a , b \\in N$. Då om $0$ är mindre än $n$, så om $0$ är mindre än $m$, så om det största gemensama delaret av $n$ och $m$ är lika med $1$, så för alla naturliga tal $c$, för alla element $_clearme$ av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$, för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.",
    "output": "postulate let_clause_15691 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "SameF_upto_le. Let $A$ be a set. Let $f$ and $g$ be functions from natural numbers to elements of $A$. Let $n$ and $m$ be natural numbers. Assume that $n \\leq m$. Let $__1$ be an element of $sameF_upto$ of $m$ and $A$ and $f$ and $g$. Then $sameF_upto$ holds for $n$ and $A$ and $f$ and $g$.",
    "output": "postulate sameF_upto_le : (A : Set) -> (f : (_ : Nat) -> A) -> (g : (_ : Nat) -> A) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> (__1 : sameF_upto m A f g) -> sameF_upto n A f g"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_exp1. Soient $n$ et $m$ et $p$ des nombres naturels. Alors si $0 < p$, alors si $n < m$, alors $n ^ p < m ^ p$.",
    "output": "postulate lt_exp1 : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt n m) -> Lt (pow n p) (pow m p)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_inv_rect_Type0. For all sets $x1$, for all elements $x2$ of $x1$, for all elements $Hterm$ of $Dop$ of $x1$ and $x2$, for all functions $P$ from elements $_z1728$ of $Dop$ of $x1$ and $x2$ to sets, for all functions $_H1$ from elements $sum$ of $ACop$ of $x1$ and $x2$ and functions $prod$ from elements of $x1$ and elements $__1$ of $x1$ to elements of $x1$ and functions $_null$ from elements $a$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $x2$ and $x2$ and functions $_distr$ from elements $a$ of $x1$ and elements $b$ of $x1$ and elements $c$ of $x1$ to elements of $Eq$ of $prod$ applied to $a$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $b$ and $c$ and $aop__o__op$ applied to $x1$ and $x2$ and $sum$ and $prod$ applied to $a$ and $b$ and $prod$ applied to $a$ and $c$ and elements $_z1729$ of $Eq$ of $Hterm$ and $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$ to elements of $P$ of $mk_Dop$ applied to $x1$ and $x2$ and $sum$ and $prod$ and $_null$ and $_distr$, $P$ holds for $Hterm$.",
    "output": "postulate Dop_inv_rect_Type0 : (x1 : Set) -> (x2 : x1) -> (Hterm : Dop x1 x2) -> (P : (_z1728 : Dop x1 x2) -> Set) -> (_H1 : (sum : ACop x1 x2) -> (prod : (_ : x1) -> (__1 : x1) -> x1) -> (_null : (a : x1) -> Eq (prod a x2) x2) -> (_distr : (a : x1) -> (b : x1) -> (c : x1) -> Eq (prod a (aop__o__op x1 x2 sum b c)) (aop__o__op x1 x2 sum (prod a b) (prod a c))) -> (_z1729 : Eq Hterm (mk_Dop x1 x2 sum prod _null _distr)) -> P (mk_Dop x1 x2 sum prod _null _distr)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bertrand. For all natural numbers $n$, if $0 < n$, then $bertrand$ holds for $n$.",
    "output": "postulate bertrand : (n : Nat) -> (_ : Lt 0 n) -> bertrand n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1569. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$. Då är skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$ lika med $1$.",
    "output": "postulate let_clause_1569 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1575. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that $c n - d m = 1$ or $d m - c n = 1$. Assume that $c n - d m = 1$. Let $x1029$ be a natural number. Then $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Permut_n_to_le. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soient $k$ et $n$ des nombres naturels. Supposons que $k \\leq n$. Alors pour tous les éléments $__1$ de $permut$ de $h$ et de $n$, pour toutes les fonctions $__2$ des nombres naturels $m$ et des éléments $__2$ de $Lt$ de $m$ et de $k$ à des éléments de $Eq$ de $h (m)$ et de $m$, pour tous les nombres naturels $j$, si $k \\leq j$, alors si $j \\leq n$, alors $k \\leq h (j)$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_exists. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Då om $m < n$ och $f (m)= true$, så för alla funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, $max (n , f)= m$.",
    "output": "postulate max_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> Eq (max n f) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Null. Låt $A$ vara en mängd. Låt $nil$ vara ett element av $A$. Då för alla element $xxx$ av $Dop$ av $A$ och $nil$, för alla element $a$ av $A$, är $prod$ applicerat på $A$ och $nil$ och $xxx$ och $a$ och $nil$ lika med $nil$.",
    "output": "postulate null : (A : Set) -> (nil : A) -> (xxx : Dop A nil) -> (a : A) -> Eq (prod A nil xxx a nil) nil"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_pi_p_M. Soit $m \\in N$. Alors $bigop$ appliqué à la somme du produit de $2$ et de $m$ et de $2$ et la fonction qui envoie $p$ à $andb$ appliqué à $leb$ appliqué à la somme de $m$ et de $2$ et $p$ et $primeb$ appliqué à $p$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $p$ à $p$ est divisible par $M (m)$.",
    "output": "postulate divides_pi_p_M : (m : Nat) -> divisible (bigop (plus (times 2 m) 2) (\\ p : Nat -> andb (leb (plus m 2) p) (primeb p)) Nat 1 times (\\ p : Nat -> p)) (M m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1544. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soit $m , n \\in N$. Supposons que $0$ est inférieur à $n$. Supposons que $n$ est inférieur ou ágal à $m$. Supposons que $n$ est inférieur ou ágal à la somme de $q$ et de $1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ ou la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Alors si la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$, alors la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $n$ et de $b$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_Psi_BPsi. Let $n \\in N$. Then $Psi$ applied to the product of $2$ and $n$ is less than or equal to the product of $B$ applied to the product of $2$ and $n$ and $Psi$ applied to $n$.",
    "output": "postulate le_Psi_BPsi : (n : Nat) -> Leq (Psi (times 2 n)) (times (B (times 2 n)) (Psi n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Decidable_lt. Soient $n$ et $m$ des nombres naturels. Alors $decidable$ tient pour $Lt$ appliqué à $n$ et $m$.",
    "output": "postulate decidable_lt : (n : Nat) -> (m : Nat) -> decidable (Lt n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1595. Soient $p$ et $n$ et $m$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est et égal au diviseur commun plus grand de $p$ et de $n$ et égal au diviseur commun plus grand de $p$ et de $m$. Supposons que le diviseur commun plus grand de $p$ et du produit de $n$ et de $m$ est inférieur à $1$ et $smallest_factor$ appliqué à le diviseur commun plus grand de $p$ et du produit de $n$ et de $m$ est divisible par $m$. Alors le diviseur commun plus grand de $p$ et de $m$ est égal au diviseur commun plus grand de $p$ et de $n$.",
    "output": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_rect_Type4_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_945$ av $Dop$ av $A$ och $_nil$ till element av $Type4$. Låt $_H_mk_Dop$ vara en funktion från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $_nil$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod$ applicerat på $a$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $b$ och $c$ och $aop__o__op$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ applicerat på $a$ och $b$ och $prod$ applicerat på $a$ och $c$ till element av $Q_$ av $mk_Dop$ applicerat på $A$ och $_nil$ och $sum$ och $prod$ och $_null$ och $_distr$. Då för alla element $x_945$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_945$.",
    "output": "postulate Dop_rect_Type4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_945 : Dop A _nil) -> Type4) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_945 : Dop A _nil) -> Q_ x_945"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_Type3_body. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_921$ of $range$ of $_A$ to elements of $Type3$. Then for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range (_A , _enum , _upto , _filter)$, for all elements $x_921$ of $range$ of $_A$, $Q_$ holds for $x_921$.",
    "output": "postulate range_rect_Type3_body : (_A : Set) -> (Q_ : (_x_921 : range _A) -> Type3) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_921 : range _A) -> Q_ x_921"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_times_div_m_m. Soit $n , m \\in N$. Supposons que $0$ est inférieur à $m$. Alors le produit du quotient de $n$ et de $m$ et de $m$ est inférieur ou ágal à $n$.",
    "output": "postulate le_times_div_m_m : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> Leq (times (div n m) m) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lstar_ind_body. Låt $B$ vara en mängd. Låt $_R$ vara ett element av $relation$ av $B$. Låt $Q_$ vara en funktion från naturliga tal $x_1233$ och element $x_1232$ av $B$ och element $x_1231$ av $B$ och element $_x_1234$ av $lstar$ av $B$ och $_R$ och $x_1233$ och $x_1232$ och $x_1231$ till påståenden. Då för alla funktioner $_H_lstar_O$ från element $b$ av $B$ till element av $Q_$ av $0$ och $b$ och $b$ och $lstar_O (B , _R , b)$, för alla funktioner $_H_lstar_S$ från element $b1$ av $B$ och element $b$ av $B$ och element $x_1236$ av $_R$ av $b1$ och $b$ och naturliga tal $l$ och element $b2$ av $B$ och element $x_1235$ av $lstar$ av $B$ och $_R$ och $l$ och $b$ och $b2$ och element $_x_1238$ av $Q_$ av $l$ och $b$ och $b2$ och $x_1235$ till element av $Q_$ av $l + 1$ och $b1$ och $b2$ och $lstar_S (B , _R , b1 , b , x_1236 , l , b2 , x_1235)$, för alla naturliga tal $x_1233$, för alla element $x_1232$ och $x_1231$ av $B$, för alla element $x_1234$ av $lstar$ av $B$ och $_R$ och $x_1233$ och $x_1232$ och $x_1231$, håller $Q_$ för $x_1233$ och $x_1232$ och $x_1231$ och $x_1234$.",
    "output": "postulate lstar_ind_body : (B : Set) -> (_R : relation B) -> (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) -> (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) -> (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (plus l 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) -> (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Q_ x_1233 x_1232 x_1231 x_1234"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_inv_ind. For all natural numbers $x1$ and $x2$ and $x3$ and $x4$, for all elements $Hterm$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$, for all functions $P$ from elements $_z1434$ of $div_mod_spec$ of $x1$ and $x2$ and $x3$ and $x4$ to propositions, for all functions $_H1$ from elements $x_811$ of $Lt$ of $x4$ and $x2$ and elements $x_810$ of $Eq$ of $x1$ and $x3 x2 + x4$ and elements $_z1435$ of $Eq$ of $Hterm$ and $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_811 , x_810)$ to elements of $P$ of $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_811 , x_810)$, $P$ holds for $Hterm$.",
    "output": "postulate div_mod_spec_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1434 : div_mod_spec x1 x2 x3 x4) -> Prop) -> (_H1 : (x_811 : Lt x4 x2) -> (x_810 : Eq x1 (plus (times x3 x2) x4)) -> (_z1435 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_811 x_810)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1047. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Då för alla mängder $B$, för alla element $nil$ av $B$, för alla funktioner $op$ från element av $B$ och element $__1$ av $B$ till element av $B$, för alla funktioner $f$ från naturliga tal till element av $B$, om $n$ är mindre än eller lika med $k$, så för alla naturliga tal $j$, om $n$ är mindre än eller lika med $j$, så för alla funktioner $Hind$ från funktioner från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och $j$ till element av $Eq$ av $p$ applicerat på $i$ och kontradiktion till element av $Eq$ av $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ och $bigop$ applicerat på $j$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$, för alla funktioner $Hfalse$ från naturliga tal $i$ och element av $Leq$ av $n$ och $i$ och element $__1$ av $Lt$ av $i$ och summan av $j$ och $1$ till element av $Eq$ av $p$ applicerat på $i$ och kontradiktion, för alla naturliga tal $x2571$ och $x2572$, är $x2571$ lika med summan av produkten av $x2572$ och kvoten av $x2571$ och $x2572$ och $mod$ applicerat på $x2571$ och $x2572$.",
    "output": "postulate let_clause_1047 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (lenk : Leq n k) -> (j : Nat) -> (leup : Leq n j) -> (Hind : (_ : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i j) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop j (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))) -> (Hfalse : (i : Nat) -> (_ : Leq n i) -> (__1 : Lt i (plus j 1)) -> Eq (p i) false) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bijn_transpose_l. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soient $n$ et $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$ et $j \\leq n$. Soit $__2$ un élément de $bijn$ de $f$ et de $n$. Alors $bijn$ tient pour la fonction qui envoie $p$ à $transpose (i , j , f (p))$ et $n$.",
    "output": "postulate bijn_transpose_l : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (i : Nat) -> (j : Nat) -> (_ : Leq i n) -> (__1 : Leq j n) -> (__2 : bijn f n) -> bijn (\\ p : Nat -> transpose i j (f p)) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Aop_rect_Type4_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_863$ av $Aop$ av $A$ och $_nil$ till element av $Type4$. Låt $_H_mk_Aop$ vara en funktion från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op (_nil , a)$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op (a , _nil)$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op (a , op (b , c))$ och $op (op (a , b), c)$ till element av $Q_$ av $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Låt $x_863$ vara ett element av $Aop$ av $A$ och $_nil$. Då håller $Q_$ för $x_863$.",
    "output": "postulate Aop_rect_Type4_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_863 : Aop A _nil) -> Type4) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_863 : Aop A _nil) -> Q_ x_863"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Alors si $b m - a p = 1$, alors $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Pi_p_primeb1. Låt $n$ vara ett naturligt tal. Anta att $0 < n$. Då är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som $bigop$ applicerat på logaritmen av $p$ och $n$ och funktionen som avbildar $i$ som $dividesb$ applicerat på potensen av $p$ och summan av $i$ och $1$ och $n$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $i$ som $p$ lika med $n$.",
    "output": "postulate pi_p_primeb1 : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> bigop (log p n) (\\ i : Nat -> dividesb (pow p (plus i 1)) n) Nat 1 times (\\ i : Nat -> p)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Permut_mod. Let $p$ and $a$ be natural numbers. Then if $p$ is prime, then if $p$ is not divisible by $a$, then $permut$ holds for the function that maps $n$ to $mod (a n , p)$ and $pred (p)$.",
    "output": "postulate permut_mod : (p : Nat) -> (a : Nat) -> (_ : prime p) -> (__1 : not (divisible p a)) -> permut (\\ n : Nat -> mod (times a n) p) (pred p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_spec_inv_ind. Låt $x1$ vara ett naturligt tal. Låt $x2$ vara en funktion från naturliga tal till sanningsvärden. Låt $x3 \\in N$. Låt $_Hterm$ vara ett element av $max_spec$ av $x1$ och $x2$ och $x3$. Då för alla funktioner $P$ från naturliga tal $_z1769$ till påståenden, för alla funktioner $_H1$ från naturliga tal $m$ och element $_x_975$ av $Lt$ av $m$ och $x1$ och element $_x_974$ av $Eq$ av $x2 (m)$ och $true$ och funktioner $_x_973$ från naturliga tal $i$ och element av $Lt$ av $m$ och $i$ och element $__1$ av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2 (i)$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $m$ till element av $P$ av $m$, för alla funktioner $_H2$ från funktioner $_x_976$ från naturliga tal $i$ och element av $Lt$ av $i$ och $x1$ till element av $Eq$ av $x2 (i)$ och kontradiktion och element $_z1770$ av $Eq$ av $x3$ och $0$ till element av $P$ av $0$, håller $P$ för $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Increasing_to_le. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $__$ vara ett element av $increasing$ av $f$. Låt $m \\in N$. Då håller $ex$ för $Nat$ och funktionen som avbildar $i$ som $Leq$ applicerat på $m$ och $f$ applicerat på $i$.",
    "output": "postulate increasing_to_le : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (m : Nat) -> ex Nat (\\ i : Nat -> Leq m (f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_exp_to_lt1. För alla naturliga tal $a$ och $n$ och $m$, om $0$ är mindre än $a$, så om potensen av $n$ och $a$ är mindre än potensen av $m$ och $a$, så är $n$ mindre än $m$.",
    "output": "postulate lt_exp_to_lt1 : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 a) -> (__1 : Lt (pow n a) (pow m a)) -> Lt n m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Primes_below_to_bertrand. Let $pm \\in N$. Let $l$ be a list of natural numbers. Assume that $pm$ is prime. Let $__1$ be an element of $primes_below$ of $l$ and the sum of $pm$ and $1$. Let $__2$ be a function from natural numbers $p$ and elements $__2$ of $mem$ of $Nat$ and $p$ and $l$ and elements $__3$ of $Lt$ of $2$ and $p$ to elements of $ex$ of $Nat$ and the function that maps $pp$ to the conjunction of the conjunction of $mem$ applied to $Nat$ and $pp$ and $l$ and $Lt$ applied to $pp$ and $p$ and $Leq$ applied to $p$ and the product of $2$ and $pp$. Let $n$ be a natural number. Assume that $0$ is less than $n$. Assume that $n$ is less than $pm$. Then $bertrand$ holds for $n$.",
    "output": "postulate primes_below_to_bertrand : (pm : Nat) -> (l : list Nat) -> (_ : prime pm) -> (__1 : primes_below l (plus pm 1)) -> (__2 : (p : Nat) -> (__2 : mem Nat p l) -> (__3 : Lt 2 p) -> ex Nat (\\ pp : Nat -> and (and (mem Nat pp l) (Lt pp p)) (Leq p (times 2 pp)))) -> (n : Nat) -> (__3 : Lt 0 n) -> (__4 : Lt n pm) -> bertrand n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_inv_rect_Type1. Soit $x1$ un ensemble. Soit $x2$ un élément de $x1$. Soit $Hterm$ un élément de $ACop$ de $x1$ et de $x2$. Soit $P$ une fonction des éléments $_z1590$ de $ACop$ de $x1$ et de $x2$ à des éléments de $Type1$. Soit $_H1$ une fonction des éléments $aop$ de $Aop$ de $x1$ et de $x2$ et des fonctions $_comm$ des éléments $a$ de $x1$ et des éléments $b$ de $x1$ à des éléments de $Eq$ de $op (x1 , x2 , aop , a , b)$ et de $op (x1 , x2 , aop , b , a)$ et des éléments $_z1591$ de $Eq$ de $Hterm$ et de $mk_ACop (x1 , x2 , aop , _comm)$ à des éléments de $P$ de $mk_ACop (x1 , x2 , aop , _comm)$. Alors $P$ tient pour $Hterm$.",
    "output": "postulate ACop_inv_rect_Type1 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1590 : ACop x1 x2) -> Type1) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1591 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10331. För alla naturliga tal $n$, om $2 ^ 8 \\leq n$, så för alla naturliga tal $m$, om $3 \\leq m$ och $\\log_ 2 {m}+ 2 \\leq m$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (len : Leq (pow 2 8) n) -> (m : Nat) -> (lt2m : Leq 3 m) -> (Hind : Leq (plus (log 2 m) 2) m) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_n_fn. Let $f$ be a function from natural numbers to natural numbers. Let $__$ be an element of $increasing$ of $f$. Let $n$ be a natural number. Then $n \\leq f (n)$.",
    "output": "postulate le_n_fn : (f : (_ : Nat) -> Nat) -> (_ : increasing f) -> (n : Nat) -> Leq n (f n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_div. Let $n$ and $d$ be natural numbers. Assume that $0 < n$. Assume that $d$ is divisible by $n$. Then $n \\div (n \\div d)= d$.",
    "output": "postulate div_div : (n : Nat) -> (d : Nat) -> (_ : Lt 0 n) -> (__1 : divisible d n) -> Eq (div n (div n d)) d"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bertrand_down. Soit $n \\in N$. Supposons que $0 < n$. Alors si $n \\leq 2 ^ 8$, alors $bertrand$ tient pour $n$.",
    "output": "postulate bertrand_down : (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n (pow 2 8)) -> bertrand n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Ltn_to_ltO. Let $n$ and $m$ be natural numbers. Then if $n < m$, then $0 < m$.",
    "output": "postulate ltn_to_ltO : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> Lt 0 m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_Type0. Låt $_n$ och $_m$ och $_q$ och $_r$ vara naturliga tal. Låt $Q_$ vara en funktion från element $_x_833$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till mängder. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_835$ av $Lt$ av $_r$ och $_m$ och element $x_834$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_835$ och $x_834$. Då för alla element $x_833$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_833$.",
    "output": "postulate div_mod_spec_rect_Type0 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_833 : div_mod_spec _n _m _q _r) -> Set) -> (_H_div_mod_spec_intro : (x_835 : Lt _r _m) -> (x_834 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_835 x_834)) -> (x_833 : div_mod_spec _n _m _q _r) -> Q_ x_833"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a$ un nombre naturel. Alors si $a \\leq n$ et $f (a)= i$, alors si $a \\leq n$, alors si $f (a)= i$, alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$, alors si $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10331. Soit $n$ un nombre naturel. Supposons que $5 < n$. Soit $m \\in N$. Supposons que $6 \\leq m$ et $(m + 1)^ 2 \\leq 2 ^ m$. Soit $a$ un nombre naturel. Alors si $6 \\leq a$ et $2 (a + 1)+ 1 \\leq 2 ^ a$, alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_CProp1. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_965$ of $Dop$ of $A$ and $_nil$ to propositions. Let $_H_mk_Dop$ be a function from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$. Then for all elements $x_965$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_965$.",
    "output": "postulate Dop_rect_CProp1 : (A : Set) -> (_nil : A) -> (Q_ : (_x_965 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_965 : Dop A _nil) -> Q_ x_965"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16171. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$. Assume that $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c \\in N$. Assume that $m n = p c$. Let $a$ be a natural number. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b \\in N$. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Assume that the greatest common divisor of $p$ and $m$ is equal to $b m - a p$. Then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1617. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Alors pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_to_ord. Let $p$ and $n$ and $m$ be natural numbers. Assume that $0 < n$. Assume that $0 < m$. Assume that $p$ is prime. Assume that $n$ is divisible by $m$. Then $ord_rem (n , p)$ is divisible by $ord_rem (m , p)$ and $ord (n , p)\\leq ord (m , p)$.",
    "output": "postulate divides_to_ord : (p : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : prime p) -> (__3 : divisible n m) -> and (divisible (ord_rem n p) (ord_rem m p)) (Leq (ord n p) (ord m p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1544. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m , n \\in N$. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a \\in N$. Then for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$, for all natural numbers $b$, if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, then if $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$, then $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_sumI. Soit $a , b , c \\in N$. Alors pour toutes les fonctions $p$ des nombres naturels à des valeurs booléennes, pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $a \\leq b$ et $b \\leq c$, alors $op$ appliqué à $B$ et $nil$ et $op$ et $bigop$ appliqué à la différence de $c$ et de $b$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $b$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $b$ et $bigop$ appliqué à la différence de $b$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ est égal à $bigop$ appliqué à la différence de $c$ et de $a$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $p$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à la fonction qui envoie $i0$ à $f$ appliqué à $i0$ appliqué à la somme de $i$ et de $a$.",
    "output": "postulate bigop_sumI : (a : Nat) -> (b : Nat) -> (c : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (_ : Leq a b) -> (__1 : Leq b c) -> Eq (bigop (minus c a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))) (op B nil op (bigop (minus c b) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i b)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i b))) (bigop (minus b a) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i a)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i a))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Not_bertrand_to_le1. Soit $n$ un nombre naturel. Supposons que la puissance de $2$ et de $7$ est inférieure ou ágale à $n$. Alors pour tous les éléments $__1$ de $not_bertrand$ de $n$, la puissance de $2$ et du quotient du produit de $2$ et de $n$ et de $3$ est inférieure ou ágale à la puissance du produit de $2$ et de $n$ et du quotient de la racine carrée du produit de $2$ et de $n$ et de $2$.",
    "output": "postulate not_bertrand_to_le1 : (n : Nat) -> (_ : Leq (pow 2 7) n) -> (__1 : not_bertrand n) -> Leq (pow 2 (div (times 2 n) 3)) (pow (times 2 n) (div (sqrt (times 2 n)) 2))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_ind_body. Let $_n$ be a natural number. Let $Q_$ be a function from natural numbers $x_417$ and elements $_x_418$ of $Leq$ of $_n$ and $x_417$ to propositions. Let $_H_le_n$ be an element of $Q_$ of $_n$ and $le_n (_n)$. Then for all functions $_H_le_S$ from natural numbers $m$ and elements $x_419$ of $Leq$ of $_n$ and $m$ and elements $_x_421$ of $Q_$ of $m$ and $x_419$ to elements of $Q_$ of $m + 1$ and $le_S (_n , m , x_419)$, for all natural numbers $x_417$, if $_n \\leq x_417$, then $Q_$ holds for $x_417$ and $x_418$.",
    "output": "postulate le_ind_body : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_sum. Let $k1 , k2 \\in N$. Let $p1$ and $p2$ be functions from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $Aop$ of $B$ and $nil$. Then for all functions $f$ and $g$ from natural numbers to elements of $B$, $bigop$ applied to the sum of $k1$ and $k2$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $bool$ and $p1$ applied to the difference of $i$ and $k2$ and $p2$ applied to $i$ and $leb$ applied to $k2$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $match_bool$ applied to $Set$ and the function that maps $__$ to $B$ and $f$ applied to the difference of $i$ and $k2$ and $g$ applied to $i$ and $leb$ applied to $k2$ and $i$ is equal to $op$ applied to $B$ and $nil$ and $op$ and $bigop$ applied to $k1$ and the function that maps $i$ to $p1$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ and $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $g$ applied to $i$.",
    "output": "postulate bigop_sum : (k1 : Nat) -> (k2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> (g : (_ : Nat) -> B) -> Eq (op B nil op (bigop k1 (\\ i : Nat -> p1 i) B nil (op B nil op) (\\ i : Nat -> f i)) (bigop k2 (\\ i : Nat -> p2 i) B nil (op B nil op) (\\ i : Nat -> g i))) (bigop (plus k1 k2) (\\ i : Nat -> match_bool Set (\\ _ : bool -> bool) (p1 (minus i k2)) (p2 i) (leb k2 i)) B nil (op B nil op) (\\ i : Nat -> match_bool Set (\\ _ : bool -> B) (f (minus i k2)) (g i) (leb k2 i)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Gcd_1_to_lt_O. Let $i , n \\in N$. Assume that $1 < n$ and $1$ is equal to the greatest common divisor of $i$ and $n$. Then $0 < i$.",
    "output": "postulate gcd_1_to_lt_O : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (gcd i n) 1) -> Lt 0 i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_spec_inv_ind. Let $x1$ and $x2$ be natural numbers. Let $x3$ be a function from natural numbers to booleans. Let $x4$ be a natural number. Let $_Hterm$ be an element of $min_spec$ of $x1$ and $x2$ and $x3$ and $x4$. Let $P$ be a function from natural numbers $_z1890$ to propositions. Let $_H1$ be a function from natural numbers $m$ and elements $_x_1080$ of $Leq$ of $x2$ and $m$ and elements $_x_1079$ of $Lt$ of $m$ and the sum of $x1$ and $x2$ and elements $_x_1078$ of $Eq$ of $x3$ applied to $m$ and $true$ and functions $_x_1077$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and $m$ to elements of $Eq$ of $x3$ applied to $i$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and $m$ to elements of $P$ of $m$. Then for all functions $_H2$ from functions $_x_1081$ from natural numbers $i$ and elements of $Leq$ of $x2$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $x1$ and $x2$ to elements of $Eq$ of $x3$ applied to $i$ and absurdity and elements $_z1891$ of $Eq$ of $x4$ and the sum of $x1$ and $x2$ to elements of $P$ of the sum of $x1$ and $x2$, $P$ holds for $x4$.",
    "output": "postulate min_spec_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (x3 : (_ : Nat) -> bool) -> (x4 : Nat) -> (_Hterm : min_spec x1 x2 x3 x4) -> (P : (_z1890 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_1080 : Leq x2 m) -> (_x_1079 : Lt m (plus x1 x2)) -> (_x_1078 : Eq (x3 m) true) -> (_x_1077 : (i : Nat) -> (_ : Leq x2 i) -> (__1 : Lt i m) -> Eq (x3 i) false) -> (_z1891 : Eq x4 m) -> P m) -> (_H2 : (_x_1081 : (i : Nat) -> (_ : Leq x2 i) -> (__1 : Lt i (plus x1 x2)) -> Eq (x3 i) false) -> (_z1891 : Eq x4 (plus x1 x2)) -> P (plus x1 x2)) -> P x4"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Min_exists. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soient $t$ et $m$ des nombres naturels. Supposons que $m < t$. Supposons que $f (m)= true$. Alors pour tous les nombres naturels $k$ et $b$, si $b \\leq m$, alors pour toutes les fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $f (i)$ et de contradiction, si $t = k + b$, alors $min (k , b , f)= m$.",
    "output": "postulate min_exists : (f : (_ : Nat) -> bool) -> (t : Nat) -> (m : Nat) -> (_ : Lt m t) -> (__1 : Eq (f m) true) -> (k : Nat) -> (b : Nat) -> (__2 : Leq b m) -> (__3 : (i : Nat) -> (__3 : Leq b i) -> (__4 : Lt i m) -> Eq (f i) false) -> (__4 : Eq t (plus k b)) -> Eq (min k b f) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_plus. Låt $n1 , n2 , m1 , m2 \\in N$. Anta att $n1$ är mindre än eller lika med $n2$. Då om $m1$ är mindre än eller lika med $m2$, så är summan av $n1$ och $m1$ mindre än eller lika med summan av $n2$ och $m2$.",
    "output": "postulate le_plus : (n1 : Nat) -> (n2 : Nat) -> (m1 : Nat) -> (m2 : Nat) -> (_ : Leq n1 n2) -> (__1 : Leq m1 m2) -> Leq (plus n1 m1) (plus n2 m2)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_inv_ind. Soit $x1$ un ensemble. Soit $x2$ un élément de $relation$ de $x1$. Soit $x3$ un nombre naturel. Soient $x4$ et $x5$ des éléments de $x1$. Alors pour tous les éléments $_Hterm$ de $lstar$ de $x1$ et de $x2$ et de $x3$ et de $x4$ et de $x5$, pour toutes les fonctions $P$ des nombres naturels $_z2089$ et des éléments $_z2088$ de $x1$ et des éléments $_z2087$ de $x1$ à des propositions, pour toutes les fonctions $_H1$ des éléments $b$ de $x1$ et des éléments $_z2092$ de $Eq$ de $x3$ et de $0$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b$ à des éléments de $P$ de $0$ et de $b$ et de $b$, pour toutes les fonctions $_H2$ des éléments $b1$ de $x1$ et des éléments $b$ de $x1$ et des éléments $_x_1236$ de $x2$ de $b1$ et de $b$ et des nombres naturels $l$ et des éléments $b2$ de $x1$ et des éléments $_x_1235$ de $lstar$ de $x1$ et de $x2$ et de $l$ et de $b$ et de $b2$ et des fonctions $_x_1238$ des éléments $_z2092$ de $Eq$ de $x3$ et de $l$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b2$ à des éléments de $P$ de $l$ et de $b$ et de $b2$ et des éléments $_z2092$ de $Eq$ de $x3$ et de la somme de $l$ et de $1$ et des éléments $_z2091$ de $Eq$ de $x4$ et de $b1$ et des éléments $_z2090$ de $Eq$ de $x5$ et de $b2$ à des éléments de $P$ de la somme de $l$ et de $1$ et de $b1$ et de $b2$, $P$ tient pour $x3$ et $x4$ et $x5$.",
    "output": "postulate lstar_inv_ind : (x1 : Set) -> (x2 : relation x1) -> (x3 : Nat) -> (x4 : x1) -> (x5 : x1) -> (_Hterm : lstar x1 x2 x3 x4 x5) -> (P : (_z2089 : Nat) -> (_z2088 : x1) -> (_z2087 : x1) -> Prop) -> (_H1 : (b : x1) -> (_z2092 : Eq x3 0) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b) -> P 0 b b) -> (_H2 : (b1 : x1) -> (b : x1) -> (_x_1236 : x2 b1 b) -> (l : Nat) -> (b2 : x1) -> (_x_1235 : lstar x1 x2 l b b2) -> (_x_1238 : (_z2092 : Eq x3 l) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b2) -> P l b b2) -> (_z2092 : Eq x3 (plus l 1)) -> (_z2091 : Eq x4 b1) -> (_z2090 : Eq x5 b2) -> P (plus l 1) b1 b2) -> P x3 x4 x5"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Start_lprim. Låt $n$ och $m$ och $a$ vara naturliga tal. Då för alla listor $acc$ av naturliga tal, $option_hd (Nat , lprim (n , m , cons (Nat , a , acc)))= Some (Nat , a)$.",
    "output": "postulate start_lprim : (n : Nat) -> (m : Nat) -> (a : Nat) -> (acc : list Nat) -> Eq (option_hd Nat (lprim n m (cons Nat a acc))) (Some Nat a)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_to_le_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $n , m \\in N$. Anta att $n$ är mindre än eller lika med $m$. Låt $b$ vara ett naturligt tal. Då är $min$ applicerat på $n$ och $b$ och $f$ mindre än eller lika med $min$ applicerat på $m$ och $b$ och $f$.",
    "output": "postulate le_to_le_min : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> (b : Nat) -> Leq (min n b f) (min m b f)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_S. Let $n$ and $m$ be natural numbers. Then if $0 < m$ and $mod (n , m)+ 1 < m$, then $mod (n + 1 , m)= mod (n , m)+ 1$.",
    "output": "postulate mod_S : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt (plus (mod n m) 1) m) -> Eq (mod (plus n 1) m) (plus (mod n m) 1)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15621. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that $c n - d m = 1$ or $d m - c n = 1$. Then if $c n - d m = 1$, then $n c - m d = 1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Dop_rect_CProp3. Låt $A$ vara en mängd. Då för alla element $_nil$ av $A$, för alla funktioner $Q_$ från element $_x_961$ av $Dop$ av $A$ och $_nil$ till påståenden, för alla funktioner $_H_mk_Dop$ från element $sum$ av $ACop$ av $A$ och $_nil$ och funktioner $prod$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_null$ från element $a$ av $A$ till element av $Eq$ av $prod (a , _nil)$ och $_nil$ och funktioner $_distr$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $prod (a , aop__o__op (A , _nil , sum , b , c))$ och $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ till element av $Q_$ av $mk_Dop (A , _nil , sum , prod , _null , _distr)$, för alla element $x_961$ av $Dop$ av $A$ och $_nil$, håller $Q_$ för $x_961$.",
    "output": "postulate Dop_rect_CProp3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_961 : Dop A _nil) -> Prop) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_961 : Dop A _nil) -> Q_ x_961"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_to_max. Let $f$ be a function from natural numbers to booleans. Let $n , m \\in N$. Let $__$ be an element of $max_spec$ of $n$ and $f$ and $m$. Then $max$ applied to $n$ and $f$ is equal to $m$.",
    "output": "postulate max_spec_to_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : max_spec n f m) -> Eq (max n f) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Pad_bigop1. Låt $k , n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Då för alla mängder $B$, för alla element $nil$ av $B$, för alla funktioner $op$ från element av $B$ och element $__1$ av $B$ till element av $B$, för alla funktioner $f$ från naturliga tal till element av $B$, om $n$ är mindre än eller lika med $k$, så för alla funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Leq$ av $n$ och $i$ och element $__2$ av $Lt$ av $i$ och $k$ till element av $Eq$ av $p$ applicerat på $i$ och kontradiktion, är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.",
    "output": "postulate pad_bigop1 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16001. Let $m , n , a , b \\in N$. Assume that $0 < n$. Assume that $0 < m$. Assume that $1$ is equal to the greatest common divisor of $n$ and $m$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then $n c - m d$ is equal to the greatest common divisor of $m$ and $n$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Strue. Soit $k$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$. Soit $f$ une fonction des nombres naturels à des éléments de $B$. Supposons que $p (k)= true$. Alors $op$ appliqué à $f$ appliqué à $k$ et $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_O_n_elim. Soit $n$ un nombre naturel. Supposons que $0 < n$. Soit $P$ une fonction des nombres naturels $__1$ à des propositions. Soit $__1$ une fonction des nombres naturels $m$ à des éléments de $P$ de $m + 1$. Alors $P$ tient pour $n$.",
    "output": "postulate lt_O_n_elim : (n : Nat) -> (_ : Lt 0 n) -> (P : (__1 : Nat) -> Prop) -> (__1 : (m : Nat) -> P (plus m 1)) -> P n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Congruent_n_mod_times. För alla naturliga tal $n$ och $m$ och $p$, om $0 < p$ och $0 < m$, så håller $congruent$ för $n$ och $mod (n , m p)$ och $p$.",
    "output": "postulate congruent_n_mod_times : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Lt 0 p) -> (__1 : Lt 0 m) -> congruent n (mod n (times m p)) p"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_to_not_zero. Soient $n$ et $m$ des nombres naturels. Supposons que $n$ est inférieur à $m$. Alors $not_zero$ tient pour $m$.",
    "output": "postulate lt_to_not_zero : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> not_zero m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Pad_bigop1. Soient $k$ et $n$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $n \\leq k$, alors pour toutes les fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Leq$ de $n$ et de $i$ et des éléments $__2$ de $Lt$ de $i$ et de $k$ à des éléments de $Eq$ de $p (i)$ et de contradiction, $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate pad_bigop1 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_times_gcd_aux. För alla naturliga tal $p$ och $m$ och $n$ och $d$ och $c$, om $0 < c$, så om $0 < n$, så om $n \\leq m$, så om $n \\leq p$, så om $d$ är delbart med $c \\times m$, så om $d$ är delbart med $c \\times n$, så är $d$ delbart med $c \\times gcd_aux (p , m , n)$.",
    "output": "postulate divides_times_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (d : Nat) -> (c : Nat) -> (_ : Lt 0 c) -> (__1 : Lt 0 n) -> (__2 : Leq n m) -> (__3 : Leq n p) -> (__4 : divisible d (times c m)) -> (__5 : divisible d (times c n)) -> divisible d (times c (gcd_aux p m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16002. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_CProp3_body. Let $Q_$ be a function from natural numbers $_x_401$ to propositions. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_402$ and elements $_x_404$ of $Q_$ of $x_402$ to elements of $Q_$ of $x_402 + 1$. Let $x_401 \\in N$. Then $Q_$ holds for $x_401$.",
    "output": "postulate nat_rect_CProp3_body : (Q_ : (_x_401 : Nat) -> Prop) -> (_H_O : Q_ 0) -> (_H_S : (x_402 : Nat) -> (_x_404 : Q_ x_402) -> Q_ (plus x_402 1)) -> (x_401 : Nat) -> Q_ x_401"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soient $p$ et $n$ et $q$ et $r$ des nombres naturels. Supposons que $0 < p$. Supposons que $p$ n'est pas divisible par $r$. Supposons que $n = p ^ q r$. Soit $q0 , q1 \\in N$. Supposons que $q1 + 1 \\leq p ^ (q1 + 1)$. Soient $x2515$ et $x2516$ des nombres naturels. Alors $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_r_ind. Soit $B$ un ensemble. Soit $_R$ un élément de $relation$ de $B$. Soit $Q_$ une fonction des nombres naturels $x_1337$ et des éléments $x_1336$ de $B$ et des éléments $x_1335$ de $B$ et des éléments $_x_1338$ de $lstar_r$ de $B$ et de $_R$ et de $x_1337$ et de $x_1336$ et de $x_1335$ à des propositions. Soit $_H_lstar_r_O$ une fonction des éléments $b$ de $B$ à des éléments de $Q_$ de $0$ et de $b$ et de $b$ et de $lstar_r_O$ appliqué à $B$ et $_R$ et $b$. Soit $_H_lstar_r_S$ une fonction des nombres naturels $l$ et des éléments $b1$ de $B$ et des éléments $b$ de $B$ et des éléments $x_1340$ de $lstar_r$ de $B$ et de $_R$ et de $l$ et de $b1$ et de $b$ et des éléments $b2$ de $B$ et des éléments $x_1339$ de $_R$ de $b$ et de $b2$ et des éléments $_x_1342$ de $Q_$ de $l$ et de $b1$ et de $b$ et de $x_1340$ à des éléments de $Q_$ de la somme de $l$ et de $1$ et de $b1$ et de $b2$ et de $lstar_r_S$ appliqué à $B$ et $_R$ et $l$ et $b1$ et $b$ et $x_1340$ et $b2$ et $x_1339$. Soit $x_1337$ un nombre naturel. Alors pour tous les éléments $x_1336$ et $x_1335$ de $B$, pour tous les éléments $x_1338$ de $lstar_r$ de $B$ et de $_R$ et de $x_1337$ et de $x_1336$ et de $x_1335$, $Q_$ tient pour $x_1337$ et $x_1336$ et $x_1335$ et $x_1338$.",
    "output": "postulate lstar_r_ind : (B : Set) -> (_R : relation B) -> (Q_ : (x_1337 : Nat) -> (x_1336 : B) -> (x_1335 : B) -> (_x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Prop) -> (_H_lstar_r_O : (b : B) -> Q_ 0 b b (lstar_r_O B _R b)) -> (_H_lstar_r_S : (l : Nat) -> (b1 : B) -> (b : B) -> (x_1340 : lstar_r B _R l b1 b) -> (b2 : B) -> (x_1339 : _R b b2) -> (_x_1342 : Q_ l b1 b x_1340) -> Q_ (plus l 1) b1 b2 (lstar_r_S B _R l b1 b x_1340 b2 x_1339)) -> (x_1337 : Nat) -> (x_1336 : B) -> (x_1335 : B) -> (x_1338 : lstar_r B _R x_1337 x_1336 x_1335) -> Q_ x_1337 x_1336 x_1335 x_1338"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1033. Soit $n$ un nombre naturel. Supposons que $2 ^ 7 \\leq n$. Soit $p \\in N$. Supposons que $(\\sqrt{ 2 n})+ 1 \\leq p$. Supposons que $p < 2 n + 1$. Supposons que $leb (2 , k (2 n , p))= true$. Supposons que $2 n < p ^ 2$. Alors pour tous les nombres naturels $x2515$ et $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1575. Soit $m , n , a , b \\in N$. Supposons que $0 < n$. Supposons que $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Soit $d$ un nombre naturel. Supposons que $c n - d m = 1$ ou $d m - c n = 1$. Supposons que $c n - d m = 1$. Alors pour tous les nombres naturels $x1029$, $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Eq_div_div_div_div. Låt $n , m , q \\in N$. Då om $0 < n$, så om $0 < m$, så $q \\div n \\div m = q \\div m \\div n$.",
    "output": "postulate eq_div_div_div_div : (n : Nat) -> (m : Nat) -> (q : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> Eq (div (div q n) m) (div (div q m) n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1600. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Aop_rect_CProp5. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_877$ of $Aop$ of $A$ and $_nil$ to propositions, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op (_nil , a)$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op (a , _nil)$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ to elements of $Q_$ of $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, for all elements $x_877$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_877$.",
    "output": "postulate Aop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_877 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_877 : Aop A _nil) -> Q_ x_877"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Psi_def. För alla naturliga tal $n$, är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $primeb$ applicerat på $p$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som potensen av $p$ och logaritmen av $p$ och $n$ lika med $Psi (n)$.",
    "output": "postulate psi_def : (n : Nat) -> Eq (Psi n) (bigop (plus n 1) (\\ p : Nat -> primeb p) Nat 1 times (\\ p : Nat -> pow p (log p n)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_nth_prime_to_not_prime. Let $n$ and $m$ be natural numbers. Assume that $nth_prime (n)< m$. Then if $m < nth_prime (n + 1)$, then $m$ is not prime.",
    "output": "postulate lt_nth_prime_to_not_prime : (n : Nat) -> (m : Nat) -> (_ : Lt (nth_prime n) m) -> (__1 : Lt m (nth_prime (plus n 1))) -> not (prime m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b$ vara ett naturligt tal. Anta att $b \\leq n$ och $f (b)= j$ och $b \\leq n$. Anta att $f (b)= j$. Låt $__$ vara en funktion från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$. Låt $injf$ vara ett element av $injn$ av $f$ och $n$. Anta att $a = b$. Då $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_primr. Pour tous les nombres naturels $n$, si $1$ est inférieur à $n$, alors $prim$ appliqué à $n$ est inférieur ou ágal au quotient du produit de $2$ et de la différence du produit de $2$ et de $n$ et de $3$ et du logarithme de $2$ et de $n$.",
    "output": "postulate le_primr : (n : Nat) -> (_ : Lt 1 n) -> Leq (prim n) (div (times 2 (minus (times 2 n) 3)) (log 2 n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16003. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Då för alla naturliga tal $d$, om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$.",
    "output": "postulate let_clause_16003 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $p$ and $n$ and $q$ and $r$ be natural numbers. Assume that $0 < p$. Assume that $p$ is not divisible by $r$. Assume that $n = p ^ q r$. Let $q0$ and $q1$ be natural numbers. Assume that $q1 + 1 \\leq p ^ (q1 + 1)$. Then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_plus_a. Låt $a , n , m \\in N$. Anta att $n \\leq m$. Då $n \\leq a + m$.",
    "output": "postulate le_plus_a : (a : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq n m) -> Leq n (plus a m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Gcd_1_to_lt_n. Let $i$ and $n$ be natural numbers. Assume that $1$ is less than $n$. Then if $i$ is less than or equal to $n$, then if the greatest common divisor of $i$ and $n$ is equal to $1$, then $i$ is less than $n$.",
    "output": "postulate gcd_1_to_lt_n : (i : Nat) -> (n : Nat) -> (_ : Lt 1 n) -> (__1 : Leq i n) -> (__2 : Eq (gcd i n) 1) -> Lt i n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_ord_rem. Let $n$ and $m$ be natural numbers. Then if $n$ is prime and $0 < m$, then if $n$ is divisible by $m$, then $ord_rem (m , n)< m$.",
    "output": "postulate lt_ord_rem : (n : Nat) -> (m : Nat) -> (_ : prime n) -> (__1 : Lt 0 m) -> (__2 : divisible n m) -> Lt (ord_rem m n) m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_not_exists. Let $f$ be a function from natural numbers to booleans. Let $n$ and $b$ be natural numbers. Let $__$ be a function from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and absurdity. Then $min$ applied to $n$ and $b$ and $f$ is equal to the sum of $n$ and $b$.",
    "output": "postulate min_not_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) false) -> Eq (min n b f) (plus n b)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Filter_min_spec. Let $_n$ and $_b$ be natural numbers. Then for all functions $_f$ from natural numbers to booleans, for all natural numbers $__$, for all elements $return_sort$ of $Sort$, for all functions $return_type$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_sort$, for all functions $return$ from elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$ to elements of $return_type$ of $z$, for all elements $z$ of $min_spec$ of $_n$ and $_b$ and $_f$ and $__$, $return_type$ holds for $z$.",
    "output": "postulate filter_min_spec : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (_ : Nat) -> (return_sort : Sort) -> (return_type : (z : min_spec _n _b _f __) -> return_sort) -> (return : (z : min_spec _n _b _f __) -> return_type z) -> (z : min_spec _n _b _f __) -> return_type z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_Type2. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_951$ of $Dop$ of $A$ and $_nil$ to elements of $Type2$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_951$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_951$.",
    "output": "postulate Dop_rect_Type2 : (A : Set) -> (_nil : A) -> (Q_ : (_x_951 : Dop A _nil) -> Type2) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_951 : Dop A _nil) -> Q_ x_951"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "To_min. Let $i , n , m \\in N$. Assume that $i \\leq n$ and $i \\leq m$. Then $i \\leq min (n , m)$.",
    "output": "postulate to_min : (i : Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq i n) -> (__1 : Leq i m) -> Leq i (min n m)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_prod. Let $k1$ and $k2$ be natural numbers. Let $p1$ be a function from natural numbers to booleans. Let $p2$ be a function from natural numbers and natural numbers $__1$ to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Then for all elements $op$ of $Aop$ of $B$ and $nil$, for all functions $f$ from natural numbers and natural numbers $__1$ to elements of $B$, $bigop$ applied to the product of $k1$ and $k2$ and the function that maps $i$ to $andb$ applied to $p1$ applied to the quotient of $i$ and $k2$ and $p2$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to the quotient of $i$ and $k2$ and $mod$ applied to $i$ and $k2$ is equal to $bigop$ applied to $k1$ and the function that maps $x$ to $p1$ applied to $x$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $x$ to $bigop$ applied to $k2$ and the function that maps $i$ to $p2$ applied to $x$ and $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $x$ and $i$.",
    "output": "postulate bigop_prod : (k1 : Nat) -> (k2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> Eq (bigop k1 (\\ x : Nat -> p1 x) B nil (op B nil op) (\\ x : Nat -> bigop k2 (\\ i : Nat -> p2 x i) B nil (op B nil op) (\\ i : Nat -> f x i))) (bigop (times k1 k2) (\\ i : Nat -> andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (\\ i : Nat -> f (div i k2) (mod i k2)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Ab_times_cd. Soient $a$ et $b$ et $c$ et $d$ des nombres naturels. Alors $a b (c d)= a c (b d)$.",
    "output": "postulate ab_times_cd : (a : Nat) -> (b : Nat) -> (c : Nat) -> (d : Nat) -> Eq (times (times a b) (times c d)) (times (times a c) (times b d))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_priml1. Let $n$ be a natural number. Then if $0$ is less than $n$, then the difference of the quotient of the product of $2$ and $n$ and the sum of the logarithm of $2$ and $n$ and $2$ and $1$ is less than or equal to $prim$ applied to the product of $2$ and $n$.",
    "output": "postulate le_priml1 : (n : Nat) -> (_ : Lt 0 n) -> Leq (minus (div (times 2 n) (plus (log 2 n) 2)) 1) (prim (times 2 n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind_l. Let $B$ be a set. Let $R$ be a function from elements of $B$ and elements $__1$ of $B$ to propositions. Let $b2$ be an element of $B$. Let $P$ be an element of $relation2$ of $Nat$ and $B$. Let $__$ be an element of $P$ of $0$ and $b2$. Let $__1$ be a function from natural numbers $l$ and elements $b1$ of $B$ and elements $b$ of $B$ and elements $__1$ of $R$ of $b1$ and $b$ and elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b1$. Let $l$ be a natural number. Let $b1$ be an element of $B$. Let $__2$ be an element of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$. Then $P$ holds for $l$ and $b1$.",
    "output": "postulate lstar_ind_l : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (__2 : lstar B R l b1 b2) -> P l b1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1595. Let $p$ and $n$ and $m$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Then if the greatest common divisor of $p$ and $n$ is equal to $1$, then if the greatest common divisor of $p$ and $m$ is equal to $1$, then if $1$ is less than the greatest common divisor of $p$ and the product of $n$ and $m$, then if $smallest_factor$ applied to the greatest common divisor of $p$ and the product of $n$ and $m$ is divisible by $m$, then the greatest common divisor of $p$ and $n$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_1595 : (p : Nat) -> (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (primepn : Eq (gcd p n) 1) -> (primepm : Eq (gcd p m) 1) -> (lt1gcd : Lt 1 (gcd p (times n m))) -> (H : divisible (smallest_factor (gcd p (times n m))) m) -> Eq (gcd p n) (gcd p m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1686. Soient $n$ et $m$ des nombres naturels. Soit $Hind$ une fonction des nombres naturels $p$ et des éléments de $Lt$ de $p$ et de $m$ et des éléments $__1$ de $Lt$ de $1$ et de $p$ à des éléments de $Leq$ de $Psi (p)$ et de $pred (p)\\times (2 ^ (2 p - 3))$. Soit $a$ un nombre naturel. Alors si $m = 2 a$ ou $m = 2 a + 1$ et $m = 2 a + 1$, alors si $1 < 2 a + 1$ et $0 < a$, alors $pred (m)= a + a$.",
    "output": "postulate let_clause_1686 : (n : Nat) -> (m : Nat) -> (Hind : (p : Nat) -> (_ : Lt p m) -> (__1 : Lt 1 p) -> Leq (Psi p) (times (pred p) (pow 2 (minus (times 2 p) 3)))) -> (a : Nat) -> (_clearme : or (Eq m (times 2 a)) (Eq m (plus (times 2 a) 1))) -> (Hm : Eq m (plus (times 2 a) 1)) -> (Hlt : Lt 1 (plus (times 2 a) 1)) -> (Ha : Lt 0 a) -> Eq (pred m) (plus a a)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a \\in N$. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b$ vara ett naturligt tal. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Anta att $b$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $b$ är lika med $j$. Då för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "List_divides_false. Let $l$ be a list of natural numbers. Let $n \\in N$. Assume that absurdity is equal to $list_divides (l , n)$. Let $p$ be a natural number. Then for all elements $__1$ of $mem$ of $Nat$ and $p$ and $l$, $p$ is not divisible by $n$.",
    "output": "postulate list_divides_false : (l : list Nat) -> (n : Nat) -> (_ : Eq (list_divides l n) false) -> (p : Nat) -> (__1 : mem Nat p l) -> not (divisible p n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Or_div_mod1. För alla naturliga tal $n$ och $q$, om $0$ är mindre än $q$, så är $q$ delbart med summan av $n$ och $1$ och summan av $n$ och $1$ är lika med produkten av summan av kvoten av $n$ och $q$ och $1$ och $q$ eller $q$ är inte delbart med summan av $n$ och $1$ och summan av $n$ och $1$ är lika med summan av produkten av kvoten av $n$ och $q$ och $q$ och summan av $mod$ applicerat på $n$ och $q$ och $1$.",
    "output": "postulate or_div_mod1 : (n : Nat) -> (q : Nat) -> (_ : Lt 0 q) -> or (and (divisible q (plus n 1)) (Eq (plus n 1) (times (plus (div n q) 1) q))) (and (not (divisible q (plus n 1))) (Eq (plus n 1) (plus (times (div n q) q) (plus (mod n q) 1))))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind_body. Let $B$ be a set. Let $_R$ be an element of $relation$ of $B$. Let $Q_$ be a function from natural numbers $x_1233$ and elements $x_1232$ of $B$ and elements $x_1231$ of $B$ and elements $_x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$ to propositions. Let $_H_lstar_O$ be a function from elements $b$ of $B$ to elements of $Q_$ of $0$ and $b$ and $b$ and $lstar_O$ applied to $B$ and $_R$ and $b$. Let $_H_lstar_S$ be a function from elements $b1$ of $B$ and elements $b$ of $B$ and elements $x_1236$ of $_R$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $B$ and elements $x_1235$ of $lstar$ of $B$ and $_R$ and $l$ and $b$ and $b2$ and elements $_x_1238$ of $Q_$ of $l$ and $b$ and $b2$ and $x_1235$ to elements of $Q_$ of the sum of $l$ and $1$ and $b1$ and $b2$ and $lstar_S$ applied to $B$ and $_R$ and $b1$ and $b$ and $x_1236$ and $l$ and $b2$ and $x_1235$. Let $x_1233 \\in N$. Then for all elements $x_1232$ and $x_1231$ of $B$, for all elements $x_1234$ of $lstar$ of $B$ and $_R$ and $x_1233$ and $x_1232$ and $x_1231$, $Q_$ holds for $x_1233$ and $x_1232$ and $x_1231$ and $x_1234$.",
    "output": "postulate lstar_ind_body : (B : Set) -> (_R : relation B) -> (Q_ : (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (_x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Prop) -> (_H_lstar_O : (b : B) -> Q_ 0 b b (lstar_O B _R b)) -> (_H_lstar_S : (b1 : B) -> (b : B) -> (x_1236 : _R b1 b) -> (l : Nat) -> (b2 : B) -> (x_1235 : lstar B _R l b b2) -> (_x_1238 : Q_ l b b2 x_1235) -> Q_ (plus l 1) b1 b2 (lstar_S B _R b1 b x_1236 l b2 x_1235)) -> (x_1233 : Nat) -> (x_1232 : B) -> (x_1231 : B) -> (x_1234 : lstar B _R x_1233 x_1232 x_1231) -> Q_ x_1233 x_1232 x_1231 x_1234"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a \\in N$. Then if $a \\leq n$ and $f (a)= i$, then if $a \\leq n$, then if $f (a)= i$, then for all natural numbers $b$, if $b \\leq n$ and $f (b)= j$, then if $b \\leq n$, then if $f (b)= j$, then for all functions $__$ from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$, for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_to_eq_mod. Let $n , m \\in N$. Then if $n$ is less than $m$, then $mod$ applied to $n$ and $m$ is equal to $n$.",
    "output": "postulate lt_to_eq_mod : (n : Nat) -> (m : Nat) -> (_ : Lt n m) -> Eq (mod n m) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Comm_body. Soit $A$ un ensemble. Soit $nil$ un élément de $A$. Alors pour tous les éléments $xxx$ de $ACop$ de $A$ et de $nil$, pour tous les éléments $a$ et $b$ de $A$, $op$ appliqué à $A$ et $nil$ et $aop$ appliqué à $A$ et $nil$ et $xxx$ et $a$ et $b$ est égal à $op$ appliqué à $A$ et $nil$ et $aop$ appliqué à $A$ et $nil$ et $xxx$ et $b$ et $a$.",
    "output": "postulate comm_body : (A : Set) -> (nil : A) -> (xxx : ACop A nil) -> (a : A) -> (b : A) -> Eq (op A nil (aop A nil xxx) a b) (op A nil (aop A nil xxx) b a)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10131. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , m , n0 \\in N$. Supposons que $max (n0 + 1 , f)= m$. Supposons que contradiction est égal à $f (m)$. Soit $i , j \\in N$. Supposons que $j + 1 < n0 + 1$. Soit $x7$ un nombre naturel. Alors $x7 = m + x7$.",
    "output": "postulate let_clause_10131 : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (n0 : Nat) -> (eqm : Eq (max (plus n0 1) f) m) -> (fm : Eq (f m) false) -> (i : Nat) -> (j : Nat) -> (ltj : Lt (plus j 1) (plus n0 1)) -> (x7 : Nat) -> Eq x7 (plus m x7)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop_I. Let $n \\in N$. Let $p$ be a function from natural numbers to booleans. Let $B$ be a set. Let $nil$ be an element of $B$. Let $op$ be an element of $Aop$ of $B$ and $nil$. Let $f$ be a function from natural numbers to elements of $B$. Then $bigop$ applied to $n$ and the function that maps $i$ to $p$ applied to $i$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to $f$ applied to $i$ is equal to $bigop$ applied to the difference of $n$ and $0$ and the function that maps $i$ to the function that maps $i0$ to $p$ applied to $i0$ applied to the sum of $i$ and $0$ and $B$ and $nil$ and $op$ applied to $B$ and $nil$ and $op$ and the function that maps $i$ to the function that maps $i0$ to $f$ applied to $i0$ applied to the sum of $i$ and $0$.",
    "output": "postulate bigop_I : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> Eq (bigop (minus n 0) (\\ i : Nat -> (\\ i0 : Nat -> p i0) (plus i 0)) B nil (op B nil op) (\\ i : Nat -> (\\ i0 : Nat -> f i0) (plus i 0))) (bigop n (\\ i : Nat -> p i) B nil (op B nil op) (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15621. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $0$ est inférieur à $m$. Alors si le diviseur commun plus grand de $n$ et de $m$ est égal à $1$, alors pour tous les nombres naturels $c$, pour tous les éléments $_clearme$ de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$, pour tous les nombres naturels $d$, si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$ ou la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ est égale à $1$, alors si la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ est égale à $1$, alors la différence du produit de $n$ et de $c$ et du produit de $m$ et de $d$ est égale à $1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1617. Let $p$ and $m$ and $n$ be natural numbers. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Let $_clearme0$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$. Let $b$ be a natural number. Assume that the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $a p - b m$. Then if $a p - b m = 1$, then $p a - m b$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_ord_log. For all natural numbers $n$ and $p$, if $0 < n$, then if $1 < p$, then $ord (n , p)\\leq \\log_ p {n}$.",
    "output": "postulate le_ord_log : (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 1 p) -> Leq (ord n p) (log p n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_ind_r. Let $B$ be a set. Let $R$ be an element of $relation$ of $B$. Then for all elements $b1$ of $B$, for all elements $P$ of $relation2$ of $Nat$ and $B$, for all elements $__$ of $P$ of $0$ and $b1$, for all functions $__1$ from natural numbers $l$ and elements $b$ of $B$ and elements $b2$ of $B$ and elements $__1$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b$ and elements $__2$ of $R$ of $b$ and $b2$ and elements $__3$ of $P$ of $l$ and $b$ to elements of $P$ of the sum of $l$ and $1$ and $b2$, for all natural numbers $l$, for all elements $b2$ of $B$, for all elements $__2$ of $lstar$ of $B$ and $R$ and $l$ and $b1$ and $b2$, $P$ holds for $l$ and $b2$.",
    "output": "postulate lstar_ind_r : (B : Set) -> (R : relation B) -> (b1 : B) -> (P : relation2 Nat B) -> (_ : P 0 b1) -> (__1 : (l : Nat) -> (b : B) -> (b2 : B) -> (__1 : lstar B R l b1 b) -> (__2 : R b b2) -> (__3 : P l b) -> P (plus l 1) b2) -> (l : Nat) -> (b2 : B) -> (__2 : lstar B R l b1 b2) -> P l b2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Not_divides_to_gcd_aux. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Då om $n$ inte är delbart med $m$, så $gcd_aux (p + 1 , m , n)= gcd_aux (p , n , mod (m , n))$.",
    "output": "postulate not_divides_to_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : not (divisible n m)) -> Eq (gcd_aux (plus p 1) m n) (gcd_aux p n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1617. Låt $p$ och $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c$ vara ett naturligt tal. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b \\in N$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$. Då om skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $p$ och $a$ och produkten av $m$ och $b$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16001. Let $m , n , a , b \\in N$. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the greatest common divisor of $m$ and $n$ is equal to the difference of the product of $n$ and $c$ and the product of $m$ and $d$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_sqrt. Soit $n \\in N$. Alors $n < ((\\sqrt{ n})+ 1)^ 2$.",
    "output": "postulate lt_sqrt : (n : Nat) -> Lt n (pow (plus (sqrt n) 1) 2)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Nat_case. Soit $n$ un nombre naturel. Soit $P$ une fonction des nombres naturels à des propositions. Soit $__$ une fonction des éléments de $Eq$ de $n$ et de $0$ à des éléments de $P$ de $0$. Alors pour toutes les fonctions $__1$ des nombres naturels $m$ et des éléments $__1$ de $Eq$ de $n$ et de la somme de $m$ et de $1$ à des éléments de $P$ de la somme de $m$ et de $1$, $P$ tient pour $n$.",
    "output": "postulate nat_case : (n : Nat) -> (P : (_ : Nat) -> Prop) -> (_ : (_ : Eq n 0) -> P 0) -> (__1 : (m : Nat) -> (__1 : Eq n (plus m 1)) -> P (plus m 1)) -> P n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a$ un nombre naturel. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a$ est égal à $b$. Alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16005. Soient $m$ et $n$ et $a$ et $b$ des nombres naturels. Supposons que $0 < n$ et $0 < m$. Supposons que $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Soit $c \\in N$. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $d$ à la disjonction de $Eq$ appliqué à la différence du produit de $c$ et de $n$ et du produit de $d$ et de $m$ et $1$ et de $Eq$ appliqué à la différence du produit de $d$ et de $m$ et du produit de $c$ et de $n$ et $1$. Alors pour tous les nombres naturels $d$, si $c n - d m = 1$ ou $d m - c n = 1$ et $d m - c n = 1$, alors $m d - n c$ est égal au diviseur commun plus grand de $m$ et de $n$.",
    "output": "postulate let_clause_16005 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Decidable_mem_nat. Låt $n \\in N$. Låt $l$ vara en lista av naturliga tal. Då håller $decidable$ för $mem$ applicerat på $Nat$ och $n$ och $l$.",
    "output": "postulate decidable_mem_nat : (n : Nat) -> (l : list Nat) -> decidable (mem Nat n l)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_fwd_plus_plus_ge. Soit $m1 , m2 \\in N$. Supposons que $m2 \\leq m1$. Soit $n1 , n2 \\in N$. Supposons que $m1 + n1 \\leq m2 + n2$. Alors $n1 \\leq n2$.",
    "output": "postulate le_fwd_plus_plus_ge : (m1 : Nat) -> (m2 : Nat) -> (_ : Leq m2 m1) -> (n1 : Nat) -> (n2 : Nat) -> (__1 : Leq (plus m1 n1) (plus m2 n2)) -> Leq n1 n2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_divides_M. Låt $m$ och $p$ vara naturliga tal. Anta att $p$ är primt och $m + 1 < p$. Anta att $p \\leq 2 m + 1$. Då är $p$ delbart med $M (m)$.",
    "output": "postulate prime_to_divides_M : (m : Nat) -> (p : Nat) -> (_ : prime p) -> (__1 : Lt (plus m 1) p) -> (__2 : Leq p (plus (times 2 m) 1)) -> divisible p (M m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1075. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $bijf$ vara ett element av $bijn$ av $f$ och summan av $n$ och $1$. Anta att $f$ applicerat på summan av $n$ och $1$ är lika med summan av $n$ och $1$. Låt $i$ vara ett naturligt tal. Anta att $i$ är mindre än eller lika med $n$. Låt $a \\in N$. Anta att $a$ är mindre än eller lika med summan av $n$ och $1$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med summan av $n$ och $1$. Anta att $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är lika med summan av $n$ och $1$. Då är $i$ lika med $a$.",
    "output": "postulate let_clause_1075 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (bijf : bijn f (plus n 1)) -> (fS : Eq (f (plus n 1)) (plus n 1)) -> (i : Nat) -> (lein : Leq i n) -> (a : Nat) -> (_clearme : and (Leq a (plus n 1)) (Eq (f a) i)) -> (lean : Leq a (plus n 1)) -> (fa : Eq (f a) i) -> (Hc : Eq a (plus n 1)) -> Eq i a"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1575. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så för alla naturliga tal $x1029$, är $x1029$ lika med produkten av $x1029$ och skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Range_inv_rect_Type1. Låt $x1$ vara en mängd. Låt $Hterm$ vara ett element av $range$ av $x1$. Låt $P$ vara en funktion från element $_z1656$ av $range$ av $x1$ till element av $Type1$. Då för alla funktioner $_H1$ från funktioner $_enum$ från naturliga tal till element av $x1$ och naturliga tal $_upto$ och funktioner $_filter$ från naturliga tal till sanningsvärden och element $_z1657$ av $Eq$ av $Hterm$ och $mk_range$ applicerat på $x1$ och $_enum$ och $_upto$ och $_filter$ till element av $P$ av $mk_range$ applicerat på $x1$ och $_enum$ och $_upto$ och $_filter$, håller $P$ för $Hterm$.",
    "output": "postulate range_inv_rect_Type1 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1656 : range x1) -> Type1) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1657 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Eq_minus_gcd_aux. Let $p , m , n \\in N$. Assume that $0$ is less than $n$. Assume that $n$ is less than or equal to $m$. Assume that $n$ is less than or equal to $p$. Then $ex$ holds for $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $p$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $p$ and $m$ and $n$.",
    "output": "postulate eq_minus_gcd_aux : (p : Nat) -> (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n p) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux p m n)) (Eq (minus (times b m) (times a n)) (gcd_aux p m n))))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Aop_rect_Type3. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_867$ de $Aop$ de $A$ et de $_nil$ à des éléments de $Type3$. Soit $_H_mk_Aop$ une fonction des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$. Alors pour tous les éléments $x_867$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_867$.",
    "output": "postulate Aop_rect_Type3 : (A : Set) -> (_nil : A) -> (Q_ : (_x_867 : Aop A _nil) -> Type3) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_867 : Aop A _nil) -> Q_ x_867"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1600. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.",
    "output": "postulate let_clause_1600 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1063. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i$ och $j$ vara naturliga tal. Anta att $i$ är mindre än eller lika med $n$. Anta att $j$ är mindre än eller lika med $n$. Låt $a$ vara ett naturligt tal. Anta att $a$ är mindre än eller lika med $n$ och $f$ applicerat på $a$ är lika med $i$. Anta att $a$ är mindre än eller lika med $n$. Anta att $f$ applicerat på $a$ är lika med $i$. Låt $b$ vara ett naturligt tal. Anta att $b$ är mindre än eller lika med $n$ och $f$ applicerat på $b$ är lika med $j$. Då om $b$ är mindre än eller lika med $n$, så om $f$ applicerat på $b$ är lika med $j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f$ applicerat på $i0$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a$ är lika med $b$, så är $f$ applicerat på $a$ lika med $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_inv_rect_Type0. Låt $x1$ och $x2$ och $x3$ och $x4$ vara naturliga tal. Låt $Hterm$ vara ett element av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$. Då för alla funktioner $P$ från element $_z1464$ av $div_mod_spec$ av $x1$ och $x2$ och $x3$ och $x4$ till mängder, för alla funktioner $_H1$ från element $x_835$ av $Lt$ av $x4$ och $x2$ och element $x_834$ av $Eq$ av $x1$ och $x3 x2 + x4$ och element $_z1465$ av $Eq$ av $Hterm$ och $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_835 , x_834)$ till element av $P$ av $div_mod_spec_intro (x1 , x2 , x3 , x4 , x_835 , x_834)$, håller $P$ för $Hterm$.",
    "output": "postulate div_mod_spec_inv_rect_Type0 : (x1 : Nat) -> (x2 : Nat) -> (x3 : Nat) -> (x4 : Nat) -> (Hterm : div_mod_spec x1 x2 x3 x4) -> (P : (_z1464 : div_mod_spec x1 x2 x3 x4) -> Set) -> (_H1 : (x_835 : Lt x4 x2) -> (x_834 : Eq x1 (plus (times x3 x2) x4)) -> (_z1465 : Eq Hterm (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834)) -> P (div_mod_spec_intro x1 x2 x3 x4 x_835 x_834)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_m_exp_nm. Låt $n$ och $m$ vara naturliga tal. Då om $1 < n$, så $m < n ^ m$.",
    "output": "postulate lt_m_exp_nm : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> Lt m (pow n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_prod. Soient $k1$ et $k2$ des nombres naturels. Soit $p1$ une fonction des nombres naturels à des valeurs booléennes. Soit $p2$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $Aop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, $bigop$ appliqué à $k1$ et la fonction qui envoie $x$ à $p1$ appliqué à $x$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $x$ à $bigop$ appliqué à $k2$ et la fonction qui envoie $i$ à $p2$ appliqué à $x$ et $i$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $x$ et $i$ est égal à $bigop$ appliqué à le produit de $k1$ et de $k2$ et la fonction qui envoie $i$ à $andb$ appliqué à $p1$ appliqué à le quotient de $i$ et de $k2$ et $p2$ appliqué à le quotient de $i$ et de $k2$ et $mod$ appliqué à $i$ et $k2$ et $B$ et $nil$ et $op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à le quotient de $i$ et de $k2$ et $mod$ appliqué à $i$ et $k2$.",
    "output": "postulate bigop_prod : (k1 : Nat) -> (k2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> Eq (bigop k1 (\\ x : Nat -> p1 x) B nil (op B nil op) (\\ x : Nat -> bigop k2 (\\ i : Nat -> p2 x i) B nil (op B nil op) (\\ i : Nat -> f x i))) (bigop (times k1 k2) (\\ i : Nat -> andb (p1 (div i k2)) (p2 (div i k2) (mod i k2))) B nil (op B nil op) (\\ i : Nat -> f (div i k2) (mod i k2)))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a$ est égal à $b$. Alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_inv_rect_CProp1. Let $Hterm \\in N$. Let $P$ be a function from natural numbers $_z707$ to propositions. Then for all functions $_H1$ from elements $_z708$ of $Eq$ of $Hterm$ and $0$ to elements of $P$ of $0$, for all functions $_H2$ from natural numbers $x_410$ and functions $_x_412$ from elements $_z708$ of $Eq$ of $Hterm$ and $x_410$ to elements of $P$ of $x_410$ and elements $_z708$ of $Eq$ of $Hterm$ and $x_410 + 1$ to elements of $P$ of $x_410 + 1$, $P$ holds for $Hterm$.",
    "output": "postulate nat_inv_rect_CProp1 : (Hterm : Nat) -> (P : (_z707 : Nat) -> Prop) -> (_H1 : (_z708 : Eq Hterm 0) -> P 0) -> (_H2 : (x_410 : Nat) -> (_x_412 : (_z708 : Eq Hterm x_410) -> P x_410) -> (_z708 : Eq Hterm (plus x_410 1)) -> P (plus x_410 1)) -> P Hterm"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Nat_rect_Type0_body. Let $Q_$ be a function from natural numbers $_x_389$ to sets. Let $_H_O$ be an element of $Q_$ of $0$. Let $_H_S$ be a function from natural numbers $x_390$ and elements $_x_392$ of $Q_$ of $x_390$ to elements of $Q_$ of $x_390 + 1$. Let $x_389$ be a natural number. Then $Q_$ holds for $x_389$.",
    "output": "postulate nat_rect_Type0_body : (Q_ : (_x_389 : Nat) -> Set) -> (_H_O : Q_ 0) -> (_H_S : (x_390 : Nat) -> (_x_392 : Q_ x_390) -> Q_ (plus x_390 1)) -> (x_389 : Nat) -> Q_ x_389"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Found_max_spec. Låt $n$ vara ett naturligt tal. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $m$, om $m < n$, så om $f (m)= true$, så för alla funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, håller $max_spec$ för $n$ och $f$ och $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "False_to_lt_max. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , m \\in N$. Alors si $0 < n$, alors si contradiction est égal à $f (n)$, alors si $max (m , f)\\leq n$, alors $max (m , f)< n$.",
    "output": "postulate false_to_lt_max : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : Eq (f n) false) -> (__2 : Leq (max m f) n) -> Lt (max m f) n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Aop_rect_CProp4. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_875$ av $Aop$ av $A$ och $_nil$ till påståenden. Låt $_H_mk_Aop$ vara en funktion från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $_nil$ och $a$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $_nil$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $op$ applicerat på $b$ och $c$ och $op$ applicerat på $op$ applicerat på $a$ och $b$ och $c$ till element av $Q_$ av $mk_Aop$ applicerat på $A$ och $_nil$ och $op$ och $_nill$ och $_nilr$ och $_assoc$. Då för alla element $x_875$ av $Aop$ av $A$ och $_nil$, håller $Q_$ för $x_875$.",
    "output": "postulate Aop_rect_CProp4 : (A : Set) -> (_nil : A) -> (Q_ : (_x_875 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_875 : Aop A _nil) -> Q_ x_875"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Match_min_spec. Soient $_n$ et $_b$ des nombres naturels. Soit $_f$ une fonction des nombres naturels à des valeurs booléennes. Soit $return_sort$ un élément de $Sort$. Soit $return_type$ une fonction des nombres naturels et des éléments $z$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $__$ à des éléments de $return_sort$. Soit $case_found_min_spec$ une fonction des nombres naturels $m$ et des éléments de $Leq$ de $_b$ et de $m$ et des éléments $__1$ de $Lt$ de $m$ et de la somme de $_n$ et de $_b$ et des éléments $__2$ de $Eq$ de $_f$ appliqué à $m$ et de $true$ et des fonctions $__3$ des nombres naturels $i$ et des éléments $__3$ de $Leq$ de $_b$ et de $i$ et des éléments $__4$ de $Lt$ de $i$ et de $m$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de $m$ et de $found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $m$ et $__$ et $__1$ et $__2$ et $__3$. Soit $case_not_found_min_spec$ une fonction des fonctions des nombres naturels $i$ et des éléments de $Leq$ de $_b$ et de $i$ et des éléments $__1$ de $Lt$ de $i$ et de la somme de $_n$ et de $_b$ à des éléments de $Eq$ de $_f$ appliqué à $i$ et de contradiction à des éléments de $return_type$ de la somme de $_n$ et de $_b$ et de $not_found_min_spec$ appliqué à $_n$ et $_b$ et $_f$ et $__$. Alors pour tous les nombres naturels $__$, pour tous les éléments $z$ de $min_spec$ de $_n$ et de $_b$ et de $_f$ et de $__$, $return_type$ tient pour $__$ et $z$.",
    "output": "postulate match_min_spec : (_n : Nat) -> (_b : Nat) -> (_f : (_ : Nat) -> bool) -> (return_sort : Sort) -> (return_type : (_ : Nat) -> (z : min_spec _n _b _f __) -> return_sort) -> (case_found_min_spec : (m : Nat) -> (_ : Leq _b m) -> (__1 : Lt m (plus _n _b)) -> (__2 : Eq (_f m) true) -> (__3 : (i : Nat) -> (__3 : Leq _b i) -> (__4 : Lt i m) -> Eq (_f i) false) -> return_type m (found_min_spec _n _b _f m __ __1 __2 __3)) -> (case_not_found_min_spec : (_ : (i : Nat) -> (_ : Leq _b i) -> (__1 : Lt i (plus _n _b)) -> Eq (_f i) false) -> return_type (plus _n _b) (not_found_min_spec _n _b _f __)) -> (_ : Nat) -> (z : min_spec _n _b _f __) -> return_type __ z"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i \\leq n$. Supposons que $j \\leq n$. Soit $a \\in N$. Supposons que $a \\leq n$ et $f (a)= i$. Supposons que $a \\leq n$. Supposons que $f (a)= i$. Alors pour tous les nombres naturels $b$, si $b \\leq n$ et $f (b)= j$, alors si $b \\leq n$, alors si $f (b)= j$, alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15441. Soit $p , q \\in N$. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $n$. Supposons que $n$ est inférieur ou ágal à $m$. Supposons que $n$ est inférieur ou ágal à la somme de $q$ et de $1$. Supposons que $n$ n'est pas divisible par $m$. Soit $a$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ ou la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Supposons que la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Alors la différence du produit de $n$ et de $b$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ est égale à $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16002. Låt $m , n , a , b \\in N$. Anta att $0 < n$ och $0 < m$. Anta att $1$ är lika med det största gemensama delaret av $n$ och $m$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Då om $c n - d m = 1$ eller $d m - c n = 1$ och $d m - c n = 1$, så är $m d - n c$ lika med det största gemensama delaret av $m$ och $n$.",
    "output": "postulate let_clause_16002 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (gcd m n) (minus (times m d) (times n c))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Max_not_exists. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Då för alla naturliga tal $n$, för alla funktioner $__$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, $max (n , f)= 0$.",
    "output": "postulate max_not_exists : (f : (_ : Nat) -> bool) -> (n : Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> Eq (f i) false) -> Eq (max n f) 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Prime_to_lt_SO. Soit $p \\in N$. Supposons que $p$ est premier. Alors $1$ est inférieur à $p$.",
    "output": "postulate prime_to_lt_SO : (p : Nat) -> (_ : prime p) -> Lt 1 p"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Range_inv_rect_CProp1. Soit $x1$ un ensemble. Soit $Hterm$ un élément de $range$ de $x1$. Alors pour toutes les fonctions $P$ des éléments $_z1686$ de $range$ de $x1$ à des propositions, pour toutes les fonctions $_H1$ des fonctions $_enum$ des nombres naturels à des éléments de $x1$ et des nombres naturels $_upto$ et des fonctions $_filter$ des nombres naturels à des valeurs booléennes et des éléments $_z1687$ de $Eq$ de $Hterm$ et de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$ à des éléments de $P$ de $mk_range$ appliqué à $x1$ et $_enum$ et $_upto$ et $_filter$, $P$ tient pour $Hterm$.",
    "output": "postulate range_inv_rect_CProp1 : (x1 : Set) -> (Hterm : range x1) -> (P : (_z1686 : range x1) -> Prop) -> (_H1 : (_enum : (_ : Nat) -> x1) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> (_z1687 : Eq Hterm (mk_range x1 _enum _upto _filter)) -> P (mk_range x1 _enum _upto _filter)) -> P Hterm"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Gcd_O_to_eq_O. Låt $m , n \\in N$. Anta att $0$ är lika med det största gemensama delaret av $m$ och $n$. Då $m = 0$ och $n = 0$.",
    "output": "postulate gcd_O_to_eq_O : (m : Nat) -> (n : Nat) -> (_ : Eq (gcd m n) 0) -> and (Eq m 0) (Eq n 0)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Found_max_spec. Låt $n$ vara ett naturligt tal. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $m \\in N$. Anta att $m < n$. Anta att $f (m)= true$. Då för alla funktioner $__2$ från naturliga tal $i$ och element $__2$ av $Lt$ av $m$ och $i$ och element $__3$ av $Lt$ av $i$ och $n$ till element av $Eq$ av $f (i)$ och kontradiktion, håller $max_spec$ för $n$ och $f$ och $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Eq_gcd_SO_to_not_divides. Soit $n , m \\in N$. Supposons que $1 < n$ et $1$ est égal au diviseur commun plus grand de $n$ et de $m$. Alors $n$ n'est pas divisible par $m$.",
    "output": "postulate eq_gcd_SO_to_not_divides : (n : Nat) -> (m : Nat) -> (_ : Lt 1 n) -> (__1 : Eq (gcd n m) 1) -> not (divisible n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soient $i$ et $j$ des nombres naturels. Supposons que $i \\leq n$ et $j \\leq n$. Soit $a$ un nombre naturel. Supposons que $a \\leq n$ et $f (a)= i$ et $a \\leq n$. Supposons que $f (a)= i$. Soit $b \\in N$. Supposons que $b \\leq n$ et $f (b)= j$ et $b \\leq n$. Supposons que $f (b)= j$. Alors pour toutes les fonctions $__$ des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f (i0)$ et de $n$, pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a = b$, alors $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1585. Let $n$ and $m$ be natural numbers. Then if $0$ is less than $n$, then if $m$ is divisible by $n$, then for all natural numbers $d$, if $0$ is equal to $m$, then if $n$ is equal to the product of $m$ and $d$, then $0$ is equal to $n$.",
    "output": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lt_to_log_O. Let $n$ and $m$ be natural numbers. Assume that $0 < m$ and $m < n$. Then $\\log_ n {m}= 0$.",
    "output": "postulate lt_to_log_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt m n) -> Eq (log n m) 0"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Eqb_elim. Låt $n$ och $m$ vara naturliga tal. Då för alla funktioner $P$ från sanningsvärden till påståenden, för alla funktioner $__$ från element av $Eq$ av $n$ och $m$ till element av $P$ av $true$, för alla funktioner $__1$ från element $__1$ av $not$ av $Eq (n , m)$ till element av $P$ av kontradiktion, håller $P$ för $eqb (n , m)$.",
    "output": "postulate eqb_elim : (n : Nat) -> (m : Nat) -> (P : (_ : bool) -> Prop) -> (_ : (_ : Eq n m) -> P true) -> (__1 : (__1 : not (Eq n m)) -> P false) -> P (eqb n m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_10471. Soient $n1$ et $n2$ des nombres naturels. Soient $p1$ et $p2$ des fonctions des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Soit $nil$ un élément de $B$. Soit $op$ un élément de $ACop$ de $B$ et de $nil$. Soient $f1$ et $f2$ des fonctions des nombres naturels à des éléments de $B$. Soit $_clearme$ un élément de $iso$ de $B$ et de $mk_range (B , f1 , n1 , p1)$ et de $mk_range (B , f2 , n2 , p2)$. Soit $h$ une fonction des nombres naturels à des nombres naturels. Soit $_clearme0$ un élément de $ex$ de $prod$ appliqué à $Set$ et $Set$ et $Nat$ et la fonction qui envoie $__$ à $Nat$ et de la fonction qui envoie $k$ à la conjonction de la conjonction de $prod$ appliqué à $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et de $sub_hk$ appliqué à $h$ et $k$ et $B$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et de $sub_hk$ appliqué à $k$ et $h$ et $B$ et $mk_range$ appliqué à $B$ et $f2$ et $n2$ et $p2$ et $mk_range$ appliqué à $B$ et $f1$ et $n1$ et $p1$. Soit $k$ une fonction des nombres naturels à des nombres naturels. Alors si $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$, $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$ et $sub_hk$ tient pour $k$ et $h$ et $B$ et $mk_range (B , f2 , n2 , p2)$ et $mk_range (B , f1 , n1 , p1)$ et $prod$ tient pour $Set$ et $Prop$ et $Nat$ et la fonction qui envoie $i$ à $prod$ appliqué à $Prop$ et $Prop$ et $Lt$ appliqué à $i$ et $n1$ et la fonction qui envoie $__$ à $prod$ appliqué à $Prop$ et $Prop$ et $Eq$ appliqué à $p1$ appliqué à $i$ et $true$ et la fonction qui envoie $__1$ à $Eq$ appliqué à $f1$ appliqué à $i$ et $f2$ appliqué à $h$ appliqué à $i$ et $sub_hk$ tient pour $h$ et $k$ et $B$ et $mk_range (B , f1 , n1 , p1)$ et $mk_range (B , f2 , n2 , p2)$, alors pour toutes les fonctions $same$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n1$ et des éléments $__1$ de $Eq$ de $p1 (i)$ et de $true$ à des éléments de $Eq$ de $f1 (i)$ et de $f2 (h (i))$, pour tous les nombres naturels $i$ et $m$, pour toutes les fonctions $Hind$ des fonctions $f$ des nombres naturels à des valeurs booléennes et des éléments de $Leq$ de $0$ et de $n1$ et des éléments $__1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m , f)$ et des éléments $__2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m , f)$ et de $mk_range (B , f1 , 0 , p1)$ à des éléments de $Eq$ de $bigop$ appliqué à $0$ et la fonction qui envoie $i0$ à $p1$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f1$ appliqué à $i0$ et de $bigop$ appliqué à $m$ et la fonction qui envoie $i0$ à $f$ appliqué à $i0$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i0$ à $f2$ appliqué à $i0$, pour toutes les fonctions $p20$ des nombres naturels à des valeurs booléennes, si $0 \\leq n1$, alors pour tous les éléments $sub1$ de $sub_hk$ de $h$ et de $k$ et de $B$ et de $mk_range (B , f1 , 0 , p1)$ et de $mk_range (B , f2 , m + 1 , p20)$, pour tous les éléments $sub2$ de $sub_hk$ de $k$ et de $h$ et de $B$ et de $mk_range (B , f2 , m + 1 , p20)$ et de $mk_range (B , f1 , 0 , p1)$, pour tous les nombres naturels $x2571$ et $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "ACop_rect_CProp5. Let $A$ be a set. Let $_nil$ be an element of $A$. Let $Q_$ be a function from elements $_x_905$ of $ACop$ of $A$ and $_nil$ to propositions. Then for all functions $_H_mk_ACop$ from elements $aop$ of $Aop$ of $A$ and $_nil$ and functions $_comm$ from elements $a$ of $A$ and elements $b$ of $A$ to elements of $Eq$ of $op$ applied to $A$ and $_nil$ and $aop$ and $a$ and $b$ and $op$ applied to $A$ and $_nil$ and $aop$ and $b$ and $a$ to elements of $Q_$ of $mk_ACop$ applied to $A$ and $_nil$ and $aop$ and $_comm$, for all elements $x_905$ of $ACop$ of $A$ and $_nil$, $Q_$ holds for $x_905$.",
    "output": "postulate ACop_rect_CProp5 : (A : Set) -> (_nil : A) -> (Q_ : (_x_905 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_905 : ACop A _nil) -> Q_ x_905"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Max_to_max_spec. Soit $f$ une fonction des nombres naturels à des valeurs booléennes. Soit $n , m \\in N$. Supposons que $max (n , f)= m$. Alors $max_spec$ tient pour $n$ et $f$ et $m$.",
    "output": "postulate max_to_max_spec : (f : (_ : Nat) -> bool) -> (n : Nat) -> (m : Nat) -> (_ : Eq (max n f) m) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10331. Let $n$ be a natural number. Assume that $5$ is less than $n$. Let $m$ be a natural number. Assume that $6$ is less than or equal to $m$. Assume that the exponentiation of the sum of $m$ and $1$ and $2$ is less than or equal to the exponentiation of $2$ and $m$. Let $a \\in N$. Assume that $6$ is less than or equal to $a$. Assume that the sum of the product of $2$ and the sum of $a$ and $1$ and $1$ is less than or equal to the exponentiation of $2$ and $a$. Let $x2515 , x2516 \\in N$. Then $x2515$ is equal to the sum of the product of $x2516$ and the quotient of $x2515$ and $x2516$ and $mod$ applied to $x2515$ and $x2516$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_r_inv_ind. Soit $x1$ un ensemble. Soit $x2$ un élément de $relation$ de $x1$. Soit $x3 \\in N$. Soient $x4$ et $x5$ des éléments de $x1$. Alors pour tous les éléments $_Hterm$ de $lstar_r$ de $x1$ et de $x2$ et de $x3$ et de $x4$ et de $x5$, pour toutes les fonctions $P$ des nombres naturels $_z2386$ et des éléments $_z2385$ de $x1$ et des éléments $_z2384$ de $x1$ à des propositions, pour toutes les fonctions $_H1$ des éléments $b$ de $x1$ et des éléments $_z2389$ de $Eq$ de $x3$ et de $0$ et des éléments $_z2388$ de $Eq$ de $x4$ et de $b$ et des éléments $_z2387$ de $Eq$ de $x5$ et de $b$ à des éléments de $P$ de $0$ et de $b$ et de $b$, pour toutes les fonctions $_H2$ des nombres naturels $l$ et des éléments $b1$ de $x1$ et des éléments $b$ de $x1$ et des éléments $_x_1340$ de $lstar_r$ de $x1$ et de $x2$ et de $l$ et de $b1$ et de $b$ et des éléments $b2$ de $x1$ et des éléments $_x_1339$ de $x2$ de $b$ et de $b2$ et des fonctions $_x_1342$ des éléments $_z2389$ de $Eq$ de $x3$ et de $l$ et des éléments $_z2388$ de $Eq$ de $x4$ et de $b1$ et des éléments $_z2387$ de $Eq$ de $x5$ et de $b$ à des éléments de $P$ de $l$ et de $b1$ et de $b$ et des éléments $_z2389$ de $Eq$ de $x3$ et de la somme de $l$ et de $1$ et des éléments $_z2388$ de $Eq$ de $x4$ et de $b1$ et des éléments $_z2387$ de $Eq$ de $x5$ et de $b2$ à des éléments de $P$ de la somme de $l$ et de $1$ et de $b1$ et de $b2$, $P$ tient pour $x3$ et $x4$ et $x5$.",
    "output": "postulate lstar_r_inv_ind : (x1 : Set) -> (x2 : relation x1) -> (x3 : Nat) -> (x4 : x1) -> (x5 : x1) -> (_Hterm : lstar_r x1 x2 x3 x4 x5) -> (P : (_z2386 : Nat) -> (_z2385 : x1) -> (_z2384 : x1) -> Prop) -> (_H1 : (b : x1) -> (_z2389 : Eq x3 0) -> (_z2388 : Eq x4 b) -> (_z2387 : Eq x5 b) -> P 0 b b) -> (_H2 : (l : Nat) -> (b1 : x1) -> (b : x1) -> (_x_1340 : lstar_r x1 x2 l b1 b) -> (b2 : x1) -> (_x_1339 : x2 b b2) -> (_x_1342 : (_z2389 : Eq x3 l) -> (_z2388 : Eq x4 b1) -> (_z2387 : Eq x5 b) -> P l b1 b) -> (_z2389 : Eq x3 (plus l 1)) -> (_z2388 : Eq x4 b1) -> (_z2387 : Eq x5 b2) -> P (plus l 1) b1 b2) -> P x3 x4 x5"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1575. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Then if $0 < n$, then if $0 < m$, then if $1$ is equal to the greatest common divisor of $n$ and $m$, then for all natural numbers $c$, for all elements $_clearme$ of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$, for all natural numbers $d$, if $c n - d m = 1$ or $d m - c n = 1$, then if $c n - d m = 1$, then for all natural numbers $x1029$, $x1029 = x1029 (n c - m d)$.",
    "output": "postulate let_clause_1575 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> (x1029 : Nat) -> Eq x1029 (times x1029 (minus (times n c) (times m d)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Lstar_inv_ind. Let $x1$ be a set. Let $x2$ be an element of $relation$ of $x1$. Let $x3$ be a natural number. Let $x4$ and $x5$ be elements of $x1$. Let $_Hterm$ be an element of $lstar$ of $x1$ and $x2$ and $x3$ and $x4$ and $x5$. Let $P$ be a function from natural numbers $_z2089$ and elements $_z2088$ of $x1$ and elements $_z2087$ of $x1$ to propositions. Let $_H1$ be a function from elements $b$ of $x1$ and elements $_z2092$ of $Eq$ of $x3$ and $0$ and elements $_z2091$ of $Eq$ of $x4$ and $b$ and elements $_z2090$ of $Eq$ of $x5$ and $b$ to elements of $P$ of $0$ and $b$ and $b$. Let $_H2$ be a function from elements $b1$ of $x1$ and elements $b$ of $x1$ and elements $_x_1236$ of $x2$ of $b1$ and $b$ and natural numbers $l$ and elements $b2$ of $x1$ and elements $_x_1235$ of $lstar$ of $x1$ and $x2$ and $l$ and $b$ and $b2$ and functions $_x_1238$ from elements $_z2092$ of $Eq$ of $x3$ and $l$ and elements $_z2091$ of $Eq$ of $x4$ and $b$ and elements $_z2090$ of $Eq$ of $x5$ and $b2$ to elements of $P$ of $l$ and $b$ and $b2$ and elements $_z2092$ of $Eq$ of $x3$ and the sum of $l$ and $1$ and elements $_z2091$ of $Eq$ of $x4$ and $b1$ and elements $_z2090$ of $Eq$ of $x5$ and $b2$ to elements of $P$ of the sum of $l$ and $1$ and $b1$ and $b2$. Then $P$ holds for $x3$ and $x4$ and $x5$.",
    "output": "postulate lstar_inv_ind : (x1 : Set) -> (x2 : relation x1) -> (x3 : Nat) -> (x4 : x1) -> (x5 : x1) -> (_Hterm : lstar x1 x2 x3 x4 x5) -> (P : (_z2089 : Nat) -> (_z2088 : x1) -> (_z2087 : x1) -> Prop) -> (_H1 : (b : x1) -> (_z2092 : Eq x3 0) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b) -> P 0 b b) -> (_H2 : (b1 : x1) -> (b : x1) -> (_x_1236 : x2 b1 b) -> (l : Nat) -> (b2 : x1) -> (_x_1235 : lstar x1 x2 l b b2) -> (_x_1238 : (_z2092 : Eq x3 l) -> (_z2091 : Eq x4 b) -> (_z2090 : Eq x5 b2) -> P l b b2) -> (_z2092 : Eq x3 (plus l 1)) -> (_z2091 : Eq x4 b1) -> (_z2090 : Eq x5 b2) -> P (plus l 1) b1 b2) -> P x3 x4 x5"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15311. Let $n , m \\in N$. Assume that $0 < m$. Assume that $n$ is divisible by $m$. Let $d$ and $p$ be natural numbers. Assume that $m = n (p + 1)$. Then $m = n + n p$.",
    "output": "postulate let_clause_15311 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (p : Nat) -> (eqm : Eq m (times n (plus p 1))) -> Eq m (plus n (times n p))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Bigop_0. Låt $n \\in N$. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Låt $op$ vara ett element av $Aop$ av $B$ och $nil$. Då för alla funktioner $f$ från naturliga tal till element av $B$, är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $i$ som $true$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $op$ applicerat på $B$ och $nil$ och $op$ och $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $true$ och $B$ och $nil$ och $op$ applicerat på $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på summan av $i$ och $1$ och $f$ applicerat på $0$.",
    "output": "postulate bigop_0 : (n : Nat) -> (B : Set) -> (nil : B) -> (op : Aop B nil) -> (f : (_ : Nat) -> B) -> Eq (bigop (plus n 1) (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f i)) (op B nil op (bigop n (\\ i : Nat -> true) B nil (op B nil op) (\\ i : Nat -> f (plus i 1))) (f 0))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1033. Låt $n$ vara ett naturligt tal. Låt $p1$ och $p2$ vara funktioner från naturliga tal till sanningsvärden. Låt $g1$ och $g2$ vara funktioner från naturliga tal till naturliga tal. Låt $n1$ vara ett naturligt tal. Då för alla funktioner $Hind$ från funktioner från naturliga tal $i$ och element av $Lt$ av $i$ och $n1$ och element $__1$ av $Eq$ av $p1 (i)$ och $true$ till element av $Eq$ av $p2 (i)$ och $true$ och funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Lt$ av $i$ och $n1$ och element $__2$ av $Eq$ av $p1 (i)$ och $true$ till element av $Leq$ av $g1 (i)$ och $g2 (i)$ till element av $Leq$ av $bigop$ applicerat på $n1$ och funktionen som avbildar $i$ som $p1$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g1$ applicerat på $i$ och $bigop$ applicerat på $n1$ och funktionen som avbildar $i$ som $p2$ applicerat på $i$ och $Nat$ och $0$ och $plus$ och funktionen som avbildar $i$ som $g2$ applicerat på $i$, för alla funktioner $H1$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n1 + 1$ och element $__1$ av $Eq$ av $p1 (i)$ och $true$ till element av $Eq$ av $p2 (i)$ och $true$, för alla funktioner $H2$ från naturliga tal $i$ och element av $Lt$ av $i$ och $n1 + 1$ och element $__1$ av $Eq$ av $p1 (i)$ och $true$ till element av $Leq$ av $g1 (i)$ och $g2 (i)$, om $p2 (n1)= true$ och $p1 (n1)= true$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (n1 : Nat) -> (Hind : (_ : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (__1 : (i : Nat) -> (__1 : Lt i n1) -> (__2 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n1 (\\ i : Nat -> p1 i) Nat 0 plus (\\ i : Nat -> g1 i)) (bigop n1 (\\ i : Nat -> p2 i) Nat 0 plus (\\ i : Nat -> g2 i))) -> (H1 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Eq (p2 i) true) -> (H2 : (i : Nat) -> (_ : Lt i (plus n1 1)) -> (__1 : Eq (p1 i) true) -> Leq (g1 i) (g2 i)) -> (Hp2 : Eq (p2 n1) true) -> (Hp1 : Eq (p1 n1) true) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_inv_ind. Let $x1$ and $x2$ be natural numbers. Assume that $x1$ is divisible by $x2$. Let $P$ be a function from elements $_z2006$ of $divisible$ of $x1$ and $x2$ to propositions. Then for all functions $_H1$ from natural numbers $q$ and elements $x_1193$ of $Eq$ of $x2$ and the product of $x1$ and $q$ and elements $_z2007$ of $Eq$ of $Hterm$ and $quotient$ applied to $x1$ and $x2$ and $q$ and $x_1193$ to elements of $P$ of $quotient$ applied to $x1$ and $x2$ and $q$ and $x_1193$, $P$ holds for $Hterm$.",
    "output": "postulate divides_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (Hterm : divisible x1 x2) -> (P : (_z2006 : divisible x1 x2) -> Prop) -> (_H1 : (q : Nat) -> (x_1193 : Eq x2 (times x1 q)) -> (_z2007 : Eq Hterm (quotient x1 x2 q x_1193)) -> P (quotient x1 x2 q x_1193)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Injn_Sn_n. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n \\in N$. Alors pour tous les éléments $__$ de $injn$ de $f$ et de $n + 1$, $injn$ tient pour $f$ et $n$.",
    "output": "postulate injn_Sn_n : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : injn f (plus n 1)) -> injn f n"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "P_ord_exp. Låt $n$ och $m$ och $i$ vara naturliga tal. Anta att $0 < m$. Då om $mod (n , m)$ inte är lika med $0$, så för alla naturliga tal $p$, om $i \\leq p$, så $p_ord_aux (p , m ^ i n , m)= mk_Prod (Nat , Nat , i , n)$.",
    "output": "postulate p_ord_exp : (n : Nat) -> (m : Nat) -> (i : Nat) -> (_ : Lt 0 m) -> (__1 : not (Eq (mod n m) 0)) -> (p : Nat) -> (__2 : Leq i p) -> Eq (p_ord_aux p (times (pow m i) n) m) (mk_Prod Nat Nat i n)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Invert_permut_f. Let $f$ be a function from natural numbers to natural numbers. Let $n$ and $m$ be natural numbers. Assume that $m$ is less than or equal to $n$. Let $__1$ be an element of $injn$ of $f$ and $n$. Then $invert_permut$ applied to $n$ and $f$ and $f$ applied to $m$ is equal to $m$.",
    "output": "postulate invert_permut_f : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : injn f n) -> Eq (invert_permut n f (f m)) m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "P_ord_times. Soient $p$ et $a$ et $b$ et $qa$ et $ra$ et $qb$ et $rb$ des nombres naturels. Supposons que $p$ est premier. Supposons que $0$ est inférieur à $a$. Alors si $0$ est inférieur à $b$, alors si $p_ord$ appliqué à $a$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $qa$ et $ra$, alors si $p_ord$ appliqué à $b$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $qb$ et $rb$, alors $p_ord$ appliqué à le produit de $a$ et de $b$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et la somme de $qa$ et de $qb$ et le produit de $ra$ et de $rb$.",
    "output": "postulate p_ord_times : (p : Nat) -> (a : Nat) -> (b : Nat) -> (qa : Nat) -> (ra : Nat) -> (qb : Nat) -> (rb : Nat) -> (_ : prime p) -> (__1 : Lt 0 a) -> (__2 : Lt 0 b) -> (__3 : Eq (p_ord a p) (mk_Prod Nat Nat qa ra)) -> (__4 : Eq (p_ord b p) (mk_Prod Nat Nat qb rb)) -> Eq (p_ord (times a b) p) (mk_Prod Nat Nat (plus qa qb) (times ra rb))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_Type2. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_923$ of $range$ of $_A$ to elements of $Type2$, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_923$ of $range$ of $_A$, $Q_$ holds for $x_923$.",
    "output": "postulate range_rect_Type2 : (_A : Set) -> (Q_ : (_x_923 : range _A) -> Type2) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_923 : range _A) -> Q_ x_923"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_ind. Soit $_n \\in N$. Soit $Q_$ une fonction des nombres naturels $x_417$ et des éléments $_x_418$ de $Leq$ de $_n$ et de $x_417$ à des propositions. Soit $_H_le_n$ un élément de $Q_$ de $_n$ et de $le_n (_n)$. Soit $_H_le_S$ une fonction des nombres naturels $m$ et des éléments $x_419$ de $Leq$ de $_n$ et de $m$ et des éléments $_x_421$ de $Q_$ de $m$ et de $x_419$ à des éléments de $Q_$ de $m + 1$ et de $le_S (_n , m , x_419)$. Soit $x_417 \\in N$. Supposons que $_n \\leq x_417$. Alors $Q_$ tient pour $x_417$ et $x_418$.",
    "output": "postulate le_ind : (_n : Nat) -> (Q_ : (x_417 : Nat) -> (_x_418 : Leq _n x_417) -> Prop) -> (_H_le_n : Q_ _n (le_n _n)) -> (_H_le_S : (m : Nat) -> (x_419 : Leq _n m) -> (_x_421 : Q_ m x_419) -> Q_ (plus m 1) (le_S _n m x_419)) -> (x_417 : Nat) -> (x_418 : Leq _n x_417) -> Q_ x_417 x_418"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Bigop. Let $__ \\in N$. Let $__1$ be a function from natural numbers $__1$ to booleans. Let $H$ be a set. Then for all elements $__2$ of $H$, for all functions $__3$ from elements $__3$ of $H$ and elements $__4$ of $H$ to elements of $H$, for all functions $__4$ from natural numbers $__4$ to elements of $H$, $H$.",
    "output": "postulate bigop : (_ : Nat) -> (__1 : (__1 : Nat) -> bool) -> (H : Set) -> (__2 : H) -> (__3 : (__3 : H) -> (__4 : H) -> H) -> (__4 : (__4 : Nat) -> H) -> H"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Filter_lstar. Pour tous les ensembles $B$, pour tous les éléments $_R$ de $relation$ de $B$, pour tous les nombres naturels $__$, pour tous les éléments $__1$ et $__2$ de $B$, pour tous les éléments $return_sort$ de $Sort$, pour toutes les fonctions $return_type$ des éléments $z$ de $lstar$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$ à des éléments de $return_sort$, pour toutes les fonctions $return$ des éléments $z$ de $lstar$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$ à des éléments de $return_type$ de $z$, pour tous les éléments $z$ de $lstar$ de $B$ et de $_R$ et de $__$ et de $__1$ et de $__2$, $return_type$ tient pour $z$.",
    "output": "postulate filter_lstar : (B : Set) -> (_R : relation B) -> (_ : Nat) -> (__1 : B) -> (__2 : B) -> (return_sort : Sort) -> (return_type : (z : lstar B _R __ __1 __2) -> return_sort) -> (return : (z : lstar B _R __ __1 __2) -> return_type z) -> (z : lstar B _R __ __1 __2) -> return_type z"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dop_rect_Type5_body. Let $A$ be a set. Then for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_947$ of $Dop$ of $A$ and $_nil$ to elements of $Type5$, for all functions $_H_mk_Dop$ from elements $sum$ of $ACop$ of $A$ and $_nil$ and functions $prod$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_null$ from elements $a$ of $A$ to elements of $Eq$ of $prod (a , _nil)$ and $_nil$ and functions $_distr$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $prod (a , aop__o__op (A , _nil , sum , b , c))$ and $aop__o__op (A , _nil , sum , prod (a , b), prod (a , c))$ to elements of $Q_$ of $mk_Dop (A , _nil , sum , prod , _null , _distr)$, for all elements $x_947$ of $Dop$ of $A$ and $_nil$, $Q_$ holds for $x_947$.",
    "output": "postulate Dop_rect_Type5_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_947 : Dop A _nil) -> Type5) -> (_H_mk_Dop : (sum : ACop A _nil) -> (prod : (_ : A) -> (__1 : A) -> A) -> (_null : (a : A) -> Eq (prod a _nil) _nil) -> (_distr : (a : A) -> (b : A) -> (c : A) -> Eq (prod a (aop__o__op A _nil sum b c)) (aop__o__op A _nil sum (prod a b) (prod a c))) -> Q_ (mk_Dop A _nil sum prod _null _distr)) -> (x_947 : Dop A _nil) -> Q_ x_947"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1033. Let $p , n , q , r \\in N$. Assume that $0 < p$ and $p$ is not divisible by $r$. Assume that $n = p ^ q r$. Then for all natural numbers $q0$ and $q1$, if $q1 + 1 \\leq p ^ (q1 + 1)$, then for all natural numbers $x2515$ and $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_1033 : (p : Nat) -> (n : Nat) -> (q : Nat) -> (r : Nat) -> (posp : Lt 0 p) -> (ndivpr : not (divisible p r)) -> (Hn : Eq n (times (pow p q) r)) -> (q0 : Nat) -> (q1 : Nat) -> (Hind : Leq (plus q1 1) (pow p (plus q1 1))) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Permut_n_to_le. Låt $h$ vara en funktion från naturliga tal till naturliga tal. Låt $k$ och $n$ vara naturliga tal. Då om $k \\leq n$, så för alla element $__1$ av $permut$ av $h$ och $n$, för alla funktioner $__2$ från naturliga tal $m$ och element $__2$ av $Lt$ av $m$ och $k$ till element av $Eq$ av $h (m)$ och $m$, för alla naturliga tal $j$, om $k \\leq j$, så om $j \\leq n$, så $k \\leq h (j)$.",
    "output": "postulate permut_n_to_le : (h : (_ : Nat) -> Nat) -> (k : Nat) -> (n : Nat) -> (_ : Leq k n) -> (__1 : permut h n) -> (__2 : (m : Nat) -> (__2 : Lt m k) -> Eq (h m) m) -> (j : Nat) -> (__3 : Leq k j) -> (__4 : Leq j n) -> Leq k (h j)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_S_to_lt. Soit $n , m \\in N$. Alors si la somme de $n$ et de $1$ est inférieure à $m$, alors $n$ est inférieur à $m$.",
    "output": "postulate lt_S_to_lt : (n : Nat) -> (m : Nat) -> (_ : Lt (plus n 1) m) -> Lt n m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "S_pred. Soit $n \\in N$. Alors si $0$ est inférieur à $n$, alors la somme de $pred$ appliqué à $n$ et de $1$ est égale à $n$.",
    "output": "postulate S_pred : (n : Nat) -> (_ : Lt 0 n) -> Eq (plus (pred n) 1) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1068. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b \\in N$. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Alors pour tous les éléments $injf$ de $injn$ de $f$ et de $n$, si $a$ est égal à $b$, alors $f$ appliqué à $a$ est égal à $i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15441. Låt $p , q \\in N$. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0 < n$. Anta att $n \\leq m$. Anta att $n \\leq q + 1$. Anta att $n$ inte är delbart med $m$. Låt $a \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b \\in N$. Anta att $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ eller $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Då om $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$, så $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_nth_prime_to_not_prime. Soit $n , m \\in N$. Supposons que $nth_prime (n)< m$ et $m < nth_prime (n + 1)$. Alors $m$ n'est pas premier.",
    "output": "postulate lt_nth_prime_to_not_prime : (n : Nat) -> (m : Nat) -> (_ : Lt (nth_prime n) m) -> (__1 : Lt m (nth_prime (plus n 1))) -> not (prime m)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_ind_l_aux. Soit $B$ un ensemble. Soit $R$ une fonction des éléments de $B$ et des éléments $__1$ de $B$ à des propositions. Soit $b2$ un élément de $B$. Soit $P$ un élément de $relation2$ de $Nat$ et de $B$. Soit $__$ un élément de $P$ de $0$ et de $b2$. Soit $__1$ une fonction des nombres naturels $l$ et des éléments $b1$ de $B$ et des éléments $b$ de $B$ et des éléments $__1$ de $R$ de $b1$ et de $b$ et des éléments $__2$ de $lstar$ de $B$ et de $R$ et de $l$ et de $b$ et de $b2$ et des éléments $__3$ de $P$ de $l$ et de $b$ à des éléments de $P$ de la somme de $l$ et de $1$ et de $b1$. Soit $l \\in N$. Soient $b1$ et $b$ des éléments de $B$. Soit $__2$ un élément de $lstar$ de $B$ et de $R$ et de $l$ et de $b1$ et de $b$. Supposons que $b$ est égal à $b2$. Alors $P$ tient pour $l$ et $b1$.",
    "output": "postulate lstar_ind_l_aux : (B : Set) -> (R : (_ : B) -> (__1 : B) -> Prop) -> (b2 : B) -> (P : relation2 Nat B) -> (_ : P 0 b2) -> (__1 : (l : Nat) -> (b1 : B) -> (b : B) -> (__1 : R b1 b) -> (__2 : lstar B R l b b2) -> (__3 : P l b) -> P (plus l 1) b1) -> (l : Nat) -> (b1 : B) -> (b : B) -> (__2 : lstar B R l b1 b) -> (__3 : Eq b b2) -> P l b1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_CProp3_body. Pour tous les ensembles $A$, pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_907$ de $ACop$ de $A$ et de $_nil$ à des propositions, pour toutes les fonctions $_H_mk_ACop$ des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$, pour tous les éléments $x_907$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_907$.",
    "output": "postulate ACop_rect_CProp3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_907 : ACop A _nil) -> Prop) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_907 : ACop A _nil) -> Q_ x_907"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Injective_times_l. Låt $n \\in N$. Anta att $0$ är mindre än $n$. Då håller $injective$ för $Nat$ och $Nat$ och funktionen som avbildar $m$ som produkten av $m$ och $n$.",
    "output": "postulate injective_times_l : (n : Nat) -> (_ : Lt 0 n) -> injective Nat Nat (\\ m : Nat -> times m n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16001. Låt $m$ och $n$ och $a$ och $b$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c \\in N$. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d \\in N$. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$, så är det största gemensama delaret av $m$ och $n$ lika med skillnaden mellan produkten av $n$ och $c$ och produkten av $m$ och $d$.",
    "output": "postulate let_clause_16001 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (gcd m n) (minus (times n c) (times m d))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_16171. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$. Supposons que $b m - a p = 1$. Alors $m b - p a$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Minus_minus. Let $n$ and $m$ and $p$ be natural numbers. Assume that $p$ is less than or equal to $m$. Then if $m$ is less than or equal to $n$, then the sum of $p$ and the difference of $n$ and $m$ is equal to the difference of $n$ and the difference of $m$ and $p$.",
    "output": "postulate minus_minus : (n : Nat) -> (m : Nat) -> (p : Nat) -> (_ : Leq p m) -> (__1 : Leq m n) -> Eq (plus p (minus n m)) (minus n (minus m p))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_minus. Let $n$ and $p$ and $q$ be natural numbers. Then if $n$ is divisible by $p$, then if $n$ is divisible by $q$, then $n$ is divisible by $p - q$.",
    "output": "postulate divides_minus : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : divisible n p) -> (__1 : divisible n q) -> divisible n (minus p q)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_Type3_body. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_821$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till element av $Type3$. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_823$ av $Lt$ av $_r$ och $_m$ och element $x_822$ av $Eq$ av $_n$ och summan av produkten av $_q$ och $_m$ och $_r$ till element av $Q_$ av $div_mod_spec_intro$ applicerat på $_n$ och $_m$ och $_q$ och $_r$ och $x_823$ och $x_822$. Låt $x_821$ vara ett element av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$. Då håller $Q_$ för $x_821$.",
    "output": "postulate div_mod_spec_rect_Type3_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_821 : div_mod_spec _n _m _q _r) -> Type3) -> (_H_div_mod_spec_intro : (x_823 : Lt _r _m) -> (x_822 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_823 x_822)) -> (x_821 : div_mod_spec _n _m _q _r) -> Q_ x_821"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Divides_to_mod_O. Soit $n , m \\in N$. Supposons que $0 < n$. Alors si $n$ est divisible par $m$, alors $mod (m , n)= 0$.",
    "output": "postulate divides_to_mod_O : (n : Nat) -> (m : Nat) -> (_ : Lt 0 n) -> (__1 : divisible n m) -> Eq (mod m n) 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max_spec_inv_ind. Let $x1$ be a natural number. Let $x2$ be a function from natural numbers to booleans. Let $x3 \\in N$. Let $_Hterm$ be an element of $max_spec$ of $x1$ and $x2$ and $x3$. Then for all functions $P$ from natural numbers $_z1769$ to propositions, for all functions $_H1$ from natural numbers $m$ and elements $_x_975$ of $Lt$ of $m$ and $x1$ and elements $_x_974$ of $Eq$ of $x2$ applied to $m$ and $true$ and functions $_x_973$ from natural numbers $i$ and elements of $Lt$ of $m$ and $i$ and elements $__1$ of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $m$ to elements of $P$ of $m$, for all functions $_H2$ from functions $_x_976$ from natural numbers $i$ and elements of $Lt$ of $i$ and $x1$ to elements of $Eq$ of $x2$ applied to $i$ and absurdity and elements $_z1770$ of $Eq$ of $x3$ and $0$ to elements of $P$ of $0$, $P$ holds for $x3$.",
    "output": "postulate max_spec_inv_ind : (x1 : Nat) -> (x2 : (_ : Nat) -> bool) -> (x3 : Nat) -> (_Hterm : max_spec x1 x2 x3) -> (P : (_z1769 : Nat) -> Prop) -> (_H1 : (m : Nat) -> (_x_975 : Lt m x1) -> (_x_974 : Eq (x2 m) true) -> (_x_973 : (i : Nat) -> (_ : Lt m i) -> (__1 : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 m) -> P m) -> (_H2 : (_x_976 : (i : Nat) -> (_ : Lt i x1) -> Eq (x2 i) false) -> (_z1770 : Eq x3 0) -> P 0) -> P x3"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Log_i_2n. Let $n$ and $i$ be natural numbers. Assume that $1 < n$ and $n < i$. Then if $i \\leq 2 n$, then $\\log_ i {(2 n)}= 1$.",
    "output": "postulate log_i_2n : (n : Nat) -> (i : Nat) -> (_ : Lt 1 n) -> (__1 : Lt n i) -> (__2 : Leq i (times 2 n)) -> Eq (log i (times 2 n)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1068. Let $f$ be a function from natural numbers to natural numbers. Let $n$ be a natural number. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i \\leq n$. Assume that $j \\leq n$. Let $a \\in N$. Assume that $a \\leq n$ and $f (a)= i$. Assume that $a \\leq n$. Assume that $f (a)= i$. Let $b$ be a natural number. Assume that $b \\leq n$ and $f (b)= j$. Assume that $b \\leq n$. Assume that $f (b)= j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f (i0)$ and $n$. Then for all elements $injf$ of $injn$ of $f$ and $n$, if $a = b$, then $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Aop_rect_Type1_body. Soit $A$ un ensemble. Soit $_nil$ un élément de $A$. Soit $Q_$ une fonction des éléments $_x_871$ de $Aop$ de $A$ et de $_nil$ à des éléments de $Type1$. Alors pour toutes les fonctions $_H_mk_Aop$ des fonctions $op$ des éléments de $A$ et des éléments $__1$ de $A$ à des éléments de $A$ et des fonctions $_nill$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (_nil , a)$ et de $a$ et des fonctions $_nilr$ des éléments $a$ de $A$ à des éléments de $Eq$ de $op (a , _nil)$ et de $a$ et des fonctions $_assoc$ des éléments $a$ de $A$ et des éléments $b$ de $A$ et des éléments $c$ de $A$ à des éléments de $Eq$ de $op (a , op (b , c))$ et de $op (op (a , b), c)$ à des éléments de $Q_$ de $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, pour tous les éléments $x_871$ de $Aop$ de $A$ et de $_nil$, $Q_$ tient pour $x_871$.",
    "output": "postulate Aop_rect_Type1_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_871 : Aop A _nil) -> Type1) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_871 : Aop A _nil) -> Q_ x_871"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_log_S. Let $p$ and $n$ be natural numbers. Assume that $1$ is less than $p$. Then the logarithm of $p$ and $n$ is less than or equal to the logarithm of $p$ and the sum of $n$ and $1$.",
    "output": "postulate le_log_S : (p : Nat) -> (n : Nat) -> (_ : Lt 1 p) -> Leq (log p n) (log p (plus n 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Lt_plus_to_minus_r. Låt $a , b , c \\in N$. Då om $a + b < c$, så $a < c - b$.",
    "output": "postulate lt_plus_to_minus_r : (a : Nat) -> (b : Nat) -> (c : Nat) -> (_ : Lt (plus a b) c) -> Lt a (minus c b)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Psi'. Soit $__$ un nombre naturel. Alors $Nat$.",
    "output": "postulate Psi' : (_ : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Pad_bigop1. Låt $k$ och $n$ vara naturliga tal. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Låt $B$ vara en mängd. Låt $nil$ vara ett element av $B$. Då för alla funktioner $op$ från element av $B$ och element $__1$ av $B$ till element av $B$, för alla funktioner $f$ från naturliga tal till element av $B$, om $n$ är mindre än eller lika med $k$, så för alla funktioner $__1$ från naturliga tal $i$ och element $__1$ av $Leq$ av $n$ och $i$ och element $__2$ av $Lt$ av $i$ och $k$ till element av $Eq$ av $p$ applicerat på $i$ och kontradiktion, är $bigop$ applicerat på $n$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$ lika med $bigop$ applicerat på $k$ och funktionen som avbildar $i$ som $p$ applicerat på $i$ och $B$ och $nil$ och $op$ och funktionen som avbildar $i$ som $f$ applicerat på $i$.",
    "output": "postulate pad_bigop1 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_aop. Låt $n \\in N$. Låt $p$ vara en funktion från naturliga tal till sanningsvärden. Då för alla mängder $B$, för alla element $nil$ av $B$, för alla element $R$ av $Dop$ av $B$ och $nil$, för alla funktioner $f$ från naturliga tal till element av $B$, för alla element $a$ av $B$, håller $ACop$ för $B$ och $nil$.",
    "output": "postulate let_aop : (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (R : Dop B nil) -> (f : (_ : Nat) -> B) -> (a : B) -> ACop B nil"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15611. Soit $p , m , n \\in N$. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c$ un nombre naturel. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a$ un nombre naturel. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Alors si la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale à $1$, alors la différence du produit de $m$ et de $b$ et du produit de $p$ et de $a$ est égale à $1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d$ be a natural number. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Iter_body. Låt $H$ vara en mängd. Låt $__$ vara en funktion från element av $H$ till element av $H$. Låt $__1 \\in N$. Låt $__2$ vara ett element av $H$. Då $H$.",
    "output": "postulate iter_body : (H : Set) -> (_ : (_ : H) -> H) -> (__1 : Nat) -> (__2 : H) -> H"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Max. Let $_n$ be a natural number. Then for all functions $_f$ from natural numbers to booleans, $Nat$.",
    "output": "postulate max : (_n : Nat) -> (_f : (_ : Nat) -> bool) -> Nat"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Mod_S. For all natural numbers $n$ and $m$, if $0 < m$ and $mod (n , m)+ 1 < m$, then $mod (n + 1 , m)= mod (n , m)+ 1$.",
    "output": "postulate mod_S : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt (plus (mod n m) 1) m) -> Eq (mod (plus n 1) m) (plus (mod n m) 1)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Transpose. Låt $__$ och $__1$ och $__2$ vara naturliga tal. Då $Nat$.",
    "output": "postulate transpose : (_ : Nat) -> (__1 : Nat) -> (__2 : Nat) -> Nat"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Transpose_i_j_j_i. Pour tous les nombres naturels $i$ et $j$ et $n$, $transpose$ appliqué à $i$ et $j$ et $n$ est égal à $transpose$ appliqué à $j$ et $i$ et $n$.",
    "output": "postulate transpose_i_j_j_i : (i : Nat) -> (j : Nat) -> (n : Nat) -> Eq (transpose i j n) (transpose j i n)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1068. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n$ vara ett naturligt tal. Låt $permf$ vara ett element av $permut$ av $f$ och $n$. Låt $i , j \\in N$. Anta att $i \\leq n$ och $j \\leq n$. Låt $a \\in N$. Anta att $a \\leq n$ och $f (a)= i$ och $a \\leq n$. Anta att $f (a)= i$. Låt $b \\in N$. Då om $b \\leq n$ och $f (b)= j$ och $b \\leq n$, så om $f (b)= j$, så för alla funktioner $__$ från naturliga tal $i0$ och element av $Leq$ av $i0$ och $n$ till element av $Leq$ av $f (i0)$ och $n$, för alla element $injf$ av $injn$ av $f$ och $n$, om $a = b$, så $f (a)= i$.",
    "output": "postulate let_clause_1068 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) i"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_Strue. Soit $k$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Alors pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $p$ appliqué à $k$ est égal à $true$, alors $bigop$ appliqué à la somme de $k$ et de $1$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $op$ appliqué à $f$ appliqué à $k$ et $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate bigop_Strue : (k : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Eq (p k) true) -> Eq (bigop (plus k 1) (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (op (f k) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Dpi1__o__op. Let $x0$ be a set. Let $x1$ be an element of $x0$. Then for all functions $x2$ from elements of $Aop$ of $x0$ and $x1$ to sets, for all elements $x3$ of $DPair$ of $Aop (x0 , x1)$ and $x2$, for all elements $_x_887$ and $_x_888$ of $x0$, $x0$.",
    "output": "postulate dpi1__o__op : (x0 : Set) -> (x1 : x0) -> (x2 : (_ : Aop x0 x1) -> Set) -> (x3 : DPair (Aop x0 x1) x2) -> (_x_887 : x0) -> (_x_888 : x0) -> x0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_f_g. Let $f$ and $g$ be functions from natural numbers to booleans. Let $n , b \\in N$. Let $__$ be a function from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$. Then $min$ applied to $n$ and $b$ and $f$ is equal to $min$ applied to $n$ and $b$ and $g$.",
    "output": "postulate min_f_g : (f : (_ : Nat) -> bool) -> (g : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) (g i)) -> Eq (min n b f) (min n b g)"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15625. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Then for all natural numbers $d$, if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then if the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$, then the difference of the product of $m$ and $d$ and the product of $n$ and $c$ is equal to $1$.",
    "output": "postulate let_clause_15625 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1617. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$, alors si la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$, alors le diviseur commun plus grand de $p$ et de $m$ est égal à la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Prime_to_nth_prime. Soit $p$ un nombre naturel. Alors si $p$ est premier, alors $ex$ tient pour $Nat$ et la fonction qui envoie $i$ à $Eq (nth_prime (i), p)$.",
    "output": "postulate prime_to_nth_prime : (p : Nat) -> (_ : prime p) -> ex Nat (\\ i : Nat -> Eq (nth_prime i) p)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Minus_minus_associative. För alla naturliga tal $x$ och $y$ och $z$, om $z \\leq y$, så om $y \\leq x$, så $x - (y - z)= (x - y)+ z$.",
    "output": "postulate minus_minus_associative : (x : Nat) -> (y : Nat) -> (z : Nat) -> (_ : Leq z y) -> (__1 : Leq y x) -> Eq (minus x (minus y z)) (plus (minus x y) z)"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Bigop_commute. Soient $n$ et $m$ des nombres naturels. Soit $p11$ une fonction des nombres naturels à des valeurs booléennes. Soit $p12$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Soit $p21$ une fonction des nombres naturels à des valeurs booléennes. Soit $p22$ une fonction des nombres naturels et des nombres naturels $__1$ à des valeurs booléennes. Alors pour tous les ensembles $B$, pour tous les éléments $nil$ de $B$, pour tous les éléments $op$ de $ACop$ de $B$ et de $nil$, pour toutes les fonctions $f$ des nombres naturels et des nombres naturels $__1$ à des éléments de $B$, si $0 < n$, alors si $0 < m$, alors pour toutes les fonctions $__2$ des nombres naturels $i$ et des nombres naturels $j$ et des éléments $__2$ de $Lt$ de $i$ et de $n$ et des éléments $__3$ de $Lt$ de $j$ et de $m$ à des éléments de $Eq$ de $andb (p11 (i), p12 (i , j))$ et de $andb (p21 (j), p22 (i , j))$, $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p21$ appliqué à $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p22$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ et $j$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p11$ appliqué à $i$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $bigop$ appliqué à $m$ et la fonction qui envoie $j$ à $p12$ appliqué à $i$ et $j$ et $B$ et $nil$ et $aop__o__op$ appliqué à $B$ et $nil$ et $op$ et la fonction qui envoie $j$ à $f$ appliqué à $i$ et $j$.",
    "output": "postulate bigop_commute : (n : Nat) -> (m : Nat) -> (p11 : (_ : Nat) -> bool) -> (p12 : (_ : Nat) -> (__1 : Nat) -> bool) -> (p21 : (_ : Nat) -> bool) -> (p22 : (_ : Nat) -> (__1 : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f : (_ : Nat) -> (__1 : Nat) -> B) -> (_ : Lt 0 n) -> (__1 : Lt 0 m) -> (__2 : (i : Nat) -> (j : Nat) -> (__2 : Lt i n) -> (__3 : Lt j m) -> Eq (andb (p11 i) (p12 i j)) (andb (p21 j) (p22 i j))) -> Eq (bigop n (\\ i : Nat -> p11 i) B nil (aop__o__op B nil op) (\\ i : Nat -> bigop m (\\ j : Nat -> p12 i j) B nil (aop__o__op B nil op) (\\ j : Nat -> f i j))) (bigop m (\\ j : Nat -> p21 j) B nil (aop__o__op B nil op) (\\ j : Nat -> bigop n (\\ i : Nat -> p22 i j) B nil (aop__o__op B nil op) (\\ i : Nat -> f i j)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Injective_invert_permut. Låt $f$ vara en funktion från naturliga tal till naturliga tal. Låt $n \\in N$. Då för alla element $__$ av $permut$ av $f$ och $n$, håller $injn$ för $invert_permut$ applicerat på $n$ och $f$ och $n$.",
    "output": "postulate injective_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (_ : permut f n) -> injn (invert_permut n f) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1063. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soit $n$ un nombre naturel. Soit $permf$ un élément de $permut$ de $f$ et de $n$. Soit $i , j \\in N$. Supposons que $i$ est inférieur ou ágal à $n$. Supposons que $j$ est inférieur ou ágal à $n$. Soit $a \\in N$. Supposons que $a$ est inférieur ou ágal à $n$ et $f$ appliqué à $a$ est égal à $i$. Supposons que $a$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $a$ est égal à $i$. Soit $b$ un nombre naturel. Supposons que $b$ est inférieur ou ágal à $n$ et $f$ appliqué à $b$ est égal à $j$. Supposons que $b$ est inférieur ou ágal à $n$. Supposons que $f$ appliqué à $b$ est égal à $j$. Soit $__$ une fonction des nombres naturels $i0$ et des éléments de $Leq$ de $i0$ et de $n$ à des éléments de $Leq$ de $f$ appliqué à $i0$ et de $n$. Soit $injf$ un élément de $injn$ de $f$ et de $n$. Supposons que $a$ est égal à $b$. Alors $f$ appliqué à $a$ est égal à $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_10471. Let $n1$ and $n2$ be natural numbers. Let $p1$ and $p2$ be functions from natural numbers to booleans. Then for all sets $B$, for all elements $nil$ of $B$, for all elements $op$ of $ACop$ of $B$ and $nil$, for all functions $f1$ and $f2$ from natural numbers to elements of $B$, for all elements $_clearme$ of $iso$ of $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, for all functions $h$ from natural numbers to natural numbers, for all elements $_clearme0$ of $ex$ of $prod$ applied to $Set$ and $Set$ and $Nat$ and the function that maps $__$ to $Nat$ and the function that maps $k$ to the conjunction of the conjunction of $prod$ applied to $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ applied to $h$ and $k$ and $B$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $sub_hk$ applied to $k$ and $h$ and $B$ and $mk_range$ applied to $B$ and $f2$ and $n2$ and $p2$ and $mk_range$ applied to $B$ and $f1$ and $n1$ and $p1$, for all functions $k$ from natural numbers to natural numbers, if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$, $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$ and $sub_hk$ holds for $k$ and $h$ and $B$ and $mk_range (B , f2 , n2 , p2)$ and $mk_range (B , f1 , n1 , p1)$, then if $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n1$ and the function that maps $__$ to $prod$ applied to $Prop$ and $Prop$ and $Eq$ applied to $p1$ applied to $i$ and $true$ and the function that maps $__1$ to $Eq$ applied to $f1$ applied to $i$ and $f2$ applied to $h$ applied to $i$ and $sub_hk$ holds for $h$ and $k$ and $B$ and $mk_range (B , f1 , n1 , p1)$ and $mk_range (B , f2 , n2 , p2)$, then for all functions $same$ from natural numbers $i$ and elements of $Lt$ of $i$ and $n1$ and elements $__1$ of $Eq$ of $p1 (i)$ and $true$ to elements of $Eq$ of $f1 (i)$ and $f2 (h (i))$, for all natural numbers $i$ and $m$, for all functions $Hind$ from functions $f$ from natural numbers to booleans and elements of $Leq$ of $0$ and $n1$ and elements $__1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m , f)$ and elements $__2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m , f)$ and $mk_range (B , f1 , 0 , p1)$ to elements of $Eq$ of $bigop$ applied to $0$ and the function that maps $i0$ to $p1$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f1$ applied to $i0$ and $bigop$ applied to $m$ and the function that maps $i0$ to $f$ applied to $i0$ and $B$ and $nil$ and $aop__o__op$ applied to $B$ and $nil$ and $op$ and the function that maps $i0$ to $f2$ applied to $i0$, for all functions $p20$ from natural numbers to booleans, if $0 \\leq n1$, then for all elements $sub1$ of $sub_hk$ of $h$ and $k$ and $B$ and $mk_range (B , f1 , 0 , p1)$ and $mk_range (B , f2 , m + 1 , p20)$, for all elements $sub2$ of $sub_hk$ of $k$ and $h$ and $B$ and $mk_range (B , f2 , m + 1 , p20)$ and $mk_range (B , f1 , 0 , p1)$, for all natural numbers $x2571$ and $x2572$, $x2571 = x2572 (x2571 \\div x2572)+ mod (x2571 , x2572)$.",
    "output": "postulate let_clause_10471 : (n1 : Nat) -> (n2 : Nat) -> (p1 : (_ : Nat) -> bool) -> (p2 : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : ACop B nil) -> (f1 : (_ : Nat) -> B) -> (f2 : (_ : Nat) -> B) -> (_clearme : iso B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2)) -> (h : (_ : Nat) -> Nat) -> (_clearme0 : ex (prod Set Set Nat (\\ _ : Nat -> Nat)) (\\ k : ((_ : Nat) -> Nat) -> and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1)))) -> (k : (_ : Nat) -> Nat) -> (_clearme1 : and (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) (sub_hk k h B (mk_range B f2 n2 p2) (mk_range B f1 n1 p1))) -> (_clearme2 : and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n1) (\\ _ : Lt i n1 -> prod Prop Prop (Eq (p1 i) true) (\\ __1 : Eq (p1 i) true -> Eq (f1 i) (f2 (h i)))))) (sub_hk h k B (mk_range B f1 n1 p1) (mk_range B f2 n2 p2))) -> (same : (i : Nat) -> (_ : Lt i n1) -> (__1 : Eq (p1 i) true) -> Eq (f1 i) (f2 (h i))) -> (i : Nat) -> (m : Nat) -> (Hind : (f : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (__1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 m f)) -> (__2 : sub_hk k h B (mk_range B f2 m f) (mk_range B f1 0 p1)) -> Eq (bigop 0 (\\ i0 : Nat -> p1 i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f1 i0)) (bigop m (\\ i0 : Nat -> f i0) B nil (aop__o__op B nil op) (\\ i0 : Nat -> f2 i0))) -> (p20 : (_ : Nat) -> bool) -> (_ : Leq 0 n1) -> (sub1 : sub_hk h k B (mk_range B f1 0 p1) (mk_range B f2 (plus m 1) p20)) -> (sub2 : sub_hk k h B (mk_range B f2 (plus m 1) p20) (mk_range B f1 0 p1)) -> (x2571 : Nat) -> (x2572 : Nat) -> Eq x2571 (plus (times x2572 (div x2571 x2572)) (mod x2571 x2572))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1063. Let $f$ be a function from natural numbers to natural numbers. Let $n \\in N$. Let $permf$ be an element of $permut$ of $f$ and $n$. Let $i , j \\in N$. Assume that $i$ is less than or equal to $n$. Assume that $j$ is less than or equal to $n$. Let $a \\in N$. Assume that $a$ is less than or equal to $n$ and $f$ applied to $a$ is equal to $i$. Assume that $a$ is less than or equal to $n$. Assume that $f$ applied to $a$ is equal to $i$. Let $b \\in N$. Assume that $b$ is less than or equal to $n$ and $f$ applied to $b$ is equal to $j$. Assume that $b$ is less than or equal to $n$. Assume that $f$ applied to $b$ is equal to $j$. Let $__$ be a function from natural numbers $i0$ and elements of $Leq$ of $i0$ and $n$ to elements of $Leq$ of $f$ applied to $i0$ and $n$. Let $injf$ be an element of $injn$ of $f$ and $n$. Assume that $a$ is equal to $b$. Then $f$ applied to $a$ is equal to $j$.",
    "output": "postulate let_clause_1063 : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (permf : permut f n) -> (i : Nat) -> (j : Nat) -> (lein : Leq i n) -> (lejn : Leq j n) -> (a : Nat) -> (_clearme : and (Leq a n) (Eq (f a) i)) -> (lean : Leq a n) -> (fa : Eq (f a) i) -> (b : Nat) -> (_clearme0 : and (Leq b n) (Eq (f b) j)) -> (lebn : Leq b n) -> (fb : Eq (f b) j) -> (_ : (i0 : Nat) -> (_ : Leq i0 n) -> Leq (f i0) n) -> (injf : injn f n) -> (auto : Eq a b) -> Eq (f a) j"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Pos_div. Let $n$ and $m$ be natural numbers. Assume that $0$ is less than $m$. Assume that $0$ is less than $n$. Assume that $mod$ applied to $n$ and $m$ is equal to $0$. Then $0$ is less than the quotient of $n$ and $m$.",
    "output": "postulate pos_div : (n : Nat) -> (m : Nat) -> (_ : Lt 0 m) -> (__1 : Lt 0 n) -> (__2 : Eq (mod n m) 0) -> Lt 0 (div n m)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Aop_rect_CProp3_body. Låt $A$ vara en mängd. Låt $_nil$ vara ett element av $A$. Låt $Q_$ vara en funktion från element $_x_879$ av $Aop$ av $A$ och $_nil$ till påståenden. Då för alla funktioner $_H_mk_Aop$ från funktioner $op$ från element av $A$ och element $__1$ av $A$ till element av $A$ och funktioner $_nill$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $_nil$ och $a$ och $a$ och funktioner $_nilr$ från element $a$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $_nil$ och $a$ och funktioner $_assoc$ från element $a$ av $A$ och element $b$ av $A$ och element $c$ av $A$ till element av $Eq$ av $op$ applicerat på $a$ och $op$ applicerat på $b$ och $c$ och $op$ applicerat på $op$ applicerat på $a$ och $b$ och $c$ till element av $Q_$ av $mk_Aop$ applicerat på $A$ och $_nil$ och $op$ och $_nill$ och $_nilr$ och $_assoc$, för alla element $x_879$ av $Aop$ av $A$ och $_nil$, håller $Q_$ för $x_879$.",
    "output": "postulate Aop_rect_CProp3_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_879 : Aop A _nil) -> Prop) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_879 : Aop A _nil) -> Q_ x_879"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Pad_bigop1. Soient $k$ et $n$ des nombres naturels. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soit $B$ un ensemble. Alors pour tous les éléments $nil$ de $B$, pour toutes les fonctions $op$ des éléments de $B$ et des éléments $__1$ de $B$ à des éléments de $B$, pour toutes les fonctions $f$ des nombres naturels à des éléments de $B$, si $n \\leq k$, alors pour toutes les fonctions $__1$ des nombres naturels $i$ et des éléments $__1$ de $Leq$ de $n$ et de $i$ et des éléments $__2$ de $Lt$ de $i$ et de $k$ à des éléments de $Eq$ de $p (i)$ et de contradiction, $bigop$ appliqué à $k$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$ est égal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $B$ et $nil$ et $op$ et la fonction qui envoie $i$ à $f$ appliqué à $i$.",
    "output": "postulate pad_bigop1 : (k : Nat) -> (n : Nat) -> (p : (_ : Nat) -> bool) -> (B : Set) -> (nil : B) -> (op : (_ : B) -> (__1 : B) -> B) -> (f : (_ : Nat) -> B) -> (_ : Leq n k) -> (__1 : (i : Nat) -> (__1 : Leq n i) -> (__2 : Lt i k) -> Eq (p i) false) -> Eq (bigop n (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i)) (bigop k (\\ i : Nat -> p i) B nil op (\\ i : Nat -> f i))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_priml. Låt $n \\in N$. Då om $0$ är mindre än $n$, så är produkten av $2$ och $n$ mindre än eller lika med produkten av summan av logaritmen av $2$ och produkten av $2$ och $n$ och $1$ och summan av $prim$ applicerat på produkten av $2$ och $n$ och $1$.",
    "output": "postulate le_priml : (n : Nat) -> (_ : Lt 0 n) -> Leq (times 2 n) (times (plus (log 2 (times 2 n)) 1) (plus (prim (times 2 n)) 1))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Div_mod_spec_rect_CProp1. Let $_n , _m , _q , _r \\in N$. Then for all functions $Q_$ from elements $_x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$ to propositions, for all functions $_H_div_mod_spec_intro$ from elements $x_855$ of $Lt$ of $_r$ and $_m$ and elements $x_854$ of $Eq$ of $_n$ and the sum of the product of $_q$ and $_m$ and $_r$ to elements of $Q_$ of $div_mod_spec_intro$ applied to $_n$ and $_m$ and $_q$ and $_r$ and $x_855$ and $x_854$, for all elements $x_853$ of $div_mod_spec$ of $_n$ and $_m$ and $_q$ and $_r$, $Q_$ holds for $x_853$.",
    "output": "postulate div_mod_spec_rect_CProp1 : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_853 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_855 : Lt _r _m) -> (x_854 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_855 x_854)) -> (x_853 : div_mod_spec _n _m _q _r) -> Q_ x_853"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Aop_rect_Type1. For all sets $A$, for all elements $_nil$ of $A$, for all functions $Q_$ from elements $_x_871$ of $Aop$ of $A$ and $_nil$ to elements of $Type1$, for all functions $_H_mk_Aop$ from functions $op$ from elements of $A$ and elements $__1$ of $A$ to elements of $A$ and functions $_nill$ from elements $a$ of $A$ to elements of $Eq$ of $op (_nil , a)$ and $a$ and functions $_nilr$ from elements $a$ of $A$ to elements of $Eq$ of $op (a , _nil)$ and $a$ and functions $_assoc$ from elements $a$ of $A$ and elements $b$ of $A$ and elements $c$ of $A$ to elements of $Eq$ of $op (a , op (b , c))$ and $op (op (a , b), c)$ to elements of $Q_$ of $mk_Aop (A , _nil , op , _nill , _nilr , _assoc)$, for all elements $x_871$ of $Aop$ of $A$ and $_nil$, $Q_$ holds for $x_871$.",
    "output": "postulate Aop_rect_Type1 : (A : Set) -> (_nil : A) -> (Q_ : (_x_871 : Aop A _nil) -> Type1) -> (_H_mk_Aop : (op : (_ : A) -> (__1 : A) -> A) -> (_nill : (a : A) -> Eq (op _nil a) a) -> (_nilr : (a : A) -> Eq (op a _nil) a) -> (_assoc : (a : A) -> (b : A) -> (c : A) -> Eq (op a (op b c)) (op (op a b) c)) -> Q_ (mk_Aop A _nil op _nill _nilr _assoc)) -> (x_871 : Aop A _nil) -> Q_ x_871"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Fmin_false. Let $f$ be a function from natural numbers to booleans. Let $n$ and $b$ be natural numbers. Then $prod$ holds for $Prop$ and $Prop$ and $Eq$ applied to $f$ applied to $let_m$ applied to $f$ and $n$ and $b$ and absurdity and the function that maps $__$ to $Eq$ applied to $let_m$ applied to $f$ and $n$ and $b$ and the sum of $n$ and $b$.",
    "output": "postulate fmin_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> prod Prop Prop (Eq (f (let_m f n b)) false) (\\ _ : Eq (f (let_m f n b)) false -> Eq (let_m f n b) (plus n b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_upper_bound7. Let $n$ and $m$ be natural numbers. Then if $nth_prime (n)< m$, then $Nat$.",
    "output": "postulate let_upper_bound7 : (n : Nat) -> (m : Nat) -> (ltml : Lt (nth_prime n) m) -> Nat"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_16171. Låt $p , m , n \\in N$. Anta att $0$ är mindre än $p$. Anta att det största gemensama delaret av $p$ och $m$ är lika med $1$. Anta att $p$ är delbart med produkten av $m$ och $n$. Låt $c$ vara ett naturligt tal. Anta att produkten av $m$ och $n$ är lika med produkten av $p$ och $c$. Låt $a$ vara ett naturligt tal. Låt $_clearme0$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ och det största gemensama delaret av $p$ och $m$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ och det största gemensama delaret av $p$ och $m$. Låt $b$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $a$ och $p$ och produkten av $b$ och $m$ är lika med det största gemensama delaret av $p$ och $m$ eller skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Anta att skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med det största gemensama delaret av $p$ och $m$. Då om skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $p$ är lika med $1$, så är det största gemensama delaret av $p$ och $m$ lika med skillnaden mellan produkten av $m$ och $b$ och produkten av $p$ och $a$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_15611. Soit $p , m , n \\in N$. Supposons que $0 < p$. Supposons que $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $b m - a p$, alors si $b m - a p = 1$, alors $m b - p a = 1$.",
    "output": "postulate let_clause_15611 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (minus (times m b) (times p a)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_16171. Let $p , m , n \\in N$. Assume that $0 < p$ and $1$ is equal to the greatest common divisor of $p$ and $m$. Assume that $p$ is divisible by $m \\times n$. Let $c$ be a natural number. Assume that $m n = p c$. Let $a \\in N$. Then for all elements $_clearme0$ of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $p$ and the product of $b$ and $m$ and the greatest common divisor of $p$ and $m$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $p$ and the greatest common divisor of $p$ and $m$, for all natural numbers $b$, if the greatest common divisor of $p$ and $m$ is equal to $a p - b m$ or equal to $b m - a p$ and the greatest common divisor of $p$ and $m$ is equal to $b m - a p$, then if $b m - a p = 1$, then $m b - p a$ is equal to the greatest common divisor of $p$ and $m$.",
    "output": "postulate let_clause_16171 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times b m) (times a p)) (gcd p m)) -> (H0 : Eq (minus (times b m) (times a p)) 1) -> Eq (gcd p m) (minus (times m b) (times p a))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1559. Låt $n , m \\in N$. Anta att $n$ är delbart med $m$ och $0 = n$. Låt $d \\in N$. Anta att $m = 0 d$. Då $m = n$.",
    "output": "postulate let_clause_1559 : (n : Nat) -> (m : Nat) -> (divnm : divisible n m) -> (H : Eq 0 n) -> (d : Nat) -> (auto : Eq m (times 0 d)) -> Eq m n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Le_pi. Soit $n$ un nombre naturel. Soit $p$ une fonction des nombres naturels à des valeurs booléennes. Soient $g1$ et $g2$ des fonctions des nombres naturels à des nombres naturels. Alors pour toutes les fonctions $__$ des nombres naturels $i$ et des éléments de $Lt$ de $i$ et de $n$ et des éléments $__1$ de $Eq$ de $p (i)$ et de $true$ à des éléments de $Leq$ de $g1 (i)$ et de $g2 (i)$, $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g2$ appliqué à $i$ est inférieur ou ágal à $bigop$ appliqué à $n$ et la fonction qui envoie $i$ à $p$ appliqué à $i$ et $Nat$ et $1$ et $times$ et la fonction qui envoie $i$ à $g1$ appliqué à $i$.",
    "output": "postulate le_pi : (n : Nat) -> (p : (_ : Nat) -> bool) -> (g1 : (_ : Nat) -> Nat) -> (g2 : (_ : Nat) -> Nat) -> (_ : (i : Nat) -> (_ : Lt i n) -> (__1 : Eq (p i) true) -> Leq (g1 i) (g2 i)) -> Leq (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g1 i)) (bigop n (\\ i : Nat -> p i) Nat 1 times (\\ i : Nat -> g2 i))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1617. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c$ un nombre naturel. Supposons que $m n = p c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b \\in N$. Alors si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1572. Let $m , n \\in N$. Assume that $0 < n$. Then if $0$ is equal to the greatest common divisor of $m$ and $n$, then if $m = 0$, then if $n = 0$, then $m = 0$.",
    "output": "postulate let_clause_1572 : (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (H : Eq (gcd m n) 0) -> (auto : Eq m 0) -> (auto' : Eq n 0) -> Eq m 0"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1617. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0$ est inférieur à $p$. Supposons que le diviseur commun plus grand de $p$ et de $m$ est égal à $1$. Supposons que $p$ est divisible par le produit de $m$ et de $n$. Soit $c \\in N$. Supposons que le produit de $m$ et de $n$ est égal au produit de $p$ et de $c$. Soit $a \\in N$. Soit $_clearme0$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$. Soit $b$ un nombre naturel. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$ ou la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale au diviseur commun plus grand de $p$ et de $m$. Supposons que la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ est égale à $1$. Alors le diviseur commun plus grand de $p$ et de $m$ est égal à la différence du produit de $p$ et de $a$ et du produit de $m$ et de $b$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Monotonic_iter2. Låt $g$ vara en funktion från naturliga tal till naturliga tal. Då för alla naturliga tal $a$ och $i$ och $j$, för alla funktioner $__$ från naturliga tal $x$ till element av $Leq$ av $x$ och $g (x)$, om $i \\leq j$, så $iter (Nat , g , i , a)\\leq iter (Nat , g , j , a)$.",
    "output": "postulate monotonic_iter2 : (g : (_ : Nat) -> Nat) -> (a : Nat) -> (i : Nat) -> (j : Nat) -> (_ : (x : Nat) -> Leq x (g x)) -> (__1 : Leq i j) -> Leq (iter Nat g i a) (iter Nat g j a)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_CProp0_body. Låt $_n , _m , _q , _r \\in N$. Då för alla funktioner $Q_$ från element $_x_857$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till påståenden, för alla funktioner $_H_div_mod_spec_intro$ från element $x_859$ av $Lt$ av $_r$ och $_m$ och element $x_858$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_859 , x_858)$, för alla element $x_857$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_857$.",
    "output": "postulate div_mod_spec_rect_CProp0_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_857 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_859 : Lt _r _m) -> (x_858 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_859 x_858)) -> (x_857 : div_mod_spec _n _m _q _r) -> Q_ x_857"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_CProp0_body. Let $_A$ be a set. Let $Q_$ be a function from elements $_x_939$ of $range$ of $_A$ to propositions. Then for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range (_A , _enum , _upto , _filter)$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.",
    "output": "postulate range_rect_CProp0_body : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "F_invert_permut. Soit $f$ une fonction des nombres naturels à des nombres naturels. Soient $n$ et $m$ des nombres naturels. Supposons que $m \\leq n$. Alors pour tous les éléments $__1$ de $permut$ de $f$ et de $n$, $f (invert_permut (n , f , m))= m$.",
    "output": "postulate f_invert_permut : (f : (_ : Nat) -> Nat) -> (n : Nat) -> (m : Nat) -> (_ : Leq m n) -> (__1 : permut f n) -> Eq (f (invert_permut n f m)) m"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "True_min. Låt $f$ vara en funktion från naturliga tal till sanningsvärden. Låt $b \\in N$. Anta att $f (b)= true$. Då för alla naturliga tal $n$, $min (n , b , f)= b$.",
    "output": "postulate true_min : (f : (_ : Nat) -> bool) -> (b : Nat) -> (_ : Eq (f b) true) -> (n : Nat) -> Eq (min n b f) b"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_priml1. For all natural numbers $n$, if $0 < n$, then $2 n \\div (\\log_ 2 {n}+ 2)- 1 \\leq prim (2 n)$.",
    "output": "postulate le_priml1 : (n : Nat) -> (_ : Lt 0 n) -> Leq (minus (div (times 2 n) (plus (log 2 n) 2)) 1) (prim (times 2 n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1617. Soient $p$ et $m$ et $n$ des nombres naturels. Supposons que $0 < p$ et $1$ est égal au diviseur commun plus grand de $p$ et de $m$. Supposons que $p$ est divisible par $m \\times n$. Soit $c \\in N$. Supposons que $m n = p c$. Alors pour tous les nombres naturels $a$, pour tous les éléments $_clearme0$ de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $p$ et du produit de $b$ et de $m$ et le diviseur commun plus grand de $p$ et de $m$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $p$ et le diviseur commun plus grand de $p$ et de $m$, pour tous les nombres naturels $b$, si le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$ ou égal à $b m - a p$ et le diviseur commun plus grand de $p$ et de $m$ est égal à $a p - b m$, alors si $a p - b m = 1$, alors $p a - m b$ est égal au diviseur commun plus grand de $p$ et de $m$.",
    "output": "postulate let_clause_1617 : (p : Nat) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 p) -> (gcd1 : Eq (gcd p m) 1) -> (_clearme : divisible p (times m n)) -> (c : Nat) -> (nm : Eq (times m n) (times p c)) -> (a : Nat) -> (_clearme0 : ex Nat (\\ b : Nat -> or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m)))) -> (b : Nat) -> (_clearme1 : or (Eq (minus (times a p) (times b m)) (gcd p m)) (Eq (minus (times b m) (times a p)) (gcd p m))) -> (H : Eq (minus (times a p) (times b m)) (gcd p m)) -> (H0 : Eq (minus (times a p) (times b m)) 1) -> Eq (gcd p m) (minus (times p a) (times m b))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1033. Låt $n \\in N$. Anta att potensen av $2$ och $7$ är mindre än eller lika med $n$. Låt $p \\in N$. Anta att summan av kvadratroten av produkten av $2$ och $n$ och $1$ är mindre än eller lika med $p$. Anta att $p$ är mindre än summan av produkten av $2$ och $n$ och $1$. Anta att $leb$ applicerat på $2$ och $k$ applicerat på produkten av $2$ och $n$ och $p$ är lika med $true$. Då om produkten av $2$ och $n$ är mindre än potensen av $p$ och $2$, så för alla naturliga tal $x2515$ och $x2516$, är $x2515$ lika med summan av produkten av $x2516$ och kvoten av $x2515$ och $x2516$ och $mod$ applicerat på $x2515$ och $x2516$.",
    "output": "postulate let_clause_1033 : (n : Nat) -> (len : Leq (pow 2 7) n) -> (p : Nat) -> (lep : Leq (plus (sqrt (times 2 n)) 1) p) -> (ltp : Lt p (plus (times 2 n) 1)) -> (Hc : Eq (leb 2 (k (times 2 n) p)) true) -> (H2n : Lt (times 2 n) (pow p 2)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "ACop_rect_Type0_body. Soit $A$ un ensemble. Alors pour tous les éléments $_nil$ de $A$, pour toutes les fonctions $Q_$ des éléments $_x_901$ de $ACop$ de $A$ et de $_nil$ à des ensembles, pour toutes les fonctions $_H_mk_ACop$ des éléments $aop$ de $Aop$ de $A$ et de $_nil$ et des fonctions $_comm$ des éléments $a$ de $A$ et des éléments $b$ de $A$ à des éléments de $Eq$ de $op (A , _nil , aop , a , b)$ et de $op (A , _nil , aop , b , a)$ à des éléments de $Q_$ de $mk_ACop (A , _nil , aop , _comm)$, pour tous les éléments $x_901$ de $ACop$ de $A$ et de $_nil$, $Q_$ tient pour $x_901$.",
    "output": "postulate ACop_rect_Type0_body : (A : Set) -> (_nil : A) -> (Q_ : (_x_901 : ACop A _nil) -> Set) -> (_H_mk_ACop : (aop : Aop A _nil) -> (_comm : (a : A) -> (b : A) -> Eq (op A _nil aop a b) (op A _nil aop b a)) -> Q_ (mk_ACop A _nil aop _comm)) -> (x_901 : ACop A _nil) -> Q_ x_901"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Range_rect_CProp0_body. Let $_A$ be a set. Then for all functions $Q_$ from elements $_x_939$ of $range$ of $_A$ to propositions, for all functions $_H_mk_range$ from functions $_enum$ from natural numbers to elements of $_A$ and natural numbers $_upto$ and functions $_filter$ from natural numbers to booleans to elements of $Q_$ of $mk_range$ applied to $_A$ and $_enum$ and $_upto$ and $_filter$, for all elements $x_939$ of $range$ of $_A$, $Q_$ holds for $x_939$.",
    "output": "postulate range_rect_CProp0_body : (_A : Set) -> (Q_ : (_x_939 : range _A) -> Prop) -> (_H_mk_range : (_enum : (_ : Nat) -> _A) -> (_upto : Nat) -> (_filter : (_ : Nat) -> bool) -> Q_ (mk_range _A _enum _upto _filter)) -> (x_939 : range _A) -> Q_ x_939"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15623. Låt $m , n , a , b \\in N$. Anta att $0$ är mindre än $n$. Anta att $0$ är mindre än $m$. Anta att det största gemensama delaret av $n$ och $m$ är lika med $1$. Låt $c$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $d$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ och $1$ och $Eq$ applicerat på skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ och $1$. Låt $d$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $c$ och $n$ och produkten av $d$ och $m$ är lika med $1$ eller skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$. Då om skillnaden mellan produkten av $d$ och $m$ och produkten av $c$ och $n$ är lika med $1$, så är skillnaden mellan produkten av $m$ och $d$ och produkten av $n$ och $c$ lika med $1$.",
    "output": "postulate let_clause_15623 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times d m) (times c n)) 1) -> Eq (minus (times m d) (times n c)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Found_max_spec. Let $n \\in N$. Let $f$ be a function from natural numbers to booleans. Let $m \\in N$. Assume that $m < n$ and $f (m)= true$. Then for all functions $__2$ from natural numbers $i$ and elements $__2$ of $Lt$ of $m$ and $i$ and elements $__3$ of $Lt$ of $i$ and $n$ to elements of $Eq$ of $f (i)$ and absurdity, $max_spec$ holds for $n$ and $f$ and $m$.",
    "output": "postulate found_max_spec : (n : Nat) -> (f : (_ : Nat) -> bool) -> (m : Nat) -> (_ : Lt m n) -> (__1 : Eq (f m) true) -> (__2 : (i : Nat) -> (__2 : Lt m i) -> (__3 : Lt i n) -> Eq (f i) false) -> max_spec n f m"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Gcd_times_SO_to_gcd_SO. Soient $m$ et $n$ et $p$ des nombres naturels. Alors si $0$ est inférieur à $n$, alors si $0$ est inférieur à $p$, alors si le diviseur commun plus grand de $m$ et du produit de $n$ et de $p$ est égal à $1$, alors le diviseur commun plus grand de $m$ et de $n$ est égal à $1$.",
    "output": "postulate gcd_times_SO_to_gcd_SO : (m : Nat) -> (n : Nat) -> (p : Nat) -> (_ : Lt 0 n) -> (__1 : Lt 0 p) -> (__2 : Eq (gcd m (times n p)) 1) -> Eq (gcd m n) 1"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "P_ord_times. Soient $p$ et $a$ et $b$ et $qa$ et $ra$ et $qb$ et $rb$ des nombres naturels. Supposons que $p$ est premier. Supposons que $0$ est inférieur à $a$. Supposons que $0$ est inférieur à $b$. Supposons que $p_ord$ appliqué à $a$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $qa$ et $ra$. Supposons que $p_ord$ appliqué à $b$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et $qb$ et $rb$. Alors $p_ord$ appliqué à le produit de $a$ et de $b$ et $p$ est égal à $mk_Prod$ appliqué à $Nat$ et $Nat$ et la somme de $qa$ et de $qb$ et le produit de $ra$ et de $rb$.",
    "output": "postulate p_ord_times : (p : Nat) -> (a : Nat) -> (b : Nat) -> (qa : Nat) -> (ra : Nat) -> (qb : Nat) -> (rb : Nat) -> (_ : prime p) -> (__1 : Lt 0 a) -> (__2 : Lt 0 b) -> (__3 : Eq (p_ord a p) (mk_Prod Nat Nat qa ra)) -> (__4 : Eq (p_ord b p) (mk_Prod Nat Nat qb rb)) -> Eq (p_ord (times a b) p) (mk_Prod Nat Nat (plus qa qb) (times ra rb))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Div_mod_spec_rect_Type2_body. Låt $_n , _m , _q , _r \\in N$. Låt $Q_$ vara en funktion från element $_x_825$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$ till element av $Type2$. Låt $_H_div_mod_spec_intro$ vara en funktion från element $x_827$ av $Lt$ av $_r$ och $_m$ och element $x_826$ av $Eq$ av $_n$ och $_q _m + _r$ till element av $Q_$ av $div_mod_spec_intro (_n , _m , _q , _r , x_827 , x_826)$. Då för alla element $x_825$ av $div_mod_spec$ av $_n$ och $_m$ och $_q$ och $_r$, håller $Q_$ för $x_825$.",
    "output": "postulate div_mod_spec_rect_Type2_body : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_825 : div_mod_spec _n _m _q _r) -> Type2) -> (_H_div_mod_spec_intro : (x_827 : Lt _r _m) -> (x_826 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_827 x_826)) -> (x_825 : div_mod_spec _n _m _q _r) -> Q_ x_825"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Divides_fact_to_le. Let $p , n \\in N$. Assume that $p$ is prime. Then if $p$ is divisible by the factorial of $n$, then $p$ is less than or equal to $n$.",
    "output": "postulate divides_fact_to_le : (p : Nat) -> (n : Nat) -> (_ : prime p) -> (__1 : divisible p (factorial n)) -> Leq p n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1544. Soient $p$ et $q$ des nombres naturels. Soit $Hind$ une fonction des nombres naturels $m$ et des nombres naturels $n$ et des éléments de $Lt$ de $0$ et de $n$ et des éléments $__1$ de $Leq$ de $n$ et de $m$ et des éléments $__2$ de $Leq$ de $n$ et de $q$ à des éléments de $ex$ de $Nat$ et de la fonction qui envoie $a$ à $ex$ appliqué à $Nat$ et la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $n$ et du produit de $b$ et de $m$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $m$ et du produit de $a$ et de $n$ et $gcd_aux$ appliqué à $q$ et $m$ et $n$. Soient $m$ et $n$ des nombres naturels. Supposons que $0 < n$ et $n \\leq m$. Supposons que $n \\leq q + 1$ et $n$ n'est pas divisible par $m$. Soit $a$ un nombre naturel. Soit $_clearme$ un élément de $ex$ de $Nat$ et de la fonction qui envoie $b$ à la disjonction de $Eq$ appliqué à la différence du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et du produit de $b$ et de $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$ et de $Eq$ appliqué à la différence du produit de $b$ et de $n$ et du produit de $a$ et de $mod$ appliqué à $m$ et $n$ et $gcd_aux$ appliqué à $q$ et $n$ et $mod$ appliqué à $m$ et $n$. Soit $b$ un nombre naturel. Supposons que $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ ou $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$ et $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$. Alors $a mod (m , n)- n b = gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_1544 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) -> Eq (minus (times a (mod m n)) (times n b)) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lt_times_n_to_lt_l. Soit $n , p , q \\in N$. Supposons que $p n < q n$. Alors $p < q$.",
    "output": "postulate lt_times_n_to_lt_l : (n : Nat) -> (p : Nat) -> (q : Nat) -> (_ : Lt (times p n) (times q n)) -> Lt p q"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Divides_smallest_factor_n. Låt $n \\in N$. Anta att $0$ är mindre än $n$. Då är $smallest_factor$ applicerat på $n$ delbart med $n$.",
    "output": "postulate divides_smallest_factor_n : (n : Nat) -> (_ : Lt 0 n) -> divisible (smallest_factor n) n"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Div_mod_spec_ind. Soit $_n , _m , _q , _r \\in N$. Alors pour toutes les fonctions $Q_$ des éléments $_x_809$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$ à des propositions, pour toutes les fonctions $_H_div_mod_spec_intro$ des éléments $x_811$ de $Lt$ de $_r$ et de $_m$ et des éléments $x_810$ de $Eq$ de $_n$ et de $_q _m + _r$ à des éléments de $Q_$ de $div_mod_spec_intro (_n , _m , _q , _r , x_811 , x_810)$, pour tous les éléments $x_809$ de $div_mod_spec$ de $_n$ et de $_m$ et de $_q$ et de $_r$, $Q_$ tient pour $x_809$.",
    "output": "postulate div_mod_spec_ind : (_n : Nat) -> (_m : Nat) -> (_q : Nat) -> (_r : Nat) -> (Q_ : (_x_809 : div_mod_spec _n _m _q _r) -> Prop) -> (_H_div_mod_spec_intro : (x_811 : Lt _r _m) -> (x_810 : Eq _n (plus (times _q _m) _r)) -> Q_ (div_mod_spec_intro _n _m _q _r x_811 x_810)) -> (x_809 : div_mod_spec _n _m _q _r) -> Q_ x_809"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_clause_1585. Soient $n$ et $m$ des nombres naturels. Alors si $0 < n$, alors si $m$ est divisible par $n$, alors pour tous les nombres naturels $d$, si $0 = m$, alors si $n = m d$, alors $0 = n$.",
    "output": "postulate let_clause_1585 : (n : Nat) -> (m : Nat) -> (posn : Lt 0 n) -> (_clearme : divisible m n) -> (d : Nat) -> (auto : Eq 0 m) -> (auto' : Eq n (times m d)) -> Eq 0 n"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15621. Let $m$ and $n$ and $a$ and $b$ be natural numbers. Assume that $0$ is less than $n$. Assume that $0$ is less than $m$. Assume that the greatest common divisor of $n$ and $m$ is equal to $1$. Let $c$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $d$ to the disjunction of $Eq$ applied to the difference of the product of $c$ and $n$ and the product of $d$ and $m$ and $1$ and $Eq$ applied to the difference of the product of $d$ and $m$ and the product of $c$ and $n$ and $1$. Let $d \\in N$. Assume that the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$ or the difference of the product of $d$ and $m$ and the product of $c$ and $n$ is equal to $1$. Then if the difference of the product of $c$ and $n$ and the product of $d$ and $m$ is equal to $1$, then the difference of the product of $n$ and $c$ and the product of $m$ and $d$ is equal to $1$.",
    "output": "postulate let_clause_15621 : (m : Nat) -> (n : Nat) -> (a : Nat) -> (b : Nat) -> (posn : Lt 0 n) -> (posm : Lt 0 m) -> (pnm : Eq (gcd n m) 1) -> (c : Nat) -> (_clearme : ex Nat (\\ d : Nat -> or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1))) -> (d : Nat) -> (_clearme0 : or (Eq (minus (times c n) (times d m)) 1) (Eq (minus (times d m) (times c n)) 1)) -> (H : Eq (minus (times c n) (times d m)) 1) -> Eq (minus (times n c) (times m d)) 1"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Exists_max_forall_false. Let $f$ be a function from natural numbers to booleans. Let $n \\in N$. Then $ex$ holds for $Nat$ and the function that maps $i$ to the conjunction of $Lt$ applied to $i$ and $n$ and $Eq$ applied to $f$ applied to $i$ and $true$ and $f$ applied to $max$ applied to $n$ and $f$ is equal to $true$ or $prod$ holds for $Set$ and $Prop$ and $Nat$ and the function that maps $i$ to $prod$ applied to $Prop$ and $Prop$ and $Lt$ applied to $i$ and $n$ and the function that maps $__$ to $Eq$ applied to $f$ applied to $i$ and absurdity and $max$ applied to $n$ and $f$ is equal to $0$.",
    "output": "postulate exists_max_forall_false : (f : (_ : Nat) -> bool) -> (n : Nat) -> or (and (ex Nat (\\ i : Nat -> and (Lt i n) (Eq (f i) true))) (Eq (f (max n f)) true)) (and (prod Set Prop Nat (\\ i : Nat -> prod Prop Prop (Lt i n) (\\ _ : Lt i n -> Eq (f i) false))) (Eq (max n f) 0))"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Let_upper_bound5. Soient $n$ et $m$ des nombres naturels. Supposons que $nth_prime (n)< m$. Alors $Nat$.",
    "output": "postulate let_upper_bound5 : (n : Nat) -> (m : Nat) -> (ltml : Lt (nth_prime n) m) -> Nat"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_15441. Let $p , q \\in N$. Let $Hind$ be a function from natural numbers $m$ and natural numbers $n$ and elements of $Lt$ of $0$ and $n$ and elements $__1$ of $Leq$ of $n$ and $m$ and elements $__2$ of $Leq$ of $n$ and $q$ to elements of $ex$ of $Nat$ and the function that maps $a$ to $ex$ applied to $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $n$ and the product of $b$ and $m$ and $gcd_aux$ applied to $q$ and $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $m$ and the product of $a$ and $n$ and $gcd_aux$ applied to $q$ and $m$ and $n$. Let $m$ and $n$ be natural numbers. Assume that $0 < n$. Assume that $n \\leq m$. Assume that $n \\leq q + 1$. Assume that $n$ is not divisible by $m$. Let $a$ be a natural number. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $b$ to the disjunction of $Eq$ applied to the difference of the product of $a$ and $mod$ applied to $m$ and $n$ and the product of $b$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$ and $Eq$ applied to the difference of the product of $b$ and $n$ and the product of $a$ and $mod$ applied to $m$ and $n$ and $gcd_aux$ applied to $q$ and $n$ and $mod$ applied to $m$ and $n$. Let $b \\in N$. Assume that $a mod (m , n)- b n = gcd_aux (q , n , mod (m , n))$ or $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Assume that $b n - a mod (m , n)= gcd_aux (q , n , mod (m , n))$. Then $n b - a mod (m , n)= gcd_aux (q , n , mod (m , n))$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Le_B2_exp. För alla naturliga tal $n$, om potensen av $2$ och $7$ är mindre än eller lika med $n$, så är $B2$ applicerat på produkten av $2$ och $n$ mindre än eller lika med potensen av produkten av $2$ och $n$ och $pred$ applicerat på kvoten av kvadratroten av produkten av $2$ och $n$ och $2$.",
    "output": "postulate le_B2_exp : (n : Nat) -> (_ : Leq (pow 2 7) n) -> Leq (B2 (times 2 n)) (pow (times 2 n) (pred (div (sqrt (times 2 n)) 2)))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Min_f_g. Let $f$ and $g$ be functions from natural numbers to booleans. Let $n$ and $b$ be natural numbers. Let $__$ be a function from natural numbers $i$ and elements of $Leq$ of $b$ and $i$ and elements $__1$ of $Lt$ of $i$ and the sum of $n$ and $b$ to elements of $Eq$ of $f$ applied to $i$ and $g$ applied to $i$. Then $min$ applied to $n$ and $b$ and $f$ is equal to $min$ applied to $n$ and $b$ and $g$.",
    "output": "postulate min_f_g : (f : (_ : Nat) -> bool) -> (g : (_ : Nat) -> bool) -> (n : Nat) -> (b : Nat) -> (_ : (i : Nat) -> (_ : Leq b i) -> (__1 : Lt i (plus n b)) -> Eq (f i) (g i)) -> Eq (min n b f) (min n b g)"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Prime_to_lt_SO. För alla naturliga tal $p$, om $p$ är primt, så är $1$ mindre än $p$.",
    "output": "postulate prime_to_lt_SO : (p : Nat) -> (_ : prime p) -> Lt 1 p"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Pi_p_primeb_dividesb. Låt $n$ vara ett naturligt tal. Då om $0 < n$, så är $bigop$ applicerat på summan av $n$ och $1$ och funktionen som avbildar $p$ som $andb$ applicerat på $primeb$ applicerat på $p$ och $dividesb$ applicerat på $p$ och $n$ och $Nat$ och $1$ och $times$ och funktionen som avbildar $p$ som potensen av $p$ och $ord$ applicerat på $n$ och $p$ lika med $n$.",
    "output": "postulate pi_p_primeb_dividesb : (n : Nat) -> (_ : Lt 0 n) -> Eq n (bigop (plus n 1) (\\ p : Nat -> andb (primeb p) (dividesb p n)) Nat 1 times (\\ p : Nat -> pow p (ord n p)))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_1531. Låt $n$ och $m$ vara naturliga tal. Anta att $0$ är mindre än $m$. Anta att $n$ är delbart med $m$. Låt $d$ vara ett naturligt tal. Då om $m$ är lika med produkten av $n$ och $0$, så är $m$ lika med $0$.",
    "output": "postulate let_clause_1531 : (n : Nat) -> (m : Nat) -> (posm : Lt 0 m) -> (_clearme : divisible n m) -> (d : Nat) -> (eqm : Eq m (times n 0)) -> Eq m 0"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Le_inv_ind. Let $x1$ and $x2$ be natural numbers. Assume that $x1 \\leq x2$. Let $P$ be a function from natural numbers $_z724$ to propositions. Let $_H1$ be a function from elements $_z725$ of $Eq$ of $x2$ and $x1$ to elements of $P$ of $x1$. Let $_H2$ be a function from natural numbers $m$ and elements $_x_419$ of $Leq$ of $x1$ and $m$ and functions $_x_421$ from elements $_z725$ of $Eq$ of $x2$ and $m$ to elements of $P$ of $m$ and elements $_z725$ of $Eq$ of $x2$ and $m + 1$ to elements of $P$ of $m + 1$. Then $P$ holds for $x2$.",
    "output": "postulate le_inv_ind : (x1 : Nat) -> (x2 : Nat) -> (_Hterm : Leq x1 x2) -> (P : (_z724 : Nat) -> Prop) -> (_H1 : (_z725 : Eq x2 x1) -> P x1) -> (_H2 : (m : Nat) -> (_x_419 : Leq x1 m) -> (_x_421 : (_z725 : Eq x2 m) -> P m) -> (_z725 : Eq x2 (plus m 1)) -> P (plus m 1)) -> P x2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "ACop_inv_rect_CProp3. Låt $x1$ vara en mängd. Låt $x2$ vara ett element av $x1$. Låt $Hterm$ vara ett element av $ACop$ av $x1$ och $x2$. Låt $P$ vara en funktion från element $_z1608$ av $ACop$ av $x1$ och $x2$ till påståenden. Låt $_H1$ vara en funktion från element $aop$ av $Aop$ av $x1$ och $x2$ och funktioner $_comm$ från element $a$ av $x1$ och element $b$ av $x1$ till element av $Eq$ av $op (x1 , x2 , aop , a , b)$ och $op (x1 , x2 , aop , b , a)$ och element $_z1609$ av $Eq$ av $Hterm$ och $mk_ACop (x1 , x2 , aop , _comm)$ till element av $P$ av $mk_ACop (x1 , x2 , aop , _comm)$. Då håller $P$ för $Hterm$.",
    "output": "postulate ACop_inv_rect_CProp3 : (x1 : Set) -> (x2 : x1) -> (Hterm : ACop x1 x2) -> (P : (_z1608 : ACop x1 x2) -> Prop) -> (_H1 : (aop : Aop x1 x2) -> (_comm : (a : x1) -> (b : x1) -> Eq (op x1 x2 aop a b) (op x1 x2 aop b a)) -> (_z1609 : Eq Hterm (mk_ACop x1 x2 aop _comm)) -> P (mk_ACop x1 x2 aop _comm)) -> P Hterm"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_S. Soit $B$ un ensemble. Soit $R$ un élément de $relation$ de $B$. Soient $b1$ et $b$ des éléments de $B$. Soit $__$ un élément de $R$ de $b1$ et de $b$. Soit $l \\in N$. Soit $b2$ un élément de $B$. Soit $__1$ un élément de $lstar$ de $B$ et de $R$ et de $l$ et de $b$ et de $b2$. Alors $lstar$ tient pour $B$ et $R$ et la somme de $l$ et de $1$ et $b1$ et $b2$.",
    "output": "postulate lstar_S : (B : Set) -> (R : relation B) -> (b1 : B) -> (b : B) -> (_ : R b1 b) -> (l : Nat) -> (b2 : B) -> (__1 : lstar B R l b b2) -> lstar B R (plus l 1) b1 b2"
  },
  {
    "instruction": "Translate the following French statement into Agda.",
    "input": "Lstar_inv_step. Soit $B$ un ensemble. Alors pour tous les éléments $R$ de $relation$ de $B$, pour tous les éléments $b1$ et $b2$ de $B$, pour tous les éléments $__$ de $lstar$ de $B$ et de $R$ et de $1$ et de $b1$ et de $b2$, $R$ tient pour $b1$ et $b2$.",
    "output": "postulate lstar_inv_step : (B : Set) -> (R : relation B) -> (b1 : B) -> (b2 : B) -> (_ : lstar B R 1 b1 b2) -> R b1 b2"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_15441. Låt $p$ och $q$ vara naturliga tal. Låt $Hind$ vara en funktion från naturliga tal $m$ och naturliga tal $n$ och element av $Lt$ av $0$ och $n$ och element $__1$ av $Leq$ av $n$ och $m$ och element $__2$ av $Leq$ av $n$ och $q$ till element av $ex$ av $Nat$ och funktionen som avbildar $a$ som $ex$ applicerat på $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $n$ och produkten av $b$ och $m$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $m$ och produkten av $a$ och $n$ och $gcd_aux$ applicerat på $q$ och $m$ och $n$. Låt $m$ och $n$ vara naturliga tal. Anta att $0$ är mindre än $n$. Anta att $n$ är mindre än eller lika med $m$. Anta att $n$ är mindre än eller lika med summan av $q$ och $1$. Anta att $n$ inte är delbart med $m$. Låt $a$ vara ett naturligt tal. Låt $_clearme$ vara ett element av $ex$ av $Nat$ och funktionen som avbildar $b$ som disjunktionen av $Eq$ applicerat på skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ och $Eq$ applicerat på skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ och $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Låt $b$ vara ett naturligt tal. Anta att skillnaden mellan produkten av $a$ och $mod$ applicerat på $m$ och $n$ och produkten av $b$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$ eller skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$. Då om skillnaden mellan produkten av $b$ och $n$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ är lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$, så är skillnaden mellan produkten av $n$ och $b$ och produkten av $a$ och $mod$ applicerat på $m$ och $n$ lika med $gcd_aux$ applicerat på $q$ och $n$ och $mod$ applicerat på $m$ och $n$.",
    "output": "postulate let_clause_15441 : (p : Nat) -> (q : Nat) -> (Hind : (m : Nat) -> (n : Nat) -> (_ : Lt 0 n) -> (__1 : Leq n m) -> (__2 : Leq n q) -> ex Nat (\\ a : Nat -> ex Nat (\\ b : Nat -> or (Eq (minus (times a n) (times b m)) (gcd_aux q m n)) (Eq (minus (times b m) (times a n)) (gcd_aux q m n))))) -> (m : Nat) -> (n : Nat) -> (posn : Lt 0 n) -> (lenm : Leq n m) -> (lenS : Leq n (plus q 1)) -> (ndivnm : not (divisible n m)) -> (a : Nat) -> (_clearme : ex Nat (\\ b : Nat -> or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))))) -> (b : Nat) -> (_clearme0 : or (Eq (minus (times a (mod m n)) (times b n)) (gcd_aux q n (mod m n))) (Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n)))) -> (H : Eq (minus (times b n) (times a (mod m n))) (gcd_aux q n (mod m n))) -> Eq (minus (times n b) (times a (mod m n))) (gcd_aux q n (mod m n))"
  },
  {
    "instruction": "Translate the following English statement into Agda.",
    "input": "Let_clause_1553. Let $n , n0 \\in N$. Let $_clearme$ be an element of $ex$ of $Nat$ and the function that maps $a$ to the disjunction of $Eq$ applied to $n0$ and the product of $2$ and $a$ and $Eq$ applied to $n0$ and the sum of the product of $2$ and $a$ and $1$. Then for all natural numbers $a$, if $n0$ is equal to the product of $2$ and $a$ or $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then if $n0$ is equal to the sum of the product of $2$ and $a$ and $1$, then $n0$ is equal to the sum of $a$ and the sum of $a$ and $1$.",
    "output": "postulate let_clause_1553 : (n : Nat) -> (n0 : Nat) -> (_clearme : ex Nat (\\ a : Nat -> or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1)))) -> (a : Nat) -> (_clearme0 : or (Eq n0 (times 2 a)) (Eq n0 (plus (times 2 a) 1))) -> (Hn : Eq n0 (plus (times 2 a) 1)) -> Eq n0 (plus a (plus a 1))"
  },
  {
    "instruction": "Translate the following Swedish statement into Agda.",
    "input": "Let_clause_10331. Låt $n$ vara ett naturligt tal. Anta att $5 < n$. Låt $m \\in N$. Anta att $6 \\leq m$ och $(m + 1)^ 2 \\leq 2 ^ m$. Då för alla naturliga tal $a$, om $6 \\leq a$ och $2 (a + 1)+ 1 \\leq 2 ^ a$, så för alla naturliga tal $x2515$ och $x2516$, $x2515 = x2516 (x2515 \\div x2516)+ mod (x2515 , x2516)$.",
    "output": "postulate let_clause_10331 : (n : Nat) -> (lt4n : Lt 5 n) -> (m : Nat) -> (le4m : Leq 6 m) -> (Hind : Leq (pow (plus m 1) 2) (pow 2 m)) -> (a : Nat) -> (lea : Leq 6 a) -> (Hinda : Leq (plus (times 2 (plus a 1)) 1) (pow 2 a)) -> (x2515 : Nat) -> (x2516 : Nat) -> Eq x2515 (plus (times x2516 (div x2515 x2516)) (mod x2515 x2516))"
  }
]